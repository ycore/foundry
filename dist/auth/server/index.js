var __create = Object.create;
var __getProtoOf = Object.getPrototypeOf;
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
      configurable: true,
      set: (newValue) => all[name] = () => newValue
    });
};
var __esm = (fn, res) => () => (fn && (res = fn(fn = 0)), res);
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x + '" is not supported');
});

// src/auth/server/auth.context.ts
import { getContext, requireContext } from "@ycore/forge/context";
import { createContext } from "react-router";
function requireAuthUser(context) {
  const user = requireContext(context, authUserContext, {
    errorMessage: "Authentication required - user must be logged in to access this resource",
    errorStatus: 401
  });
  return user;
}
function getAuthUser(context) {
  return getContext(context, authUserContext, null);
}
function isAuthenticated(context) {
  return getContext(context, authUserContext, null) !== null;
}
var authConfigContext, authUserContext;
var init_auth_context = __esm(() => {
  authConfigContext = createContext(null);
  authUserContext = createContext(null);
});

// ../../node_modules/.bun/@react-router+cloudflare@7.9.4+9d8362929d289c67/node_modules/@react-router/cloudflare/dist/index.mjs
import { createSessionStorage } from "react-router";
import { createRequestHandler as createReactRouterRequestHandler } from "react-router";
function createWorkersKVSessionStorage({
  cookie,
  kv
}) {
  return createSessionStorage({
    cookie,
    async createData(data, expires) {
      while (true) {
        let randomBytes = crypto.getRandomValues(new Uint8Array(8));
        let id = [...randomBytes].map((x) => x.toString(16).padStart(2, "0")).join("");
        if (await kv.get(id, "json")) {
          continue;
        }
        await kv.put(id, JSON.stringify(data), {
          expiration: expires ? Math.round(expires.getTime() / 1000) : undefined
        });
        return id;
      }
    },
    async readData(id) {
      let session = await kv.get(id);
      if (!session) {
        return null;
      }
      return JSON.parse(session);
    },
    async updateData(id, data, expires) {
      await kv.put(id, JSON.stringify(data), {
        expiration: expires ? Math.round(expires.getTime() / 1000) : undefined
      });
    },
    async deleteData(id) {
      await kv.delete(id);
    }
  });
}
var init_dist = () => {};

// src/auth/server/session.ts
var exports_session = {};
__export(exports_session, {
  verifyChallengeUniqueness: () => verifyChallengeUniqueness,
  updateAuthSession: () => updateAuthSession,
  getChallengeFromSession: () => getChallengeFromSession,
  getAuthSession: () => getAuthSession,
  destroyChallengeSession: () => destroyChallengeSession,
  destroyAuthSession: () => destroyAuthSession,
  createChallengeSession: () => createChallengeSession,
  createAuthSessionStorage: () => createAuthSessionStorage,
  createAuthSession: () => createAuthSession,
  cleanupChallengeSession: () => cleanupChallengeSession
});
import { getContext as getContext2 } from "@ycore/forge/context";
import { err, ok } from "@ycore/forge/result";
import { getBindings, getKVStore, isProduction, UNCONFIGURED } from "@ycore/forge/services";
function resolveAuthBindings(context) {
  const authConfig = getContext2(context, authConfigContext);
  if (!authConfig) {
    throw new Error("Auth configuration not found in context. Ensure auth middleware is properly configured.");
  }
  const { session } = authConfig;
  if (session.kvBinding === UNCONFIGURED) {
    throw new Error("Auth session KV binding is not configured. Please specify kvBinding in your auth config.");
  }
  if (session.secretKey === UNCONFIGURED) {
    throw new Error("Auth session secret key is not configured. Please specify secretKey in your auth config.");
  }
  const bindings = getBindings(context);
  const secret = bindings[session.secretKey];
  if (!secret) {
    throw new Error(`Auth secret binding '${session.secretKey}' not found in environment. ` + `Available bindings: ${Object.keys(bindings).join(", ")}`);
  }
  const kv = getKVStore(context, session.kvBinding);
  if (!kv) {
    throw new Error(`KV binding '${session.kvBinding}' not found for session. `);
  }
  return { secret, kv };
}
function createAuthSessionStorage(context) {
  const authConfig = getContext2(context, authConfigContext);
  if (!authConfig) {
    throw new Error("Auth configuration not found in context. Ensure auth middleware is properly configured.");
  }
  const { secret, kv } = resolveAuthBindings(context);
  const { session } = authConfig;
  return createWorkersKVSessionStorage({
    kv,
    cookie: {
      name: session.cookie.name,
      httpOnly: session.cookie.httpOnly,
      maxAge: session.cookie.maxAge,
      path: session.cookie.path,
      sameSite: session.cookie.sameSite,
      secrets: [secret],
      secure: session.cookie.secure === "auto" ? isProduction(context) : session.cookie.secure ?? false
    }
  });
}
async function getAuthSession(request, context) {
  try {
    const sessionStorage = createAuthSessionStorage(context);
    const session = await sessionStorage.getSession(request.headers.get("Cookie"));
    const user = session.get("user");
    const challenge = session.get("challenge");
    if (!user) {
      return ok(null);
    }
    return ok({ user, challenge });
  } catch (error) {
    return err("Failed to get session", { error });
  }
}
async function verifyChallengeUniqueness(challenge, context) {
  try {
    const { kv } = resolveAuthBindings(context);
    const uniqueKey = challengeUniqueKvTemplate(challenge);
    const existing = await kv.get(uniqueKey);
    if (existing) {
      return err("Challenge already used", { challenge });
    }
    await kv.put(uniqueKey, "used", { expirationTtl: 300 });
    return ok(true);
  } catch (error) {
    return err("Failed to verify challenge uniqueness", { challenge, error });
  }
}
async function cleanupChallengeSession(email, context) {
  try {
    const { kv } = resolveAuthBindings(context);
    const challengeKey = challengeKvTemplate(email);
    await kv.delete(challengeKey);
    return ok(undefined);
  } catch (error) {
    return err("Failed to cleanup challenge session", { email, error });
  }
}
async function createChallengeSession(context, challenge) {
  try {
    const sessionStorage = createAuthSessionStorage(context);
    const session = await sessionStorage.getSession();
    session.set("challenge", challenge);
    session.set("challengeCreatedAt", Date.now());
    const cookie = await sessionStorage.commitSession(session);
    return ok(cookie);
  } catch (error) {
    return err("Failed to create challenge session", { error });
  }
}
async function getChallengeFromSession(request, context) {
  try {
    const sessionStorage = createAuthSessionStorage(context);
    const session = await sessionStorage.getSession(request.headers.get("Cookie"));
    const storedChallenge = session.get("challenge");
    const challengeCreatedAt = session.get("challengeCreatedAt");
    if (!storedChallenge || !challengeCreatedAt) {
      return err("Invalid session. Please refresh and try again.", { field: "general" });
    }
    return ok({ challenge: storedChallenge, challengeCreatedAt, session });
  } catch (error) {
    return err("Failed to get challenge from session", { error });
  }
}
async function destroyChallengeSession(session, context) {
  try {
    const sessionStorage = createAuthSessionStorage(context);
    await sessionStorage.destroySession(session);
    return ok(undefined);
  } catch (error) {
    return err("Failed to destroy challenge session", { error });
  }
}
async function createAuthSession(context, sessionData) {
  try {
    const sessionStorage = createAuthSessionStorage(context);
    const newSession = await sessionStorage.getSession();
    newSession.set("user", sessionData.user);
    newSession.set("authenticatedAt", Date.now());
    const cookie = await sessionStorage.commitSession(newSession);
    return ok(cookie);
  } catch (error) {
    return err("Failed to create session", { error });
  }
}
async function updateAuthSession(request, context, sessionData) {
  try {
    const sessionStorage = createAuthSessionStorage(context);
    const session = await sessionStorage.getSession(request.headers.get("Cookie"));
    if (sessionData.user) {
      session.set("user", sessionData.user);
    }
    if (sessionData.challenge !== undefined) {
      session.set("challenge", sessionData.challenge);
    }
    const cookie = await sessionStorage.commitSession(session);
    return ok(cookie);
  } catch (error) {
    return err("Failed to update session", { error });
  }
}
async function destroyAuthSession(request, context) {
  try {
    const sessionStorage = createAuthSessionStorage(context);
    const session = await sessionStorage.getSession(request.headers.get("Cookie"));
    const email = session.get("email");
    if (email) {
      await cleanupChallengeSession(email, context);
    }
    const cookie = await sessionStorage.destroySession(session);
    return ok(cookie);
  } catch (error) {
    return err("Failed to destroy session", { error });
  }
}
var challengeKvTemplate = (email) => `challenge:${email}`, challengeUniqueKvTemplate = (challenge) => `challenge-unique:${challenge}`;
var init_session = __esm(() => {
  init_dist();
  init_auth_context();
});

// ../../node_modules/.bun/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS((exports, module) => {
  var isMergeableObject = function isMergeableObject(value) {
    return isNonNullObject(value) && !isSpecial(value);
  };
  function isNonNullObject(value) {
    return !!value && typeof value === "object";
  }
  function isSpecial(value) {
    var stringValue = Object.prototype.toString.call(value);
    return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
  }
  var canUseSymbol = typeof Symbol === "function" && Symbol.for;
  var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
  function isReactElement(value) {
    return value.$$typeof === REACT_ELEMENT_TYPE;
  }
  function emptyTarget(val) {
    return Array.isArray(val) ? [] : {};
  }
  function cloneUnlessOtherwiseSpecified(value, options) {
    return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
  }
  function defaultArrayMerge(target, source, options) {
    return target.concat(source).map(function(element) {
      return cloneUnlessOtherwiseSpecified(element, options);
    });
  }
  function getMergeFunction(key, options) {
    if (!options.customMerge) {
      return deepmerge;
    }
    var customMerge = options.customMerge(key);
    return typeof customMerge === "function" ? customMerge : deepmerge;
  }
  function getEnumerableOwnPropertySymbols(target) {
    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
      return Object.propertyIsEnumerable.call(target, symbol);
    }) : [];
  }
  function getKeys(target) {
    return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
  }
  function propertyIsOnObject(object2, property) {
    try {
      return property in object2;
    } catch (_3) {
      return false;
    }
  }
  function propertyIsUnsafe(target, key) {
    return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
  }
  function mergeObject(target, source, options) {
    var destination = {};
    if (options.isMergeableObject(target)) {
      getKeys(target).forEach(function(key) {
        destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
      });
    }
    getKeys(source).forEach(function(key) {
      if (propertyIsUnsafe(target, key)) {
        return;
      }
      if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
        destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
      } else {
        destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
      }
    });
    return destination;
  }
  function deepmerge(target, source, options) {
    options = options || {};
    options.arrayMerge = options.arrayMerge || defaultArrayMerge;
    options.isMergeableObject = options.isMergeableObject || isMergeableObject;
    options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
    var sourceIsArray = Array.isArray(source);
    var targetIsArray = Array.isArray(target);
    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
    if (!sourceAndTargetTypesMatch) {
      return cloneUnlessOtherwiseSpecified(source, options);
    } else if (sourceIsArray) {
      return options.arrayMerge(target, source, options);
    } else {
      return mergeObject(target, source, options);
    }
  }
  deepmerge.all = function deepmergeAll(array, options) {
    if (!Array.isArray(array)) {
      throw new Error("first argument should be an array");
    }
    return array.reduce(function(prev, next) {
      return deepmerge(prev, next, options);
    }, {});
  };
  var deepmerge_1 = deepmerge;
  module.exports = deepmerge_1;
});

// src/auth/server/index.ts
init_auth_context();

// src/auth/server/auth.middleware.ts
import { setContext } from "@ycore/forge/context";
import { logger } from "@ycore/forge/logger";
import { isError, middlewarePassthrough } from "@ycore/forge/result";
import { redirect } from "react-router";

// src/auth/auth.config.ts
var defaultAuthRoutes = {
  signup: "/auth/signup",
  signin: "/auth/signin",
  signout: "/auth/signout",
  signedin: "/",
  signedout: "/",
  recover: "/auth/recover",
  verify: "/auth/verify",
  profile: "/auth/profile"
};
var defaultAuthConfig = {
  routes: defaultAuthRoutes,
  session: {
    kvBinding: "UNCONFIGURED",
    secretKey: "UNCONFIGURED",
    cookie: {
      name: "__auth_session",
      httpOnly: true,
      maxAge: 60 * 60 * 24 * 30,
      path: "/",
      sameSite: "lax",
      secure: "auto"
    }
  },
  webauthn: {
    rpName: "React Router Cloudflare App",
    challengeSessionKey: "challenge",
    requireUserVerification: true
  },
  verification: {
    digits: 6,
    period: 60 * 8,
    maxAttempts: 3,
    window: 1,
    resendCooldown: 60
  }
};

// src/auth/server/auth.middleware.ts
init_auth_context();
init_session();
function authSessionMiddleware(authConfig) {
  return async ({ request, context }, next) => {
    setContext(context, authConfigContext, authConfig);
    const authSession = await getAuthSession(request, context);
    if (!isError(authSession) && authSession !== null && authSession.user) {
      if (authSession.user.status === "active") {
        setContext(context, authUserContext, authSession.user);
      }
      return next();
    }
    const cookieHeader = request.headers.get("Cookie");
    const sessionCookieName = authConfig?.session.cookie.name || defaultAuthConfig.session.cookie.name;
    if (cookieHeader?.includes(sessionCookieName)) {
      const sessionStorage = createAuthSessionStorage(context);
      const session = await sessionStorage.getSession(cookieHeader);
      const hasUser = session.get("user");
      const hasChallenge = session.get("challenge");
      if (!hasUser && !hasChallenge) {
        const destroyResult = await destroyAuthSession(request, context);
        if (!isError(destroyResult)) {
          const response = await next();
          return middlewarePassthrough(response, { set: { "Set-Cookie": destroyResult } });
        }
      }
    }
    return next();
  };
}
function unguardedAuthMiddleware(authConfig) {
  return [authSessionMiddleware(authConfig), unprotectedAuthMiddleware(authConfig)];
}
function guardedAuthMiddleware(authConfig) {
  return [authSessionMiddleware(authConfig), protectedAuthMiddleware(authConfig)];
}
function verifyRouteMiddleware(authConfig) {
  return [authSessionMiddleware(authConfig), verifyAuthMiddleware(authConfig)];
}
function verifyAuthMiddleware(authConfig) {
  return async ({ request, context }, next) => {
    const user = getAuthUser(context);
    if (user) {
      throw redirect(authConfig?.routes.signedin || defaultAuthRoutes.signedin);
    }
    const sessionResult = await getAuthSession(request, context);
    if (isError(sessionResult) || !sessionResult?.user) {
      throw redirect(authConfig?.routes.signin || defaultAuthRoutes.signin);
    }
    return next();
  };
}
function protectedAuthMiddleware(authConfig) {
  return async ({ context }, next) => {
    const user = getAuthUser(context);
    if (!user) {
      throw redirect(authConfig?.routes.signedout || defaultAuthRoutes.signedout);
    }
    return next();
  };
}
function unprotectedAuthMiddleware(authConfig) {
  return async ({ request, context }, next) => {
    const user = getAuthUser(context);
    if (user) {
      throw redirect(authConfig?.routes.signedin || defaultAuthRoutes.signedin);
    }
    const sessionResult = await getAuthSession(request, context);
    if (!isError(sessionResult) && sessionResult?.user && sessionResult.user.status !== "active") {
      logger.info("unverified_user_redirecting_to_verify", {
        userId: sessionResult.user.id,
        email: sessionResult.user.email,
        status: sessionResult.user.status
      });
      throw redirect(authConfig?.routes.verify || defaultAuthRoutes.verify);
    }
    return next();
  };
}
// src/auth/server/auth.validation.ts
import { email, maxLength, minLength, nonEmpty, object, pipe, string } from "valibot";
var emailField = pipe(string(), nonEmpty("Please enter your email."), email("Please enter a valid email."), maxLength(254, "Email exceeds maximum length"));
var displayNameField = pipe(string(), nonEmpty("Display name is required"), minLength(1, "Display name is required"));
var authFormSchema = object({ email: emailField });
var signupFormSchema = object({ email: emailField, displayName: displayNameField });
var signinFormSchema = object({ email: emailField });
var changeEmailSchema = object({ newEmail: emailField });
// src/auth/server/auth-profile.ts
init_auth_context();
import { isError as isError2, ok as ok2 } from "@ycore/forge/result";

// src/auth/server/repository.ts
import { err as err2, notFoundError, serverError, tryCatch } from "@ycore/forge/result";
import { getDatabase } from "@ycore/forge/services";

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/entity.js
var entityKind = Symbol.for("drizzle:entityKind");
var hasOwnEntityKind = Symbol.for("drizzle:hasOwnEntityKind");
function is(value, type) {
  if (!value || typeof value !== "object") {
    return false;
  }
  if (value instanceof type) {
    return true;
  }
  if (!Object.prototype.hasOwnProperty.call(type, entityKind)) {
    throw new Error(`Class "${type.name ?? "<unknown>"}" doesn't look like a Drizzle entity. If this is incorrect and the class is provided by Drizzle, please report this as a bug.`);
  }
  let cls = Object.getPrototypeOf(value).constructor;
  if (cls) {
    while (cls) {
      if (entityKind in cls && cls[entityKind] === type[entityKind]) {
        return true;
      }
      cls = Object.getPrototypeOf(cls);
    }
  }
  return false;
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/column.js
class Column {
  constructor(table, config) {
    this.table = table;
    this.config = config;
    this.name = config.name;
    this.keyAsName = config.keyAsName;
    this.notNull = config.notNull;
    this.default = config.default;
    this.defaultFn = config.defaultFn;
    this.onUpdateFn = config.onUpdateFn;
    this.hasDefault = config.hasDefault;
    this.primary = config.primaryKey;
    this.isUnique = config.isUnique;
    this.uniqueName = config.uniqueName;
    this.uniqueType = config.uniqueType;
    this.dataType = config.dataType;
    this.columnType = config.columnType;
    this.generated = config.generated;
    this.generatedIdentity = config.generatedIdentity;
  }
  static [entityKind] = "Column";
  name;
  keyAsName;
  primary;
  notNull;
  default;
  defaultFn;
  onUpdateFn;
  hasDefault;
  isUnique;
  uniqueName;
  uniqueType;
  dataType;
  columnType;
  enumValues = undefined;
  generated = undefined;
  generatedIdentity = undefined;
  config;
  mapFromDriverValue(value) {
    return value;
  }
  mapToDriverValue(value) {
    return value;
  }
  shouldDisableInsert() {
    return this.config.generated !== undefined && this.config.generated.type !== "byDefault";
  }
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/column-builder.js
class ColumnBuilder {
  static [entityKind] = "ColumnBuilder";
  config;
  constructor(name, dataType, columnType) {
    this.config = {
      name,
      keyAsName: name === "",
      notNull: false,
      default: undefined,
      hasDefault: false,
      primaryKey: false,
      isUnique: false,
      uniqueName: undefined,
      uniqueType: undefined,
      dataType,
      columnType,
      generated: undefined
    };
  }
  $type() {
    return this;
  }
  notNull() {
    this.config.notNull = true;
    return this;
  }
  default(value) {
    this.config.default = value;
    this.config.hasDefault = true;
    return this;
  }
  $defaultFn(fn) {
    this.config.defaultFn = fn;
    this.config.hasDefault = true;
    return this;
  }
  $default = this.$defaultFn;
  $onUpdateFn(fn) {
    this.config.onUpdateFn = fn;
    this.config.hasDefault = true;
    return this;
  }
  $onUpdate = this.$onUpdateFn;
  primaryKey() {
    this.config.primaryKey = true;
    this.config.notNull = true;
    return this;
  }
  setName(name) {
    if (this.config.name !== "")
      return;
    this.config.name = name;
  }
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/table.utils.js
var TableName = Symbol.for("drizzle:Name");

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/tracing-utils.js
function iife(fn, ...args) {
  return fn(...args);
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/pg-core/unique-constraint.js
function uniqueKeyName(table, columns) {
  return `${table[TableName]}_${columns.join("_")}_unique`;
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/pg-core/columns/common.js
class PgColumn extends Column {
  constructor(table, config) {
    if (!config.uniqueName) {
      config.uniqueName = uniqueKeyName(table, [config.name]);
    }
    super(table, config);
    this.table = table;
  }
  static [entityKind] = "PgColumn";
}

class ExtraConfigColumn extends PgColumn {
  static [entityKind] = "ExtraConfigColumn";
  getSQLType() {
    return this.getSQLType();
  }
  indexConfig = {
    order: this.config.order ?? "asc",
    nulls: this.config.nulls ?? "last",
    opClass: this.config.opClass
  };
  defaultConfig = {
    order: "asc",
    nulls: "last",
    opClass: undefined
  };
  asc() {
    this.indexConfig.order = "asc";
    return this;
  }
  desc() {
    this.indexConfig.order = "desc";
    return this;
  }
  nullsFirst() {
    this.indexConfig.nulls = "first";
    return this;
  }
  nullsLast() {
    this.indexConfig.nulls = "last";
    return this;
  }
  op(opClass) {
    this.indexConfig.opClass = opClass;
    return this;
  }
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/pg-core/columns/enum.js
class PgEnumObjectColumn extends PgColumn {
  static [entityKind] = "PgEnumObjectColumn";
  enum;
  enumValues = this.config.enum.enumValues;
  constructor(table, config) {
    super(table, config);
    this.enum = config.enum;
  }
  getSQLType() {
    return this.enum.enumName;
  }
}
var isPgEnumSym = Symbol.for("drizzle:isPgEnum");
function isPgEnum(obj) {
  return !!obj && typeof obj === "function" && isPgEnumSym in obj && obj[isPgEnumSym] === true;
}
class PgEnumColumn extends PgColumn {
  static [entityKind] = "PgEnumColumn";
  enum = this.config.enum;
  enumValues = this.config.enum.enumValues;
  constructor(table, config) {
    super(table, config);
    this.enum = config.enum;
  }
  getSQLType() {
    return this.enum.enumName;
  }
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/subquery.js
class Subquery {
  static [entityKind] = "Subquery";
  constructor(sql, fields, alias, isWith = false, usedTables = []) {
    this._ = {
      brand: "Subquery",
      sql,
      selectedFields: fields,
      alias,
      isWith,
      usedTables
    };
  }
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/version.js
var version = "0.44.6";

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/tracing.js
var otel;
var rawTracer;
var tracer = {
  startActiveSpan(name, fn) {
    if (!otel) {
      return fn();
    }
    if (!rawTracer) {
      rawTracer = otel.trace.getTracer("drizzle-orm", version);
    }
    return iife((otel2, rawTracer2) => rawTracer2.startActiveSpan(name, (span) => {
      try {
        return fn(span);
      } catch (e) {
        span.setStatus({
          code: otel2.SpanStatusCode.ERROR,
          message: e instanceof Error ? e.message : "Unknown error"
        });
        throw e;
      } finally {
        span.end();
      }
    }), otel, rawTracer);
  }
};

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/view-common.js
var ViewBaseConfig = Symbol.for("drizzle:ViewBaseConfig");

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/table.js
var Schema = Symbol.for("drizzle:Schema");
var Columns = Symbol.for("drizzle:Columns");
var ExtraConfigColumns = Symbol.for("drizzle:ExtraConfigColumns");
var OriginalName = Symbol.for("drizzle:OriginalName");
var BaseName = Symbol.for("drizzle:BaseName");
var IsAlias = Symbol.for("drizzle:IsAlias");
var ExtraConfigBuilder = Symbol.for("drizzle:ExtraConfigBuilder");
var IsDrizzleTable = Symbol.for("drizzle:IsDrizzleTable");

class Table {
  static [entityKind] = "Table";
  static Symbol = {
    Name: TableName,
    Schema,
    OriginalName,
    Columns,
    ExtraConfigColumns,
    BaseName,
    IsAlias,
    ExtraConfigBuilder
  };
  [TableName];
  [OriginalName];
  [Schema];
  [Columns];
  [ExtraConfigColumns];
  [BaseName];
  [IsAlias] = false;
  [IsDrizzleTable] = true;
  [ExtraConfigBuilder] = undefined;
  constructor(name, schema, baseName) {
    this[TableName] = this[OriginalName] = name;
    this[Schema] = schema;
    this[BaseName] = baseName;
  }
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sql/sql.js
function isSQLWrapper(value) {
  return value !== null && value !== undefined && typeof value.getSQL === "function";
}
function mergeQueries(queries) {
  const result = { sql: "", params: [] };
  for (const query of queries) {
    result.sql += query.sql;
    result.params.push(...query.params);
    if (query.typings?.length) {
      if (!result.typings) {
        result.typings = [];
      }
      result.typings.push(...query.typings);
    }
  }
  return result;
}

class StringChunk {
  static [entityKind] = "StringChunk";
  value;
  constructor(value) {
    this.value = Array.isArray(value) ? value : [value];
  }
  getSQL() {
    return new SQL([this]);
  }
}

class SQL {
  constructor(queryChunks) {
    this.queryChunks = queryChunks;
    for (const chunk of queryChunks) {
      if (is(chunk, Table)) {
        const schemaName = chunk[Table.Symbol.Schema];
        this.usedTables.push(schemaName === undefined ? chunk[Table.Symbol.Name] : schemaName + "." + chunk[Table.Symbol.Name]);
      }
    }
  }
  static [entityKind] = "SQL";
  decoder = noopDecoder;
  shouldInlineParams = false;
  usedTables = [];
  append(query) {
    this.queryChunks.push(...query.queryChunks);
    return this;
  }
  toQuery(config) {
    return tracer.startActiveSpan("drizzle.buildSQL", (span) => {
      const query = this.buildQueryFromSourceParams(this.queryChunks, config);
      span?.setAttributes({
        "drizzle.query.text": query.sql,
        "drizzle.query.params": JSON.stringify(query.params)
      });
      return query;
    });
  }
  buildQueryFromSourceParams(chunks, _config) {
    const config = Object.assign({}, _config, {
      inlineParams: _config.inlineParams || this.shouldInlineParams,
      paramStartIndex: _config.paramStartIndex || { value: 0 }
    });
    const {
      casing,
      escapeName,
      escapeParam,
      prepareTyping,
      inlineParams,
      paramStartIndex
    } = config;
    return mergeQueries(chunks.map((chunk) => {
      if (is(chunk, StringChunk)) {
        return { sql: chunk.value.join(""), params: [] };
      }
      if (is(chunk, Name)) {
        return { sql: escapeName(chunk.value), params: [] };
      }
      if (chunk === undefined) {
        return { sql: "", params: [] };
      }
      if (Array.isArray(chunk)) {
        const result = [new StringChunk("(")];
        for (const [i, p] of chunk.entries()) {
          result.push(p);
          if (i < chunk.length - 1) {
            result.push(new StringChunk(", "));
          }
        }
        result.push(new StringChunk(")"));
        return this.buildQueryFromSourceParams(result, config);
      }
      if (is(chunk, SQL)) {
        return this.buildQueryFromSourceParams(chunk.queryChunks, {
          ...config,
          inlineParams: inlineParams || chunk.shouldInlineParams
        });
      }
      if (is(chunk, Table)) {
        const schemaName = chunk[Table.Symbol.Schema];
        const tableName = chunk[Table.Symbol.Name];
        return {
          sql: schemaName === undefined || chunk[IsAlias] ? escapeName(tableName) : escapeName(schemaName) + "." + escapeName(tableName),
          params: []
        };
      }
      if (is(chunk, Column)) {
        const columnName = casing.getColumnCasing(chunk);
        if (_config.invokeSource === "indexes") {
          return { sql: escapeName(columnName), params: [] };
        }
        const schemaName = chunk.table[Table.Symbol.Schema];
        return {
          sql: chunk.table[IsAlias] || schemaName === undefined ? escapeName(chunk.table[Table.Symbol.Name]) + "." + escapeName(columnName) : escapeName(schemaName) + "." + escapeName(chunk.table[Table.Symbol.Name]) + "." + escapeName(columnName),
          params: []
        };
      }
      if (is(chunk, View)) {
        const schemaName = chunk[ViewBaseConfig].schema;
        const viewName = chunk[ViewBaseConfig].name;
        return {
          sql: schemaName === undefined || chunk[ViewBaseConfig].isAlias ? escapeName(viewName) : escapeName(schemaName) + "." + escapeName(viewName),
          params: []
        };
      }
      if (is(chunk, Param)) {
        if (is(chunk.value, Placeholder)) {
          return { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ["none"] };
        }
        const mappedValue = chunk.value === null ? null : chunk.encoder.mapToDriverValue(chunk.value);
        if (is(mappedValue, SQL)) {
          return this.buildQueryFromSourceParams([mappedValue], config);
        }
        if (inlineParams) {
          return { sql: this.mapInlineParam(mappedValue, config), params: [] };
        }
        let typings = ["none"];
        if (prepareTyping) {
          typings = [prepareTyping(chunk.encoder)];
        }
        return { sql: escapeParam(paramStartIndex.value++, mappedValue), params: [mappedValue], typings };
      }
      if (is(chunk, Placeholder)) {
        return { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ["none"] };
      }
      if (is(chunk, SQL.Aliased) && chunk.fieldAlias !== undefined) {
        return { sql: escapeName(chunk.fieldAlias), params: [] };
      }
      if (is(chunk, Subquery)) {
        if (chunk._.isWith) {
          return { sql: escapeName(chunk._.alias), params: [] };
        }
        return this.buildQueryFromSourceParams([
          new StringChunk("("),
          chunk._.sql,
          new StringChunk(") "),
          new Name(chunk._.alias)
        ], config);
      }
      if (isPgEnum(chunk)) {
        if (chunk.schema) {
          return { sql: escapeName(chunk.schema) + "." + escapeName(chunk.enumName), params: [] };
        }
        return { sql: escapeName(chunk.enumName), params: [] };
      }
      if (isSQLWrapper(chunk)) {
        if (chunk.shouldOmitSQLParens?.()) {
          return this.buildQueryFromSourceParams([chunk.getSQL()], config);
        }
        return this.buildQueryFromSourceParams([
          new StringChunk("("),
          chunk.getSQL(),
          new StringChunk(")")
        ], config);
      }
      if (inlineParams) {
        return { sql: this.mapInlineParam(chunk, config), params: [] };
      }
      return { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ["none"] };
    }));
  }
  mapInlineParam(chunk, { escapeString }) {
    if (chunk === null) {
      return "null";
    }
    if (typeof chunk === "number" || typeof chunk === "boolean") {
      return chunk.toString();
    }
    if (typeof chunk === "string") {
      return escapeString(chunk);
    }
    if (typeof chunk === "object") {
      const mappedValueAsString = chunk.toString();
      if (mappedValueAsString === "[object Object]") {
        return escapeString(JSON.stringify(chunk));
      }
      return escapeString(mappedValueAsString);
    }
    throw new Error("Unexpected param value: " + chunk);
  }
  getSQL() {
    return this;
  }
  as(alias) {
    if (alias === undefined) {
      return this;
    }
    return new SQL.Aliased(this, alias);
  }
  mapWith(decoder) {
    this.decoder = typeof decoder === "function" ? { mapFromDriverValue: decoder } : decoder;
    return this;
  }
  inlineParams() {
    this.shouldInlineParams = true;
    return this;
  }
  if(condition) {
    return condition ? this : undefined;
  }
}

class Name {
  constructor(value) {
    this.value = value;
  }
  static [entityKind] = "Name";
  brand;
  getSQL() {
    return new SQL([this]);
  }
}
function isDriverValueEncoder(value) {
  return typeof value === "object" && value !== null && "mapToDriverValue" in value && typeof value.mapToDriverValue === "function";
}
var noopDecoder = {
  mapFromDriverValue: (value) => value
};
var noopEncoder = {
  mapToDriverValue: (value) => value
};
var noopMapper = {
  ...noopDecoder,
  ...noopEncoder
};

class Param {
  constructor(value, encoder = noopEncoder) {
    this.value = value;
    this.encoder = encoder;
  }
  static [entityKind] = "Param";
  brand;
  getSQL() {
    return new SQL([this]);
  }
}
function sql(strings, ...params) {
  const queryChunks = [];
  if (params.length > 0 || strings.length > 0 && strings[0] !== "") {
    queryChunks.push(new StringChunk(strings[0]));
  }
  for (const [paramIndex, param2] of params.entries()) {
    queryChunks.push(param2, new StringChunk(strings[paramIndex + 1]));
  }
  return new SQL(queryChunks);
}
((sql2) => {
  function empty() {
    return new SQL([]);
  }
  sql2.empty = empty;
  function fromList(list) {
    return new SQL(list);
  }
  sql2.fromList = fromList;
  function raw(str) {
    return new SQL([new StringChunk(str)]);
  }
  sql2.raw = raw;
  function join(chunks, separator) {
    const result = [];
    for (const [i, chunk] of chunks.entries()) {
      if (i > 0 && separator !== undefined) {
        result.push(separator);
      }
      result.push(chunk);
    }
    return new SQL(result);
  }
  sql2.join = join;
  function identifier(value) {
    return new Name(value);
  }
  sql2.identifier = identifier;
  function placeholder2(name2) {
    return new Placeholder(name2);
  }
  sql2.placeholder = placeholder2;
  function param2(value, encoder) {
    return new Param(value, encoder);
  }
  sql2.param = param2;
})(sql || (sql = {}));
((SQL2) => {

  class Aliased {
    constructor(sql2, fieldAlias) {
      this.sql = sql2;
      this.fieldAlias = fieldAlias;
    }
    static [entityKind] = "SQL.Aliased";
    isSelectionField = false;
    getSQL() {
      return this.sql;
    }
    clone() {
      return new Aliased(this.sql, this.fieldAlias);
    }
  }
  SQL2.Aliased = Aliased;
})(SQL || (SQL = {}));

class Placeholder {
  constructor(name2) {
    this.name = name2;
  }
  static [entityKind] = "Placeholder";
  getSQL() {
    return new SQL([this]);
  }
}
var IsDrizzleView = Symbol.for("drizzle:IsDrizzleView");

class View {
  static [entityKind] = "View";
  [ViewBaseConfig];
  [IsDrizzleView] = true;
  constructor({ name: name2, schema, selectedFields, query }) {
    this[ViewBaseConfig] = {
      name: name2,
      originalName: name2,
      schema,
      selectedFields,
      query,
      isExisting: !query,
      isAlias: false
    };
  }
  getSQL() {
    return new SQL([this]);
  }
}
Column.prototype.getSQL = function() {
  return new SQL([this]);
};
Table.prototype.getSQL = function() {
  return new SQL([this]);
};
Subquery.prototype.getSQL = function() {
  return new SQL([this]);
};

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/utils.js
function getColumnNameAndConfig(a, b) {
  return {
    name: typeof a === "string" && a.length > 0 ? a : "",
    config: typeof a === "object" ? a : b
  };
}
var textDecoder = typeof TextDecoder === "undefined" ? null : new TextDecoder;

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sql/expressions/conditions.js
function bindIfParam(value, column) {
  if (isDriverValueEncoder(column) && !isSQLWrapper(value) && !is(value, Param) && !is(value, Placeholder) && !is(value, Column) && !is(value, Table) && !is(value, View)) {
    return new Param(value, column);
  }
  return value;
}
var eq = (left, right) => {
  return sql`${left} = ${bindIfParam(right, left)}`;
};
function and(...unfilteredConditions) {
  const conditions = unfilteredConditions.filter((c) => c !== undefined);
  if (conditions.length === 0) {
    return;
  }
  if (conditions.length === 1) {
    return new SQL(conditions);
  }
  return new SQL([
    new StringChunk("("),
    sql.join(conditions, new StringChunk(" and ")),
    new StringChunk(")")
  ]);
}
var lt = (left, right) => {
  return sql`${left} < ${bindIfParam(right, left)}`;
};

// src/auth/schema/schema.ts
import { createdAt, cuid, updatedAt } from "@ycore/forge/utils";

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/foreign-keys.js
class ForeignKeyBuilder {
  static [entityKind] = "SQLiteForeignKeyBuilder";
  reference;
  _onUpdate;
  _onDelete;
  constructor(config, actions) {
    this.reference = () => {
      const { name, columns, foreignColumns } = config();
      return { name, columns, foreignTable: foreignColumns[0].table, foreignColumns };
    };
    if (actions) {
      this._onUpdate = actions.onUpdate;
      this._onDelete = actions.onDelete;
    }
  }
  onUpdate(action) {
    this._onUpdate = action;
    return this;
  }
  onDelete(action) {
    this._onDelete = action;
    return this;
  }
  build(table) {
    return new ForeignKey(table, this);
  }
}

class ForeignKey {
  constructor(table, builder) {
    this.table = table;
    this.reference = builder.reference;
    this.onUpdate = builder._onUpdate;
    this.onDelete = builder._onDelete;
  }
  static [entityKind] = "SQLiteForeignKey";
  reference;
  onUpdate;
  onDelete;
  getName() {
    const { name, columns, foreignColumns } = this.reference();
    const columnNames = columns.map((column) => column.name);
    const foreignColumnNames = foreignColumns.map((column) => column.name);
    const chunks = [
      this.table[TableName],
      ...columnNames,
      foreignColumns[0].table[TableName],
      ...foreignColumnNames
    ];
    return name ?? `${chunks.join("_")}_fk`;
  }
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/unique-constraint.js
function uniqueKeyName2(table, columns) {
  return `${table[TableName]}_${columns.join("_")}_unique`;
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/columns/common.js
class SQLiteColumnBuilder extends ColumnBuilder {
  static [entityKind] = "SQLiteColumnBuilder";
  foreignKeyConfigs = [];
  references(ref, actions = {}) {
    this.foreignKeyConfigs.push({ ref, actions });
    return this;
  }
  unique(name) {
    this.config.isUnique = true;
    this.config.uniqueName = name;
    return this;
  }
  generatedAlwaysAs(as, config) {
    this.config.generated = {
      as,
      type: "always",
      mode: config?.mode ?? "virtual"
    };
    return this;
  }
  buildForeignKeys(column, table) {
    return this.foreignKeyConfigs.map(({ ref, actions }) => {
      return ((ref2, actions2) => {
        const builder = new ForeignKeyBuilder(() => {
          const foreignColumn = ref2();
          return { columns: [column], foreignColumns: [foreignColumn] };
        });
        if (actions2.onUpdate) {
          builder.onUpdate(actions2.onUpdate);
        }
        if (actions2.onDelete) {
          builder.onDelete(actions2.onDelete);
        }
        return builder.build(table);
      })(ref, actions);
    });
  }
}

class SQLiteColumn extends Column {
  constructor(table, config) {
    if (!config.uniqueName) {
      config.uniqueName = uniqueKeyName2(table, [config.name]);
    }
    super(table, config);
    this.table = table;
  }
  static [entityKind] = "SQLiteColumn";
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/columns/blob.js
class SQLiteBigIntBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteBigIntBuilder";
  constructor(name) {
    super(name, "bigint", "SQLiteBigInt");
  }
  build(table) {
    return new SQLiteBigInt(table, this.config);
  }
}

class SQLiteBigInt extends SQLiteColumn {
  static [entityKind] = "SQLiteBigInt";
  getSQLType() {
    return "blob";
  }
  mapFromDriverValue(value) {
    if (typeof Buffer !== "undefined" && Buffer.from) {
      const buf = Buffer.isBuffer(value) ? value : value instanceof ArrayBuffer ? Buffer.from(value) : value.buffer ? Buffer.from(value.buffer, value.byteOffset, value.byteLength) : Buffer.from(value);
      return BigInt(buf.toString("utf8"));
    }
    return BigInt(textDecoder.decode(value));
  }
  mapToDriverValue(value) {
    return Buffer.from(value.toString());
  }
}

class SQLiteBlobJsonBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteBlobJsonBuilder";
  constructor(name) {
    super(name, "json", "SQLiteBlobJson");
  }
  build(table) {
    return new SQLiteBlobJson(table, this.config);
  }
}

class SQLiteBlobJson extends SQLiteColumn {
  static [entityKind] = "SQLiteBlobJson";
  getSQLType() {
    return "blob";
  }
  mapFromDriverValue(value) {
    if (typeof Buffer !== "undefined" && Buffer.from) {
      const buf = Buffer.isBuffer(value) ? value : value instanceof ArrayBuffer ? Buffer.from(value) : value.buffer ? Buffer.from(value.buffer, value.byteOffset, value.byteLength) : Buffer.from(value);
      return JSON.parse(buf.toString("utf8"));
    }
    return JSON.parse(textDecoder.decode(value));
  }
  mapToDriverValue(value) {
    return Buffer.from(JSON.stringify(value));
  }
}

class SQLiteBlobBufferBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteBlobBufferBuilder";
  constructor(name) {
    super(name, "buffer", "SQLiteBlobBuffer");
  }
  build(table) {
    return new SQLiteBlobBuffer(table, this.config);
  }
}

class SQLiteBlobBuffer extends SQLiteColumn {
  static [entityKind] = "SQLiteBlobBuffer";
  mapFromDriverValue(value) {
    if (Buffer.isBuffer(value)) {
      return value;
    }
    return Buffer.from(value);
  }
  getSQLType() {
    return "blob";
  }
}
function blob(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (config?.mode === "json") {
    return new SQLiteBlobJsonBuilder(name);
  }
  if (config?.mode === "bigint") {
    return new SQLiteBigIntBuilder(name);
  }
  return new SQLiteBlobBufferBuilder(name);
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/columns/custom.js
class SQLiteCustomColumnBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteCustomColumnBuilder";
  constructor(name, fieldConfig, customTypeParams) {
    super(name, "custom", "SQLiteCustomColumn");
    this.config.fieldConfig = fieldConfig;
    this.config.customTypeParams = customTypeParams;
  }
  build(table) {
    return new SQLiteCustomColumn(table, this.config);
  }
}

class SQLiteCustomColumn extends SQLiteColumn {
  static [entityKind] = "SQLiteCustomColumn";
  sqlName;
  mapTo;
  mapFrom;
  constructor(table, config) {
    super(table, config);
    this.sqlName = config.customTypeParams.dataType(config.fieldConfig);
    this.mapTo = config.customTypeParams.toDriver;
    this.mapFrom = config.customTypeParams.fromDriver;
  }
  getSQLType() {
    return this.sqlName;
  }
  mapFromDriverValue(value) {
    return typeof this.mapFrom === "function" ? this.mapFrom(value) : value;
  }
  mapToDriverValue(value) {
    return typeof this.mapTo === "function" ? this.mapTo(value) : value;
  }
}
function customType(customTypeParams) {
  return (a, b) => {
    const { name, config } = getColumnNameAndConfig(a, b);
    return new SQLiteCustomColumnBuilder(name, config, customTypeParams);
  };
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/columns/integer.js
class SQLiteBaseIntegerBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteBaseIntegerBuilder";
  constructor(name, dataType, columnType) {
    super(name, dataType, columnType);
    this.config.autoIncrement = false;
  }
  primaryKey(config) {
    if (config?.autoIncrement) {
      this.config.autoIncrement = true;
    }
    this.config.hasDefault = true;
    return super.primaryKey();
  }
}

class SQLiteBaseInteger extends SQLiteColumn {
  static [entityKind] = "SQLiteBaseInteger";
  autoIncrement = this.config.autoIncrement;
  getSQLType() {
    return "integer";
  }
}

class SQLiteIntegerBuilder extends SQLiteBaseIntegerBuilder {
  static [entityKind] = "SQLiteIntegerBuilder";
  constructor(name) {
    super(name, "number", "SQLiteInteger");
  }
  build(table) {
    return new SQLiteInteger(table, this.config);
  }
}

class SQLiteInteger extends SQLiteBaseInteger {
  static [entityKind] = "SQLiteInteger";
}

class SQLiteTimestampBuilder extends SQLiteBaseIntegerBuilder {
  static [entityKind] = "SQLiteTimestampBuilder";
  constructor(name, mode) {
    super(name, "date", "SQLiteTimestamp");
    this.config.mode = mode;
  }
  defaultNow() {
    return this.default(sql`(cast((julianday('now') - 2440587.5)*86400000 as integer))`);
  }
  build(table) {
    return new SQLiteTimestamp(table, this.config);
  }
}

class SQLiteTimestamp extends SQLiteBaseInteger {
  static [entityKind] = "SQLiteTimestamp";
  mode = this.config.mode;
  mapFromDriverValue(value) {
    if (this.config.mode === "timestamp") {
      return new Date(value * 1000);
    }
    return new Date(value);
  }
  mapToDriverValue(value) {
    const unix = value.getTime();
    if (this.config.mode === "timestamp") {
      return Math.floor(unix / 1000);
    }
    return unix;
  }
}

class SQLiteBooleanBuilder extends SQLiteBaseIntegerBuilder {
  static [entityKind] = "SQLiteBooleanBuilder";
  constructor(name, mode) {
    super(name, "boolean", "SQLiteBoolean");
    this.config.mode = mode;
  }
  build(table) {
    return new SQLiteBoolean(table, this.config);
  }
}

class SQLiteBoolean extends SQLiteBaseInteger {
  static [entityKind] = "SQLiteBoolean";
  mode = this.config.mode;
  mapFromDriverValue(value) {
    return Number(value) === 1;
  }
  mapToDriverValue(value) {
    return value ? 1 : 0;
  }
}
function integer(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (config?.mode === "timestamp" || config?.mode === "timestamp_ms") {
    return new SQLiteTimestampBuilder(name, config.mode);
  }
  if (config?.mode === "boolean") {
    return new SQLiteBooleanBuilder(name, config.mode);
  }
  return new SQLiteIntegerBuilder(name);
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/columns/numeric.js
class SQLiteNumericBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteNumericBuilder";
  constructor(name) {
    super(name, "string", "SQLiteNumeric");
  }
  build(table) {
    return new SQLiteNumeric(table, this.config);
  }
}

class SQLiteNumeric extends SQLiteColumn {
  static [entityKind] = "SQLiteNumeric";
  mapFromDriverValue(value) {
    if (typeof value === "string")
      return value;
    return String(value);
  }
  getSQLType() {
    return "numeric";
  }
}

class SQLiteNumericNumberBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteNumericNumberBuilder";
  constructor(name) {
    super(name, "number", "SQLiteNumericNumber");
  }
  build(table) {
    return new SQLiteNumericNumber(table, this.config);
  }
}

class SQLiteNumericNumber extends SQLiteColumn {
  static [entityKind] = "SQLiteNumericNumber";
  mapFromDriverValue(value) {
    if (typeof value === "number")
      return value;
    return Number(value);
  }
  mapToDriverValue = String;
  getSQLType() {
    return "numeric";
  }
}

class SQLiteNumericBigIntBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteNumericBigIntBuilder";
  constructor(name) {
    super(name, "bigint", "SQLiteNumericBigInt");
  }
  build(table) {
    return new SQLiteNumericBigInt(table, this.config);
  }
}

class SQLiteNumericBigInt extends SQLiteColumn {
  static [entityKind] = "SQLiteNumericBigInt";
  mapFromDriverValue = BigInt;
  mapToDriverValue = String;
  getSQLType() {
    return "numeric";
  }
}
function numeric(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  const mode = config?.mode;
  return mode === "number" ? new SQLiteNumericNumberBuilder(name) : mode === "bigint" ? new SQLiteNumericBigIntBuilder(name) : new SQLiteNumericBuilder(name);
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/columns/real.js
class SQLiteRealBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteRealBuilder";
  constructor(name) {
    super(name, "number", "SQLiteReal");
  }
  build(table) {
    return new SQLiteReal(table, this.config);
  }
}

class SQLiteReal extends SQLiteColumn {
  static [entityKind] = "SQLiteReal";
  getSQLType() {
    return "real";
  }
}
function real(name) {
  return new SQLiteRealBuilder(name ?? "");
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/columns/text.js
class SQLiteTextBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteTextBuilder";
  constructor(name, config) {
    super(name, "string", "SQLiteText");
    this.config.enumValues = config.enum;
    this.config.length = config.length;
  }
  build(table) {
    return new SQLiteText(table, this.config);
  }
}

class SQLiteText extends SQLiteColumn {
  static [entityKind] = "SQLiteText";
  enumValues = this.config.enumValues;
  length = this.config.length;
  constructor(table, config) {
    super(table, config);
  }
  getSQLType() {
    return `text${this.config.length ? `(${this.config.length})` : ""}`;
  }
}

class SQLiteTextJsonBuilder extends SQLiteColumnBuilder {
  static [entityKind] = "SQLiteTextJsonBuilder";
  constructor(name) {
    super(name, "json", "SQLiteTextJson");
  }
  build(table) {
    return new SQLiteTextJson(table, this.config);
  }
}

class SQLiteTextJson extends SQLiteColumn {
  static [entityKind] = "SQLiteTextJson";
  getSQLType() {
    return "text";
  }
  mapFromDriverValue(value) {
    return JSON.parse(value);
  }
  mapToDriverValue(value) {
    return JSON.stringify(value);
  }
}
function text(a, b = {}) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (config.mode === "json") {
    return new SQLiteTextJsonBuilder(name);
  }
  return new SQLiteTextBuilder(name, config);
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/columns/all.js
function getSQLiteColumnBuilders() {
  return {
    blob,
    customType,
    integer,
    numeric,
    real,
    text
  };
}

// ../../node_modules/.bun/drizzle-orm@0.44.6/node_modules/drizzle-orm/sqlite-core/table.js
var InlineForeignKeys = Symbol.for("drizzle:SQLiteInlineForeignKeys");

class SQLiteTable extends Table {
  static [entityKind] = "SQLiteTable";
  static Symbol = Object.assign({}, Table.Symbol, {
    InlineForeignKeys
  });
  [Table.Symbol.Columns];
  [InlineForeignKeys] = [];
  [Table.Symbol.ExtraConfigBuilder] = undefined;
}
function sqliteTableBase(name, columns, extraConfig, schema, baseName = name) {
  const rawTable = new SQLiteTable(name, schema, baseName);
  const parsedColumns = typeof columns === "function" ? columns(getSQLiteColumnBuilders()) : columns;
  const builtColumns = Object.fromEntries(Object.entries(parsedColumns).map(([name2, colBuilderBase]) => {
    const colBuilder = colBuilderBase;
    colBuilder.setName(name2);
    const column = colBuilder.build(rawTable);
    rawTable[InlineForeignKeys].push(...colBuilder.buildForeignKeys(column, rawTable));
    return [name2, column];
  }));
  const table = Object.assign(rawTable, builtColumns);
  table[Table.Symbol.Columns] = builtColumns;
  table[Table.Symbol.ExtraConfigColumns] = builtColumns;
  if (extraConfig) {
    table[SQLiteTable.Symbol.ExtraConfigBuilder] = extraConfig;
  }
  return table;
}
var sqliteTable = (name, columns, extraConfig) => {
  return sqliteTableBase(name, columns, extraConfig);
};

// src/auth/schema/schema.ts
var users = sqliteTable("users", {
  id: cuid("id").primaryKey().notNull(),
  email: text("email").notNull().unique(),
  displayName: text("display_name").notNull(),
  status: text("status", { enum: ["active", "unverified", "unrecovered", "deleted"] }).notNull().default("unverified").$type(),
  pending: text("pending", { mode: "json" }).$type(),
  createdAt,
  updatedAt
});
var authenticators = sqliteTable("authenticators", {
  id: text("id").primaryKey().notNull(),
  userId: text("user_id").notNull().references(() => users.id, { onDelete: "cascade" }),
  credentialPublicKey: text("credential_public_key").notNull(),
  counter: integer("counter").notNull(),
  credentialDeviceType: text("credential_device_type").notNull(),
  credentialBackedUp: integer("credential_backed_up", { mode: "boolean" }).notNull(),
  transports: text("transports", { mode: "json" }).notNull().$type(),
  aaguid: text("aaguid").notNull(),
  name: text("name"),
  lastUsedAt: integer("last_used_at", { mode: "timestamp" }),
  attestationType: text("attestation_type").notNull().default("none"),
  rpId: text("rp_id").notNull(),
  algorithm: integer("algorithm").notNull(),
  createdAt,
  updatedAt
});
// src/auth/server/repository.ts
function createAuthRepository(db) {
  return {
    getUserById: async (id) => {
      return tryCatch(async () => {
        const result = await db.select().from(users).where(eq(users.id, id)).get();
        if (!result) {
          return notFoundError("User", id);
        }
        return result;
      }, `Failed to get user by ID: ${id}`);
    },
    getUserByEmail: async (email2) => {
      return tryCatch(async () => {
        const result = await db.select().from(users).where(eq(users.email, email2)).get();
        if (!result) {
          return notFoundError("User", email2);
        }
        return result;
      }, `Failed to get user by email: ${email2}`);
    },
    createUser: async (email2, displayName) => {
      try {
        const newUser = { email: email2, displayName };
        const [result] = await db.insert(users).values(newUser).returning();
        if (!result) {
          return err2("Failed to create user", { email: email2, displayName });
        }
        return result;
      } catch (error) {
        if (error instanceof Error && error.message.includes("UNIQUE")) {
          return err2("Email already exists", {
            email: email2,
            code: "DUPLICATE_USER"
          });
        }
        return serverError("Failed to create user", error);
      }
    },
    getAuthenticatorById: async (id) => {
      return tryCatch(async () => {
        const result = await db.select().from(authenticators).where(eq(authenticators.id, id)).get();
        if (!result) {
          return notFoundError("Authenticator", id);
        }
        return result;
      }, `Failed to get authenticator by ID: ${id}`);
    },
    getAuthenticatorsByUserId: async (userId) => {
      return tryCatch(async () => {
        const result = await db.select().from(authenticators).where(eq(authenticators.userId, userId)).all();
        return result;
      }, `Failed to get authenticators for user: ${userId}`);
    },
    createAuthenticator: async (authenticator) => {
      try {
        const [result] = await db.insert(authenticators).values(authenticator).returning();
        if (!result) {
          return err2("Failed to create authenticator", { id: authenticator.id });
        }
        return result;
      } catch (error) {
        return serverError("Failed to create authenticator", error);
      }
    },
    updateAuthenticatorCounter: async (id, counter) => {
      try {
        const result = await db.update(authenticators).set({ counter }).where(eq(authenticators.id, id)).returning();
        if (result.length === 0) {
          return notFoundError("Authenticator", id);
        }
        return true;
      } catch (error) {
        return serverError("Failed to update authenticator counter", error);
      }
    },
    updateAuthenticatorUsage: async (id, counter, lastUsedAt) => {
      try {
        const result = await db.update(authenticators).set({
          counter,
          lastUsedAt
        }).where(eq(authenticators.id, id)).returning();
        if (result.length === 0) {
          return notFoundError("Authenticator", id);
        }
        return true;
      } catch (error) {
        return serverError("Failed to update authenticator usage", error);
      }
    },
    updateAuthenticatorName: async (id, name) => {
      try {
        const result = await db.update(authenticators).set({ name }).where(eq(authenticators.id, id)).returning();
        if (result.length === 0) {
          return notFoundError("Authenticator", id);
        }
        const updatedAuthenticator = result[0];
        if (!updatedAuthenticator) {
          return serverError("Failed to retrieve updated authenticator", new Error("Update returned empty result"));
        }
        return updatedAuthenticator;
      } catch (error) {
        return serverError("Failed to update authenticator name", error);
      }
    },
    deleteAuthenticator: async (id) => {
      try {
        const result = await db.delete(authenticators).where(eq(authenticators.id, id)).returning();
        if (result.length === 0) {
          return notFoundError("Authenticator", id);
        }
        return true;
      } catch (error) {
        return serverError("Failed to delete authenticator", error);
      }
    },
    authenticatorBelongsToUser: async (id, userId) => {
      return tryCatch(async () => {
        const result = await db.select().from(authenticators).where(eq(authenticators.id, id)).get();
        if (!result) {
          return false;
        }
        return result.userId === userId;
      }, `Failed to verify authenticator ownership for ID: ${id}`);
    },
    countAuthenticatorsByUserId: async (userId) => {
      return tryCatch(async () => {
        const result = await db.select().from(authenticators).where(eq(authenticators.userId, userId)).all();
        return result.length;
      }, `Failed to count authenticators for user: ${userId}`);
    },
    updateUserEmail: async (id, newEmail) => {
      try {
        const result = await db.update(users).set({ email: newEmail, status: "unverified" }).where(eq(users.id, id)).returning();
        if (result.length === 0) {
          return notFoundError("User", id);
        }
        const updatedUser = result[0];
        if (!updatedUser) {
          return serverError("Failed to retrieve updated user", new Error("Update returned empty result"));
        }
        return updatedUser;
      } catch (error) {
        if (error instanceof Error && error.message.includes("UNIQUE")) {
          return err2("Email already exists", {
            email: newEmail,
            code: "DUPLICATE_EMAIL"
          });
        }
        return serverError("Failed to update user email", error);
      }
    },
    updateUserStatus: async (id, status) => {
      try {
        const result = await db.update(users).set({ status }).where(eq(users.id, id)).returning();
        if (result.length === 0) {
          return notFoundError("User", id);
        }
        const updatedUser = result[0];
        if (!updatedUser) {
          return serverError("Failed to retrieve updated user", new Error("Update returned empty result"));
        }
        return updatedUser;
      } catch (error) {
        return serverError("Failed to update user status", error);
      }
    },
    updateUserPending: async (id, pending) => {
      try {
        const result = await db.update(users).set({ pending }).where(eq(users.id, id)).returning();
        if (result.length === 0) {
          return notFoundError("User", id);
        }
        const updatedUser = result[0];
        if (!updatedUser) {
          return serverError("Failed to retrieve updated user", new Error("Update returned empty result"));
        }
        return updatedUser;
      } catch (error) {
        return serverError("Failed to update user pending data", error);
      }
    },
    deleteAuthenticatorsByTimestamp: async (userId, beforeTimestamp) => {
      try {
        const beforeDate = new Date(beforeTimestamp);
        const result = await db.delete(authenticators).where(and(eq(authenticators.userId, userId), lt(authenticators.updatedAt, beforeDate))).returning();
        return result.length;
      } catch (error) {
        return serverError("Failed to delete authenticators by timestamp", error);
      }
    },
    deleteUser: async (id) => {
      try {
        const _deleteAuthenticatorsResult = await db.delete(authenticators).where(eq(authenticators.userId, id));
        const deleteUserResult = await db.delete(users).where(eq(users.id, id)).returning();
        if (deleteUserResult.length === 0) {
          return notFoundError("User", id);
        }
        return true;
      } catch (error) {
        return serverError("Failed to delete user", error);
      }
    },
    deleteUserAccount: async (id) => {
      try {
        const timestamp = Date.now();
        const anonymizedEmail = `deleted_${id}_${timestamp}@deleted.local`;
        const result = await db.update(users).set({
          email: anonymizedEmail,
          displayName: "Deleted User",
          status: "deleted",
          pending: null
        }).where(eq(users.id, id)).returning();
        if (result.length === 0) {
          return notFoundError("User", id);
        }
        const deletedUser = result[0];
        if (!deletedUser) {
          return serverError("Failed to retrieve deleted user", new Error("Update returned empty result"));
        }
        return deletedUser;
      } catch (error) {
        return serverError("Failed to delete user account", error);
      }
    }
  };
}
function getAuthRepository(context) {
  const db = getDatabase(context);
  return createAuthRepository(db);
}

// src/auth/server/auth-profile.ts
async function profileLoader({ context }) {
  const user = requireAuthUser(context);
  return ok2({ user });
}
async function getUserWithAuthenticators(context, userId) {
  const repository = getAuthRepository(context);
  const userResult = await repository.getUserById(userId);
  if (isError2(userResult)) {
    return userResult;
  }
  const authenticatorsResult = await repository.getAuthenticatorsByUserId(userId);
  if (isError2(authenticatorsResult)) {
    return authenticatorsResult;
  }
  return ok2({
    user: userResult,
    authenticators: authenticatorsResult
  });
}
// src/auth/server/auth-recover.ts
import { getContext as getContext5 } from "@ycore/forge/context";
import { handleIntent } from "@ycore/forge/intent/server";
import { logger as logger8 } from "@ycore/forge/logger";
import { err as err9, flattenError as flattenError3, isError as isError5, isSystemError, ok as ok7, respondError, respondOk, respondRedirect, throwSystemError, validateFormData } from "@ycore/forge/result";
import { requireCSRFToken } from "@ycore/foundry/secure/server";
import { email as email2, minLength as minLength2, object as object2, pipe as pipe2, string as string3 } from "valibot";
init_auth_context();

// src/auth/server/recovery-service.ts
import { logger as logger7 } from "@ycore/forge/logger";
import { err as err8, flattenError as flattenError2, isError as isError4, ok as ok6 } from "@ycore/forge/result";

// src/email/server/email.middleware.ts
import { setContext as setContext2 } from "@ycore/forge/context";

// src/email/email.context.ts
import { createContext as createContext2 } from "react-router";
var emailContext = createContext2(null);
// src/email/server/email.service.ts
import { getContext as getContext3 } from "@ycore/forge/context";
import { logger as logger5 } from "@ycore/forge/logger";
import { err as err6, flattenError, isError as isError3, ok as ok4 } from "@ycore/forge/result";
import { getBindings as getBindings2 } from "@ycore/forge/services";

// src/email/email.config.ts
var defaultEmailConfig = {
  active: "local-dev",
  providers: [
    {
      name: "local-dev",
      sendFrom: "dev@localhost"
    }
  ]
};

// src/email/email-provider.ts
import { err as err5, ok as ok3 } from "@ycore/forge/result";

// src/email/providers/local-dev.ts
import { logger as logger3 } from "@ycore/forge/logger";

// src/email/providers/base-provider.ts
import { logger as logger2 } from "@ycore/forge/logger";
import { err as err3, tryCatch as tryCatch2 } from "@ycore/forge/result";
var EMAIL_PROVIDER_DELAYS = {
  LOCAL_DEV: 800,
  TEST_MOCK: 10
};
function createEmailProviderBase(name, sendFn) {
  return {
    async sendEmail(options) {
      const { from, to, template } = options;
      if (!from) {
        return err3("From address is required");
      }
      return tryCatch2(async () => {
        await sendFn(options);
        logger2.debug("email_sent_success", {
          provider: name,
          to,
          subject: template.subject
        });
      }, `Failed to send email via ${name}`);
    }
  };
}

// src/email/providers/local-dev.ts
function createLocalDevEmailProvider() {
  return createEmailProviderBase("local-dev", async (options) => {
    const { to, from, template } = options;
    await new Promise((resolve) => setTimeout(resolve, EMAIL_PROVIDER_DELAYS.LOCAL_DEV));
    logger3.info("local_dev_email_sent", {
      provider: "local-dev",
      from,
      to,
      subject: template.subject,
      text: template.text
    });
  });
}

// src/email/providers/mailchannels.ts
function createMailChannelsEmailProvider() {
  const apiUrl = "https://api.mailchannels.net/tx/v1/send";
  return createEmailProviderBase("mailchannels", async (options) => {
    const { apiKey, to, from, template } = options;
    const payload = {
      personalizations: [
        {
          to: [{ email: to }]
        }
      ],
      from: { email: from },
      subject: template.subject,
      content: [
        { type: "text/plain", value: template.text },
        { type: "text/html", value: template.html }
      ]
    };
    const response = await fetch(apiUrl, {
      method: "POST",
      headers: {
        "X-Api-Key": apiKey,
        "Content-Type": "application/json",
        Accept: "application/json"
      },
      body: JSON.stringify(payload)
    });
    if (!response.ok) {
      const errorText = await response.text();
      throw new Error(`MailChannels API error (${response.status}): ${errorText}`);
    }
  });
}

// src/email/providers/resend.ts
function createResendEmailProvider() {
  return createEmailProviderBase("resend", async (options) => {
    const { apiKey, to, from, template } = options;
    const response = await fetch("https://api.resend.com/emails", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`
      },
      body: JSON.stringify({
        from,
        to,
        subject: template.subject,
        html: template.html,
        text: template.text
      })
    });
    if (!response.ok) {
      const errorText = await response.text();
      throw new Error(`Resend API error (${response.status}): ${errorText}`);
    }
  });
}

// src/email/providers/test-mock.ts
import { logger as logger4 } from "@ycore/forge/logger";
import { err as err4 } from "@ycore/forge/result";
var sentEmails = [];
var shouldFail = false;
var failureReason = "Simulated email failure";
function createTestMockEmailProvider() {
  return {
    async sendEmail(options) {
      const { to, from, template } = options;
      if (!from) {
        return err4("From address is required");
      }
      sentEmails.push({
        to,
        from,
        template: {
          subject: template.subject,
          html: template.html,
          text: template.text
        }
      });
      if (shouldFail) {
        return err4(failureReason);
      }
      const baseProvider = createEmailProviderBase("test-mock", async (opts) => {
        await new Promise((resolve) => setTimeout(resolve, EMAIL_PROVIDER_DELAYS.TEST_MOCK));
        logger4.debug("email_test_mock_sent", {
          provider: "test-mock",
          from: opts.from,
          to: opts.to,
          subject: opts.template.subject,
          textLength: opts.template.text.length,
          htmlLength: opts.template.html.length
        });
      });
      return baseProvider.sendEmail(options);
    }
  };
}

// src/email/email-provider.ts
var providerRegistry = {
  "local-dev": createLocalDevEmailProvider,
  mailchannels: createMailChannelsEmailProvider,
  resend: createResendEmailProvider,
  "test-mock": createTestMockEmailProvider
};
function createEmailProvider(providerName) {
  if (!isValidProvider(providerName)) {
    return err5(`Unsupported email provider: ${providerName}`);
  }
  try {
    const factory = providerRegistry[providerName];
    const provider = factory();
    return ok3(provider);
  } catch (error) {
    return err5(`Failed to create email provider: ${providerName}`, undefined, { cause: error });
  }
}
function isValidProvider(providerName) {
  return providerName in providerRegistry;
}
function getProviderConfig(emailConfig, providerName) {
  return emailConfig.providers.find((provider) => provider.name === providerName);
}

// src/email/server/email.service.ts
async function sendMail(context, options) {
  try {
    const { to, template, from: optionsFrom, provider: optionsProvider, apiKey: optionsApiKey } = options;
    const emailConfig = getContext3(context, emailContext, null);
    const provider = optionsProvider || emailConfig?.active || defaultEmailConfig.active;
    if (!provider) {
      logger5.error("email_no_provider", { optionsProvider, contextActive: emailConfig?.active, defaultActive: defaultEmailConfig.active, to });
      return err6("No email provider configured");
    }
    const providerConfig = emailConfig && getProviderConfig(emailConfig, provider) || getProviderConfig(defaultEmailConfig, provider);
    if (!providerConfig) {
      logger5.error("email_provider_config_missing", { provider, to, contextProviders: emailConfig?.providers.map((p) => p.name) });
      return err6(`Provider configuration not found for: ${provider}`);
    }
    let apiKey = optionsApiKey;
    if (!apiKey && providerConfig.apiKey) {
      const bindings = getBindings2(context);
      apiKey = bindings[providerConfig.apiKey];
    }
    const from = optionsFrom || providerConfig.sendFrom;
    const emailProviderResult = createEmailProvider(provider);
    if (isError3(emailProviderResult)) {
      logger5.error("email_provider_creation_failed", { provider, to, error: flattenError(emailProviderResult) });
      return emailProviderResult;
    }
    const sendResult = await emailProviderResult.sendEmail({
      apiKey: apiKey || "",
      to,
      from,
      template: {
        subject: template.subject,
        text: template.text,
        html: template.html
      }
    });
    if (isError3(sendResult)) {
      logger5.error("email_send_failed", { to, from, provider, error: flattenError(sendResult) });
      return sendResult;
    }
    return ok4(undefined);
  } catch (error) {
    logger5.error("email_send_unexpected_error", { to: options.to, error });
    return err6("Failed to send email", { error });
  }
}
// ../../node_modules/.bun/@react-email+body@0.1.0+2f44e903108183df/node_modules/@react-email/body/dist/index.mjs
import * as React from "react";
import { jsx } from "react/jsx-runtime";
var __defProp2 = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp2 = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => (key in obj) ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp2.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp2.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var Body = React.forwardRef((_a, ref) => {
  var _b = _a, { children, style } = _b, props = __objRest(_b, ["children", "style"]);
  return /* @__PURE__ */ jsx("body", __spreadProps(__spreadValues({}, props), {
    style: {
      background: style == null ? undefined : style.background,
      backgroundColor: style == null ? undefined : style.backgroundColor
    },
    ref,
    children: /* @__PURE__ */ jsx("table", {
      border: 0,
      width: "100%",
      cellPadding: "0",
      cellSpacing: "0",
      role: "presentation",
      align: "center",
      children: /* @__PURE__ */ jsx("tbody", { children: /* @__PURE__ */ jsx("tr", { children: /* @__PURE__ */ jsx("td", { style, children }) }) })
    })
  }));
});
Body.displayName = "Body";

// ../../node_modules/.bun/@react-email+container@0.0.15+2f44e903108183df/node_modules/@react-email/container/dist/index.mjs
import * as React2 from "react";
import { jsx as jsx2 } from "react/jsx-runtime";
var __defProp3 = Object.defineProperty;
var __defProps2 = Object.defineProperties;
var __getOwnPropDescs2 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols2 = Object.getOwnPropertySymbols;
var __hasOwnProp3 = Object.prototype.hasOwnProperty;
var __propIsEnum2 = Object.prototype.propertyIsEnumerable;
var __defNormalProp2 = (obj, key, value) => (key in obj) ? __defProp3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues2 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp3.call(b, prop))
      __defNormalProp2(a, prop, b[prop]);
  if (__getOwnPropSymbols2)
    for (var prop of __getOwnPropSymbols2(b)) {
      if (__propIsEnum2.call(b, prop))
        __defNormalProp2(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps2 = (a, b) => __defProps2(a, __getOwnPropDescs2(b));
var __objRest2 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp3.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols2)
    for (var prop of __getOwnPropSymbols2(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum2.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var Container = React2.forwardRef((_a, ref) => {
  var _b = _a, { children, style } = _b, props = __objRest2(_b, ["children", "style"]);
  return /* @__PURE__ */ jsx2("table", __spreadProps2(__spreadValues2({
    align: "center",
    width: "100%"
  }, props), {
    border: 0,
    cellPadding: "0",
    cellSpacing: "0",
    ref,
    role: "presentation",
    style: __spreadValues2({ maxWidth: "37.5em" }, style),
    children: /* @__PURE__ */ jsx2("tbody", { children: /* @__PURE__ */ jsx2("tr", { style: { width: "100%" }, children: /* @__PURE__ */ jsx2("td", { children }) }) })
  }));
});
Container.displayName = "Container";

// ../../node_modules/.bun/@react-email+head@0.0.12+2f44e903108183df/node_modules/@react-email/head/dist/index.mjs
import * as React3 from "react";
import { jsx as jsx3, jsxs } from "react/jsx-runtime";
var __defProp4 = Object.defineProperty;
var __defProps3 = Object.defineProperties;
var __getOwnPropDescs3 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols3 = Object.getOwnPropertySymbols;
var __hasOwnProp4 = Object.prototype.hasOwnProperty;
var __propIsEnum3 = Object.prototype.propertyIsEnumerable;
var __defNormalProp3 = (obj, key, value) => (key in obj) ? __defProp4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues3 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp4.call(b, prop))
      __defNormalProp3(a, prop, b[prop]);
  if (__getOwnPropSymbols3)
    for (var prop of __getOwnPropSymbols3(b)) {
      if (__propIsEnum3.call(b, prop))
        __defNormalProp3(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps3 = (a, b) => __defProps3(a, __getOwnPropDescs3(b));
var __objRest3 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp4.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols3)
    for (var prop of __getOwnPropSymbols3(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum3.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var Head = React3.forwardRef((_a, ref) => {
  var _b = _a, { children } = _b, props = __objRest3(_b, ["children"]);
  return /* @__PURE__ */ jsxs("head", __spreadProps3(__spreadValues3({}, props), { ref, children: [
    /* @__PURE__ */ jsx3("meta", { content: "text/html; charset=UTF-8", httpEquiv: "Content-Type" }),
    /* @__PURE__ */ jsx3("meta", { name: "x-apple-disable-message-reformatting" }),
    children
  ] }));
});
Head.displayName = "Head";

// ../../node_modules/.bun/@react-email+heading@0.0.15+2f44e903108183df/node_modules/@react-email/heading/dist/index.mjs
import * as React4 from "react";
import { jsx as jsx4 } from "react/jsx-runtime";
var __defProp5 = Object.defineProperty;
var __defProps4 = Object.defineProperties;
var __getOwnPropDescs4 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols4 = Object.getOwnPropertySymbols;
var __hasOwnProp5 = Object.prototype.hasOwnProperty;
var __propIsEnum4 = Object.prototype.propertyIsEnumerable;
var __defNormalProp4 = (obj, key, value) => (key in obj) ? __defProp5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues4 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp5.call(b, prop))
      __defNormalProp4(a, prop, b[prop]);
  if (__getOwnPropSymbols4)
    for (var prop of __getOwnPropSymbols4(b)) {
      if (__propIsEnum4.call(b, prop))
        __defNormalProp4(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps4 = (a, b) => __defProps4(a, __getOwnPropDescs4(b));
var __objRest4 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp5.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols4)
    for (var prop of __getOwnPropSymbols4(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum4.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var withMargin = (props) => {
  const nonEmptyStyles = [
    withSpace(props.m, ["margin"]),
    withSpace(props.mx, ["marginLeft", "marginRight"]),
    withSpace(props.my, ["marginTop", "marginBottom"]),
    withSpace(props.mt, ["marginTop"]),
    withSpace(props.mr, ["marginRight"]),
    withSpace(props.mb, ["marginBottom"]),
    withSpace(props.ml, ["marginLeft"])
  ].filter((s) => Object.keys(s).length);
  const mergedStyles = nonEmptyStyles.reduce((acc, style) => {
    return __spreadValues4(__spreadValues4({}, acc), style);
  }, {});
  return mergedStyles;
};
var withSpace = (value, properties) => {
  return properties.reduce((styles, property) => {
    if (!isNaN(parseFloat(value))) {
      return __spreadProps4(__spreadValues4({}, styles), { [property]: `${value}px` });
    }
    return styles;
  }, {});
};
var Heading = React4.forwardRef((_a, ref) => {
  var _b = _a, { as: Tag = "h1", children, style, m, mx, my, mt, mr, mb, ml } = _b, props = __objRest4(_b, ["as", "children", "style", "m", "mx", "my", "mt", "mr", "mb", "ml"]);
  return /* @__PURE__ */ jsx4(Tag, __spreadProps4(__spreadValues4({}, props), {
    ref,
    style: __spreadValues4(__spreadValues4({}, withMargin({ m, mx, my, mt, mr, mb, ml })), style),
    children
  }));
});
Heading.displayName = "Heading";

// ../../node_modules/.bun/@react-email+html@0.0.11+2f44e903108183df/node_modules/@react-email/html/dist/index.mjs
import * as React5 from "react";
import { jsx as jsx5 } from "react/jsx-runtime";
var __defProp6 = Object.defineProperty;
var __defProps5 = Object.defineProperties;
var __getOwnPropDescs5 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols5 = Object.getOwnPropertySymbols;
var __hasOwnProp6 = Object.prototype.hasOwnProperty;
var __propIsEnum5 = Object.prototype.propertyIsEnumerable;
var __defNormalProp5 = (obj, key, value) => (key in obj) ? __defProp6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues5 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp6.call(b, prop))
      __defNormalProp5(a, prop, b[prop]);
  if (__getOwnPropSymbols5)
    for (var prop of __getOwnPropSymbols5(b)) {
      if (__propIsEnum5.call(b, prop))
        __defNormalProp5(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps5 = (a, b) => __defProps5(a, __getOwnPropDescs5(b));
var __objRest5 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp6.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols5)
    for (var prop of __getOwnPropSymbols5(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum5.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var Html = React5.forwardRef((_a, ref) => {
  var _b = _a, { children, lang = "en", dir = "ltr" } = _b, props = __objRest5(_b, ["children", "lang", "dir"]);
  return /* @__PURE__ */ jsx5("html", __spreadProps5(__spreadValues5({}, props), { dir, lang, ref, children }));
});
Html.displayName = "Html";

// ../../node_modules/.bun/@react-email+link@0.0.12+2f44e903108183df/node_modules/@react-email/link/dist/index.mjs
import * as React6 from "react";
import { jsx as jsx6 } from "react/jsx-runtime";
var __defProp7 = Object.defineProperty;
var __defProps6 = Object.defineProperties;
var __getOwnPropDescs6 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols6 = Object.getOwnPropertySymbols;
var __hasOwnProp7 = Object.prototype.hasOwnProperty;
var __propIsEnum6 = Object.prototype.propertyIsEnumerable;
var __defNormalProp6 = (obj, key, value) => (key in obj) ? __defProp7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues6 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp7.call(b, prop))
      __defNormalProp6(a, prop, b[prop]);
  if (__getOwnPropSymbols6)
    for (var prop of __getOwnPropSymbols6(b)) {
      if (__propIsEnum6.call(b, prop))
        __defNormalProp6(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps6 = (a, b) => __defProps6(a, __getOwnPropDescs6(b));
var __objRest6 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp7.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols6)
    for (var prop of __getOwnPropSymbols6(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum6.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var Link = React6.forwardRef((_a, ref) => {
  var _b = _a, { target = "_blank", style } = _b, props = __objRest6(_b, ["target", "style"]);
  return /* @__PURE__ */ jsx6("a", __spreadProps6(__spreadValues6({}, props), {
    ref,
    style: __spreadValues6({
      color: "#067df7",
      textDecorationLine: "none"
    }, style),
    target,
    children: props.children
  }));
});
Link.displayName = "Link";

// ../../node_modules/.bun/@react-email+render@1.4.0+2b5434204782a989/node_modules/@react-email/render/dist/browser/index.mjs
import { Suspense } from "react";

// ../../node_modules/.bun/prettier@3.6.2/node_modules/prettier/plugins/html.mjs
var exports_html = {};
__export(exports_html, {
  printers: () => uu,
  parsers: () => tn,
  options: () => Us,
  languages: () => Hs,
  default: () => ym
});
var on = Object.defineProperty;
var un = (t) => {
  throw TypeError(t);
};
var Ai = (t, e, r) => (e in t) ? on(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r;
var ln = (t, e) => {
  for (var r in e)
    on(t, r, { get: e[r], enumerable: true });
};
var lr = (t, e, r) => Ai(t, typeof e != "symbol" ? e + "" : e, r);
var cn = (t, e, r) => e.has(t) || un("Cannot " + r);
var R = (t, e, r) => (cn(t, e, "read from private field"), r ? r.call(t) : e.get(t));
var At = (t, e, r) => e.has(t) ? un("Cannot add the same private member more than once") : e instanceof WeakSet ? e.add(t) : e.set(t, r);
var pn = (t, e, r, n) => (cn(t, e, "write to private field"), n ? n.call(t, r) : e.set(t, r), r);
var rn = {};
ln(rn, { languages: () => Hs, options: () => Us, parsers: () => tn, printers: () => uu });
var Di = (t, e, r, n) => {
  if (!(t && e == null))
    return e.replaceAll ? e.replaceAll(r, n) : r.global ? e.replace(r, n) : e.split(r).join(n);
};
var w = Di;
var we = "string";
var ze = "array";
var Ye = "cursor";
var be = "indent";
var Te = "align";
var je = "trim";
var xe = "group";
var ke = "fill";
var ce = "if-break";
var Be = "indent-if-break";
var Ke = "line-suffix";
var Xe = "line-suffix-boundary";
var j = "line";
var Qe = "label";
var Le = "break-parent";
var Dt = new Set([Ye, be, Te, je, xe, ke, ce, Be, Ke, Xe, j, Qe, Le]);
var vi = (t, e, r) => {
  if (!(t && e == null))
    return Array.isArray(e) || typeof e == "string" ? e[r < 0 ? e.length + r : r] : e.at(r);
};
var K = vi;
function yi(t) {
  if (typeof t == "string")
    return we;
  if (Array.isArray(t))
    return ze;
  if (!t)
    return;
  let { type: e } = t;
  if (Dt.has(e))
    return e;
}
var Fe = yi;
var wi = (t) => new Intl.ListFormat("en-US", { type: "disjunction" }).format(t);
function bi(t) {
  let e = t === null ? "null" : typeof t;
  if (e !== "string" && e !== "object")
    return `Unexpected doc '${e}', 
Expected it to be 'string' or 'object'.`;
  if (Fe(t))
    throw new Error("doc is valid.");
  let r = Object.prototype.toString.call(t);
  if (r !== "[object Object]")
    return `Unexpected doc '${r}'.`;
  let n = wi([...Dt].map((s) => `'${s}'`));
  return `Unexpected doc.type '${t.type}'.
Expected it to be ${n}.`;
}
var cr = class extends Error {
  name = "InvalidDocError";
  constructor(e) {
    super(bi(e)), this.doc = e;
  }
};
var pr = cr;
function hr(t, e) {
  if (typeof t == "string")
    return e(t);
  let r = new Map;
  return n(t);
  function n(i) {
    if (r.has(i))
      return r.get(i);
    let a = s(i);
    return r.set(i, a), a;
  }
  function s(i) {
    switch (Fe(i)) {
      case ze:
        return e(i.map(n));
      case ke:
        return e({ ...i, parts: i.parts.map(n) });
      case ce:
        return e({ ...i, breakContents: n(i.breakContents), flatContents: n(i.flatContents) });
      case xe: {
        let { expandedStates: a, contents: o } = i;
        return a ? (a = a.map(n), o = a[0]) : o = n(o), e({ ...i, contents: o, expandedStates: a });
      }
      case Te:
      case be:
      case Be:
      case Qe:
      case Ke:
        return e({ ...i, contents: n(i.contents) });
      case we:
      case Ye:
      case je:
      case Xe:
      case j:
      case Le:
        return e(i);
      default:
        throw new pr(i);
    }
  }
}
function B(t, e = hn) {
  return hr(t, (r) => typeof r == "string" ? H(e, r.split(`
`)) : r);
}
var mr = () => {};
var re = mr;
var fr = mr;
var mn = mr;
function k(t) {
  return re(t), { type: be, contents: t };
}
function fn(t, e) {
  return re(e), { type: Te, contents: e, n: t };
}
function E(t, e = {}) {
  return re(t), fr(e.expandedStates, true), { type: xe, id: e.id, contents: t, break: !!e.shouldBreak, expandedStates: e.expandedStates };
}
function dn(t) {
  return fn(Number.NEGATIVE_INFINITY, t);
}
function gn(t) {
  return fn({ type: "root" }, t);
}
function vt(t) {
  return mn(t), { type: ke, parts: t };
}
function pe(t, e = "", r = {}) {
  return re(t), e !== "" && re(e), { type: ce, breakContents: t, flatContents: e, groupId: r.groupId };
}
function Cn(t, e) {
  return re(t), { type: Be, contents: t, groupId: e.groupId, negate: e.negate };
}
var ne = { type: Le };
var xi = { type: j, hard: true };
var ki = { type: j, hard: true, literal: true };
var _ = { type: j };
var v = { type: j, soft: true };
var S = [xi, ne];
var hn = [ki, ne];
function H(t, e) {
  re(t), fr(e);
  let r = [];
  for (let n = 0;n < e.length; n++)
    n !== 0 && r.push(t), r.push(e[n]);
  return r;
}
var yt = "'";
var Sn = '"';
function Bi(t, e) {
  let r = e === true || e === yt ? yt : Sn, n = r === yt ? Sn : yt, s = 0, i = 0;
  for (let a of t)
    a === r ? s++ : a === n && i++;
  return s > i ? n : r;
}
var _n = Bi;
function dr(t) {
  if (typeof t != "string")
    throw new TypeError("Expected a string");
  return t.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
var V;
var gr = class {
  constructor(e) {
    At(this, V);
    pn(this, V, new Set(e));
  }
  getLeadingWhitespaceCount(e) {
    let r = R(this, V), n = 0;
    for (let s = 0;s < e.length && r.has(e.charAt(s)); s++)
      n++;
    return n;
  }
  getTrailingWhitespaceCount(e) {
    let r = R(this, V), n = 0;
    for (let s = e.length - 1;s >= 0 && r.has(e.charAt(s)); s--)
      n++;
    return n;
  }
  getLeadingWhitespace(e) {
    let r = this.getLeadingWhitespaceCount(e);
    return e.slice(0, r);
  }
  getTrailingWhitespace(e) {
    let r = this.getTrailingWhitespaceCount(e);
    return e.slice(e.length - r);
  }
  hasLeadingWhitespace(e) {
    return R(this, V).has(e.charAt(0));
  }
  hasTrailingWhitespace(e) {
    return R(this, V).has(K(false, e, -1));
  }
  trimStart(e) {
    let r = this.getLeadingWhitespaceCount(e);
    return e.slice(r);
  }
  trimEnd(e) {
    let r = this.getTrailingWhitespaceCount(e);
    return e.slice(0, e.length - r);
  }
  trim(e) {
    return this.trimEnd(this.trimStart(e));
  }
  split(e, r = false) {
    let n = `[${dr([...R(this, V)].join(""))}]+`, s = new RegExp(r ? `(${n})` : n, "u");
    return e.split(s);
  }
  hasWhitespaceCharacter(e) {
    let r = R(this, V);
    return Array.prototype.some.call(e, (n) => r.has(n));
  }
  hasNonWhitespaceCharacter(e) {
    let r = R(this, V);
    return Array.prototype.some.call(e, (n) => !r.has(n));
  }
  isWhitespaceOnly(e) {
    let r = R(this, V);
    return Array.prototype.every.call(e, (n) => r.has(n));
  }
};
V = new WeakMap;
var En = gr;
var Li = ["\t", `
`, "\f", "\r", " "];
var Fi = new En(Li);
var O = Fi;
var Cr = class extends Error {
  name = "UnexpectedNodeError";
  constructor(e, r, n = "type") {
    super(`Unexpected ${r} node ${n}: ${JSON.stringify(e[n])}.`), this.node = e;
  }
};
var An = Cr;
function Pi(t) {
  return (t == null ? undefined : t.type) === "front-matter";
}
var Pe = Pi;
var Ni = new Set(["sourceSpan", "startSourceSpan", "endSourceSpan", "nameSpan", "valueSpan", "keySpan", "tagDefinition", "tokens", "valueTokens", "switchValueSourceSpan", "expSourceSpan", "valueSourceSpan"]);
var Ii = new Set(["if", "else if", "for", "switch", "case"]);
function Dn(t, e) {
  var r;
  if (t.type === "text" || t.type === "comment" || Pe(t) || t.type === "yaml" || t.type === "toml")
    return null;
  if (t.type === "attribute" && delete e.value, t.type === "docType" && delete e.value, t.type === "angularControlFlowBlock" && ((r = t.parameters) != null && r.children))
    for (let n of e.parameters.children)
      Ii.has(t.name) ? delete n.expression : n.expression = n.expression.trim();
  t.type === "angularIcuExpression" && (e.switchValue = t.switchValue.trim()), t.type === "angularLetDeclarationInitializer" && delete e.value;
}
Dn.ignoredProperties = Ni;
var vn = Dn;
async function Ri(t, e) {
  if (t.language === "yaml") {
    let r = t.value.trim(), n = r ? await e(r, { parser: "yaml" }) : "";
    return gn([t.startDelimiter, t.explicitLanguage, S, n, n ? S : "", t.endDelimiter]);
  }
}
var yn = Ri;
function he(t, e = true) {
  return [k([v, t]), e ? v : ""];
}
function X(t, e) {
  let r = t.type === "NGRoot" ? t.node.type === "NGMicrosyntax" && t.node.body.length === 1 && t.node.body[0].type === "NGMicrosyntaxExpression" ? t.node.body[0].expression : t.node : t.type === "JsExpressionRoot" ? t.node : t;
  return r && (r.type === "ObjectExpression" || r.type === "ArrayExpression" || (e.parser === "__vue_expression" || e.parser === "__vue_ts_expression") && (r.type === "TemplateLiteral" || r.type === "StringLiteral"));
}
async function T(t, e, r, n) {
  r = { __isInHtmlAttribute: true, __embeddedInHtml: true, ...r };
  let s = true;
  n && (r.__onHtmlBindingRoot = (a, o) => {
    s = n(a, o);
  });
  let i = await e(t, r, e);
  return s ? E(i) : he(i);
}
function $i(t, e, r, n) {
  let { node: s } = r, i = n.originalText.slice(s.sourceSpan.start.offset, s.sourceSpan.end.offset);
  return /^\s*$/u.test(i) ? "" : T(i, t, { parser: "__ng_directive", __isInHtmlAttribute: false }, X);
}
var wn = $i;
var Oi = (t, e) => {
  if (!(t && e == null))
    return e.toReversed || !Array.isArray(e) ? e.toReversed() : [...e].reverse();
};
var bn = Oi;
function Mi(t) {
  return Array.isArray(t) && t.length > 0;
}
var me = Mi;
var Tn;
var xn;
var kn;
var Bn;
var Ln;
var qi = ((Tn = globalThis.Deno) == null ? undefined : Tn.build.os) === "windows" || ((kn = (xn = globalThis.navigator) == null ? undefined : xn.platform) == null ? undefined : kn.startsWith("Win")) || ((Ln = (Bn = globalThis.process) == null ? undefined : Bn.platform) == null ? undefined : Ln.startsWith("win")) || false;
function Fn(t) {
  if (t = t instanceof URL ? t : new URL(t), t.protocol !== "file:")
    throw new TypeError(`URL must be a file URL: received "${t.protocol}"`);
  return t;
}
function Hi(t) {
  return t = Fn(t), decodeURIComponent(t.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
}
function Vi(t) {
  t = Fn(t);
  let e = decodeURIComponent(t.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
  return t.hostname !== "" && (e = `\\\\${t.hostname}${e}`), e;
}
function Pn(t) {
  return qi ? Vi(t) : Hi(t);
}
var Nn = Pn;
var Ui = (t) => String(t).split(/[/\\]/u).pop();
function In(t, e) {
  if (!e)
    return;
  let r = Ui(e).toLowerCase();
  return t.find(({ filenames: n }) => n == null ? undefined : n.some((s) => s.toLowerCase() === r)) ?? t.find(({ extensions: n }) => n == null ? undefined : n.some((s) => r.endsWith(s)));
}
function Wi(t, e) {
  if (e)
    return t.find(({ name: r }) => r.toLowerCase() === e) ?? t.find(({ aliases: r }) => r == null ? undefined : r.includes(e)) ?? t.find(({ extensions: r }) => r == null ? undefined : r.includes(`.${e}`));
}
function Rn(t, e) {
  if (e) {
    if (String(e).startsWith("file:"))
      try {
        e = Nn(e);
      } catch {
        return;
      }
    if (typeof e == "string")
      return t.find(({ isSupported: r }) => r == null ? undefined : r({ filepath: e }));
  }
}
function Gi(t, e) {
  let r = bn(false, t.plugins).flatMap((s) => s.languages ?? []), n = Wi(r, e.language) ?? In(r, e.physicalFile) ?? In(r, e.file) ?? Rn(r, e.physicalFile) ?? Rn(r, e.file) ?? (e.physicalFile, undefined);
  return n == null ? undefined : n.parsers[0];
}
var Ne = Gi;
var $n = "inline";
var Sr = { area: "none", base: "none", basefont: "none", datalist: "none", head: "none", link: "none", meta: "none", noembed: "none", noframes: "none", param: "block", rp: "none", script: "block", style: "none", template: "inline", title: "none", html: "block", body: "block", address: "block", blockquote: "block", center: "block", dialog: "block", div: "block", figure: "block", figcaption: "block", footer: "block", form: "block", header: "block", hr: "block", legend: "block", listing: "block", main: "block", p: "block", plaintext: "block", pre: "block", search: "block", xmp: "block", slot: "contents", ruby: "ruby", rt: "ruby-text", article: "block", aside: "block", h1: "block", h2: "block", h3: "block", h4: "block", h5: "block", h6: "block", hgroup: "block", nav: "block", section: "block", dir: "block", dd: "block", dl: "block", dt: "block", menu: "block", ol: "block", ul: "block", li: "list-item", table: "table", caption: "table-caption", colgroup: "table-column-group", col: "table-column", thead: "table-header-group", tbody: "table-row-group", tfoot: "table-footer-group", tr: "table-row", td: "table-cell", th: "table-cell", input: "inline-block", button: "inline-block", fieldset: "block", details: "block", summary: "block", marquee: "inline-block", source: "block", track: "block", meter: "inline-block", progress: "inline-block", object: "inline-block", video: "inline-block", audio: "inline-block", select: "inline-block", option: "block", optgroup: "block" };
var On = "normal";
var _r = { listing: "pre", plaintext: "pre", pre: "pre", xmp: "pre", nobr: "nowrap", table: "initial", textarea: "pre-wrap" };
function zi(t) {
  return t.type === "element" && !t.hasExplicitNamespace && !["html", "svg"].includes(t.namespace);
}
var fe = zi;
var Yi = (t) => w(false, t, /^[\t\f\r ]*\n/gu, "");
var Er = (t) => Yi(O.trimEnd(t));
var Mn = (t) => {
  let e = t, r = O.getLeadingWhitespace(e);
  r && (e = e.slice(r.length));
  let n = O.getTrailingWhitespace(e);
  return n && (e = e.slice(0, -n.length)), { leadingWhitespace: r, trailingWhitespace: n, text: e };
};
function wt(t, e) {
  return !!(t.type === "ieConditionalComment" && t.lastChild && !t.lastChild.isSelfClosing && !t.lastChild.endSourceSpan || t.type === "ieConditionalComment" && !t.complete || de(t) && t.children.some((r) => r.type !== "text" && r.type !== "interpolation") || xt(t, e) && !W(t, e) && t.type !== "interpolation");
}
function ge(t) {
  return t.type === "attribute" || !t.parent || !t.prev ? false : ji(t.prev);
}
function ji(t) {
  return t.type === "comment" && t.value.trim() === "prettier-ignore";
}
function $(t) {
  return t.type === "text" || t.type === "comment";
}
function W(t, e) {
  return t.type === "element" && (t.fullName === "script" || t.fullName === "style" || t.fullName === "svg:style" || t.fullName === "svg:script" || t.fullName === "mj-style" && e.parser === "mjml" || fe(t) && (t.name === "script" || t.name === "style"));
}
function qn(t, e) {
  return t.children && !W(t, e);
}
function Hn(t, e) {
  return W(t, e) || t.type === "interpolation" || Ar(t);
}
function Ar(t) {
  return Jn(t).startsWith("pre");
}
function Vn(t, e) {
  var s, i;
  let r = n();
  if (r && !t.prev && ((i = (s = t.parent) == null ? undefined : s.tagDefinition) != null && i.ignoreFirstLf))
    return t.type === "interpolation";
  return r;
  function n() {
    return Pe(t) || t.type === "angularControlFlowBlock" ? false : (t.type === "text" || t.type === "interpolation") && t.prev && (t.prev.type === "text" || t.prev.type === "interpolation") ? true : !t.parent || t.parent.cssDisplay === "none" ? false : de(t.parent) ? true : !(!t.prev && (t.parent.type === "root" || de(t) && t.parent || W(t.parent, e) || et(t.parent, e) || !ea(t.parent.cssDisplay)) || t.prev && !na(t.prev.cssDisplay));
  }
}
function Un(t, e) {
  return Pe(t) || t.type === "angularControlFlowBlock" ? false : (t.type === "text" || t.type === "interpolation") && t.next && (t.next.type === "text" || t.next.type === "interpolation") ? true : !t.parent || t.parent.cssDisplay === "none" ? false : de(t.parent) ? true : !(!t.next && (t.parent.type === "root" || de(t) && t.parent || W(t.parent, e) || et(t.parent, e) || !ta(t.parent.cssDisplay)) || t.next && !ra(t.next.cssDisplay));
}
function Wn(t, e) {
  return sa(t.cssDisplay) && !W(t, e);
}
function Je(t) {
  return Pe(t) || t.next && t.sourceSpan.end && t.sourceSpan.end.line + 1 < t.next.sourceSpan.start.line;
}
function Gn(t) {
  return Dr(t) || t.type === "element" && t.children.length > 0 && (["body", "script", "style"].includes(t.name) || t.children.some((e) => Xi(e))) || t.firstChild && t.firstChild === t.lastChild && t.firstChild.type !== "text" && Yn(t.firstChild) && (!t.lastChild.isTrailingSpaceSensitive || jn(t.lastChild));
}
function Dr(t) {
  return t.type === "element" && t.children.length > 0 && (["html", "head", "ul", "ol", "select"].includes(t.name) || t.cssDisplay.startsWith("table") && t.cssDisplay !== "table-cell");
}
function bt(t) {
  return Kn(t) || t.prev && Ki(t.prev) || zn(t);
}
function Ki(t) {
  return Kn(t) || t.type === "element" && t.fullName === "br" || zn(t);
}
function zn(t) {
  return Yn(t) && jn(t);
}
function Yn(t) {
  return t.hasLeadingSpaces && (t.prev ? t.prev.sourceSpan.end.line < t.sourceSpan.start.line : t.parent.type === "root" || t.parent.startSourceSpan.end.line < t.sourceSpan.start.line);
}
function jn(t) {
  return t.hasTrailingSpaces && (t.next ? t.next.sourceSpan.start.line > t.sourceSpan.end.line : t.parent.type === "root" || t.parent.endSourceSpan && t.parent.endSourceSpan.start.line > t.sourceSpan.end.line);
}
function Kn(t) {
  switch (t.type) {
    case "ieConditionalComment":
    case "comment":
    case "directive":
      return true;
    case "element":
      return ["script", "select"].includes(t.name);
  }
  return false;
}
function Tt(t) {
  return t.lastChild ? Tt(t.lastChild) : t;
}
function Xi(t) {
  var e;
  return (e = t.children) == null ? undefined : e.some((r) => r.type !== "text");
}
function Xn(t) {
  if (t)
    switch (t) {
      case "module":
      case "text/javascript":
      case "text/babel":
      case "text/jsx":
      case "application/javascript":
        return "babel";
      case "application/x-typescript":
        return "typescript";
      case "text/markdown":
        return "markdown";
      case "text/html":
        return "html";
      case "text/x-handlebars-template":
        return "glimmer";
      default:
        if (t.endsWith("json") || t.endsWith("importmap") || t === "speculationrules")
          return "json";
    }
}
function Qi(t, e) {
  let { name: r, attrMap: n } = t;
  if (r !== "script" || Object.prototype.hasOwnProperty.call(n, "src"))
    return;
  let { type: s, lang: i } = t.attrMap;
  return !i && !s ? "babel" : Ne(e, { language: i }) ?? Xn(s);
}
function Ji(t, e) {
  if (!xt(t, e))
    return;
  let { attrMap: r } = t;
  if (Object.prototype.hasOwnProperty.call(r, "src"))
    return;
  let { type: n, lang: s } = r;
  return Ne(e, { language: s }) ?? Xn(n);
}
function Zi(t, e) {
  if (t.name === "style") {
    let { lang: r } = t.attrMap;
    return r ? Ne(e, { language: r }) : "css";
  }
  if (t.name === "mj-style" && e.parser === "mjml")
    return "css";
}
function vr(t, e) {
  return Qi(t, e) ?? Zi(t, e) ?? Ji(t, e);
}
function Ze(t) {
  return t === "block" || t === "list-item" || t.startsWith("table");
}
function ea(t) {
  return !Ze(t) && t !== "inline-block";
}
function ta(t) {
  return !Ze(t) && t !== "inline-block";
}
function ra(t) {
  return !Ze(t);
}
function na(t) {
  return !Ze(t);
}
function sa(t) {
  return !Ze(t) && t !== "inline-block";
}
function de(t) {
  return Jn(t).startsWith("pre");
}
function ia(t, e) {
  let r = t;
  for (;r; ) {
    if (e(r))
      return true;
    r = r.parent;
  }
  return false;
}
function Qn(t, e) {
  var n;
  if (Ce(t, e))
    return "block";
  if (((n = t.prev) == null ? undefined : n.type) === "comment") {
    let s = t.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/u);
    if (s)
      return s[1];
  }
  let r = false;
  if (t.type === "element" && t.namespace === "svg")
    if (ia(t, (s) => s.fullName === "svg:foreignObject"))
      r = true;
    else
      return t.name === "svg" ? "inline-block" : "block";
  switch (e.htmlWhitespaceSensitivity) {
    case "strict":
      return "inline";
    case "ignore":
      return "block";
    default:
      if (t.type === "element" && (!t.namespace || r || fe(t)) && Object.prototype.hasOwnProperty.call(Sr, t.name))
        return Sr[t.name];
  }
  return $n;
}
function Jn(t) {
  return t.type === "element" && (!t.namespace || fe(t)) && Object.prototype.hasOwnProperty.call(_r, t.name) ? _r[t.name] : On;
}
function aa(t) {
  let e = Number.POSITIVE_INFINITY;
  for (let r of t.split(`
`)) {
    if (r.length === 0)
      continue;
    let n = O.getLeadingWhitespaceCount(r);
    if (n === 0)
      return 0;
    r.length !== n && n < e && (e = n);
  }
  return e === Number.POSITIVE_INFINITY ? 0 : e;
}
function yr(t, e = aa(t)) {
  return e === 0 ? t : t.split(`
`).map((r) => r.slice(e)).join(`
`);
}
function wr(t) {
  return w(false, w(false, t, "&apos;", "'"), "&quot;", '"');
}
function P(t) {
  return wr(t.value);
}
var oa = new Set(["template", "style", "script"]);
function et(t, e) {
  return Ce(t, e) && !oa.has(t.fullName);
}
function Ce(t, e) {
  return e.parser === "vue" && t.type === "element" && t.parent.type === "root" && t.fullName.toLowerCase() !== "html";
}
function xt(t, e) {
  return Ce(t, e) && (et(t, e) || t.attrMap.lang && t.attrMap.lang !== "html");
}
function Zn(t) {
  let e = t.fullName;
  return e.charAt(0) === "#" || e === "slot-scope" || e === "v-slot" || e.startsWith("v-slot:");
}
function es(t, e) {
  let r = t.parent;
  if (!Ce(r, e))
    return false;
  let n = r.fullName, s = t.fullName;
  return n === "script" && s === "setup" || n === "style" && s === "vars";
}
function kt(t, e = t.value) {
  return t.parent.isWhitespaceSensitive ? t.parent.isIndentationSensitive ? B(e) : B(yr(Er(e)), S) : H(_, O.split(e));
}
function Bt(t, e) {
  return Ce(t, e) && t.name === "script";
}
var br = /\{\{(.+?)\}\}/su;
async function ts(t, e) {
  let r = [];
  for (let [n, s] of t.split(br).entries())
    if (n % 2 === 0)
      r.push(B(s));
    else
      try {
        r.push(E(["{{", k([_, await T(s, e, { parser: "__ng_interpolation", __isInHtmlInterpolation: true })]), _, "}}"]));
      } catch {
        r.push("{{", B(s), "}}");
      }
  return r;
}
function Tr({ parser: t }) {
  return (e, r, n) => T(P(n.node), e, { parser: t }, X);
}
var ua = Tr({ parser: "__ng_action" });
var la = Tr({ parser: "__ng_binding" });
var ca = Tr({ parser: "__ng_directive" });
function pa(t, e) {
  if (e.parser !== "angular")
    return;
  let { node: r } = t, n = r.fullName;
  if (n.startsWith("(") && n.endsWith(")") || n.startsWith("on-"))
    return ua;
  if (n.startsWith("[") && n.endsWith("]") || /^bind(?:on)?-/u.test(n) || /^ng-(?:if|show|hide|class|style)$/u.test(n))
    return la;
  if (n.startsWith("*"))
    return ca;
  let s = P(r);
  if (/^i18n(?:-.+)?$/u.test(n))
    return () => he(vt(kt(r, s.trim())), !s.includes("@@"));
  if (br.test(s))
    return (i) => ts(s, i);
}
var rs = pa;
function ha(t, e) {
  let { node: r } = t, n = P(r);
  if (r.fullName === "class" && !e.parentParser && !n.includes("{{"))
    return () => n.trim().split(/\s+/u).join(" ");
}
var ns = ha;
function ss(t) {
  return t === "\t" || t === `
` || t === "\f" || t === "\r" || t === " ";
}
var ma = /^[ \t\n\r\u000c]+/;
var fa = /^[, \t\n\r\u000c]+/;
var da = /^[^ \t\n\r\u000c]+/;
var ga = /[,]+$/;
var is2 = /^\d+$/;
var Ca = /^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/;
function Sa(t) {
  let e = t.length, r, n, s, i, a, o = 0, u;
  function p(C) {
    let A, D = C.exec(t.substring(o));
    if (D)
      return [A] = D, o += A.length, A;
  }
  let l = [];
  for (;; ) {
    if (p(fa), o >= e) {
      if (l.length === 0)
        throw new Error("Must contain one or more image candidate strings.");
      return l;
    }
    u = o, r = p(da), n = [], r.slice(-1) === "," ? (r = r.replace(ga, ""), f()) : m();
  }
  function m() {
    for (p(ma), s = "", i = "in descriptor";; ) {
      if (a = t.charAt(o), i === "in descriptor")
        if (ss(a))
          s && (n.push(s), s = "", i = "after descriptor");
        else if (a === ",") {
          o += 1, s && n.push(s), f();
          return;
        } else if (a === "(")
          s += a, i = "in parens";
        else if (a === "") {
          s && n.push(s), f();
          return;
        } else
          s += a;
      else if (i === "in parens")
        if (a === ")")
          s += a, i = "in descriptor";
        else if (a === "") {
          n.push(s), f();
          return;
        } else
          s += a;
      else if (i === "after descriptor" && !ss(a))
        if (a === "") {
          f();
          return;
        } else
          i = "in descriptor", o -= 1;
      o += 1;
    }
  }
  function f() {
    let C = false, A, D, I, F, c = {}, g, y, q, x, U;
    for (F = 0;F < n.length; F++)
      g = n[F], y = g[g.length - 1], q = g.substring(0, g.length - 1), x = parseInt(q, 10), U = parseFloat(q), is2.test(q) && y === "w" ? ((A || D) && (C = true), x === 0 ? C = true : A = x) : Ca.test(q) && y === "x" ? ((A || D || I) && (C = true), U < 0 ? C = true : D = U) : is2.test(q) && y === "h" ? ((I || D) && (C = true), x === 0 ? C = true : I = x) : C = true;
    if (!C)
      c.source = { value: r, startOffset: u }, A && (c.width = { value: A }), D && (c.density = { value: D }), I && (c.height = { value: I }), l.push(c);
    else
      throw new Error(`Invalid srcset descriptor found in "${t}" at "${g}".`);
  }
}
var as = Sa;
function _a(t) {
  if (t.node.fullName === "srcset" && (t.parent.fullName === "img" || t.parent.fullName === "source"))
    return () => Aa(P(t.node));
}
var os = { width: "w", height: "h", density: "x" };
var Ea = Object.keys(os);
function Aa(t) {
  let e = as(t), r = Ea.filter((l) => e.some((m) => Object.prototype.hasOwnProperty.call(m, l)));
  if (r.length > 1)
    throw new Error("Mixed descriptor in srcset is not supported");
  let [n] = r, s = os[n], i = e.map((l) => l.source.value), a = Math.max(...i.map((l) => l.length)), o = e.map((l) => l[n] ? String(l[n].value) : ""), u = o.map((l) => {
    let m = l.indexOf(".");
    return m === -1 ? l.length : m;
  }), p = Math.max(...u);
  return he(H([",", _], i.map((l, m) => {
    let f = [l], C = o[m];
    if (C) {
      let A = a - l.length + 1, D = p - u[m], I = " ".repeat(A + D);
      f.push(pe(I, " "), C + s);
    }
    return f;
  })));
}
var us = _a;
function ls(t, e) {
  let { node: r } = t, n = P(t.node).trim();
  if (r.fullName === "style" && !e.parentParser && !n.includes("{{"))
    return async (s) => he(await s(n, { parser: "css", __isHTMLStyleAttribute: true }));
}
var xr = new WeakMap;
function Da(t, e) {
  let { root: r } = t;
  return xr.has(r) || xr.set(r, r.children.some((n) => Bt(n, e) && ["ts", "typescript"].includes(n.attrMap.lang))), xr.get(r);
}
var Ie = Da;
function cs(t, e, r) {
  let { node: n } = r, s = P(n);
  return T(`type T<${s}> = any`, t, { parser: "babel-ts", __isEmbeddedTypescriptGenericParameters: true }, X);
}
function ps(t, e, { parseWithTs: r }) {
  return T(`function _(${t}) {}`, e, { parser: r ? "babel-ts" : "babel", __isVueBindings: true });
}
async function hs(t, e, r, n) {
  let s = P(r.node), { left: i, operator: a, right: o } = va(s), u = Ie(r, n);
  return [E(await T(`function _(${i}) {}`, t, { parser: u ? "babel-ts" : "babel", __isVueForBindingLeft: true })), " ", a, " ", await T(o, t, { parser: u ? "__ts_expression" : "__js_expression" })];
}
function va(t) {
  let e = /(.*?)\s+(in|of)\s+(.*)/su, r = /,([^,\]}]*)(?:,([^,\]}]*))?$/u, n = /^\(|\)$/gu, s = t.match(e);
  if (!s)
    return;
  let i = {};
  if (i.for = s[3].trim(), !i.for)
    return;
  let a = w(false, s[1].trim(), n, ""), o = a.match(r);
  o ? (i.alias = a.replace(r, ""), i.iterator1 = o[1].trim(), o[2] && (i.iterator2 = o[2].trim())) : i.alias = a;
  let u = [i.alias, i.iterator1, i.iterator2];
  if (!u.some((p, l) => !p && (l === 0 || u.slice(l + 1).some(Boolean))))
    return { left: u.filter(Boolean).join(","), operator: s[2], right: i.for };
}
function ya(t, e) {
  if (e.parser !== "vue")
    return;
  let { node: r } = t, n = r.fullName;
  if (n === "v-for")
    return hs;
  if (n === "generic" && Bt(r.parent, e))
    return cs;
  let s = P(r), i = Ie(t, e);
  if (Zn(r) || es(r, e))
    return (a) => ps(s, a, { parseWithTs: i });
  if (n.startsWith("@") || n.startsWith("v-on:"))
    return (a) => wa(s, a, { parseWithTs: i });
  if (n.startsWith(":") || n.startsWith(".") || n.startsWith("v-bind:"))
    return (a) => ba(s, a, { parseWithTs: i });
  if (n.startsWith("v-"))
    return (a) => ms(s, a, { parseWithTs: i });
}
async function wa(t, e, { parseWithTs: r }) {
  var n;
  try {
    return await ms(t, e, { parseWithTs: r });
  } catch (s) {
    if (((n = s.cause) == null ? undefined : n.code) !== "BABEL_PARSER_SYNTAX_ERROR")
      throw s;
  }
  return T(t, e, { parser: r ? "__vue_ts_event_binding" : "__vue_event_binding" }, X);
}
function ba(t, e, { parseWithTs: r }) {
  return T(t, e, { parser: r ? "__vue_ts_expression" : "__vue_expression" }, X);
}
function ms(t, e, { parseWithTs: r }) {
  return T(t, e, { parser: r ? "__ts_expression" : "__js_expression" }, X);
}
var fs = ya;
function Ta(t, e) {
  let { node: r } = t;
  if (r.value) {
    if (/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/u.test(e.originalText.slice(r.valueSpan.start.offset, r.valueSpan.end.offset)) || e.parser === "lwc" && r.value.startsWith("{") && r.value.endsWith("}"))
      return [r.rawName, "=", r.value];
    for (let n of [us, ls, ns, fs, rs]) {
      let s = n(t, e);
      if (s)
        return xa(s);
    }
  }
}
function xa(t) {
  return async (e, r, n, s) => {
    let i = await t(e, r, n, s);
    if (i)
      return i = hr(i, (a) => typeof a == "string" ? w(false, a, '"', "&quot;") : a), [n.node.rawName, '="', E(i), '"'];
  };
}
var ds = Ta;
var ka = new Proxy(() => {}, { get: () => ka });
function J(t) {
  return t.sourceSpan.start.offset;
}
function se(t) {
  return t.sourceSpan.end.offset;
}
function tt(t, e) {
  return [t.isSelfClosing ? "" : Ba(t, e), Se(t, e)];
}
function Ba(t, e) {
  return t.lastChild && Ae(t.lastChild) ? "" : [La(t, e), Lt(t, e)];
}
function Se(t, e) {
  return (t.next ? Q(t.next) : Ee(t.parent)) ? "" : [_e(t, e), G(t, e)];
}
function La(t, e) {
  return Ee(t) ? _e(t.lastChild, e) : "";
}
function G(t, e) {
  return Ae(t) ? Lt(t.parent, e) : rt(t) ? Ft(t.next, e) : "";
}
function Lt(t, e) {
  if (Cs(t, e))
    return "";
  switch (t.type) {
    case "ieConditionalComment":
      return "<!";
    case "element":
      if (t.hasHtmComponentClosingTag)
        return "<//";
    default:
      return `</${t.rawName}`;
  }
}
function _e(t, e) {
  if (Cs(t, e))
    return "";
  switch (t.type) {
    case "ieConditionalComment":
    case "ieConditionalEndComment":
      return "[endif]-->";
    case "ieConditionalStartComment":
      return "]><!-->";
    case "interpolation":
      return "}}";
    case "angularIcuExpression":
      return "}";
    case "element":
      if (t.isSelfClosing)
        return "/>";
    default:
      return ">";
  }
}
function Cs(t, e) {
  return !t.isSelfClosing && !t.endSourceSpan && (ge(t) || wt(t.parent, e));
}
function Q(t) {
  return t.prev && t.prev.type !== "docType" && t.type !== "angularControlFlowBlock" && !$(t.prev) && t.isLeadingSpaceSensitive && !t.hasLeadingSpaces;
}
function Ee(t) {
  var e;
  return ((e = t.lastChild) == null ? undefined : e.isTrailingSpaceSensitive) && !t.lastChild.hasTrailingSpaces && !$(Tt(t.lastChild)) && !de(t);
}
function Ae(t) {
  return !t.next && !t.hasTrailingSpaces && t.isTrailingSpaceSensitive && $(Tt(t));
}
function rt(t) {
  return t.next && !$(t.next) && $(t) && t.isTrailingSpaceSensitive && !t.hasTrailingSpaces;
}
function Fa(t) {
  let e = t.trim().match(/^prettier-ignore-attribute(?:\s+(.+))?$/su);
  return e ? e[1] ? e[1].split(/\s+/u) : true : false;
}
function nt(t) {
  return !t.prev && t.isLeadingSpaceSensitive && !t.hasLeadingSpaces;
}
function Pa(t, e, r) {
  var m;
  let { node: n } = t;
  if (!me(n.attrs))
    return n.isSelfClosing ? " " : "";
  let s = ((m = n.prev) == null ? undefined : m.type) === "comment" && Fa(n.prev.value), i = typeof s == "boolean" ? () => s : Array.isArray(s) ? (f) => s.includes(f.rawName) : () => false, a = t.map(({ node: f }) => i(f) ? B(e.originalText.slice(J(f), se(f))) : r(), "attrs"), o = n.type === "element" && n.fullName === "script" && n.attrs.length === 1 && n.attrs[0].fullName === "src" && n.children.length === 0, p = e.singleAttributePerLine && n.attrs.length > 1 && !Ce(n, e) ? S : _, l = [k([o ? " " : _, H(p, a)])];
  return n.firstChild && nt(n.firstChild) || n.isSelfClosing && Ee(n.parent) || o ? l.push(n.isSelfClosing ? " " : "") : l.push(e.bracketSameLine ? n.isSelfClosing ? " " : "" : n.isSelfClosing ? _ : v), l;
}
function Na(t) {
  return t.firstChild && nt(t.firstChild) ? "" : Pt(t);
}
function st(t, e, r) {
  let { node: n } = t;
  return [De(n, e), Pa(t, e, r), n.isSelfClosing ? "" : Na(n)];
}
function De(t, e) {
  return t.prev && rt(t.prev) ? "" : [z(t, e), Ft(t, e)];
}
function z(t, e) {
  return nt(t) ? Pt(t.parent) : Q(t) ? _e(t.prev, e) : "";
}
var gs = "<!doctype";
function Ft(t, e) {
  switch (t.type) {
    case "ieConditionalComment":
    case "ieConditionalStartComment":
      return `<!--[if ${t.condition}`;
    case "ieConditionalEndComment":
      return "<!--<!";
    case "interpolation":
      return "{{";
    case "docType": {
      if (t.value === "html") {
        let { filepath: n } = e;
        if (n && /\.html?$/u.test(n))
          return gs;
      }
      let r = J(t);
      return e.originalText.slice(r, r + gs.length);
    }
    case "angularIcuExpression":
      return "{";
    case "element":
      if (t.condition)
        return `<!--[if ${t.condition}]><!--><${t.rawName}`;
    default:
      return `<${t.rawName}`;
  }
}
function Pt(t) {
  switch (t.type) {
    case "ieConditionalComment":
      return "]>";
    case "element":
      if (t.condition)
        return "><!--<![endif]-->";
    default:
      return ">";
  }
}
function Ia(t, e) {
  if (!t.endSourceSpan)
    return "";
  let r = t.startSourceSpan.end.offset;
  t.firstChild && nt(t.firstChild) && (r -= Pt(t).length);
  let n = t.endSourceSpan.start.offset;
  return t.lastChild && Ae(t.lastChild) ? n += Lt(t, e).length : Ee(t) && (n -= _e(t.lastChild, e).length), e.originalText.slice(r, n);
}
var Nt = Ia;
var Ra = new Set(["if", "else if", "for", "switch", "case"]);
function $a(t, e) {
  let { node: r } = t;
  switch (r.type) {
    case "element":
      if (W(r, e) || r.type === "interpolation")
        return;
      if (!r.isSelfClosing && xt(r, e)) {
        let n = vr(r, e);
        return n ? async (s, i) => {
          let a = Nt(r, e), o = /^\s*$/u.test(a), u = "";
          return o || (u = await s(Er(a), { parser: n, __embeddedInHtml: true }), o = u === ""), [z(r, e), E(st(t, e, i)), o ? "" : S, u, o ? "" : S, tt(r, e), G(r, e)];
        } : undefined;
      }
      break;
    case "text":
      if (W(r.parent, e)) {
        let n = vr(r.parent, e);
        if (n)
          return async (s) => {
            let i = n === "markdown" ? yr(r.value.replace(/^[^\S\n]*\n/u, "")) : r.value, a = { parser: n, __embeddedInHtml: true };
            if (e.parser === "html" && n === "babel") {
              let o = "script", { attrMap: u } = r.parent;
              u && (u.type === "module" || (u.type === "text/babel" || u.type === "text/jsx") && u["data-type"] === "module") && (o = "module"), a.__babelSourceType = o;
            }
            return [ne, z(r, e), await s(i, a), G(r, e)];
          };
      } else if (r.parent.type === "interpolation")
        return async (n) => {
          let s = { __isInHtmlInterpolation: true, __embeddedInHtml: true };
          return e.parser === "angular" ? s.parser = "__ng_interpolation" : e.parser === "vue" ? s.parser = Ie(t, e) ? "__vue_ts_expression" : "__vue_expression" : s.parser = "__js_expression", [k([_, await n(r.value, s)]), r.parent.next && Q(r.parent.next) ? " " : _];
        };
      break;
    case "attribute":
      return ds(t, e);
    case "front-matter":
      return (n) => yn(r, n);
    case "angularControlFlowBlockParameters":
      return Ra.has(t.parent.name) ? wn : undefined;
    case "angularLetDeclarationInitializer":
      return (n) => T(r.value, n, { parser: "__ng_binding", __isInHtmlAttribute: false });
  }
}
var Ss = $a;
var it = null;
function at(t) {
  if (it !== null && typeof it.property) {
    let e = it;
    return it = at.prototype = null, e;
  }
  return it = at.prototype = t ?? Object.create(null), new at;
}
var Oa = 10;
for (let t = 0;t <= Oa; t++)
  at();
function kr(t) {
  return at(t);
}
function Ma(t, e = "type") {
  kr(t);
  function r(n) {
    let s = n[e], i = t[s];
    if (!Array.isArray(i))
      throw Object.assign(new Error(`Missing visitor keys for '${s}'.`), { node: n });
    return i;
  }
  return r;
}
var _s = Ma;
var qa = { "front-matter": [], root: ["children"], element: ["attrs", "children"], ieConditionalComment: ["children"], ieConditionalStartComment: [], ieConditionalEndComment: [], interpolation: ["children"], text: ["children"], docType: [], comment: [], attribute: [], cdata: [], angularControlFlowBlock: ["children", "parameters"], angularControlFlowBlockParameters: ["children"], angularControlFlowBlockParameter: [], angularLetDeclaration: ["init"], angularLetDeclarationInitializer: [], angularIcuExpression: ["cases"], angularIcuCase: ["expression"] };
var Es = qa;
var Ha = _s(Es);
var As = Ha;
var Ds = "format";
var vs = /^\s*<!--\s*@(?:noformat|noprettier)\s*-->/u;
var ys = /^\s*<!--\s*@(?:format|prettier)\s*-->/u;
function ws(t) {
  return ys.test(t);
}
function bs(t) {
  return vs.test(t);
}
function Ts(t) {
  return `<!-- @${Ds} -->

${t}`;
}
var xs = new Map([["if", new Set(["else if", "else"])], ["else if", new Set(["else if", "else"])], ["for", new Set(["empty"])], ["defer", new Set(["placeholder", "error", "loading"])], ["placeholder", new Set(["placeholder", "error", "loading"])], ["error", new Set(["placeholder", "error", "loading"])], ["loading", new Set(["placeholder", "error", "loading"])]]);
function ks(t) {
  let e = se(t);
  return t.type === "element" && !t.endSourceSpan && me(t.children) ? Math.max(e, ks(K(false, t.children, -1))) : e;
}
function ot(t, e, r) {
  let n = t.node;
  if (ge(n)) {
    let s = ks(n);
    return [z(n, e), B(O.trimEnd(e.originalText.slice(J(n) + (n.prev && rt(n.prev) ? Ft(n).length : 0), s - (n.next && Q(n.next) ? _e(n, e).length : 0)))), G(n, e)];
  }
  return r();
}
function It(t, e) {
  return $(t) && $(e) ? t.isTrailingSpaceSensitive ? t.hasTrailingSpaces ? bt(e) ? S : _ : "" : bt(e) ? S : v : rt(t) && (ge(e) || e.firstChild || e.isSelfClosing || e.type === "element" && e.attrs.length > 0) || t.type === "element" && t.isSelfClosing && Q(e) ? "" : !e.isLeadingSpaceSensitive || bt(e) || Q(e) && t.lastChild && Ae(t.lastChild) && t.lastChild.lastChild && Ae(t.lastChild.lastChild) ? S : e.hasLeadingSpaces ? _ : v;
}
function Re(t, e, r) {
  let { node: n } = t;
  if (Dr(n))
    return [ne, ...t.map((i) => {
      let a = i.node, o = a.prev ? It(a.prev, a) : "";
      return [o ? [o, Je(a.prev) ? S : ""] : "", ot(i, e, r)];
    }, "children")];
  let s = n.children.map(() => Symbol(""));
  return t.map((i, a) => {
    let o = i.node;
    if ($(o)) {
      if (o.prev && $(o.prev)) {
        let A = It(o.prev, o);
        if (A)
          return Je(o.prev) ? [S, S, ot(i, e, r)] : [A, ot(i, e, r)];
      }
      return ot(i, e, r);
    }
    let u = [], p = [], l = [], m = [], f = o.prev ? It(o.prev, o) : "", C = o.next ? It(o, o.next) : "";
    return f && (Je(o.prev) ? u.push(S, S) : f === S ? u.push(S) : $(o.prev) ? p.push(f) : p.push(pe("", v, { groupId: s[a - 1] }))), C && (Je(o) ? $(o.next) && m.push(S, S) : C === S ? $(o.next) && m.push(S) : l.push(C)), [...u, E([...p, E([ot(i, e, r), ...l], { id: s[a] })]), ...m];
  }, "children");
}
function Bs(t, e, r) {
  let { node: n } = t, s = [];
  Va(t) && s.push("} "), s.push("@", n.name), n.parameters && s.push(" (", E(r("parameters")), ")"), s.push(" {");
  let i = Ls(n);
  return n.children.length > 0 ? (n.firstChild.hasLeadingSpaces = true, n.lastChild.hasTrailingSpaces = true, s.push(k([S, Re(t, e, r)])), i && s.push(S, "}")) : i && s.push("}"), E(s, { shouldBreak: true });
}
function Ls(t) {
  var e, r;
  return !(((e = t.next) == null ? undefined : e.type) === "angularControlFlowBlock" && ((r = xs.get(t.name)) != null && r.has(t.next.name)));
}
function Va(t) {
  let { previous: e } = t;
  return (e == null ? undefined : e.type) === "angularControlFlowBlock" && !ge(e) && !Ls(e);
}
function Fs(t, e, r) {
  return [k([v, H([";", _], t.map(r, "children"))]), v];
}
function Ps(t, e, r) {
  let { node: n } = t;
  return [De(n, e), E([n.switchValue.trim(), ", ", n.clause, n.cases.length > 0 ? [",", k([_, H(_, t.map(r, "cases"))])] : "", v]), Se(n, e)];
}
function Ns(t, e, r) {
  let { node: n } = t;
  return [n.value, " {", E([k([v, t.map(({ node: s, isLast: i }) => {
    let a = [r()];
    return s.type === "text" && (s.hasLeadingSpaces && a.unshift(_), s.hasTrailingSpaces && !i && a.push(_)), a;
  }, "expression")]), v]), "}"];
}
function Is(t, e, r) {
  let { node: n } = t;
  if (wt(n, e))
    return [z(n, e), E(st(t, e, r)), B(Nt(n, e)), ...tt(n, e), G(n, e)];
  let s = n.children.length === 1 && (n.firstChild.type === "interpolation" || n.firstChild.type === "angularIcuExpression") && n.firstChild.isLeadingSpaceSensitive && !n.firstChild.hasLeadingSpaces && n.lastChild.isTrailingSpaceSensitive && !n.lastChild.hasTrailingSpaces, i = Symbol("element-attr-group-id"), a = (l) => E([E(st(t, e, r), { id: i }), l, tt(n, e)]), o = (l) => s ? Cn(l, { groupId: i }) : (W(n, e) || et(n, e)) && n.parent.type === "root" && e.parser === "vue" && !e.vueIndentScriptAndStyle ? l : k(l), u = () => s ? pe(v, "", { groupId: i }) : n.firstChild.hasLeadingSpaces && n.firstChild.isLeadingSpaceSensitive ? _ : n.firstChild.type === "text" && n.isWhitespaceSensitive && n.isIndentationSensitive ? dn(v) : v, p = () => (n.next ? Q(n.next) : Ee(n.parent)) ? n.lastChild.hasTrailingSpaces && n.lastChild.isTrailingSpaceSensitive ? " " : "" : s ? pe(v, "", { groupId: i }) : n.lastChild.hasTrailingSpaces && n.lastChild.isTrailingSpaceSensitive ? _ : (n.lastChild.type === "comment" || n.lastChild.type === "text" && n.isWhitespaceSensitive && n.isIndentationSensitive) && new RegExp(`\\n[\\t ]{${e.tabWidth * (t.ancestors.length - 1)}}$`, "u").test(n.lastChild.value) ? "" : v;
  return n.children.length === 0 ? a(n.hasDanglingSpaces && n.isDanglingSpaceSensitive ? _ : "") : a([Gn(n) ? ne : "", o([u(), Re(t, e, r)]), p()]);
}
function ut(t) {
  return t >= 9 && t <= 32 || t == 160;
}
function Rt(t) {
  return 48 <= t && t <= 57;
}
function lt2(t) {
  return t >= 97 && t <= 122 || t >= 65 && t <= 90;
}
function Rs(t) {
  return t >= 97 && t <= 102 || t >= 65 && t <= 70 || Rt(t);
}
function $t(t) {
  return t === 10 || t === 13;
}
function Br(t) {
  return 48 <= t && t <= 55;
}
function Ot(t) {
  return t === 39 || t === 34 || t === 96;
}
var Ua = /-+([a-z0-9])/g;
function Os(t) {
  return t.replace(Ua, (...e) => e[1].toUpperCase());
}
var ie = class t {
  constructor(e, r, n, s) {
    this.file = e, this.offset = r, this.line = n, this.col = s;
  }
  toString() {
    return this.offset != null ? `${this.file.url}@${this.line}:${this.col}` : this.file.url;
  }
  moveBy(e) {
    let r = this.file.content, n = r.length, s = this.offset, i = this.line, a = this.col;
    for (;s > 0 && e < 0; )
      if (s--, e++, r.charCodeAt(s) == 10) {
        i--;
        let u = r.substring(0, s - 1).lastIndexOf(String.fromCharCode(10));
        a = u > 0 ? s - u : s;
      } else
        a--;
    for (;s < n && e > 0; ) {
      let o = r.charCodeAt(s);
      s++, e--, o == 10 ? (i++, a = 0) : a++;
    }
    return new t(this.file, s, i, a);
  }
  getContext(e, r) {
    let n = this.file.content, s = this.offset;
    if (s != null) {
      s > n.length - 1 && (s = n.length - 1);
      let i = s, a = 0, o = 0;
      for (;a < e && s > 0 && (s--, a++, !(n[s] == `
` && ++o == r)); )
        ;
      for (a = 0, o = 0;a < e && i < n.length - 1 && (i++, a++, !(n[i] == `
` && ++o == r)); )
        ;
      return { before: n.substring(s, this.offset), after: n.substring(this.offset, i + 1) };
    }
    return null;
  }
};
var ve = class {
  constructor(e, r) {
    this.content = e, this.url = r;
  }
};
var h = class {
  constructor(e, r, n = e, s = null) {
    this.start = e, this.end = r, this.fullStart = n, this.details = s;
  }
  toString() {
    return this.start.file.content.substring(this.start.offset, this.end.offset);
  }
};
var Mt;
(function(t2) {
  t2[t2.WARNING = 0] = "WARNING", t2[t2.ERROR = 1] = "ERROR";
})(Mt || (Mt = {}));
var Oe = class {
  constructor(e, r, n = Mt.ERROR, s) {
    this.span = e, this.msg = r, this.level = n, this.relatedError = s;
  }
  contextualMessage() {
    let e = this.span.start.getContext(100, 3);
    return e ? `${this.msg} ("${e.before}[${Mt[this.level]} ->]${e.after}")` : this.msg;
  }
  toString() {
    let e = this.span.details ? `, ${this.span.details}` : "";
    return `${this.contextualMessage()}: ${this.span.start}${e}`;
  }
};
var Wa = [za, Ya, Ka, Qa, Ja, to, Za, eo, ro, Xa];
function Ga(t2, e) {
  for (let r of Wa)
    r(t2, e);
  return t2;
}
function za(t2) {
  t2.walk((e) => {
    if (e.type === "element" && e.tagDefinition.ignoreFirstLf && e.children.length > 0 && e.children[0].type === "text" && e.children[0].value[0] === `
`) {
      let r = e.children[0];
      r.value.length === 1 ? e.removeChild(r) : r.value = r.value.slice(1);
    }
  });
}
function Ya(t2) {
  let e = (r) => {
    var n, s;
    return r.type === "element" && ((n = r.prev) == null ? undefined : n.type) === "ieConditionalStartComment" && r.prev.sourceSpan.end.offset === r.startSourceSpan.start.offset && ((s = r.firstChild) == null ? undefined : s.type) === "ieConditionalEndComment" && r.firstChild.sourceSpan.start.offset === r.startSourceSpan.end.offset;
  };
  t2.walk((r) => {
    if (r.children)
      for (let n = 0;n < r.children.length; n++) {
        let s = r.children[n];
        if (!e(s))
          continue;
        let { prev: i, firstChild: a } = s;
        r.removeChild(i), n--;
        let o = new h(i.sourceSpan.start, a.sourceSpan.end), u = new h(o.start, s.sourceSpan.end);
        s.condition = i.condition, s.sourceSpan = u, s.startSourceSpan = o, s.removeChild(a);
      }
  });
}
function ja(t2, e, r) {
  t2.walk((n) => {
    if (n.children)
      for (let s = 0;s < n.children.length; s++) {
        let i = n.children[s];
        if (i.type !== "text" && !e(i))
          continue;
        i.type !== "text" && (i.type = "text", i.value = r(i));
        let a = i.prev;
        !a || a.type !== "text" || (a.value += i.value, a.sourceSpan = new h(a.sourceSpan.start, i.sourceSpan.end), n.removeChild(i), s--);
      }
  });
}
function Ka(t2) {
  return ja(t2, (e) => e.type === "cdata", (e) => `<![CDATA[${e.value}]]>`);
}
function Xa(t2) {
  let e = (r) => {
    var n, s;
    return r.type === "element" && r.attrs.length === 0 && r.children.length === 1 && r.firstChild.type === "text" && !O.hasWhitespaceCharacter(r.children[0].value) && !r.firstChild.hasLeadingSpaces && !r.firstChild.hasTrailingSpaces && r.isLeadingSpaceSensitive && !r.hasLeadingSpaces && r.isTrailingSpaceSensitive && !r.hasTrailingSpaces && ((n = r.prev) == null ? undefined : n.type) === "text" && ((s = r.next) == null ? undefined : s.type) === "text";
  };
  t2.walk((r) => {
    if (r.children)
      for (let n = 0;n < r.children.length; n++) {
        let s = r.children[n];
        if (!e(s))
          continue;
        let { prev: i, next: a } = s;
        i.value += `<${s.rawName}>` + s.firstChild.value + `</${s.rawName}>` + a.value, i.sourceSpan = new h(i.sourceSpan.start, a.sourceSpan.end), i.isTrailingSpaceSensitive = a.isTrailingSpaceSensitive, i.hasTrailingSpaces = a.hasTrailingSpaces, r.removeChild(s), n--, r.removeChild(a);
      }
  });
}
function Qa(t2, e) {
  if (e.parser === "html")
    return;
  let r = /\{\{(.+?)\}\}/su;
  t2.walk((n) => {
    if (qn(n, e))
      for (let s of n.children) {
        if (s.type !== "text")
          continue;
        let i = s.sourceSpan.start, a = null, o = s.value.split(r);
        for (let u = 0;u < o.length; u++, i = a) {
          let p = o[u];
          if (u % 2 === 0) {
            a = i.moveBy(p.length), p.length > 0 && n.insertChildBefore(s, { type: "text", value: p, sourceSpan: new h(i, a) });
            continue;
          }
          a = i.moveBy(p.length + 4), n.insertChildBefore(s, { type: "interpolation", sourceSpan: new h(i, a), children: p.length === 0 ? [] : [{ type: "text", value: p, sourceSpan: new h(i.moveBy(2), a.moveBy(-2)) }] });
        }
        n.removeChild(s);
      }
  });
}
function Ja(t2, e) {
  t2.walk((r) => {
    let n = r.$children;
    if (!n)
      return;
    if (n.length === 0 || n.length === 1 && n[0].type === "text" && O.trim(n[0].value).length === 0) {
      r.hasDanglingSpaces = n.length > 0, r.$children = [];
      return;
    }
    let s = Hn(r, e), i = Ar(r);
    if (!s)
      for (let a = 0;a < n.length; a++) {
        let o = n[a];
        if (o.type !== "text")
          continue;
        let { leadingWhitespace: u, text: p, trailingWhitespace: l } = Mn(o.value), m = o.prev, f = o.next;
        p ? (o.value = p, o.sourceSpan = new h(o.sourceSpan.start.moveBy(u.length), o.sourceSpan.end.moveBy(-l.length)), u && (m && (m.hasTrailingSpaces = true), o.hasLeadingSpaces = true), l && (o.hasTrailingSpaces = true, f && (f.hasLeadingSpaces = true))) : (r.removeChild(o), a--, (u || l) && (m && (m.hasTrailingSpaces = true), f && (f.hasLeadingSpaces = true)));
      }
    r.isWhitespaceSensitive = s, r.isIndentationSensitive = i;
  });
}
function Za(t2) {
  t2.walk((e) => {
    e.isSelfClosing = !e.children || e.type === "element" && (e.tagDefinition.isVoid || e.endSourceSpan && e.startSourceSpan.start === e.endSourceSpan.start && e.startSourceSpan.end === e.endSourceSpan.end);
  });
}
function eo(t2, e) {
  t2.walk((r) => {
    r.type === "element" && (r.hasHtmComponentClosingTag = r.endSourceSpan && /^<\s*\/\s*\/\s*>$/u.test(e.originalText.slice(r.endSourceSpan.start.offset, r.endSourceSpan.end.offset)));
  });
}
function to(t2, e) {
  t2.walk((r) => {
    r.cssDisplay = Qn(r, e);
  });
}
function ro(t2, e) {
  t2.walk((r) => {
    let { children: n } = r;
    if (n) {
      if (n.length === 0) {
        r.isDanglingSpaceSensitive = Wn(r, e);
        return;
      }
      for (let s of n)
        s.isLeadingSpaceSensitive = Vn(s, e), s.isTrailingSpaceSensitive = Un(s, e);
      for (let s = 0;s < n.length; s++) {
        let i = n[s];
        i.isLeadingSpaceSensitive = (s === 0 || i.prev.isTrailingSpaceSensitive) && i.isLeadingSpaceSensitive, i.isTrailingSpaceSensitive = (s === n.length - 1 || i.next.isLeadingSpaceSensitive) && i.isTrailingSpaceSensitive;
      }
    }
  });
}
var Ms = Ga;
function no(t2, e, r) {
  let { node: n } = t2;
  switch (n.type) {
    case "front-matter":
      return B(n.raw);
    case "root":
      return e.__onHtmlRoot && e.__onHtmlRoot(n), [E(Re(t2, e, r)), S];
    case "element":
    case "ieConditionalComment":
      return Is(t2, e, r);
    case "angularControlFlowBlock":
      return Bs(t2, e, r);
    case "angularControlFlowBlockParameters":
      return Fs(t2, e, r);
    case "angularControlFlowBlockParameter":
      return O.trim(n.expression);
    case "angularLetDeclaration":
      return E(["@let ", E([n.id, " =", E(k([_, r("init")]))]), ";"]);
    case "angularLetDeclarationInitializer":
      return n.value;
    case "angularIcuExpression":
      return Ps(t2, e, r);
    case "angularIcuCase":
      return Ns(t2, e, r);
    case "ieConditionalStartComment":
    case "ieConditionalEndComment":
      return [De(n), Se(n)];
    case "interpolation":
      return [De(n, e), ...t2.map(r, "children"), Se(n, e)];
    case "text": {
      if (n.parent.type === "interpolation") {
        let o = /\n[^\S\n]*$/u, u = o.test(n.value), p = u ? n.value.replace(o, "") : n.value;
        return [B(p), u ? S : ""];
      }
      let s = z(n, e), i = kt(n), a = G(n, e);
      return i[0] = [s, i[0]], i.push([i.pop(), a]), vt(i);
    }
    case "docType":
      return [E([De(n, e), " ", w(false, n.value.replace(/^html\b/iu, "html"), /\s+/gu, " ")]), Se(n, e)];
    case "comment":
      return [z(n, e), B(e.originalText.slice(J(n), se(n))), G(n, e)];
    case "attribute": {
      if (n.value === null)
        return n.rawName;
      let s = wr(n.value), i = _n(s, '"');
      return [n.rawName, "=", i, B(i === '"' ? w(false, s, '"', "&quot;") : w(false, s, "'", "&apos;")), i];
    }
    case "cdata":
    default:
      throw new An(n, "HTML");
  }
}
var so = { preprocess: Ms, print: no, insertPragma: Ts, massageAstNode: vn, embed: Ss, getVisitorKeys: As };
var qs = so;
var Hs = [{ name: "Angular", type: "markup", extensions: [".component.html"], tmScope: "text.html.basic", aceMode: "html", aliases: ["xhtml"], codemirrorMode: "htmlmixed", codemirrorMimeType: "text/html", parsers: ["angular"], vscodeLanguageIds: ["html"], filenames: [], linguistLanguageId: 146 }, { name: "HTML", type: "markup", extensions: [".html", ".hta", ".htm", ".html.hl", ".inc", ".xht", ".xhtml"], tmScope: "text.html.basic", aceMode: "html", aliases: ["xhtml"], codemirrorMode: "htmlmixed", codemirrorMimeType: "text/html", parsers: ["html"], vscodeLanguageIds: ["html"], linguistLanguageId: 146 }, { name: "Lightning Web Components", type: "markup", extensions: [], tmScope: "text.html.basic", aceMode: "html", aliases: ["xhtml"], codemirrorMode: "htmlmixed", codemirrorMimeType: "text/html", parsers: ["lwc"], vscodeLanguageIds: ["html"], filenames: [], linguistLanguageId: 146 }, { name: "MJML", type: "markup", extensions: [".mjml"], tmScope: "text.mjml.basic", aceMode: "html", aliases: ["MJML", "mjml"], codemirrorMode: "htmlmixed", codemirrorMimeType: "text/html", parsers: ["mjml"], filenames: [], vscodeLanguageIds: ["mjml"], linguistLanguageId: 146 }, { name: "Vue", type: "markup", extensions: [".vue"], tmScope: "source.vue", aceMode: "html", parsers: ["vue"], vscodeLanguageIds: ["vue"], linguistLanguageId: 391 }];
var Lr = { bracketSpacing: { category: "Common", type: "boolean", default: true, description: "Print spaces between brackets.", oppositeDescription: "Do not print spaces between brackets." }, objectWrap: { category: "Common", type: "choice", default: "preserve", description: "How to wrap object literals.", choices: [{ value: "preserve", description: "Keep as multi-line, if there is a newline between the opening brace and first property." }, { value: "collapse", description: "Fit to a single line when possible." }] }, singleQuote: { category: "Common", type: "boolean", default: false, description: "Use single quotes instead of double quotes." }, proseWrap: { category: "Common", type: "choice", default: "preserve", description: "How to wrap prose.", choices: [{ value: "always", description: "Wrap prose if it exceeds the print width." }, { value: "never", description: "Do not wrap prose." }, { value: "preserve", description: "Wrap prose as-is." }] }, bracketSameLine: { category: "Common", type: "boolean", default: false, description: "Put > of opening tags on the last line instead of on a new line." }, singleAttributePerLine: { category: "Common", type: "boolean", default: false, description: "Enforce single attribute per line in HTML, Vue and JSX." } };
var Vs = "HTML";
var io = { bracketSameLine: Lr.bracketSameLine, htmlWhitespaceSensitivity: { category: Vs, type: "choice", default: "css", description: "How to handle whitespaces in HTML.", choices: [{ value: "css", description: "Respect the default value of CSS display property." }, { value: "strict", description: "Whitespaces are considered sensitive." }, { value: "ignore", description: "Whitespaces are considered insensitive." }] }, singleAttributePerLine: Lr.singleAttributePerLine, vueIndentScriptAndStyle: { category: Vs, type: "boolean", default: false, description: "Indent script and style tags in Vue files." } };
var Us = io;
var tn = {};
ln(tn, { angular: () => iu, html: () => ru, lwc: () => ou, mjml: () => su, vue: () => au });
var ah = new RegExp(`(\\:not\\()|(([\\.\\#]?)[-\\w]+)|(?:\\[([-.\\w*\\\\$]+)(?:=(["']?)([^\\]"']*)\\5)?\\])|(\\))|(\\s*,\\s*)`, "g");
var Ws;
(function(t2) {
  t2[t2.Emulated = 0] = "Emulated", t2[t2.None = 2] = "None", t2[t2.ShadowDom = 3] = "ShadowDom";
})(Ws || (Ws = {}));
var Gs;
(function(t2) {
  t2[t2.OnPush = 0] = "OnPush", t2[t2.Default = 1] = "Default";
})(Gs || (Gs = {}));
var zs;
(function(t2) {
  t2[t2.None = 0] = "None", t2[t2.SignalBased = 1] = "SignalBased", t2[t2.HasDecoratorInputTransform = 2] = "HasDecoratorInputTransform";
})(zs || (zs = {}));
var Fr = { name: "custom-elements" };
var Pr = { name: "no-errors-schema" };
var Z;
(function(t2) {
  t2[t2.NONE = 0] = "NONE", t2[t2.HTML = 1] = "HTML", t2[t2.STYLE = 2] = "STYLE", t2[t2.SCRIPT = 3] = "SCRIPT", t2[t2.URL = 4] = "URL", t2[t2.RESOURCE_URL = 5] = "RESOURCE_URL";
})(Z || (Z = {}));
var Ys;
(function(t2) {
  t2[t2.Error = 0] = "Error", t2[t2.Warning = 1] = "Warning", t2[t2.Ignore = 2] = "Ignore";
})(Ys || (Ys = {}));
var N;
(function(t2) {
  t2[t2.RAW_TEXT = 0] = "RAW_TEXT", t2[t2.ESCAPABLE_RAW_TEXT = 1] = "ESCAPABLE_RAW_TEXT", t2[t2.PARSABLE_DATA = 2] = "PARSABLE_DATA";
})(N || (N = {}));
function ct(t2, e = true) {
  if (t2[0] != ":")
    return [null, t2];
  let r = t2.indexOf(":", 1);
  if (r === -1) {
    if (e)
      throw new Error(`Unsupported format "${t2}" expecting ":namespace:name"`);
    return [null, t2];
  }
  return [t2.slice(1, r), t2.slice(r + 1)];
}
function Nr(t2) {
  return ct(t2)[1] === "ng-container";
}
function Ir(t2) {
  return ct(t2)[1] === "ng-content";
}
function Me(t2) {
  return t2 === null ? null : ct(t2)[0];
}
function qe(t2, e) {
  return t2 ? `:${t2}:${e}` : e;
}
var Ht;
function Rr() {
  return Ht || (Ht = {}, qt(Z.HTML, ["iframe|srcdoc", "*|innerHTML", "*|outerHTML"]), qt(Z.STYLE, ["*|style"]), qt(Z.URL, ["*|formAction", "area|href", "area|ping", "audio|src", "a|href", "a|ping", "blockquote|cite", "body|background", "del|cite", "form|action", "img|src", "input|src", "ins|cite", "q|cite", "source|src", "track|src", "video|poster", "video|src"]), qt(Z.RESOURCE_URL, ["applet|code", "applet|codebase", "base|href", "embed|src", "frame|src", "head|profile", "html|manifest", "iframe|src", "link|href", "media|src", "object|codebase", "object|data", "script|src"])), Ht;
}
function qt(t2, e) {
  for (let r of e)
    Ht[r.toLowerCase()] = t2;
}
var Vt = class {
};
var ao = "boolean";
var oo = "number";
var uo = "string";
var lo = "object";
var co = ["[Element]|textContent,%ariaAtomic,%ariaAutoComplete,%ariaBusy,%ariaChecked,%ariaColCount,%ariaColIndex,%ariaColSpan,%ariaCurrent,%ariaDescription,%ariaDisabled,%ariaExpanded,%ariaHasPopup,%ariaHidden,%ariaKeyShortcuts,%ariaLabel,%ariaLevel,%ariaLive,%ariaModal,%ariaMultiLine,%ariaMultiSelectable,%ariaOrientation,%ariaPlaceholder,%ariaPosInSet,%ariaPressed,%ariaReadOnly,%ariaRelevant,%ariaRequired,%ariaRoleDescription,%ariaRowCount,%ariaRowIndex,%ariaRowSpan,%ariaSelected,%ariaSetSize,%ariaSort,%ariaValueMax,%ariaValueMin,%ariaValueNow,%ariaValueText,%classList,className,elementTiming,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*fullscreenchange,*fullscreenerror,*search,*webkitfullscreenchange,*webkitfullscreenerror,outerHTML,%part,#scrollLeft,#scrollTop,slot,*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored", "[HTMLElement]^[Element]|accessKey,autocapitalize,!autofocus,contentEditable,dir,!draggable,enterKeyHint,!hidden,!inert,innerText,inputMode,lang,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate,virtualKeyboardPolicy", "abbr,address,article,aside,b,bdi,bdo,cite,content,code,dd,dfn,dt,em,figcaption,figure,footer,header,hgroup,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,autocapitalize,!autofocus,contentEditable,dir,!draggable,enterKeyHint,!hidden,innerText,inputMode,lang,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate,virtualKeyboardPolicy", "media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,!preservesPitch,src,%srcObject,#volume", ":svg:^[HTMLElement]|!autofocus,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,%style,#tabIndex", ":svg:graphics^:svg:|", ":svg:animation^:svg:|*begin,*end,*repeat", ":svg:geometry^:svg:|", ":svg:componentTransferFunction^:svg:|", ":svg:gradient^:svg:|", ":svg:textContent^:svg:graphics|", ":svg:textPositioning^:svg:textContent|", "a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,%relList,rev,search,shape,target,text,type,username", "area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,%relList,search,shape,target,username", "audio^media|", "br^[HTMLElement]|clear", "base^[HTMLElement]|href,target", "body^[HTMLElement]|aLink,background,bgColor,link,*afterprint,*beforeprint,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*messageerror,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink", "button^[HTMLElement]|!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value", "canvas^[HTMLElement]|#height,#width", "content^[HTMLElement]|select", "dl^[HTMLElement]|!compact", "data^[HTMLElement]|value", "datalist^[HTMLElement]|", "details^[HTMLElement]|!open", "dialog^[HTMLElement]|!open,returnValue", "dir^[HTMLElement]|!compact", "div^[HTMLElement]|align", "embed^[HTMLElement]|align,height,name,src,type,width", "fieldset^[HTMLElement]|!disabled,name", "font^[HTMLElement]|color,face,size", "form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target", "frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src", "frameset^[HTMLElement]|cols,*afterprint,*beforeprint,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*messageerror,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows", "hr^[HTMLElement]|align,color,!noShade,size,width", "head^[HTMLElement]|", "h1,h2,h3,h4,h5,h6^[HTMLElement]|align", "html^[HTMLElement]|version", "iframe^[HTMLElement]|align,allow,!allowFullscreen,!allowPaymentRequest,csp,frameBorder,height,loading,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width", "img^[HTMLElement]|align,alt,border,%crossOrigin,decoding,#height,#hspace,!isMap,loading,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width", "input^[HTMLElement]|accept,align,alt,autocomplete,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width", "li^[HTMLElement]|type,#value", "label^[HTMLElement]|htmlFor", "legend^[HTMLElement]|align", "link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,imageSizes,imageSrcset,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type", "map^[HTMLElement]|name", "marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width", "menu^[HTMLElement]|!compact", "meta^[HTMLElement]|content,httpEquiv,media,name,scheme", "meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value", "ins,del^[HTMLElement]|cite,dateTime", "ol^[HTMLElement]|!compact,!reversed,#start,type", "object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width", "optgroup^[HTMLElement]|!disabled,label", "option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value", "output^[HTMLElement]|defaultValue,%htmlFor,name,value", "p^[HTMLElement]|align", "param^[HTMLElement]|name,type,value,valueType", "picture^[HTMLElement]|", "pre^[HTMLElement]|#width", "progress^[HTMLElement]|#max,#value", "q,blockquote,cite^[HTMLElement]|", "script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,!noModule,%referrerPolicy,src,text,type", "select^[HTMLElement]|autocomplete,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value", "slot^[HTMLElement]|name", "source^[HTMLElement]|#height,media,sizes,src,srcset,type,#width", "span^[HTMLElement]|", "style^[HTMLElement]|!disabled,media,type", "caption^[HTMLElement]|align", "th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width", "col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width", "table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width", "tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign", "tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign", "template^[HTMLElement]|", "textarea^[HTMLElement]|autocomplete,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap", "time^[HTMLElement]|dateTime", "title^[HTMLElement]|text", "track^[HTMLElement]|!default,kind,label,src,srclang", "ul^[HTMLElement]|!compact,type", "unknown^[HTMLElement]|", "video^media|!disablePictureInPicture,#height,*enterpictureinpicture,*leavepictureinpicture,!playsInline,poster,#width", ":svg:a^:svg:graphics|", ":svg:animate^:svg:animation|", ":svg:animateMotion^:svg:animation|", ":svg:animateTransform^:svg:animation|", ":svg:circle^:svg:geometry|", ":svg:clipPath^:svg:graphics|", ":svg:defs^:svg:graphics|", ":svg:desc^:svg:|", ":svg:discard^:svg:|", ":svg:ellipse^:svg:geometry|", ":svg:feBlend^:svg:|", ":svg:feColorMatrix^:svg:|", ":svg:feComponentTransfer^:svg:|", ":svg:feComposite^:svg:|", ":svg:feConvolveMatrix^:svg:|", ":svg:feDiffuseLighting^:svg:|", ":svg:feDisplacementMap^:svg:|", ":svg:feDistantLight^:svg:|", ":svg:feDropShadow^:svg:|", ":svg:feFlood^:svg:|", ":svg:feFuncA^:svg:componentTransferFunction|", ":svg:feFuncB^:svg:componentTransferFunction|", ":svg:feFuncG^:svg:componentTransferFunction|", ":svg:feFuncR^:svg:componentTransferFunction|", ":svg:feGaussianBlur^:svg:|", ":svg:feImage^:svg:|", ":svg:feMerge^:svg:|", ":svg:feMergeNode^:svg:|", ":svg:feMorphology^:svg:|", ":svg:feOffset^:svg:|", ":svg:fePointLight^:svg:|", ":svg:feSpecularLighting^:svg:|", ":svg:feSpotLight^:svg:|", ":svg:feTile^:svg:|", ":svg:feTurbulence^:svg:|", ":svg:filter^:svg:|", ":svg:foreignObject^:svg:graphics|", ":svg:g^:svg:graphics|", ":svg:image^:svg:graphics|decoding", ":svg:line^:svg:geometry|", ":svg:linearGradient^:svg:gradient|", ":svg:mpath^:svg:|", ":svg:marker^:svg:|", ":svg:mask^:svg:|", ":svg:metadata^:svg:|", ":svg:path^:svg:geometry|", ":svg:pattern^:svg:|", ":svg:polygon^:svg:geometry|", ":svg:polyline^:svg:geometry|", ":svg:radialGradient^:svg:gradient|", ":svg:rect^:svg:geometry|", ":svg:svg^:svg:graphics|#currentScale,#zoomAndPan", ":svg:script^:svg:|type", ":svg:set^:svg:animation|", ":svg:stop^:svg:|", ":svg:style^:svg:|!disabled,media,title,type", ":svg:switch^:svg:graphics|", ":svg:symbol^:svg:|", ":svg:tspan^:svg:textPositioning|", ":svg:text^:svg:textPositioning|", ":svg:textPath^:svg:textContent|", ":svg:title^:svg:|", ":svg:use^:svg:graphics|", ":svg:view^:svg:|#zoomAndPan", "data^[HTMLElement]|value", "keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name", "menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default", "summary^[HTMLElement]|", "time^[HTMLElement]|dateTime", ":svg:cursor^:svg:|", ":math:^[HTMLElement]|!autofocus,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforeinput,*beforematch,*beforetoggle,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contentvisibilityautostatechange,*contextlost,*contextmenu,*contextrestored,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*scrollend,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,%style,#tabIndex", ":math:math^:math:|", ":math:maction^:math:|", ":math:menclose^:math:|", ":math:merror^:math:|", ":math:mfenced^:math:|", ":math:mfrac^:math:|", ":math:mi^:math:|", ":math:mmultiscripts^:math:|", ":math:mn^:math:|", ":math:mo^:math:|", ":math:mover^:math:|", ":math:mpadded^:math:|", ":math:mphantom^:math:|", ":math:mroot^:math:|", ":math:mrow^:math:|", ":math:ms^:math:|", ":math:mspace^:math:|", ":math:msqrt^:math:|", ":math:mstyle^:math:|", ":math:msub^:math:|", ":math:msubsup^:math:|", ":math:msup^:math:|", ":math:mtable^:math:|", ":math:mtd^:math:|", ":math:mtext^:math:|", ":math:mtr^:math:|", ":math:munder^:math:|", ":math:munderover^:math:|", ":math:semantics^:math:|"];
var js = new Map(Object.entries({ class: "className", for: "htmlFor", formaction: "formAction", innerHtml: "innerHTML", readonly: "readOnly", tabindex: "tabIndex" }));
var po = Array.from(js).reduce((t2, [e, r]) => (t2.set(e, r), t2), new Map);
var Ut = class extends Vt {
  constructor() {
    super(), this._schema = new Map, this._eventSchema = new Map, co.forEach((e) => {
      let r = new Map, n = new Set, [s, i] = e.split("|"), a = i.split(","), [o, u] = s.split("^");
      o.split(",").forEach((l) => {
        this._schema.set(l.toLowerCase(), r), this._eventSchema.set(l.toLowerCase(), n);
      });
      let p = u && this._schema.get(u.toLowerCase());
      if (p) {
        for (let [l, m] of p)
          r.set(l, m);
        for (let l of this._eventSchema.get(u.toLowerCase()))
          n.add(l);
      }
      a.forEach((l) => {
        if (l.length > 0)
          switch (l[0]) {
            case "*":
              n.add(l.substring(1));
              break;
            case "!":
              r.set(l.substring(1), ao);
              break;
            case "#":
              r.set(l.substring(1), oo);
              break;
            case "%":
              r.set(l.substring(1), lo);
              break;
            default:
              r.set(l, uo);
          }
      });
    });
  }
  hasProperty(e, r, n) {
    if (n.some((i) => i.name === Pr.name))
      return true;
    if (e.indexOf("-") > -1) {
      if (Nr(e) || Ir(e))
        return false;
      if (n.some((i) => i.name === Fr.name))
        return true;
    }
    return (this._schema.get(e.toLowerCase()) || this._schema.get("unknown")).has(r);
  }
  hasElement(e, r) {
    return r.some((n) => n.name === Pr.name) || e.indexOf("-") > -1 && (Nr(e) || Ir(e) || r.some((n) => n.name === Fr.name)) ? true : this._schema.has(e.toLowerCase());
  }
  securityContext(e, r, n) {
    n && (r = this.getMappedPropName(r)), e = e.toLowerCase(), r = r.toLowerCase();
    let s = Rr()[e + "|" + r];
    return s || (s = Rr()["*|" + r], s || Z.NONE);
  }
  getMappedPropName(e) {
    return js.get(e) ?? e;
  }
  getDefaultComponentElementName() {
    return "ng-component";
  }
  validateProperty(e) {
    return e.toLowerCase().startsWith("on") ? { error: true, msg: `Binding to event property '${e}' is disallowed for security reasons, please use (${e.slice(2)})=...
If '${e}' is a directive input, make sure the directive is imported by the current module.` } : { error: false };
  }
  validateAttribute(e) {
    return e.toLowerCase().startsWith("on") ? { error: true, msg: `Binding to event attribute '${e}' is disallowed for security reasons, please use (${e.slice(2)})=...` } : { error: false };
  }
  allKnownElementNames() {
    return Array.from(this._schema.keys());
  }
  allKnownAttributesOfElement(e) {
    let r = this._schema.get(e.toLowerCase()) || this._schema.get("unknown");
    return Array.from(r.keys()).map((n) => po.get(n) ?? n);
  }
  allKnownEventsOfElement(e) {
    return Array.from(this._eventSchema.get(e.toLowerCase()) ?? []);
  }
  normalizeAnimationStyleProperty(e) {
    return Os(e);
  }
  normalizeAnimationStyleValue(e, r, n) {
    let s = "", i = n.toString().trim(), a = null;
    if (ho(e) && n !== 0 && n !== "0")
      if (typeof n == "number")
        s = "px";
      else {
        let o = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
        o && o[1].length == 0 && (a = `Please provide a CSS unit value for ${r}:${n}`);
      }
    return { error: a, value: i + s };
  }
};
function ho(t2) {
  switch (t2) {
    case "width":
    case "height":
    case "minWidth":
    case "minHeight":
    case "maxWidth":
    case "maxHeight":
    case "left":
    case "top":
    case "bottom":
    case "right":
    case "fontSize":
    case "outlineWidth":
    case "outlineOffset":
    case "paddingTop":
    case "paddingLeft":
    case "paddingBottom":
    case "paddingRight":
    case "marginTop":
    case "marginLeft":
    case "marginBottom":
    case "marginRight":
    case "borderRadius":
    case "borderWidth":
    case "borderTopWidth":
    case "borderLeftWidth":
    case "borderRightWidth":
    case "borderBottomWidth":
    case "textIndent":
      return true;
    default:
      return false;
  }
}
var d = class {
  constructor({ closedByChildren: e, implicitNamespacePrefix: r, contentType: n = N.PARSABLE_DATA, closedByParent: s = false, isVoid: i = false, ignoreFirstLf: a = false, preventNamespaceInheritance: o = false, canSelfClose: u = false } = {}) {
    this.closedByChildren = {}, this.closedByParent = false, e && e.length > 0 && e.forEach((p) => this.closedByChildren[p] = true), this.isVoid = i, this.closedByParent = s || i, this.implicitNamespacePrefix = r || null, this.contentType = n, this.ignoreFirstLf = a, this.preventNamespaceInheritance = o, this.canSelfClose = u ?? i;
  }
  isClosedByChild(e) {
    return this.isVoid || e.toLowerCase() in this.closedByChildren;
  }
  getContentType(e) {
    return typeof this.contentType == "object" ? (e === undefined ? undefined : this.contentType[e]) ?? this.contentType.default : this.contentType;
  }
};
var Ks;
var pt;
function He(t2) {
  return pt || (Ks = new d({ canSelfClose: true }), pt = Object.assign(Object.create(null), { base: new d({ isVoid: true }), meta: new d({ isVoid: true }), area: new d({ isVoid: true }), embed: new d({ isVoid: true }), link: new d({ isVoid: true }), img: new d({ isVoid: true }), input: new d({ isVoid: true }), param: new d({ isVoid: true }), hr: new d({ isVoid: true }), br: new d({ isVoid: true }), source: new d({ isVoid: true }), track: new d({ isVoid: true }), wbr: new d({ isVoid: true }), p: new d({ closedByChildren: ["address", "article", "aside", "blockquote", "div", "dl", "fieldset", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "hr", "main", "nav", "ol", "p", "pre", "section", "table", "ul"], closedByParent: true }), thead: new d({ closedByChildren: ["tbody", "tfoot"] }), tbody: new d({ closedByChildren: ["tbody", "tfoot"], closedByParent: true }), tfoot: new d({ closedByChildren: ["tbody"], closedByParent: true }), tr: new d({ closedByChildren: ["tr"], closedByParent: true }), td: new d({ closedByChildren: ["td", "th"], closedByParent: true }), th: new d({ closedByChildren: ["td", "th"], closedByParent: true }), col: new d({ isVoid: true }), svg: new d({ implicitNamespacePrefix: "svg" }), foreignObject: new d({ implicitNamespacePrefix: "svg", preventNamespaceInheritance: true }), math: new d({ implicitNamespacePrefix: "math" }), li: new d({ closedByChildren: ["li"], closedByParent: true }), dt: new d({ closedByChildren: ["dt", "dd"] }), dd: new d({ closedByChildren: ["dt", "dd"], closedByParent: true }), rb: new d({ closedByChildren: ["rb", "rt", "rtc", "rp"], closedByParent: true }), rt: new d({ closedByChildren: ["rb", "rt", "rtc", "rp"], closedByParent: true }), rtc: new d({ closedByChildren: ["rb", "rtc", "rp"], closedByParent: true }), rp: new d({ closedByChildren: ["rb", "rt", "rtc", "rp"], closedByParent: true }), optgroup: new d({ closedByChildren: ["optgroup"], closedByParent: true }), option: new d({ closedByChildren: ["option", "optgroup"], closedByParent: true }), pre: new d({ ignoreFirstLf: true }), listing: new d({ ignoreFirstLf: true }), style: new d({ contentType: N.RAW_TEXT }), script: new d({ contentType: N.RAW_TEXT }), title: new d({ contentType: { default: N.ESCAPABLE_RAW_TEXT, svg: N.PARSABLE_DATA } }), textarea: new d({ contentType: N.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }) }), new Ut().allKnownElementNames().forEach((e) => {
    !pt[e] && Me(e) === null && (pt[e] = new d({ canSelfClose: false }));
  })), pt[t2] ?? Ks;
}
var ae = class {
  constructor(e, r) {
    this.sourceSpan = e, this.i18n = r;
  }
};
var Wt = class extends ae {
  constructor(e, r, n, s) {
    super(r, s), this.value = e, this.tokens = n, this.type = "text";
  }
  visit(e, r) {
    return e.visitText(this, r);
  }
};
var Gt = class extends ae {
  constructor(e, r, n, s) {
    super(r, s), this.value = e, this.tokens = n, this.type = "cdata";
  }
  visit(e, r) {
    return e.visitCdata(this, r);
  }
};
var zt = class extends ae {
  constructor(e, r, n, s, i, a) {
    super(s, a), this.switchValue = e, this.type = r, this.cases = n, this.switchValueSourceSpan = i;
  }
  visit(e, r) {
    return e.visitExpansion(this, r);
  }
};
var Yt = class {
  constructor(e, r, n, s, i) {
    this.value = e, this.expression = r, this.sourceSpan = n, this.valueSourceSpan = s, this.expSourceSpan = i, this.type = "expansionCase";
  }
  visit(e, r) {
    return e.visitExpansionCase(this, r);
  }
};
var jt = class extends ae {
  constructor(e, r, n, s, i, a, o) {
    super(n, o), this.name = e, this.value = r, this.keySpan = s, this.valueSpan = i, this.valueTokens = a, this.type = "attribute";
  }
  visit(e, r) {
    return e.visitAttribute(this, r);
  }
  get nameSpan() {
    return this.keySpan;
  }
};
var Y = class extends ae {
  constructor(e, r, n, s, i, a = null, o = null, u) {
    super(s, u), this.name = e, this.attrs = r, this.children = n, this.startSourceSpan = i, this.endSourceSpan = a, this.nameSpan = o, this.type = "element";
  }
  visit(e, r) {
    return e.visitElement(this, r);
  }
};
var Kt = class {
  constructor(e, r) {
    this.value = e, this.sourceSpan = r, this.type = "comment";
  }
  visit(e, r) {
    return e.visitComment(this, r);
  }
};
var Xt = class {
  constructor(e, r) {
    this.value = e, this.sourceSpan = r, this.type = "docType";
  }
  visit(e, r) {
    return e.visitDocType(this, r);
  }
};
var ee = class extends ae {
  constructor(e, r, n, s, i, a, o = null, u) {
    super(s, u), this.name = e, this.parameters = r, this.children = n, this.nameSpan = i, this.startSourceSpan = a, this.endSourceSpan = o, this.type = "block";
  }
  visit(e, r) {
    return e.visitBlock(this, r);
  }
};
var ht = class {
  constructor(e, r) {
    this.expression = e, this.sourceSpan = r, this.type = "blockParameter", this.startSourceSpan = null, this.endSourceSpan = null;
  }
  visit(e, r) {
    return e.visitBlockParameter(this, r);
  }
};
var mt = class {
  constructor(e, r, n, s, i) {
    this.name = e, this.value = r, this.sourceSpan = n, this.nameSpan = s, this.valueSpan = i, this.type = "letDeclaration", this.startSourceSpan = null, this.endSourceSpan = null;
  }
  visit(e, r) {
    return e.visitLetDeclaration(this, r);
  }
};
function Qt(t2, e, r = null) {
  let n = [], s = t2.visit ? (i) => t2.visit(i, r) || i.visit(t2, r) : (i) => i.visit(t2, r);
  return e.forEach((i) => {
    let a = s(i);
    a && n.push(a);
  }), n;
}
var ft = class {
  constructor() {}
  visitElement(e, r) {
    this.visitChildren(r, (n) => {
      n(e.attrs), n(e.children);
    });
  }
  visitAttribute(e, r) {}
  visitText(e, r) {}
  visitCdata(e, r) {}
  visitComment(e, r) {}
  visitDocType(e, r) {}
  visitExpansion(e, r) {
    return this.visitChildren(r, (n) => {
      n(e.cases);
    });
  }
  visitExpansionCase(e, r) {}
  visitBlock(e, r) {
    this.visitChildren(r, (n) => {
      n(e.parameters), n(e.children);
    });
  }
  visitBlockParameter(e, r) {}
  visitLetDeclaration(e, r) {}
  visitChildren(e, r) {
    let n = [], s = this;
    function i(a) {
      a && n.push(Qt(s, a, e));
    }
    return r(i), Array.prototype.concat.apply([], n);
  }
};
var Ve = { AElig: "Æ", AMP: "&", amp: "&", Aacute: "Á", Abreve: "Ă", Acirc: "Â", Acy: "А", Afr: "\uD835\uDD04", Agrave: "À", Alpha: "Α", Amacr: "Ā", And: "⩓", Aogon: "Ą", Aopf: "\uD835\uDD38", ApplyFunction: "⁡", af: "⁡", Aring: "Å", angst: "Å", Ascr: "\uD835\uDC9C", Assign: "≔", colone: "≔", coloneq: "≔", Atilde: "Ã", Auml: "Ä", Backslash: "∖", setminus: "∖", setmn: "∖", smallsetminus: "∖", ssetmn: "∖", Barv: "⫧", Barwed: "⌆", doublebarwedge: "⌆", Bcy: "Б", Because: "∵", becaus: "∵", because: "∵", Bernoullis: "ℬ", Bscr: "ℬ", bernou: "ℬ", Beta: "Β", Bfr: "\uD835\uDD05", Bopf: "\uD835\uDD39", Breve: "˘", breve: "˘", Bumpeq: "≎", HumpDownHump: "≎", bump: "≎", CHcy: "Ч", COPY: "©", copy: "©", Cacute: "Ć", Cap: "⋒", CapitalDifferentialD: "ⅅ", DD: "ⅅ", Cayleys: "ℭ", Cfr: "ℭ", Ccaron: "Č", Ccedil: "Ç", Ccirc: "Ĉ", Cconint: "∰", Cdot: "Ċ", Cedilla: "¸", cedil: "¸", CenterDot: "·", centerdot: "·", middot: "·", Chi: "Χ", CircleDot: "⊙", odot: "⊙", CircleMinus: "⊖", ominus: "⊖", CirclePlus: "⊕", oplus: "⊕", CircleTimes: "⊗", otimes: "⊗", ClockwiseContourIntegral: "∲", cwconint: "∲", CloseCurlyDoubleQuote: "”", rdquo: "”", rdquor: "”", CloseCurlyQuote: "’", rsquo: "’", rsquor: "’", Colon: "∷", Proportion: "∷", Colone: "⩴", Congruent: "≡", equiv: "≡", Conint: "∯", DoubleContourIntegral: "∯", ContourIntegral: "∮", conint: "∮", oint: "∮", Copf: "ℂ", complexes: "ℂ", Coproduct: "∐", coprod: "∐", CounterClockwiseContourIntegral: "∳", awconint: "∳", Cross: "⨯", Cscr: "\uD835\uDC9E", Cup: "⋓", CupCap: "≍", asympeq: "≍", DDotrahd: "⤑", DJcy: "Ђ", DScy: "Ѕ", DZcy: "Џ", Dagger: "‡", ddagger: "‡", Darr: "↡", Dashv: "⫤", DoubleLeftTee: "⫤", Dcaron: "Ď", Dcy: "Д", Del: "∇", nabla: "∇", Delta: "Δ", Dfr: "\uD835\uDD07", DiacriticalAcute: "´", acute: "´", DiacriticalDot: "˙", dot: "˙", DiacriticalDoubleAcute: "˝", dblac: "˝", DiacriticalGrave: "`", grave: "`", DiacriticalTilde: "˜", tilde: "˜", Diamond: "⋄", diam: "⋄", diamond: "⋄", DifferentialD: "ⅆ", dd: "ⅆ", Dopf: "\uD835\uDD3B", Dot: "¨", DoubleDot: "¨", die: "¨", uml: "¨", DotDot: "⃜", DotEqual: "≐", doteq: "≐", esdot: "≐", DoubleDownArrow: "⇓", Downarrow: "⇓", dArr: "⇓", DoubleLeftArrow: "⇐", Leftarrow: "⇐", lArr: "⇐", DoubleLeftRightArrow: "⇔", Leftrightarrow: "⇔", hArr: "⇔", iff: "⇔", DoubleLongLeftArrow: "⟸", Longleftarrow: "⟸", xlArr: "⟸", DoubleLongLeftRightArrow: "⟺", Longleftrightarrow: "⟺", xhArr: "⟺", DoubleLongRightArrow: "⟹", Longrightarrow: "⟹", xrArr: "⟹", DoubleRightArrow: "⇒", Implies: "⇒", Rightarrow: "⇒", rArr: "⇒", DoubleRightTee: "⊨", vDash: "⊨", DoubleUpArrow: "⇑", Uparrow: "⇑", uArr: "⇑", DoubleUpDownArrow: "⇕", Updownarrow: "⇕", vArr: "⇕", DoubleVerticalBar: "∥", par: "∥", parallel: "∥", shortparallel: "∥", spar: "∥", DownArrow: "↓", ShortDownArrow: "↓", darr: "↓", downarrow: "↓", DownArrowBar: "⤓", DownArrowUpArrow: "⇵", duarr: "⇵", DownBreve: "̑", DownLeftRightVector: "⥐", DownLeftTeeVector: "⥞", DownLeftVector: "↽", leftharpoondown: "↽", lhard: "↽", DownLeftVectorBar: "⥖", DownRightTeeVector: "⥟", DownRightVector: "⇁", rhard: "⇁", rightharpoondown: "⇁", DownRightVectorBar: "⥗", DownTee: "⊤", top: "⊤", DownTeeArrow: "↧", mapstodown: "↧", Dscr: "\uD835\uDC9F", Dstrok: "Đ", ENG: "Ŋ", ETH: "Ð", Eacute: "É", Ecaron: "Ě", Ecirc: "Ê", Ecy: "Э", Edot: "Ė", Efr: "\uD835\uDD08", Egrave: "È", Element: "∈", in: "∈", isin: "∈", isinv: "∈", Emacr: "Ē", EmptySmallSquare: "◻", EmptyVerySmallSquare: "▫", Eogon: "Ę", Eopf: "\uD835\uDD3C", Epsilon: "Ε", Equal: "⩵", EqualTilde: "≂", eqsim: "≂", esim: "≂", Equilibrium: "⇌", rightleftharpoons: "⇌", rlhar: "⇌", Escr: "ℰ", expectation: "ℰ", Esim: "⩳", Eta: "Η", Euml: "Ë", Exists: "∃", exist: "∃", ExponentialE: "ⅇ", ee: "ⅇ", exponentiale: "ⅇ", Fcy: "Ф", Ffr: "\uD835\uDD09", FilledSmallSquare: "◼", FilledVerySmallSquare: "▪", blacksquare: "▪", squarf: "▪", squf: "▪", Fopf: "\uD835\uDD3D", ForAll: "∀", forall: "∀", Fouriertrf: "ℱ", Fscr: "ℱ", GJcy: "Ѓ", GT: ">", gt: ">", Gamma: "Γ", Gammad: "Ϝ", Gbreve: "Ğ", Gcedil: "Ģ", Gcirc: "Ĝ", Gcy: "Г", Gdot: "Ġ", Gfr: "\uD835\uDD0A", Gg: "⋙", ggg: "⋙", Gopf: "\uD835\uDD3E", GreaterEqual: "≥", ge: "≥", geq: "≥", GreaterEqualLess: "⋛", gel: "⋛", gtreqless: "⋛", GreaterFullEqual: "≧", gE: "≧", geqq: "≧", GreaterGreater: "⪢", GreaterLess: "≷", gl: "≷", gtrless: "≷", GreaterSlantEqual: "⩾", geqslant: "⩾", ges: "⩾", GreaterTilde: "≳", gsim: "≳", gtrsim: "≳", Gscr: "\uD835\uDCA2", Gt: "≫", NestedGreaterGreater: "≫", gg: "≫", HARDcy: "Ъ", Hacek: "ˇ", caron: "ˇ", Hat: "^", Hcirc: "Ĥ", Hfr: "ℌ", Poincareplane: "ℌ", HilbertSpace: "ℋ", Hscr: "ℋ", hamilt: "ℋ", Hopf: "ℍ", quaternions: "ℍ", HorizontalLine: "─", boxh: "─", Hstrok: "Ħ", HumpEqual: "≏", bumpe: "≏", bumpeq: "≏", IEcy: "Е", IJlig: "Ĳ", IOcy: "Ё", Iacute: "Í", Icirc: "Î", Icy: "И", Idot: "İ", Ifr: "ℑ", Im: "ℑ", image: "ℑ", imagpart: "ℑ", Igrave: "Ì", Imacr: "Ī", ImaginaryI: "ⅈ", ii: "ⅈ", Int: "∬", Integral: "∫", int: "∫", Intersection: "⋂", bigcap: "⋂", xcap: "⋂", InvisibleComma: "⁣", ic: "⁣", InvisibleTimes: "⁢", it: "⁢", Iogon: "Į", Iopf: "\uD835\uDD40", Iota: "Ι", Iscr: "ℐ", imagline: "ℐ", Itilde: "Ĩ", Iukcy: "І", Iuml: "Ï", Jcirc: "Ĵ", Jcy: "Й", Jfr: "\uD835\uDD0D", Jopf: "\uD835\uDD41", Jscr: "\uD835\uDCA5", Jsercy: "Ј", Jukcy: "Є", KHcy: "Х", KJcy: "Ќ", Kappa: "Κ", Kcedil: "Ķ", Kcy: "К", Kfr: "\uD835\uDD0E", Kopf: "\uD835\uDD42", Kscr: "\uD835\uDCA6", LJcy: "Љ", LT: "<", lt: "<", Lacute: "Ĺ", Lambda: "Λ", Lang: "⟪", Laplacetrf: "ℒ", Lscr: "ℒ", lagran: "ℒ", Larr: "↞", twoheadleftarrow: "↞", Lcaron: "Ľ", Lcedil: "Ļ", Lcy: "Л", LeftAngleBracket: "⟨", lang: "⟨", langle: "⟨", LeftArrow: "←", ShortLeftArrow: "←", larr: "←", leftarrow: "←", slarr: "←", LeftArrowBar: "⇤", larrb: "⇤", LeftArrowRightArrow: "⇆", leftrightarrows: "⇆", lrarr: "⇆", LeftCeiling: "⌈", lceil: "⌈", LeftDoubleBracket: "⟦", lobrk: "⟦", LeftDownTeeVector: "⥡", LeftDownVector: "⇃", dharl: "⇃", downharpoonleft: "⇃", LeftDownVectorBar: "⥙", LeftFloor: "⌊", lfloor: "⌊", LeftRightArrow: "↔", harr: "↔", leftrightarrow: "↔", LeftRightVector: "⥎", LeftTee: "⊣", dashv: "⊣", LeftTeeArrow: "↤", mapstoleft: "↤", LeftTeeVector: "⥚", LeftTriangle: "⊲", vartriangleleft: "⊲", vltri: "⊲", LeftTriangleBar: "⧏", LeftTriangleEqual: "⊴", ltrie: "⊴", trianglelefteq: "⊴", LeftUpDownVector: "⥑", LeftUpTeeVector: "⥠", LeftUpVector: "↿", uharl: "↿", upharpoonleft: "↿", LeftUpVectorBar: "⥘", LeftVector: "↼", leftharpoonup: "↼", lharu: "↼", LeftVectorBar: "⥒", LessEqualGreater: "⋚", leg: "⋚", lesseqgtr: "⋚", LessFullEqual: "≦", lE: "≦", leqq: "≦", LessGreater: "≶", lessgtr: "≶", lg: "≶", LessLess: "⪡", LessSlantEqual: "⩽", leqslant: "⩽", les: "⩽", LessTilde: "≲", lesssim: "≲", lsim: "≲", Lfr: "\uD835\uDD0F", Ll: "⋘", Lleftarrow: "⇚", lAarr: "⇚", Lmidot: "Ŀ", LongLeftArrow: "⟵", longleftarrow: "⟵", xlarr: "⟵", LongLeftRightArrow: "⟷", longleftrightarrow: "⟷", xharr: "⟷", LongRightArrow: "⟶", longrightarrow: "⟶", xrarr: "⟶", Lopf: "\uD835\uDD43", LowerLeftArrow: "↙", swarr: "↙", swarrow: "↙", LowerRightArrow: "↘", searr: "↘", searrow: "↘", Lsh: "↰", lsh: "↰", Lstrok: "Ł", Lt: "≪", NestedLessLess: "≪", ll: "≪", Map: "⤅", Mcy: "М", MediumSpace: " ", Mellintrf: "ℳ", Mscr: "ℳ", phmmat: "ℳ", Mfr: "\uD835\uDD10", MinusPlus: "∓", mnplus: "∓", mp: "∓", Mopf: "\uD835\uDD44", Mu: "Μ", NJcy: "Њ", Nacute: "Ń", Ncaron: "Ň", Ncedil: "Ņ", Ncy: "Н", NegativeMediumSpace: "​", NegativeThickSpace: "​", NegativeThinSpace: "​", NegativeVeryThinSpace: "​", ZeroWidthSpace: "​", NewLine: `
`, Nfr: "\uD835\uDD11", NoBreak: "⁠", NonBreakingSpace: " ", nbsp: " ", Nopf: "ℕ", naturals: "ℕ", Not: "⫬", NotCongruent: "≢", nequiv: "≢", NotCupCap: "≭", NotDoubleVerticalBar: "∦", npar: "∦", nparallel: "∦", nshortparallel: "∦", nspar: "∦", NotElement: "∉", notin: "∉", notinva: "∉", NotEqual: "≠", ne: "≠", NotEqualTilde: "≂̸", nesim: "≂̸", NotExists: "∄", nexist: "∄", nexists: "∄", NotGreater: "≯", ngt: "≯", ngtr: "≯", NotGreaterEqual: "≱", nge: "≱", ngeq: "≱", NotGreaterFullEqual: "≧̸", ngE: "≧̸", ngeqq: "≧̸", NotGreaterGreater: "≫̸", nGtv: "≫̸", NotGreaterLess: "≹", ntgl: "≹", NotGreaterSlantEqual: "⩾̸", ngeqslant: "⩾̸", nges: "⩾̸", NotGreaterTilde: "≵", ngsim: "≵", NotHumpDownHump: "≎̸", nbump: "≎̸", NotHumpEqual: "≏̸", nbumpe: "≏̸", NotLeftTriangle: "⋪", nltri: "⋪", ntriangleleft: "⋪", NotLeftTriangleBar: "⧏̸", NotLeftTriangleEqual: "⋬", nltrie: "⋬", ntrianglelefteq: "⋬", NotLess: "≮", nless: "≮", nlt: "≮", NotLessEqual: "≰", nle: "≰", nleq: "≰", NotLessGreater: "≸", ntlg: "≸", NotLessLess: "≪̸", nLtv: "≪̸", NotLessSlantEqual: "⩽̸", nleqslant: "⩽̸", nles: "⩽̸", NotLessTilde: "≴", nlsim: "≴", NotNestedGreaterGreater: "⪢̸", NotNestedLessLess: "⪡̸", NotPrecedes: "⊀", npr: "⊀", nprec: "⊀", NotPrecedesEqual: "⪯̸", npre: "⪯̸", npreceq: "⪯̸", NotPrecedesSlantEqual: "⋠", nprcue: "⋠", NotReverseElement: "∌", notni: "∌", notniva: "∌", NotRightTriangle: "⋫", nrtri: "⋫", ntriangleright: "⋫", NotRightTriangleBar: "⧐̸", NotRightTriangleEqual: "⋭", nrtrie: "⋭", ntrianglerighteq: "⋭", NotSquareSubset: "⊏̸", NotSquareSubsetEqual: "⋢", nsqsube: "⋢", NotSquareSuperset: "⊐̸", NotSquareSupersetEqual: "⋣", nsqsupe: "⋣", NotSubset: "⊂⃒", nsubset: "⊂⃒", vnsub: "⊂⃒", NotSubsetEqual: "⊈", nsube: "⊈", nsubseteq: "⊈", NotSucceeds: "⊁", nsc: "⊁", nsucc: "⊁", NotSucceedsEqual: "⪰̸", nsce: "⪰̸", nsucceq: "⪰̸", NotSucceedsSlantEqual: "⋡", nsccue: "⋡", NotSucceedsTilde: "≿̸", NotSuperset: "⊃⃒", nsupset: "⊃⃒", vnsup: "⊃⃒", NotSupersetEqual: "⊉", nsupe: "⊉", nsupseteq: "⊉", NotTilde: "≁", nsim: "≁", NotTildeEqual: "≄", nsime: "≄", nsimeq: "≄", NotTildeFullEqual: "≇", ncong: "≇", NotTildeTilde: "≉", nap: "≉", napprox: "≉", NotVerticalBar: "∤", nmid: "∤", nshortmid: "∤", nsmid: "∤", Nscr: "\uD835\uDCA9", Ntilde: "Ñ", Nu: "Ν", OElig: "Œ", Oacute: "Ó", Ocirc: "Ô", Ocy: "О", Odblac: "Ő", Ofr: "\uD835\uDD12", Ograve: "Ò", Omacr: "Ō", Omega: "Ω", ohm: "Ω", Omicron: "Ο", Oopf: "\uD835\uDD46", OpenCurlyDoubleQuote: "“", ldquo: "“", OpenCurlyQuote: "‘", lsquo: "‘", Or: "⩔", Oscr: "\uD835\uDCAA", Oslash: "Ø", Otilde: "Õ", Otimes: "⨷", Ouml: "Ö", OverBar: "‾", oline: "‾", OverBrace: "⏞", OverBracket: "⎴", tbrk: "⎴", OverParenthesis: "⏜", PartialD: "∂", part: "∂", Pcy: "П", Pfr: "\uD835\uDD13", Phi: "Φ", Pi: "Π", PlusMinus: "±", plusmn: "±", pm: "±", Popf: "ℙ", primes: "ℙ", Pr: "⪻", Precedes: "≺", pr: "≺", prec: "≺", PrecedesEqual: "⪯", pre: "⪯", preceq: "⪯", PrecedesSlantEqual: "≼", prcue: "≼", preccurlyeq: "≼", PrecedesTilde: "≾", precsim: "≾", prsim: "≾", Prime: "″", Product: "∏", prod: "∏", Proportional: "∝", prop: "∝", propto: "∝", varpropto: "∝", vprop: "∝", Pscr: "\uD835\uDCAB", Psi: "Ψ", QUOT: '"', quot: '"', Qfr: "\uD835\uDD14", Qopf: "ℚ", rationals: "ℚ", Qscr: "\uD835\uDCAC", RBarr: "⤐", drbkarow: "⤐", REG: "®", circledR: "®", reg: "®", Racute: "Ŕ", Rang: "⟫", Rarr: "↠", twoheadrightarrow: "↠", Rarrtl: "⤖", Rcaron: "Ř", Rcedil: "Ŗ", Rcy: "Р", Re: "ℜ", Rfr: "ℜ", real: "ℜ", realpart: "ℜ", ReverseElement: "∋", SuchThat: "∋", ni: "∋", niv: "∋", ReverseEquilibrium: "⇋", leftrightharpoons: "⇋", lrhar: "⇋", ReverseUpEquilibrium: "⥯", duhar: "⥯", Rho: "Ρ", RightAngleBracket: "⟩", rang: "⟩", rangle: "⟩", RightArrow: "→", ShortRightArrow: "→", rarr: "→", rightarrow: "→", srarr: "→", RightArrowBar: "⇥", rarrb: "⇥", RightArrowLeftArrow: "⇄", rightleftarrows: "⇄", rlarr: "⇄", RightCeiling: "⌉", rceil: "⌉", RightDoubleBracket: "⟧", robrk: "⟧", RightDownTeeVector: "⥝", RightDownVector: "⇂", dharr: "⇂", downharpoonright: "⇂", RightDownVectorBar: "⥕", RightFloor: "⌋", rfloor: "⌋", RightTee: "⊢", vdash: "⊢", RightTeeArrow: "↦", map: "↦", mapsto: "↦", RightTeeVector: "⥛", RightTriangle: "⊳", vartriangleright: "⊳", vrtri: "⊳", RightTriangleBar: "⧐", RightTriangleEqual: "⊵", rtrie: "⊵", trianglerighteq: "⊵", RightUpDownVector: "⥏", RightUpTeeVector: "⥜", RightUpVector: "↾", uharr: "↾", upharpoonright: "↾", RightUpVectorBar: "⥔", RightVector: "⇀", rharu: "⇀", rightharpoonup: "⇀", RightVectorBar: "⥓", Ropf: "ℝ", reals: "ℝ", RoundImplies: "⥰", Rrightarrow: "⇛", rAarr: "⇛", Rscr: "ℛ", realine: "ℛ", Rsh: "↱", rsh: "↱", RuleDelayed: "⧴", SHCHcy: "Щ", SHcy: "Ш", SOFTcy: "Ь", Sacute: "Ś", Sc: "⪼", Scaron: "Š", Scedil: "Ş", Scirc: "Ŝ", Scy: "С", Sfr: "\uD835\uDD16", ShortUpArrow: "↑", UpArrow: "↑", uarr: "↑", uparrow: "↑", Sigma: "Σ", SmallCircle: "∘", compfn: "∘", Sopf: "\uD835\uDD4A", Sqrt: "√", radic: "√", Square: "□", squ: "□", square: "□", SquareIntersection: "⊓", sqcap: "⊓", SquareSubset: "⊏", sqsub: "⊏", sqsubset: "⊏", SquareSubsetEqual: "⊑", sqsube: "⊑", sqsubseteq: "⊑", SquareSuperset: "⊐", sqsup: "⊐", sqsupset: "⊐", SquareSupersetEqual: "⊒", sqsupe: "⊒", sqsupseteq: "⊒", SquareUnion: "⊔", sqcup: "⊔", Sscr: "\uD835\uDCAE", Star: "⋆", sstarf: "⋆", Sub: "⋐", Subset: "⋐", SubsetEqual: "⊆", sube: "⊆", subseteq: "⊆", Succeeds: "≻", sc: "≻", succ: "≻", SucceedsEqual: "⪰", sce: "⪰", succeq: "⪰", SucceedsSlantEqual: "≽", sccue: "≽", succcurlyeq: "≽", SucceedsTilde: "≿", scsim: "≿", succsim: "≿", Sum: "∑", sum: "∑", Sup: "⋑", Supset: "⋑", Superset: "⊃", sup: "⊃", supset: "⊃", SupersetEqual: "⊇", supe: "⊇", supseteq: "⊇", THORN: "Þ", TRADE: "™", trade: "™", TSHcy: "Ћ", TScy: "Ц", Tab: "\t", Tau: "Τ", Tcaron: "Ť", Tcedil: "Ţ", Tcy: "Т", Tfr: "\uD835\uDD17", Therefore: "∴", there4: "∴", therefore: "∴", Theta: "Θ", ThickSpace: "  ", ThinSpace: " ", thinsp: " ", Tilde: "∼", sim: "∼", thicksim: "∼", thksim: "∼", TildeEqual: "≃", sime: "≃", simeq: "≃", TildeFullEqual: "≅", cong: "≅", TildeTilde: "≈", ap: "≈", approx: "≈", asymp: "≈", thickapprox: "≈", thkap: "≈", Topf: "\uD835\uDD4B", TripleDot: "⃛", tdot: "⃛", Tscr: "\uD835\uDCAF", Tstrok: "Ŧ", Uacute: "Ú", Uarr: "↟", Uarrocir: "⥉", Ubrcy: "Ў", Ubreve: "Ŭ", Ucirc: "Û", Ucy: "У", Udblac: "Ű", Ufr: "\uD835\uDD18", Ugrave: "Ù", Umacr: "Ū", UnderBar: "_", lowbar: "_", UnderBrace: "⏟", UnderBracket: "⎵", bbrk: "⎵", UnderParenthesis: "⏝", Union: "⋃", bigcup: "⋃", xcup: "⋃", UnionPlus: "⊎", uplus: "⊎", Uogon: "Ų", Uopf: "\uD835\uDD4C", UpArrowBar: "⤒", UpArrowDownArrow: "⇅", udarr: "⇅", UpDownArrow: "↕", updownarrow: "↕", varr: "↕", UpEquilibrium: "⥮", udhar: "⥮", UpTee: "⊥", bot: "⊥", bottom: "⊥", perp: "⊥", UpTeeArrow: "↥", mapstoup: "↥", UpperLeftArrow: "↖", nwarr: "↖", nwarrow: "↖", UpperRightArrow: "↗", nearr: "↗", nearrow: "↗", Upsi: "ϒ", upsih: "ϒ", Upsilon: "Υ", Uring: "Ů", Uscr: "\uD835\uDCB0", Utilde: "Ũ", Uuml: "Ü", VDash: "⊫", Vbar: "⫫", Vcy: "В", Vdash: "⊩", Vdashl: "⫦", Vee: "⋁", bigvee: "⋁", xvee: "⋁", Verbar: "‖", Vert: "‖", VerticalBar: "∣", mid: "∣", shortmid: "∣", smid: "∣", VerticalLine: "|", verbar: "|", vert: "|", VerticalSeparator: "❘", VerticalTilde: "≀", wr: "≀", wreath: "≀", VeryThinSpace: " ", hairsp: " ", Vfr: "\uD835\uDD19", Vopf: "\uD835\uDD4D", Vscr: "\uD835\uDCB1", Vvdash: "⊪", Wcirc: "Ŵ", Wedge: "⋀", bigwedge: "⋀", xwedge: "⋀", Wfr: "\uD835\uDD1A", Wopf: "\uD835\uDD4E", Wscr: "\uD835\uDCB2", Xfr: "\uD835\uDD1B", Xi: "Ξ", Xopf: "\uD835\uDD4F", Xscr: "\uD835\uDCB3", YAcy: "Я", YIcy: "Ї", YUcy: "Ю", Yacute: "Ý", Ycirc: "Ŷ", Ycy: "Ы", Yfr: "\uD835\uDD1C", Yopf: "\uD835\uDD50", Yscr: "\uD835\uDCB4", Yuml: "Ÿ", ZHcy: "Ж", Zacute: "Ź", Zcaron: "Ž", Zcy: "З", Zdot: "Ż", Zeta: "Ζ", Zfr: "ℨ", zeetrf: "ℨ", Zopf: "ℤ", integers: "ℤ", Zscr: "\uD835\uDCB5", aacute: "á", abreve: "ă", ac: "∾", mstpos: "∾", acE: "∾̳", acd: "∿", acirc: "â", acy: "а", aelig: "æ", afr: "\uD835\uDD1E", agrave: "à", alefsym: "ℵ", aleph: "ℵ", alpha: "α", amacr: "ā", amalg: "⨿", and: "∧", wedge: "∧", andand: "⩕", andd: "⩜", andslope: "⩘", andv: "⩚", ang: "∠", angle: "∠", ange: "⦤", angmsd: "∡", measuredangle: "∡", angmsdaa: "⦨", angmsdab: "⦩", angmsdac: "⦪", angmsdad: "⦫", angmsdae: "⦬", angmsdaf: "⦭", angmsdag: "⦮", angmsdah: "⦯", angrt: "∟", angrtvb: "⊾", angrtvbd: "⦝", angsph: "∢", angzarr: "⍼", aogon: "ą", aopf: "\uD835\uDD52", apE: "⩰", apacir: "⩯", ape: "≊", approxeq: "≊", apid: "≋", apos: "'", aring: "å", ascr: "\uD835\uDCB6", ast: "*", midast: "*", atilde: "ã", auml: "ä", awint: "⨑", bNot: "⫭", backcong: "≌", bcong: "≌", backepsilon: "϶", bepsi: "϶", backprime: "‵", bprime: "‵", backsim: "∽", bsim: "∽", backsimeq: "⋍", bsime: "⋍", barvee: "⊽", barwed: "⌅", barwedge: "⌅", bbrktbrk: "⎶", bcy: "б", bdquo: "„", ldquor: "„", bemptyv: "⦰", beta: "β", beth: "ℶ", between: "≬", twixt: "≬", bfr: "\uD835\uDD1F", bigcirc: "◯", xcirc: "◯", bigodot: "⨀", xodot: "⨀", bigoplus: "⨁", xoplus: "⨁", bigotimes: "⨂", xotime: "⨂", bigsqcup: "⨆", xsqcup: "⨆", bigstar: "★", starf: "★", bigtriangledown: "▽", xdtri: "▽", bigtriangleup: "△", xutri: "△", biguplus: "⨄", xuplus: "⨄", bkarow: "⤍", rbarr: "⤍", blacklozenge: "⧫", lozf: "⧫", blacktriangle: "▴", utrif: "▴", blacktriangledown: "▾", dtrif: "▾", blacktriangleleft: "◂", ltrif: "◂", blacktriangleright: "▸", rtrif: "▸", blank: "␣", blk12: "▒", blk14: "░", blk34: "▓", block: "█", bne: "=⃥", bnequiv: "≡⃥", bnot: "⌐", bopf: "\uD835\uDD53", bowtie: "⋈", boxDL: "╗", boxDR: "╔", boxDl: "╖", boxDr: "╓", boxH: "═", boxHD: "╦", boxHU: "╩", boxHd: "╤", boxHu: "╧", boxUL: "╝", boxUR: "╚", boxUl: "╜", boxUr: "╙", boxV: "║", boxVH: "╬", boxVL: "╣", boxVR: "╠", boxVh: "╫", boxVl: "╢", boxVr: "╟", boxbox: "⧉", boxdL: "╕", boxdR: "╒", boxdl: "┐", boxdr: "┌", boxhD: "╥", boxhU: "╨", boxhd: "┬", boxhu: "┴", boxminus: "⊟", minusb: "⊟", boxplus: "⊞", plusb: "⊞", boxtimes: "⊠", timesb: "⊠", boxuL: "╛", boxuR: "╘", boxul: "┘", boxur: "└", boxv: "│", boxvH: "╪", boxvL: "╡", boxvR: "╞", boxvh: "┼", boxvl: "┤", boxvr: "├", brvbar: "¦", bscr: "\uD835\uDCB7", bsemi: "⁏", bsol: "\\", bsolb: "⧅", bsolhsub: "⟈", bull: "•", bullet: "•", bumpE: "⪮", cacute: "ć", cap: "∩", capand: "⩄", capbrcup: "⩉", capcap: "⩋", capcup: "⩇", capdot: "⩀", caps: "∩︀", caret: "⁁", ccaps: "⩍", ccaron: "č", ccedil: "ç", ccirc: "ĉ", ccups: "⩌", ccupssm: "⩐", cdot: "ċ", cemptyv: "⦲", cent: "¢", cfr: "\uD835\uDD20", chcy: "ч", check: "✓", checkmark: "✓", chi: "χ", cir: "○", cirE: "⧃", circ: "ˆ", circeq: "≗", cire: "≗", circlearrowleft: "↺", olarr: "↺", circlearrowright: "↻", orarr: "↻", circledS: "Ⓢ", oS: "Ⓢ", circledast: "⊛", oast: "⊛", circledcirc: "⊚", ocir: "⊚", circleddash: "⊝", odash: "⊝", cirfnint: "⨐", cirmid: "⫯", cirscir: "⧂", clubs: "♣", clubsuit: "♣", colon: ":", comma: ",", commat: "@", comp: "∁", complement: "∁", congdot: "⩭", copf: "\uD835\uDD54", copysr: "℗", crarr: "↵", cross: "✗", cscr: "\uD835\uDCB8", csub: "⫏", csube: "⫑", csup: "⫐", csupe: "⫒", ctdot: "⋯", cudarrl: "⤸", cudarrr: "⤵", cuepr: "⋞", curlyeqprec: "⋞", cuesc: "⋟", curlyeqsucc: "⋟", cularr: "↶", curvearrowleft: "↶", cularrp: "⤽", cup: "∪", cupbrcap: "⩈", cupcap: "⩆", cupcup: "⩊", cupdot: "⊍", cupor: "⩅", cups: "∪︀", curarr: "↷", curvearrowright: "↷", curarrm: "⤼", curlyvee: "⋎", cuvee: "⋎", curlywedge: "⋏", cuwed: "⋏", curren: "¤", cwint: "∱", cylcty: "⌭", dHar: "⥥", dagger: "†", daleth: "ℸ", dash: "‐", hyphen: "‐", dbkarow: "⤏", rBarr: "⤏", dcaron: "ď", dcy: "д", ddarr: "⇊", downdownarrows: "⇊", ddotseq: "⩷", eDDot: "⩷", deg: "°", delta: "δ", demptyv: "⦱", dfisht: "⥿", dfr: "\uD835\uDD21", diamondsuit: "♦", diams: "♦", digamma: "ϝ", gammad: "ϝ", disin: "⋲", div: "÷", divide: "÷", divideontimes: "⋇", divonx: "⋇", djcy: "ђ", dlcorn: "⌞", llcorner: "⌞", dlcrop: "⌍", dollar: "$", dopf: "\uD835\uDD55", doteqdot: "≑", eDot: "≑", dotminus: "∸", minusd: "∸", dotplus: "∔", plusdo: "∔", dotsquare: "⊡", sdotb: "⊡", drcorn: "⌟", lrcorner: "⌟", drcrop: "⌌", dscr: "\uD835\uDCB9", dscy: "ѕ", dsol: "⧶", dstrok: "đ", dtdot: "⋱", dtri: "▿", triangledown: "▿", dwangle: "⦦", dzcy: "џ", dzigrarr: "⟿", eacute: "é", easter: "⩮", ecaron: "ě", ecir: "≖", eqcirc: "≖", ecirc: "ê", ecolon: "≕", eqcolon: "≕", ecy: "э", edot: "ė", efDot: "≒", fallingdotseq: "≒", efr: "\uD835\uDD22", eg: "⪚", egrave: "è", egs: "⪖", eqslantgtr: "⪖", egsdot: "⪘", el: "⪙", elinters: "⏧", ell: "ℓ", els: "⪕", eqslantless: "⪕", elsdot: "⪗", emacr: "ē", empty: "∅", emptyset: "∅", emptyv: "∅", varnothing: "∅", emsp13: " ", emsp14: " ", emsp: " ", eng: "ŋ", ensp: " ", eogon: "ę", eopf: "\uD835\uDD56", epar: "⋕", eparsl: "⧣", eplus: "⩱", epsi: "ε", epsilon: "ε", epsiv: "ϵ", straightepsilon: "ϵ", varepsilon: "ϵ", equals: "=", equest: "≟", questeq: "≟", equivDD: "⩸", eqvparsl: "⧥", erDot: "≓", risingdotseq: "≓", erarr: "⥱", escr: "ℯ", eta: "η", eth: "ð", euml: "ë", euro: "€", excl: "!", fcy: "ф", female: "♀", ffilig: "ﬃ", fflig: "ﬀ", ffllig: "ﬄ", ffr: "\uD835\uDD23", filig: "ﬁ", fjlig: "fj", flat: "♭", fllig: "ﬂ", fltns: "▱", fnof: "ƒ", fopf: "\uD835\uDD57", fork: "⋔", pitchfork: "⋔", forkv: "⫙", fpartint: "⨍", frac12: "½", half: "½", frac13: "⅓", frac14: "¼", frac15: "⅕", frac16: "⅙", frac18: "⅛", frac23: "⅔", frac25: "⅖", frac34: "¾", frac35: "⅗", frac38: "⅜", frac45: "⅘", frac56: "⅚", frac58: "⅝", frac78: "⅞", frasl: "⁄", frown: "⌢", sfrown: "⌢", fscr: "\uD835\uDCBB", gEl: "⪌", gtreqqless: "⪌", gacute: "ǵ", gamma: "γ", gap: "⪆", gtrapprox: "⪆", gbreve: "ğ", gcirc: "ĝ", gcy: "г", gdot: "ġ", gescc: "⪩", gesdot: "⪀", gesdoto: "⪂", gesdotol: "⪄", gesl: "⋛︀", gesles: "⪔", gfr: "\uD835\uDD24", gimel: "ℷ", gjcy: "ѓ", glE: "⪒", gla: "⪥", glj: "⪤", gnE: "≩", gneqq: "≩", gnap: "⪊", gnapprox: "⪊", gne: "⪈", gneq: "⪈", gnsim: "⋧", gopf: "\uD835\uDD58", gscr: "ℊ", gsime: "⪎", gsiml: "⪐", gtcc: "⪧", gtcir: "⩺", gtdot: "⋗", gtrdot: "⋗", gtlPar: "⦕", gtquest: "⩼", gtrarr: "⥸", gvertneqq: "≩︀", gvnE: "≩︀", hardcy: "ъ", harrcir: "⥈", harrw: "↭", leftrightsquigarrow: "↭", hbar: "ℏ", hslash: "ℏ", planck: "ℏ", plankv: "ℏ", hcirc: "ĥ", hearts: "♥", heartsuit: "♥", hellip: "…", mldr: "…", hercon: "⊹", hfr: "\uD835\uDD25", hksearow: "⤥", searhk: "⤥", hkswarow: "⤦", swarhk: "⤦", hoarr: "⇿", homtht: "∻", hookleftarrow: "↩", larrhk: "↩", hookrightarrow: "↪", rarrhk: "↪", hopf: "\uD835\uDD59", horbar: "―", hscr: "\uD835\uDCBD", hstrok: "ħ", hybull: "⁃", iacute: "í", icirc: "î", icy: "и", iecy: "е", iexcl: "¡", ifr: "\uD835\uDD26", igrave: "ì", iiiint: "⨌", qint: "⨌", iiint: "∭", tint: "∭", iinfin: "⧜", iiota: "℩", ijlig: "ĳ", imacr: "ī", imath: "ı", inodot: "ı", imof: "⊷", imped: "Ƶ", incare: "℅", infin: "∞", infintie: "⧝", intcal: "⊺", intercal: "⊺", intlarhk: "⨗", intprod: "⨼", iprod: "⨼", iocy: "ё", iogon: "į", iopf: "\uD835\uDD5A", iota: "ι", iquest: "¿", iscr: "\uD835\uDCBE", isinE: "⋹", isindot: "⋵", isins: "⋴", isinsv: "⋳", itilde: "ĩ", iukcy: "і", iuml: "ï", jcirc: "ĵ", jcy: "й", jfr: "\uD835\uDD27", jmath: "ȷ", jopf: "\uD835\uDD5B", jscr: "\uD835\uDCBF", jsercy: "ј", jukcy: "є", kappa: "κ", kappav: "ϰ", varkappa: "ϰ", kcedil: "ķ", kcy: "к", kfr: "\uD835\uDD28", kgreen: "ĸ", khcy: "х", kjcy: "ќ", kopf: "\uD835\uDD5C", kscr: "\uD835\uDCC0", lAtail: "⤛", lBarr: "⤎", lEg: "⪋", lesseqqgtr: "⪋", lHar: "⥢", lacute: "ĺ", laemptyv: "⦴", lambda: "λ", langd: "⦑", lap: "⪅", lessapprox: "⪅", laquo: "«", larrbfs: "⤟", larrfs: "⤝", larrlp: "↫", looparrowleft: "↫", larrpl: "⤹", larrsim: "⥳", larrtl: "↢", leftarrowtail: "↢", lat: "⪫", latail: "⤙", late: "⪭", lates: "⪭︀", lbarr: "⤌", lbbrk: "❲", lbrace: "{", lcub: "{", lbrack: "[", lsqb: "[", lbrke: "⦋", lbrksld: "⦏", lbrkslu: "⦍", lcaron: "ľ", lcedil: "ļ", lcy: "л", ldca: "⤶", ldrdhar: "⥧", ldrushar: "⥋", ldsh: "↲", le: "≤", leq: "≤", leftleftarrows: "⇇", llarr: "⇇", leftthreetimes: "⋋", lthree: "⋋", lescc: "⪨", lesdot: "⩿", lesdoto: "⪁", lesdotor: "⪃", lesg: "⋚︀", lesges: "⪓", lessdot: "⋖", ltdot: "⋖", lfisht: "⥼", lfr: "\uD835\uDD29", lgE: "⪑", lharul: "⥪", lhblk: "▄", ljcy: "љ", llhard: "⥫", lltri: "◺", lmidot: "ŀ", lmoust: "⎰", lmoustache: "⎰", lnE: "≨", lneqq: "≨", lnap: "⪉", lnapprox: "⪉", lne: "⪇", lneq: "⪇", lnsim: "⋦", loang: "⟬", loarr: "⇽", longmapsto: "⟼", xmap: "⟼", looparrowright: "↬", rarrlp: "↬", lopar: "⦅", lopf: "\uD835\uDD5D", loplus: "⨭", lotimes: "⨴", lowast: "∗", loz: "◊", lozenge: "◊", lpar: "(", lparlt: "⦓", lrhard: "⥭", lrm: "‎", lrtri: "⊿", lsaquo: "‹", lscr: "\uD835\uDCC1", lsime: "⪍", lsimg: "⪏", lsquor: "‚", sbquo: "‚", lstrok: "ł", ltcc: "⪦", ltcir: "⩹", ltimes: "⋉", ltlarr: "⥶", ltquest: "⩻", ltrPar: "⦖", ltri: "◃", triangleleft: "◃", lurdshar: "⥊", luruhar: "⥦", lvertneqq: "≨︀", lvnE: "≨︀", mDDot: "∺", macr: "¯", strns: "¯", male: "♂", malt: "✠", maltese: "✠", marker: "▮", mcomma: "⨩", mcy: "м", mdash: "—", mfr: "\uD835\uDD2A", mho: "℧", micro: "µ", midcir: "⫰", minus: "−", minusdu: "⨪", mlcp: "⫛", models: "⊧", mopf: "\uD835\uDD5E", mscr: "\uD835\uDCC2", mu: "μ", multimap: "⊸", mumap: "⊸", nGg: "⋙̸", nGt: "≫⃒", nLeftarrow: "⇍", nlArr: "⇍", nLeftrightarrow: "⇎", nhArr: "⇎", nLl: "⋘̸", nLt: "≪⃒", nRightarrow: "⇏", nrArr: "⇏", nVDash: "⊯", nVdash: "⊮", nacute: "ń", nang: "∠⃒", napE: "⩰̸", napid: "≋̸", napos: "ŉ", natur: "♮", natural: "♮", ncap: "⩃", ncaron: "ň", ncedil: "ņ", ncongdot: "⩭̸", ncup: "⩂", ncy: "н", ndash: "–", neArr: "⇗", nearhk: "⤤", nedot: "≐̸", nesear: "⤨", toea: "⤨", nfr: "\uD835\uDD2B", nharr: "↮", nleftrightarrow: "↮", nhpar: "⫲", nis: "⋼", nisd: "⋺", njcy: "њ", nlE: "≦̸", nleqq: "≦̸", nlarr: "↚", nleftarrow: "↚", nldr: "‥", nopf: "\uD835\uDD5F", not: "¬", notinE: "⋹̸", notindot: "⋵̸", notinvb: "⋷", notinvc: "⋶", notnivb: "⋾", notnivc: "⋽", nparsl: "⫽⃥", npart: "∂̸", npolint: "⨔", nrarr: "↛", nrightarrow: "↛", nrarrc: "⤳̸", nrarrw: "↝̸", nscr: "\uD835\uDCC3", nsub: "⊄", nsubE: "⫅̸", nsubseteqq: "⫅̸", nsup: "⊅", nsupE: "⫆̸", nsupseteqq: "⫆̸", ntilde: "ñ", nu: "ν", num: "#", numero: "№", numsp: " ", nvDash: "⊭", nvHarr: "⤄", nvap: "≍⃒", nvdash: "⊬", nvge: "≥⃒", nvgt: ">⃒", nvinfin: "⧞", nvlArr: "⤂", nvle: "≤⃒", nvlt: "<⃒", nvltrie: "⊴⃒", nvrArr: "⤃", nvrtrie: "⊵⃒", nvsim: "∼⃒", nwArr: "⇖", nwarhk: "⤣", nwnear: "⤧", oacute: "ó", ocirc: "ô", ocy: "о", odblac: "ő", odiv: "⨸", odsold: "⦼", oelig: "œ", ofcir: "⦿", ofr: "\uD835\uDD2C", ogon: "˛", ograve: "ò", ogt: "⧁", ohbar: "⦵", olcir: "⦾", olcross: "⦻", olt: "⧀", omacr: "ō", omega: "ω", omicron: "ο", omid: "⦶", oopf: "\uD835\uDD60", opar: "⦷", operp: "⦹", or: "∨", vee: "∨", ord: "⩝", order: "ℴ", orderof: "ℴ", oscr: "ℴ", ordf: "ª", ordm: "º", origof: "⊶", oror: "⩖", orslope: "⩗", orv: "⩛", oslash: "ø", osol: "⊘", otilde: "õ", otimesas: "⨶", ouml: "ö", ovbar: "⌽", para: "¶", parsim: "⫳", parsl: "⫽", pcy: "п", percnt: "%", period: ".", permil: "‰", pertenk: "‱", pfr: "\uD835\uDD2D", phi: "φ", phiv: "ϕ", straightphi: "ϕ", varphi: "ϕ", phone: "☎", pi: "π", piv: "ϖ", varpi: "ϖ", planckh: "ℎ", plus: "+", plusacir: "⨣", pluscir: "⨢", plusdu: "⨥", pluse: "⩲", plussim: "⨦", plustwo: "⨧", pointint: "⨕", popf: "\uD835\uDD61", pound: "£", prE: "⪳", prap: "⪷", precapprox: "⪷", precnapprox: "⪹", prnap: "⪹", precneqq: "⪵", prnE: "⪵", precnsim: "⋨", prnsim: "⋨", prime: "′", profalar: "⌮", profline: "⌒", profsurf: "⌓", prurel: "⊰", pscr: "\uD835\uDCC5", psi: "ψ", puncsp: " ", qfr: "\uD835\uDD2E", qopf: "\uD835\uDD62", qprime: "⁗", qscr: "\uD835\uDCC6", quatint: "⨖", quest: "?", rAtail: "⤜", rHar: "⥤", race: "∽̱", racute: "ŕ", raemptyv: "⦳", rangd: "⦒", range: "⦥", raquo: "»", rarrap: "⥵", rarrbfs: "⤠", rarrc: "⤳", rarrfs: "⤞", rarrpl: "⥅", rarrsim: "⥴", rarrtl: "↣", rightarrowtail: "↣", rarrw: "↝", rightsquigarrow: "↝", ratail: "⤚", ratio: "∶", rbbrk: "❳", rbrace: "}", rcub: "}", rbrack: "]", rsqb: "]", rbrke: "⦌", rbrksld: "⦎", rbrkslu: "⦐", rcaron: "ř", rcedil: "ŗ", rcy: "р", rdca: "⤷", rdldhar: "⥩", rdsh: "↳", rect: "▭", rfisht: "⥽", rfr: "\uD835\uDD2F", rharul: "⥬", rho: "ρ", rhov: "ϱ", varrho: "ϱ", rightrightarrows: "⇉", rrarr: "⇉", rightthreetimes: "⋌", rthree: "⋌", ring: "˚", rlm: "‏", rmoust: "⎱", rmoustache: "⎱", rnmid: "⫮", roang: "⟭", roarr: "⇾", ropar: "⦆", ropf: "\uD835\uDD63", roplus: "⨮", rotimes: "⨵", rpar: ")", rpargt: "⦔", rppolint: "⨒", rsaquo: "›", rscr: "\uD835\uDCC7", rtimes: "⋊", rtri: "▹", triangleright: "▹", rtriltri: "⧎", ruluhar: "⥨", rx: "℞", sacute: "ś", scE: "⪴", scap: "⪸", succapprox: "⪸", scaron: "š", scedil: "ş", scirc: "ŝ", scnE: "⪶", succneqq: "⪶", scnap: "⪺", succnapprox: "⪺", scnsim: "⋩", succnsim: "⋩", scpolint: "⨓", scy: "с", sdot: "⋅", sdote: "⩦", seArr: "⇘", sect: "§", semi: ";", seswar: "⤩", tosa: "⤩", sext: "✶", sfr: "\uD835\uDD30", sharp: "♯", shchcy: "щ", shcy: "ш", shy: "­", sigma: "σ", sigmaf: "ς", sigmav: "ς", varsigma: "ς", simdot: "⩪", simg: "⪞", simgE: "⪠", siml: "⪝", simlE: "⪟", simne: "≆", simplus: "⨤", simrarr: "⥲", smashp: "⨳", smeparsl: "⧤", smile: "⌣", ssmile: "⌣", smt: "⪪", smte: "⪬", smtes: "⪬︀", softcy: "ь", sol: "/", solb: "⧄", solbar: "⌿", sopf: "\uD835\uDD64", spades: "♠", spadesuit: "♠", sqcaps: "⊓︀", sqcups: "⊔︀", sscr: "\uD835\uDCC8", star: "☆", sub: "⊂", subset: "⊂", subE: "⫅", subseteqq: "⫅", subdot: "⪽", subedot: "⫃", submult: "⫁", subnE: "⫋", subsetneqq: "⫋", subne: "⊊", subsetneq: "⊊", subplus: "⪿", subrarr: "⥹", subsim: "⫇", subsub: "⫕", subsup: "⫓", sung: "♪", sup1: "¹", sup2: "²", sup3: "³", supE: "⫆", supseteqq: "⫆", supdot: "⪾", supdsub: "⫘", supedot: "⫄", suphsol: "⟉", suphsub: "⫗", suplarr: "⥻", supmult: "⫂", supnE: "⫌", supsetneqq: "⫌", supne: "⊋", supsetneq: "⊋", supplus: "⫀", supsim: "⫈", supsub: "⫔", supsup: "⫖", swArr: "⇙", swnwar: "⤪", szlig: "ß", target: "⌖", tau: "τ", tcaron: "ť", tcedil: "ţ", tcy: "т", telrec: "⌕", tfr: "\uD835\uDD31", theta: "θ", thetasym: "ϑ", thetav: "ϑ", vartheta: "ϑ", thorn: "þ", times: "×", timesbar: "⨱", timesd: "⨰", topbot: "⌶", topcir: "⫱", topf: "\uD835\uDD65", topfork: "⫚", tprime: "‴", triangle: "▵", utri: "▵", triangleq: "≜", trie: "≜", tridot: "◬", triminus: "⨺", triplus: "⨹", trisb: "⧍", tritime: "⨻", trpezium: "⏢", tscr: "\uD835\uDCC9", tscy: "ц", tshcy: "ћ", tstrok: "ŧ", uHar: "⥣", uacute: "ú", ubrcy: "ў", ubreve: "ŭ", ucirc: "û", ucy: "у", udblac: "ű", ufisht: "⥾", ufr: "\uD835\uDD32", ugrave: "ù", uhblk: "▀", ulcorn: "⌜", ulcorner: "⌜", ulcrop: "⌏", ultri: "◸", umacr: "ū", uogon: "ų", uopf: "\uD835\uDD66", upsi: "υ", upsilon: "υ", upuparrows: "⇈", uuarr: "⇈", urcorn: "⌝", urcorner: "⌝", urcrop: "⌎", uring: "ů", urtri: "◹", uscr: "\uD835\uDCCA", utdot: "⋰", utilde: "ũ", uuml: "ü", uwangle: "⦧", vBar: "⫨", vBarv: "⫩", vangrt: "⦜", varsubsetneq: "⊊︀", vsubne: "⊊︀", varsubsetneqq: "⫋︀", vsubnE: "⫋︀", varsupsetneq: "⊋︀", vsupne: "⊋︀", varsupsetneqq: "⫌︀", vsupnE: "⫌︀", vcy: "в", veebar: "⊻", veeeq: "≚", vellip: "⋮", vfr: "\uD835\uDD33", vopf: "\uD835\uDD67", vscr: "\uD835\uDCCB", vzigzag: "⦚", wcirc: "ŵ", wedbar: "⩟", wedgeq: "≙", weierp: "℘", wp: "℘", wfr: "\uD835\uDD34", wopf: "\uD835\uDD68", wscr: "\uD835\uDCCC", xfr: "\uD835\uDD35", xi: "ξ", xnis: "⋻", xopf: "\uD835\uDD69", xscr: "\uD835\uDCCD", yacute: "ý", yacy: "я", ycirc: "ŷ", ycy: "ы", yen: "¥", yfr: "\uD835\uDD36", yicy: "ї", yopf: "\uD835\uDD6A", yscr: "\uD835\uDCCE", yucy: "ю", yuml: "ÿ", zacute: "ź", zcaron: "ž", zcy: "з", zdot: "ż", zeta: "ζ", zfr: "\uD835\uDD37", zhcy: "ж", zigrarr: "⇝", zopf: "\uD835\uDD6B", zscr: "\uD835\uDCCF", zwj: "‍", zwnj: "‌" };
var fo = "";
Ve.ngsp = fo;
var go = [/@/, /^\s*$/, /[<>]/, /^[{}]$/, /&(#|[a-z])/i, /^\/\//];
function Xs(t2, e) {
  if (e != null && !(Array.isArray(e) && e.length == 2))
    throw new Error(`Expected '${t2}' to be an array, [start, end].`);
  if (e != null) {
    let r = e[0], n = e[1];
    go.forEach((s) => {
      if (s.test(r) || s.test(n))
        throw new Error(`['${r}', '${n}'] contains unusable interpolation symbol.`);
    });
  }
}
var $r = class t2 {
  static fromArray(e) {
    return e ? (Xs("interpolation", e), new t2(e[0], e[1])) : Or;
  }
  constructor(e, r) {
    this.start = e, this.end = r;
  }
};
var Or = new $r("{{", "}}");
var gt = class extends Oe {
  constructor(e, r, n) {
    super(n, e), this.tokenType = r;
  }
};
var Ur = class {
  constructor(e, r, n) {
    this.tokens = e, this.errors = r, this.nonNormalizedIcuExpressions = n;
  }
};
function li(t3, e, r, n = {}) {
  let s = new Wr(new ve(t3, e), r, n);
  return s.tokenize(), new Ur(Vo(s.tokens), s.errors, s.nonNormalizedIcuExpressions);
}
var Io = /\r\n?/g;
function Ue(t3) {
  return `Unexpected character "${t3 === 0 ? "EOF" : String.fromCharCode(t3)}"`;
}
function ti(t3) {
  return `Unknown entity "${t3}" - use the "&#<decimal>;" or  "&#x<hex>;" syntax`;
}
function Ro(t3, e) {
  return `Unable to parse entity "${e}" - ${t3} character reference entities must end with ";"`;
}
var rr;
(function(t3) {
  t3.HEX = "hexadecimal", t3.DEC = "decimal";
})(rr || (rr = {}));
var Ct = class {
  constructor(e) {
    this.error = e;
  }
};
var Wr = class {
  constructor(e, r, n) {
    this._getTagContentType = r, this._currentTokenStart = null, this._currentTokenType = null, this._expansionCaseStack = [], this._inInterpolation = false, this._fullNameStack = [], this.tokens = [], this.errors = [], this.nonNormalizedIcuExpressions = [], this._tokenizeIcu = n.tokenizeExpansionForms || false, this._interpolationConfig = n.interpolationConfig || Or, this._leadingTriviaCodePoints = n.leadingTriviaChars && n.leadingTriviaChars.map((i) => i.codePointAt(0) || 0), this._canSelfClose = n.canSelfClose || false, this._allowHtmComponentClosingTags = n.allowHtmComponentClosingTags || false;
    let s = n.range || { endPos: e.content.length, startPos: 0, startLine: 0, startCol: 0 };
    this._cursor = n.escapedString ? new Gr(e, s) : new nr(e, s), this._preserveLineEndings = n.preserveLineEndings || false, this._i18nNormalizeLineEndingsInICUs = n.i18nNormalizeLineEndingsInICUs || false, this._tokenizeBlocks = n.tokenizeBlocks ?? true, this._tokenizeLet = n.tokenizeLet ?? true;
    try {
      this._cursor.init();
    } catch (i) {
      this.handleError(i);
    }
  }
  _processCarriageReturns(e) {
    return this._preserveLineEndings ? e : e.replace(Io, `
`);
  }
  tokenize() {
    for (;this._cursor.peek() !== 0; ) {
      let e = this._cursor.clone();
      try {
        if (this._attemptCharCode(60))
          if (this._attemptCharCode(33))
            this._attemptStr("[CDATA[") ? this._consumeCdata(e) : this._attemptStr("--") ? this._consumeComment(e) : this._attemptStrCaseInsensitive("doctype") ? this._consumeDocType(e) : this._consumeBogusComment(e);
          else if (this._attemptCharCode(47))
            this._consumeTagClose(e);
          else {
            let r = this._cursor.clone();
            this._attemptCharCode(63) ? (this._cursor = r, this._consumeBogusComment(e)) : this._consumeTagOpen(e);
          }
        else
          this._tokenizeLet && this._cursor.peek() === 64 && !this._inInterpolation && this._attemptStr("@let") ? this._consumeLetDeclaration(e) : this._tokenizeBlocks && this._attemptCharCode(64) ? this._consumeBlockStart(e) : this._tokenizeBlocks && !this._inInterpolation && !this._isInExpansionCase() && !this._isInExpansionForm() && this._attemptCharCode(125) ? this._consumeBlockEnd(e) : this._tokenizeIcu && this._tokenizeExpansionForm() || this._consumeWithInterpolation(5, 8, () => this._isTextEnd(), () => this._isTagStart());
      } catch (r) {
        this.handleError(r);
      }
    }
    this._beginToken(34), this._endToken([]);
  }
  _getBlockName() {
    let e = false, r = this._cursor.clone();
    return this._attemptCharCodeUntilFn((n) => ut(n) ? !e : si(n) ? (e = true, false) : true), this._cursor.getChars(r).trim();
  }
  _consumeBlockStart(e) {
    this._beginToken(25, e);
    let r = this._endToken([this._getBlockName()]);
    if (this._cursor.peek() === 40)
      if (this._cursor.advance(), this._consumeBlockParameters(), this._attemptCharCodeUntilFn(b), this._attemptCharCode(41))
        this._attemptCharCodeUntilFn(b);
      else {
        r.type = 29;
        return;
      }
    this._attemptCharCode(123) ? (this._beginToken(26), this._endToken([])) : r.type = 29;
  }
  _consumeBlockEnd(e) {
    this._beginToken(27, e), this._endToken([]);
  }
  _consumeBlockParameters() {
    for (this._attemptCharCodeUntilFn(ii);this._cursor.peek() !== 41 && this._cursor.peek() !== 0; ) {
      this._beginToken(28);
      let e = this._cursor.clone(), r = null, n = 0;
      for (;this._cursor.peek() !== 59 && this._cursor.peek() !== 0 || r !== null; ) {
        let s = this._cursor.peek();
        if (s === 92)
          this._cursor.advance();
        else if (s === r)
          r = null;
        else if (r === null && Ot(s))
          r = s;
        else if (s === 40 && r === null)
          n++;
        else if (s === 41 && r === null) {
          if (n === 0)
            break;
          n > 0 && n--;
        }
        this._cursor.advance();
      }
      this._endToken([this._cursor.getChars(e)]), this._attemptCharCodeUntilFn(ii);
    }
  }
  _consumeLetDeclaration(e) {
    if (this._beginToken(30, e), ut(this._cursor.peek()))
      this._attemptCharCodeUntilFn(b);
    else {
      let s = this._endToken([this._cursor.getChars(e)]);
      s.type = 33;
      return;
    }
    let r = this._endToken([this._getLetDeclarationName()]);
    if (this._attemptCharCodeUntilFn(b), !this._attemptCharCode(61)) {
      r.type = 33;
      return;
    }
    this._attemptCharCodeUntilFn((s) => b(s) && !$t(s)), this._consumeLetDeclarationValue(), this._cursor.peek() === 59 ? (this._beginToken(32), this._endToken([]), this._cursor.advance()) : (r.type = 33, r.sourceSpan = this._cursor.getSpan(e));
  }
  _getLetDeclarationName() {
    let e = this._cursor.clone(), r = false;
    return this._attemptCharCodeUntilFn((n) => lt2(n) || n === 36 || n === 95 || r && Rt(n) ? (r = true, false) : true), this._cursor.getChars(e).trim();
  }
  _consumeLetDeclarationValue() {
    let e = this._cursor.clone();
    for (this._beginToken(31, e);this._cursor.peek() !== 0; ) {
      let r = this._cursor.peek();
      if (r === 59)
        break;
      Ot(r) && (this._cursor.advance(), this._attemptCharCodeUntilFn((n) => n === 92 ? (this._cursor.advance(), false) : n === r)), this._cursor.advance();
    }
    this._endToken([this._cursor.getChars(e)]);
  }
  _tokenizeExpansionForm() {
    if (this.isExpansionFormStart())
      return this._consumeExpansionFormStart(), true;
    if (qo(this._cursor.peek()) && this._isInExpansionForm())
      return this._consumeExpansionCaseStart(), true;
    if (this._cursor.peek() === 125) {
      if (this._isInExpansionCase())
        return this._consumeExpansionCaseEnd(), true;
      if (this._isInExpansionForm())
        return this._consumeExpansionFormEnd(), true;
    }
    return false;
  }
  _beginToken(e, r = this._cursor.clone()) {
    this._currentTokenStart = r, this._currentTokenType = e;
  }
  _endToken(e, r) {
    if (this._currentTokenStart === null)
      throw new gt("Programming error - attempted to end a token when there was no start to the token", this._currentTokenType, this._cursor.getSpan(r));
    if (this._currentTokenType === null)
      throw new gt("Programming error - attempted to end a token which has no token type", null, this._cursor.getSpan(this._currentTokenStart));
    let n = { type: this._currentTokenType, parts: e, sourceSpan: (r ?? this._cursor).getSpan(this._currentTokenStart, this._leadingTriviaCodePoints) };
    return this.tokens.push(n), this._currentTokenStart = null, this._currentTokenType = null, n;
  }
  _createError(e, r) {
    this._isInExpansionForm() && (e += ` (Do you have an unescaped "{" in your template? Use "{{ '{' }}") to escape it.)`);
    let n = new gt(e, this._currentTokenType, r);
    return this._currentTokenStart = null, this._currentTokenType = null, new Ct(n);
  }
  handleError(e) {
    if (e instanceof St && (e = this._createError(e.msg, this._cursor.getSpan(e.cursor))), e instanceof Ct)
      this.errors.push(e.error);
    else
      throw e;
  }
  _attemptCharCode(e) {
    return this._cursor.peek() === e ? (this._cursor.advance(), true) : false;
  }
  _attemptCharCodeCaseInsensitive(e) {
    return Ho(this._cursor.peek(), e) ? (this._cursor.advance(), true) : false;
  }
  _requireCharCode(e) {
    let r = this._cursor.clone();
    if (!this._attemptCharCode(e))
      throw this._createError(Ue(this._cursor.peek()), this._cursor.getSpan(r));
  }
  _attemptStr(e) {
    let r = e.length;
    if (this._cursor.charsLeft() < r)
      return false;
    let n = this._cursor.clone();
    for (let s = 0;s < r; s++)
      if (!this._attemptCharCode(e.charCodeAt(s)))
        return this._cursor = n, false;
    return true;
  }
  _attemptStrCaseInsensitive(e) {
    for (let r = 0;r < e.length; r++)
      if (!this._attemptCharCodeCaseInsensitive(e.charCodeAt(r)))
        return false;
    return true;
  }
  _requireStr(e) {
    let r = this._cursor.clone();
    if (!this._attemptStr(e))
      throw this._createError(Ue(this._cursor.peek()), this._cursor.getSpan(r));
  }
  _requireStrCaseInsensitive(e) {
    let r = this._cursor.clone();
    if (!this._attemptStrCaseInsensitive(e))
      throw this._createError(Ue(this._cursor.peek()), this._cursor.getSpan(r));
  }
  _attemptCharCodeUntilFn(e) {
    for (;!e(this._cursor.peek()); )
      this._cursor.advance();
  }
  _requireCharCodeUntilFn(e, r) {
    let n = this._cursor.clone();
    if (this._attemptCharCodeUntilFn(e), this._cursor.diff(n) < r)
      throw this._createError(Ue(this._cursor.peek()), this._cursor.getSpan(n));
  }
  _attemptUntilChar(e) {
    for (;this._cursor.peek() !== e; )
      this._cursor.advance();
  }
  _readChar() {
    let e = String.fromCodePoint(this._cursor.peek());
    return this._cursor.advance(), e;
  }
  _consumeEntity(e) {
    this._beginToken(9);
    let r = this._cursor.clone();
    if (this._cursor.advance(), this._attemptCharCode(35)) {
      let n = this._attemptCharCode(120) || this._attemptCharCode(88), s = this._cursor.clone();
      if (this._attemptCharCodeUntilFn(Oo), this._cursor.peek() != 59) {
        this._cursor.advance();
        let a = n ? rr.HEX : rr.DEC;
        throw this._createError(Ro(a, this._cursor.getChars(r)), this._cursor.getSpan());
      }
      let i = this._cursor.getChars(s);
      this._cursor.advance();
      try {
        let a = parseInt(i, n ? 16 : 10);
        this._endToken([String.fromCharCode(a), this._cursor.getChars(r)]);
      } catch {
        throw this._createError(ti(this._cursor.getChars(r)), this._cursor.getSpan());
      }
    } else {
      let n = this._cursor.clone();
      if (this._attemptCharCodeUntilFn(Mo), this._cursor.peek() != 59)
        this._beginToken(e, r), this._cursor = n, this._endToken(["&"]);
      else {
        let s = this._cursor.getChars(n);
        this._cursor.advance();
        let i = Ve[s];
        if (!i)
          throw this._createError(ti(s), this._cursor.getSpan(r));
        this._endToken([i, `&${s};`]);
      }
    }
  }
  _consumeRawText(e, r) {
    this._beginToken(e ? 6 : 7);
    let n = [];
    for (;; ) {
      let s = this._cursor.clone(), i = r();
      if (this._cursor = s, i)
        break;
      e && this._cursor.peek() === 38 ? (this._endToken([this._processCarriageReturns(n.join(""))]), n.length = 0, this._consumeEntity(6), this._beginToken(6)) : n.push(this._readChar());
    }
    this._endToken([this._processCarriageReturns(n.join(""))]);
  }
  _consumeComment(e) {
    this._beginToken(10, e), this._endToken([]), this._consumeRawText(false, () => this._attemptStr("-->")), this._beginToken(11), this._requireStr("-->"), this._endToken([]);
  }
  _consumeBogusComment(e) {
    this._beginToken(10, e), this._endToken([]), this._consumeRawText(false, () => this._cursor.peek() === 62), this._beginToken(11), this._cursor.advance(), this._endToken([]);
  }
  _consumeCdata(e) {
    this._beginToken(12, e), this._endToken([]), this._consumeRawText(false, () => this._attemptStr("]]>")), this._beginToken(13), this._requireStr("]]>"), this._endToken([]);
  }
  _consumeDocType(e) {
    this._beginToken(18, e), this._endToken([]), this._consumeRawText(false, () => this._cursor.peek() === 62), this._beginToken(19), this._cursor.advance(), this._endToken([]);
  }
  _consumePrefixAndName() {
    let e = this._cursor.clone(), r = "";
    for (;this._cursor.peek() !== 58 && !$o(this._cursor.peek()); )
      this._cursor.advance();
    let n;
    this._cursor.peek() === 58 ? (r = this._cursor.getChars(e), this._cursor.advance(), n = this._cursor.clone()) : n = e, this._requireCharCodeUntilFn(ri, r === "" ? 0 : 1);
    let s = this._cursor.getChars(n);
    return [r, s];
  }
  _consumeTagOpen(e) {
    let r, n, s, i = [];
    try {
      if (!lt2(this._cursor.peek()))
        throw this._createError(Ue(this._cursor.peek()), this._cursor.getSpan(e));
      for (s = this._consumeTagOpenStart(e), n = s.parts[0], r = s.parts[1], this._attemptCharCodeUntilFn(b);this._cursor.peek() !== 47 && this._cursor.peek() !== 62 && this._cursor.peek() !== 60 && this._cursor.peek() !== 0; ) {
        let [o, u] = this._consumeAttributeName();
        if (this._attemptCharCodeUntilFn(b), this._attemptCharCode(61)) {
          this._attemptCharCodeUntilFn(b);
          let p = this._consumeAttributeValue();
          i.push({ prefix: o, name: u, value: p });
        } else
          i.push({ prefix: o, name: u });
        this._attemptCharCodeUntilFn(b);
      }
      this._consumeTagOpenEnd();
    } catch (o) {
      if (o instanceof Ct) {
        s ? s.type = 4 : (this._beginToken(5, e), this._endToken(["<"]));
        return;
      }
      throw o;
    }
    if (this._canSelfClose && this.tokens[this.tokens.length - 1].type === 2)
      return;
    let a = this._getTagContentType(r, n, this._fullNameStack.length > 0, i);
    this._handleFullNameStackForTagOpen(n, r), a === N.RAW_TEXT ? this._consumeRawTextWithTagClose(n, r, false) : a === N.ESCAPABLE_RAW_TEXT && this._consumeRawTextWithTagClose(n, r, true);
  }
  _consumeRawTextWithTagClose(e, r, n) {
    this._consumeRawText(n, () => !this._attemptCharCode(60) || !this._attemptCharCode(47) || (this._attemptCharCodeUntilFn(b), !this._attemptStrCaseInsensitive(e ? `${e}:${r}` : r)) ? false : (this._attemptCharCodeUntilFn(b), this._attemptCharCode(62))), this._beginToken(3), this._requireCharCodeUntilFn((s) => s === 62, 3), this._cursor.advance(), this._endToken([e, r]), this._handleFullNameStackForTagClose(e, r);
  }
  _consumeTagOpenStart(e) {
    this._beginToken(0, e);
    let r = this._consumePrefixAndName();
    return this._endToken(r);
  }
  _consumeAttributeName() {
    let e = this._cursor.peek();
    if (e === 39 || e === 34)
      throw this._createError(Ue(e), this._cursor.getSpan());
    this._beginToken(14);
    let r = this._consumePrefixAndName();
    return this._endToken(r), r;
  }
  _consumeAttributeValue() {
    let e;
    if (this._cursor.peek() === 39 || this._cursor.peek() === 34) {
      let r = this._cursor.peek();
      this._consumeQuote(r);
      let n = () => this._cursor.peek() === r;
      e = this._consumeWithInterpolation(16, 17, n, n), this._consumeQuote(r);
    } else {
      let r = () => ri(this._cursor.peek());
      e = this._consumeWithInterpolation(16, 17, r, r);
    }
    return e;
  }
  _consumeQuote(e) {
    this._beginToken(15), this._requireCharCode(e), this._endToken([String.fromCodePoint(e)]);
  }
  _consumeTagOpenEnd() {
    let e = this._attemptCharCode(47) ? 2 : 1;
    this._beginToken(e), this._requireCharCode(62), this._endToken([]);
  }
  _consumeTagClose(e) {
    if (this._beginToken(3, e), this._attemptCharCodeUntilFn(b), this._allowHtmComponentClosingTags && this._attemptCharCode(47))
      this._attemptCharCodeUntilFn(b), this._requireCharCode(62), this._endToken([]);
    else {
      let [r, n] = this._consumePrefixAndName();
      this._attemptCharCodeUntilFn(b), this._requireCharCode(62), this._endToken([r, n]), this._handleFullNameStackForTagClose(r, n);
    }
  }
  _consumeExpansionFormStart() {
    this._beginToken(20), this._requireCharCode(123), this._endToken([]), this._expansionCaseStack.push(20), this._beginToken(7);
    let e = this._readUntil(44), r = this._processCarriageReturns(e);
    if (this._i18nNormalizeLineEndingsInICUs)
      this._endToken([r]);
    else {
      let s = this._endToken([e]);
      r !== e && this.nonNormalizedIcuExpressions.push(s);
    }
    this._requireCharCode(44), this._attemptCharCodeUntilFn(b), this._beginToken(7);
    let n = this._readUntil(44);
    this._endToken([n]), this._requireCharCode(44), this._attemptCharCodeUntilFn(b);
  }
  _consumeExpansionCaseStart() {
    this._beginToken(21);
    let e = this._readUntil(123).trim();
    this._endToken([e]), this._attemptCharCodeUntilFn(b), this._beginToken(22), this._requireCharCode(123), this._endToken([]), this._attemptCharCodeUntilFn(b), this._expansionCaseStack.push(22);
  }
  _consumeExpansionCaseEnd() {
    this._beginToken(23), this._requireCharCode(125), this._endToken([]), this._attemptCharCodeUntilFn(b), this._expansionCaseStack.pop();
  }
  _consumeExpansionFormEnd() {
    this._beginToken(24), this._requireCharCode(125), this._endToken([]), this._expansionCaseStack.pop();
  }
  _consumeWithInterpolation(e, r, n, s) {
    this._beginToken(e);
    let i = [];
    for (;!n(); ) {
      let o = this._cursor.clone();
      this._interpolationConfig && this._attemptStr(this._interpolationConfig.start) ? (this._endToken([this._processCarriageReturns(i.join(""))], o), i.length = 0, this._consumeInterpolation(r, o, s), this._beginToken(e)) : this._cursor.peek() === 38 ? (this._endToken([this._processCarriageReturns(i.join(""))]), i.length = 0, this._consumeEntity(e), this._beginToken(e)) : i.push(this._readChar());
    }
    this._inInterpolation = false;
    let a = this._processCarriageReturns(i.join(""));
    return this._endToken([a]), a;
  }
  _consumeInterpolation(e, r, n) {
    let s = [];
    this._beginToken(e, r), s.push(this._interpolationConfig.start);
    let i = this._cursor.clone(), a = null, o = false;
    for (;this._cursor.peek() !== 0 && (n === null || !n()); ) {
      let u = this._cursor.clone();
      if (this._isTagStart()) {
        this._cursor = u, s.push(this._getProcessedChars(i, u)), this._endToken(s);
        return;
      }
      if (a === null)
        if (this._attemptStr(this._interpolationConfig.end)) {
          s.push(this._getProcessedChars(i, u)), s.push(this._interpolationConfig.end), this._endToken(s);
          return;
        } else
          this._attemptStr("//") && (o = true);
      let p = this._cursor.peek();
      this._cursor.advance(), p === 92 ? this._cursor.advance() : p === a ? a = null : !o && a === null && Ot(p) && (a = p);
    }
    s.push(this._getProcessedChars(i, this._cursor)), this._endToken(s);
  }
  _getProcessedChars(e, r) {
    return this._processCarriageReturns(r.getChars(e));
  }
  _isTextEnd() {
    return !!(this._isTagStart() || this._cursor.peek() === 0 || this._tokenizeIcu && !this._inInterpolation && (this.isExpansionFormStart() || this._cursor.peek() === 125 && this._isInExpansionCase()) || this._tokenizeBlocks && !this._inInterpolation && !this._isInExpansion() && (this._isBlockStart() || this._cursor.peek() === 64 || this._cursor.peek() === 125));
  }
  _isTagStart() {
    if (this._cursor.peek() === 60) {
      let e = this._cursor.clone();
      e.advance();
      let r = e.peek();
      if (97 <= r && r <= 122 || 65 <= r && r <= 90 || r === 47 || r === 33)
        return true;
    }
    return false;
  }
  _isBlockStart() {
    if (this._tokenizeBlocks && this._cursor.peek() === 64) {
      let e = this._cursor.clone();
      if (e.advance(), si(e.peek()))
        return true;
    }
    return false;
  }
  _readUntil(e) {
    let r = this._cursor.clone();
    return this._attemptUntilChar(e), this._cursor.getChars(r);
  }
  _isInExpansion() {
    return this._isInExpansionCase() || this._isInExpansionForm();
  }
  _isInExpansionCase() {
    return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === 22;
  }
  _isInExpansionForm() {
    return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === 20;
  }
  isExpansionFormStart() {
    if (this._cursor.peek() !== 123)
      return false;
    if (this._interpolationConfig) {
      let e = this._cursor.clone(), r = this._attemptStr(this._interpolationConfig.start);
      return this._cursor = e, !r;
    }
    return true;
  }
  _handleFullNameStackForTagOpen(e, r) {
    let n = qe(e, r);
    (this._fullNameStack.length === 0 || this._fullNameStack[this._fullNameStack.length - 1] === n) && this._fullNameStack.push(n);
  }
  _handleFullNameStackForTagClose(e, r) {
    let n = qe(e, r);
    this._fullNameStack.length !== 0 && this._fullNameStack[this._fullNameStack.length - 1] === n && this._fullNameStack.pop();
  }
};
function b(t3) {
  return !ut(t3) || t3 === 0;
}
function ri(t3) {
  return ut(t3) || t3 === 62 || t3 === 60 || t3 === 47 || t3 === 39 || t3 === 34 || t3 === 61 || t3 === 0;
}
function $o(t3) {
  return (t3 < 97 || 122 < t3) && (t3 < 65 || 90 < t3) && (t3 < 48 || t3 > 57);
}
function Oo(t3) {
  return t3 === 59 || t3 === 0 || !Rs(t3);
}
function Mo(t3) {
  return t3 === 59 || t3 === 0 || !lt2(t3);
}
function qo(t3) {
  return t3 !== 125;
}
function Ho(t3, e) {
  return ni(t3) === ni(e);
}
function ni(t3) {
  return t3 >= 97 && t3 <= 122 ? t3 - 97 + 65 : t3;
}
function si(t3) {
  return lt2(t3) || Rt(t3) || t3 === 95;
}
function ii(t3) {
  return t3 !== 59 && b(t3);
}
function Vo(t3) {
  let e = [], r;
  for (let n = 0;n < t3.length; n++) {
    let s = t3[n];
    r && r.type === 5 && s.type === 5 || r && r.type === 16 && s.type === 16 ? (r.parts[0] += s.parts[0], r.sourceSpan.end = s.sourceSpan.end) : (r = s, e.push(r));
  }
  return e;
}
var nr = class t3 {
  constructor(e, r) {
    if (e instanceof t3) {
      this.file = e.file, this.input = e.input, this.end = e.end;
      let n = e.state;
      this.state = { peek: n.peek, offset: n.offset, line: n.line, column: n.column };
    } else {
      if (!r)
        throw new Error("Programming error: the range argument must be provided with a file argument.");
      this.file = e, this.input = e.content, this.end = r.endPos, this.state = { peek: -1, offset: r.startPos, line: r.startLine, column: r.startCol };
    }
  }
  clone() {
    return new t3(this);
  }
  peek() {
    return this.state.peek;
  }
  charsLeft() {
    return this.end - this.state.offset;
  }
  diff(e) {
    return this.state.offset - e.state.offset;
  }
  advance() {
    this.advanceState(this.state);
  }
  init() {
    this.updatePeek(this.state);
  }
  getSpan(e, r) {
    e = e || this;
    let n = e;
    if (r)
      for (;this.diff(e) > 0 && r.indexOf(e.peek()) !== -1; )
        n === e && (e = e.clone()), e.advance();
    let s = this.locationFromCursor(e), i = this.locationFromCursor(this), a = n !== e ? this.locationFromCursor(n) : s;
    return new h(s, i, a);
  }
  getChars(e) {
    return this.input.substring(e.state.offset, this.state.offset);
  }
  charAt(e) {
    return this.input.charCodeAt(e);
  }
  advanceState(e) {
    if (e.offset >= this.end)
      throw this.state = e, new St('Unexpected character "EOF"', this);
    let r = this.charAt(e.offset);
    r === 10 ? (e.line++, e.column = 0) : $t(r) || e.column++, e.offset++, this.updatePeek(e);
  }
  updatePeek(e) {
    e.peek = e.offset >= this.end ? 0 : this.charAt(e.offset);
  }
  locationFromCursor(e) {
    return new ie(e.file, e.state.offset, e.state.line, e.state.column);
  }
};
var Gr = class t4 extends nr {
  constructor(e, r) {
    e instanceof t4 ? (super(e), this.internalState = { ...e.internalState }) : (super(e, r), this.internalState = this.state);
  }
  advance() {
    this.state = this.internalState, super.advance(), this.processEscapeSequence();
  }
  init() {
    super.init(), this.processEscapeSequence();
  }
  clone() {
    return new t4(this);
  }
  getChars(e) {
    let r = e.clone(), n = "";
    for (;r.internalState.offset < this.internalState.offset; )
      n += String.fromCodePoint(r.peek()), r.advance();
    return n;
  }
  processEscapeSequence() {
    let e = () => this.internalState.peek;
    if (e() === 92)
      if (this.internalState = { ...this.state }, this.advanceState(this.internalState), e() === 110)
        this.state.peek = 10;
      else if (e() === 114)
        this.state.peek = 13;
      else if (e() === 118)
        this.state.peek = 11;
      else if (e() === 116)
        this.state.peek = 9;
      else if (e() === 98)
        this.state.peek = 8;
      else if (e() === 102)
        this.state.peek = 12;
      else if (e() === 117)
        if (this.advanceState(this.internalState), e() === 123) {
          this.advanceState(this.internalState);
          let r = this.clone(), n = 0;
          for (;e() !== 125; )
            this.advanceState(this.internalState), n++;
          this.state.peek = this.decodeHexDigits(r, n);
        } else {
          let r = this.clone();
          this.advanceState(this.internalState), this.advanceState(this.internalState), this.advanceState(this.internalState), this.state.peek = this.decodeHexDigits(r, 4);
        }
      else if (e() === 120) {
        this.advanceState(this.internalState);
        let r = this.clone();
        this.advanceState(this.internalState), this.state.peek = this.decodeHexDigits(r, 2);
      } else if (Br(e())) {
        let r = "", n = 0, s = this.clone();
        for (;Br(e()) && n < 3; )
          s = this.clone(), r += String.fromCodePoint(e()), this.advanceState(this.internalState), n++;
        this.state.peek = parseInt(r, 8), this.internalState = s.internalState;
      } else
        $t(this.internalState.peek) ? (this.advanceState(this.internalState), this.state = this.internalState) : this.state.peek = this.internalState.peek;
  }
  decodeHexDigits(e, r) {
    let n = this.input.slice(e.internalState.offset, e.internalState.offset + r), s = parseInt(n, 16);
    if (isNaN(s))
      throw e.state = e.internalState, new St("Invalid hexadecimal escape sequence", e);
    return s;
  }
};
var St = class {
  constructor(e, r) {
    this.msg = e, this.cursor = r;
  }
};
var L = class t5 extends Oe {
  static create(e, r, n) {
    return new t5(e, r, n);
  }
  constructor(e, r, n) {
    super(r, n), this.elementName = e;
  }
};
var jr = class {
  constructor(e, r) {
    this.rootNodes = e, this.errors = r;
  }
};
var sr = class {
  constructor(e) {
    this.getTagDefinition = e;
  }
  parse(e, r, n, s = false, i) {
    let a = (D) => (I, ...F) => D(I.toLowerCase(), ...F), o = s ? this.getTagDefinition : a(this.getTagDefinition), u = (D) => o(D).getContentType(), p = s ? i : a(i), m = li(e, r, i ? (D, I, F, c) => {
      let g = p(D, I, F, c);
      return g !== undefined ? g : u(D);
    } : u, n), f = n && n.canSelfClose || false, C = n && n.allowHtmComponentClosingTags || false, A = new Kr(m.tokens, o, f, C, s);
    return A.build(), new jr(A.rootNodes, m.errors.concat(A.errors));
  }
};
var Kr = class t6 {
  constructor(e, r, n, s, i) {
    this.tokens = e, this.getTagDefinition = r, this.canSelfClose = n, this.allowHtmComponentClosingTags = s, this.isTagNameCaseSensitive = i, this._index = -1, this._containerStack = [], this.rootNodes = [], this.errors = [], this._advance();
  }
  build() {
    for (;this._peek.type !== 34; )
      this._peek.type === 0 || this._peek.type === 4 ? this._consumeStartTag(this._advance()) : this._peek.type === 3 ? (this._closeVoidElement(), this._consumeEndTag(this._advance())) : this._peek.type === 12 ? (this._closeVoidElement(), this._consumeCdata(this._advance())) : this._peek.type === 10 ? (this._closeVoidElement(), this._consumeComment(this._advance())) : this._peek.type === 5 || this._peek.type === 7 || this._peek.type === 6 ? (this._closeVoidElement(), this._consumeText(this._advance())) : this._peek.type === 20 ? this._consumeExpansion(this._advance()) : this._peek.type === 25 ? (this._closeVoidElement(), this._consumeBlockOpen(this._advance())) : this._peek.type === 27 ? (this._closeVoidElement(), this._consumeBlockClose(this._advance())) : this._peek.type === 29 ? (this._closeVoidElement(), this._consumeIncompleteBlock(this._advance())) : this._peek.type === 30 ? (this._closeVoidElement(), this._consumeLet(this._advance())) : this._peek.type === 18 ? this._consumeDocType(this._advance()) : this._peek.type === 33 ? (this._closeVoidElement(), this._consumeIncompleteLet(this._advance())) : this._advance();
    for (let e of this._containerStack)
      e instanceof ee && this.errors.push(L.create(e.name, e.sourceSpan, `Unclosed block "${e.name}"`));
  }
  _advance() {
    let e = this._peek;
    return this._index < this.tokens.length - 1 && this._index++, this._peek = this.tokens[this._index], e;
  }
  _advanceIf(e) {
    return this._peek.type === e ? this._advance() : null;
  }
  _consumeCdata(e) {
    let r = this._advance(), n = this._getText(r), s = this._advanceIf(13);
    this._addToParent(new Gt(n, new h(e.sourceSpan.start, (s || r).sourceSpan.end), [r]));
  }
  _consumeComment(e) {
    let r = this._advanceIf(7), n = this._advanceIf(11), s = r != null ? r.parts[0].trim() : null, i = n == null ? e.sourceSpan : new h(e.sourceSpan.start, n.sourceSpan.end, e.sourceSpan.fullStart);
    this._addToParent(new Kt(s, i));
  }
  _consumeDocType(e) {
    let r = this._advanceIf(7), n = this._advanceIf(19), s = r != null ? r.parts[0].trim() : null, i = new h(e.sourceSpan.start, (n || r || e).sourceSpan.end);
    this._addToParent(new Xt(s, i));
  }
  _consumeExpansion(e) {
    let r = this._advance(), n = this._advance(), s = [];
    for (;this._peek.type === 21; ) {
      let a = this._parseExpansionCase();
      if (!a)
        return;
      s.push(a);
    }
    if (this._peek.type !== 24) {
      this.errors.push(L.create(null, this._peek.sourceSpan, "Invalid ICU message. Missing '}'."));
      return;
    }
    let i = new h(e.sourceSpan.start, this._peek.sourceSpan.end, e.sourceSpan.fullStart);
    this._addToParent(new zt(r.parts[0], n.parts[0], s, i, r.sourceSpan)), this._advance();
  }
  _parseExpansionCase() {
    let e = this._advance();
    if (this._peek.type !== 22)
      return this.errors.push(L.create(null, this._peek.sourceSpan, "Invalid ICU message. Missing '{'.")), null;
    let r = this._advance(), n = this._collectExpansionExpTokens(r);
    if (!n)
      return null;
    let s = this._advance();
    n.push({ type: 34, parts: [], sourceSpan: s.sourceSpan });
    let i = new t6(n, this.getTagDefinition, this.canSelfClose, this.allowHtmComponentClosingTags, this.isTagNameCaseSensitive);
    if (i.build(), i.errors.length > 0)
      return this.errors = this.errors.concat(i.errors), null;
    let a = new h(e.sourceSpan.start, s.sourceSpan.end, e.sourceSpan.fullStart), o = new h(r.sourceSpan.start, s.sourceSpan.end, r.sourceSpan.fullStart);
    return new Yt(e.parts[0], i.rootNodes, a, e.sourceSpan, o);
  }
  _collectExpansionExpTokens(e) {
    let r = [], n = [22];
    for (;; ) {
      if ((this._peek.type === 20 || this._peek.type === 22) && n.push(this._peek.type), this._peek.type === 23)
        if (ci(n, 22)) {
          if (n.pop(), n.length === 0)
            return r;
        } else
          return this.errors.push(L.create(null, e.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
      if (this._peek.type === 24)
        if (ci(n, 20))
          n.pop();
        else
          return this.errors.push(L.create(null, e.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
      if (this._peek.type === 34)
        return this.errors.push(L.create(null, e.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
      r.push(this._advance());
    }
  }
  _getText(e) {
    let r = e.parts[0];
    if (r.length > 0 && r[0] == `
`) {
      let n = this._getClosestParentElement();
      n != null && n.children.length == 0 && this.getTagDefinition(n.name).ignoreFirstLf && (r = r.substring(1));
    }
    return r;
  }
  _consumeText(e) {
    let r = [e], n = e.sourceSpan, s = e.parts[0];
    if (s.length > 0 && s[0] === `
`) {
      let i = this._getContainer();
      i != null && i.children.length === 0 && this.getTagDefinition(i.name).ignoreFirstLf && (s = s.substring(1), r[0] = { type: e.type, sourceSpan: e.sourceSpan, parts: [s] });
    }
    for (;this._peek.type === 8 || this._peek.type === 5 || this._peek.type === 9; )
      e = this._advance(), r.push(e), e.type === 8 ? s += e.parts.join("").replace(/&([^;]+);/g, pi) : e.type === 9 ? s += e.parts[0] : s += e.parts.join("");
    if (s.length > 0) {
      let i = e.sourceSpan;
      this._addToParent(new Wt(s, new h(n.start, i.end, n.fullStart, n.details), r));
    }
  }
  _closeVoidElement() {
    let e = this._getContainer();
    e instanceof Y && this.getTagDefinition(e.name).isVoid && this._containerStack.pop();
  }
  _consumeStartTag(e) {
    let [r, n] = e.parts, s = [];
    for (;this._peek.type === 14; )
      s.push(this._consumeAttr(this._advance()));
    let i = this._getElementFullName(r, n, this._getClosestParentElement()), a = false;
    if (this._peek.type === 2) {
      this._advance(), a = true;
      let C = this.getTagDefinition(i);
      this.canSelfClose || C.canSelfClose || Me(i) !== null || C.isVoid || this.errors.push(L.create(i, e.sourceSpan, `Only void, custom and foreign elements can be self closed "${e.parts[1]}"`));
    } else
      this._peek.type === 1 && (this._advance(), a = false);
    let o = this._peek.sourceSpan.fullStart, u = new h(e.sourceSpan.start, o, e.sourceSpan.fullStart), p = new h(e.sourceSpan.start, o, e.sourceSpan.fullStart), l = new h(e.sourceSpan.start.moveBy(1), e.sourceSpan.end), m = new Y(i, s, [], u, p, undefined, l), f = this._getContainer();
    this._pushContainer(m, f instanceof Y && this.getTagDefinition(f.name).isClosedByChild(m.name)), a ? this._popContainer(i, Y, u) : e.type === 4 && (this._popContainer(i, Y, null), this.errors.push(L.create(i, u, `Opening tag "${i}" not terminated.`)));
  }
  _pushContainer(e, r) {
    r && this._containerStack.pop(), this._addToParent(e), this._containerStack.push(e);
  }
  _consumeEndTag(e) {
    let r = this.allowHtmComponentClosingTags && e.parts.length === 0 ? null : this._getElementFullName(e.parts[0], e.parts[1], this._getClosestParentElement());
    if (r && this.getTagDefinition(r).isVoid)
      this.errors.push(L.create(r, e.sourceSpan, `Void elements do not have end tags "${e.parts[1]}"`));
    else if (!this._popContainer(r, Y, e.sourceSpan)) {
      let n = `Unexpected closing tag "${r}". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;
      this.errors.push(L.create(r, e.sourceSpan, n));
    }
  }
  _popContainer(e, r, n) {
    let s = false;
    for (let i = this._containerStack.length - 1;i >= 0; i--) {
      let a = this._containerStack[i];
      if (Me(a.name) ? a.name === e : (e == null || a.name.toLowerCase() === e.toLowerCase()) && a instanceof r)
        return a.endSourceSpan = n, a.sourceSpan.end = n !== null ? n.end : a.sourceSpan.end, this._containerStack.splice(i, this._containerStack.length - i), !s;
      (a instanceof ee || a instanceof Y && !this.getTagDefinition(a.name).closedByParent) && (s = true);
    }
    return false;
  }
  _consumeAttr(e) {
    let r = qe(e.parts[0], e.parts[1]), n = e.sourceSpan.end, s;
    this._peek.type === 15 && (s = this._advance());
    let i = "", a = [], o, u;
    if (this._peek.type === 16)
      for (o = this._peek.sourceSpan, u = this._peek.sourceSpan.end;this._peek.type === 16 || this._peek.type === 17 || this._peek.type === 9; ) {
        let m = this._advance();
        a.push(m), m.type === 17 ? i += m.parts.join("").replace(/&([^;]+);/g, pi) : m.type === 9 ? i += m.parts[0] : i += m.parts.join(""), u = n = m.sourceSpan.end;
      }
    this._peek.type === 15 && (u = n = this._advance().sourceSpan.end);
    let l = o && u && new h((s == null ? undefined : s.sourceSpan.start) ?? o.start, u, (s == null ? undefined : s.sourceSpan.fullStart) ?? o.fullStart);
    return new jt(r, i, new h(e.sourceSpan.start, n, e.sourceSpan.fullStart), e.sourceSpan, l, a.length > 0 ? a : undefined, undefined);
  }
  _consumeBlockOpen(e) {
    let r = [];
    for (;this._peek.type === 28; ) {
      let o = this._advance();
      r.push(new ht(o.parts[0], o.sourceSpan));
    }
    this._peek.type === 26 && this._advance();
    let n = this._peek.sourceSpan.fullStart, s = new h(e.sourceSpan.start, n, e.sourceSpan.fullStart), i = new h(e.sourceSpan.start, n, e.sourceSpan.fullStart), a = new ee(e.parts[0], r, [], s, e.sourceSpan, i);
    this._pushContainer(a, false);
  }
  _consumeBlockClose(e) {
    this._popContainer(null, ee, e.sourceSpan) || this.errors.push(L.create(null, e.sourceSpan, 'Unexpected closing block. The block may have been closed earlier. If you meant to write the } character, you should use the "&#125;" HTML entity instead.'));
  }
  _consumeIncompleteBlock(e) {
    let r = [];
    for (;this._peek.type === 28; ) {
      let o = this._advance();
      r.push(new ht(o.parts[0], o.sourceSpan));
    }
    let n = this._peek.sourceSpan.fullStart, s = new h(e.sourceSpan.start, n, e.sourceSpan.fullStart), i = new h(e.sourceSpan.start, n, e.sourceSpan.fullStart), a = new ee(e.parts[0], r, [], s, e.sourceSpan, i);
    this._pushContainer(a, false), this._popContainer(null, ee, null), this.errors.push(L.create(e.parts[0], s, `Incomplete block "${e.parts[0]}". If you meant to write the @ character, you should use the "&#64;" HTML entity instead.`));
  }
  _consumeLet(e) {
    let r = e.parts[0], n, s;
    if (this._peek.type !== 31) {
      this.errors.push(L.create(e.parts[0], e.sourceSpan, `Invalid @let declaration "${r}". Declaration must have a value.`));
      return;
    } else
      n = this._advance();
    if (this._peek.type !== 32) {
      this.errors.push(L.create(e.parts[0], e.sourceSpan, `Unterminated @let declaration "${r}". Declaration must be terminated with a semicolon.`));
      return;
    } else
      s = this._advance();
    let i = s.sourceSpan.fullStart, a = new h(e.sourceSpan.start, i, e.sourceSpan.fullStart), o = e.sourceSpan.toString().lastIndexOf(r), u = e.sourceSpan.start.moveBy(o), p = new h(u, e.sourceSpan.end), l = new mt(r, n.parts[0], a, p, n.sourceSpan);
    this._addToParent(l);
  }
  _consumeIncompleteLet(e) {
    let r = e.parts[0] ?? "", n = r ? ` "${r}"` : "";
    if (r.length > 0) {
      let s = e.sourceSpan.toString().lastIndexOf(r), i = e.sourceSpan.start.moveBy(s), a = new h(i, e.sourceSpan.end), o = new h(e.sourceSpan.start, e.sourceSpan.start.moveBy(0)), u = new mt(r, "", e.sourceSpan, a, o);
      this._addToParent(u);
    }
    this.errors.push(L.create(e.parts[0], e.sourceSpan, `Incomplete @let declaration${n}. @let declarations must be written as \`@let <name> = <value>;\``));
  }
  _getContainer() {
    return this._containerStack.length > 0 ? this._containerStack[this._containerStack.length - 1] : null;
  }
  _getClosestParentElement() {
    for (let e = this._containerStack.length - 1;e > -1; e--)
      if (this._containerStack[e] instanceof Y)
        return this._containerStack[e];
    return null;
  }
  _addToParent(e) {
    let r = this._getContainer();
    r === null ? this.rootNodes.push(e) : r.children.push(e);
  }
  _getElementFullName(e, r, n) {
    if (e === "" && (e = this.getTagDefinition(r).implicitNamespacePrefix || "", e === "" && n != null)) {
      let s = ct(n.name)[1];
      this.getTagDefinition(s).preventNamespaceInheritance || (e = Me(n.name));
    }
    return qe(e, r);
  }
};
function ci(t7, e) {
  return t7.length > 0 && t7[t7.length - 1] === e;
}
function pi(t7, e) {
  return Ve[e] !== undefined ? Ve[e] || t7 : /^#x[a-f0-9]+$/i.test(e) ? String.fromCodePoint(parseInt(e.slice(2), 16)) : /^#\d+$/.test(e) ? String.fromCodePoint(parseInt(e.slice(1), 10)) : t7;
}
var ir = class extends sr {
  constructor() {
    super(He);
  }
  parse(e, r, n, s = false, i) {
    return super.parse(e, r, n, s, i);
  }
};
var Xr = null;
var Uo = () => (Xr || (Xr = new ir), Xr);
function Qr(t7, e = {}) {
  let { canSelfClose: r = false, allowHtmComponentClosingTags: n = false, isTagNameCaseSensitive: s = false, getTagContentType: i, tokenizeAngularBlocks: a = false, tokenizeAngularLetDeclaration: o = false } = e;
  return Uo().parse(t7, "angular-html-parser", { tokenizeExpansionForms: a, interpolationConfig: undefined, canSelfClose: r, allowHtmComponentClosingTags: n, tokenizeBlocks: a, tokenizeLet: o }, s, i);
}
function Wo(t7, e) {
  let r = new SyntaxError(t7 + " (" + e.loc.start.line + ":" + e.loc.start.column + ")");
  return Object.assign(r, e);
}
var hi = Wo;
var _t = 3;
function Go(t7) {
  let e = t7.slice(0, _t);
  if (e !== "---" && e !== "+++")
    return;
  let r = t7.indexOf(`
`, _t);
  if (r === -1)
    return;
  let n = t7.slice(_t, r).trim(), s = t7.indexOf(`
${e}`, r), i = n;
  if (i || (i = e === "+++" ? "toml" : "yaml"), s === -1 && e === "---" && i === "yaml" && (s = t7.indexOf(`
...`, r)), s === -1)
    return;
  let a = s + 1 + _t, o = t7.charAt(a + 1);
  if (!/\s?/u.test(o))
    return;
  let u = t7.slice(0, a);
  return { type: "front-matter", language: i, explicitLanguage: n, value: t7.slice(r + 1, s), startDelimiter: e, endDelimiter: u.slice(-_t), raw: u };
}
function zo(t7) {
  let e = Go(t7);
  if (!e)
    return { content: t7 };
  let { raw: r } = e;
  return { frontMatter: e, content: w(false, r, /[^\n]/gu, " ") + t7.slice(r.length) };
}
var mi = zo;
var ar = { attrs: true, children: true, cases: true, expression: true };
var fi = new Set(["parent"]);
var le;
var Jr;
var Zr;
var Ge = class Ge2 {
  constructor(e = {}) {
    At(this, le);
    lr(this, "type");
    lr(this, "parent");
    for (let r of new Set([...fi, ...Object.keys(e)]))
      this.setProperty(r, e[r]);
  }
  setProperty(e, r) {
    if (this[e] !== r) {
      if (e in ar && (r = r.map((n) => this.createChild(n))), !fi.has(e)) {
        this[e] = r;
        return;
      }
      Object.defineProperty(this, e, { value: r, enumerable: false, configurable: true });
    }
  }
  map(e) {
    let r;
    for (let n in ar) {
      let s = this[n];
      if (s) {
        let i = Yo(s, (a) => a.map(e));
        r !== s && (r || (r = new Ge2({ parent: this.parent })), r.setProperty(n, i));
      }
    }
    if (r)
      for (let n in this)
        n in ar || (r[n] = this[n]);
    return e(r || this);
  }
  walk(e) {
    for (let r in ar) {
      let n = this[r];
      if (n)
        for (let s = 0;s < n.length; s++)
          n[s].walk(e);
    }
    e(this);
  }
  createChild(e) {
    let r = e instanceof Ge2 ? e.clone() : new Ge2(e);
    return r.setProperty("parent", this), r;
  }
  insertChildBefore(e, r) {
    let n = this.$children;
    n.splice(n.indexOf(e), 0, this.createChild(r));
  }
  removeChild(e) {
    let r = this.$children;
    r.splice(r.indexOf(e), 1);
  }
  replaceChild(e, r) {
    let n = this.$children;
    n[n.indexOf(e)] = this.createChild(r);
  }
  clone() {
    return new Ge2(this);
  }
  get $children() {
    return this[R(this, le, Jr)];
  }
  set $children(e) {
    this[R(this, le, Jr)] = e;
  }
  get firstChild() {
    var e;
    return (e = this.$children) == null ? undefined : e[0];
  }
  get lastChild() {
    return K(true, this.$children, -1);
  }
  get prev() {
    let e = R(this, le, Zr);
    return e[e.indexOf(this) - 1];
  }
  get next() {
    let e = R(this, le, Zr);
    return e[e.indexOf(this) + 1];
  }
  get rawName() {
    return this.hasExplicitNamespace ? this.fullName : this.name;
  }
  get fullName() {
    return this.namespace ? this.namespace + ":" + this.name : this.name;
  }
  get attrMap() {
    return Object.fromEntries(this.attrs.map((e) => [e.fullName, e.value]));
  }
};
le = new WeakSet, Jr = function() {
  return this.type === "angularIcuCase" ? "expression" : this.type === "angularIcuExpression" ? "cases" : "children";
}, Zr = function() {
  var e;
  return ((e = this.parent) == null ? undefined : e.$children) ?? [];
};
var or = Ge;
function Yo(t7, e) {
  let r = t7.map(e);
  return r.some((n, s) => n !== t7[s]) ? r : t7;
}
var jo = [{ regex: /^(\[if([^\]]*)\]>)(.*?)<!\s*\[endif\]$/su, parse: Ko }, { regex: /^\[if([^\]]*)\]><!$/u, parse: Xo }, { regex: /^<!\s*\[endif\]$/u, parse: Qo }];
function di(t7, e) {
  if (t7.value)
    for (let { regex: r, parse: n } of jo) {
      let s = t7.value.match(r);
      if (s)
        return n(t7, e, s);
    }
  return null;
}
function Ko(t7, e, r) {
  let [, n, s, i] = r, a = 4 + n.length, o = t7.sourceSpan.start.moveBy(a), u = o.moveBy(i.length), [p, l] = (() => {
    try {
      return [true, e(i, o).children];
    } catch {
      return [false, [{ type: "text", value: i, sourceSpan: new h(o, u) }]];
    }
  })();
  return { type: "ieConditionalComment", complete: p, children: l, condition: w(false, s.trim(), /\s+/gu, " "), sourceSpan: t7.sourceSpan, startSourceSpan: new h(t7.sourceSpan.start, o), endSourceSpan: new h(u, t7.sourceSpan.end) };
}
function Xo(t7, e, r) {
  let [, n] = r;
  return { type: "ieConditionalStartComment", condition: w(false, n.trim(), /\s+/gu, " "), sourceSpan: t7.sourceSpan };
}
function Qo(t7) {
  return { type: "ieConditionalEndComment", sourceSpan: t7.sourceSpan };
}
var ur = new Map([["*", new Set(["accesskey", "autocapitalize", "autofocus", "class", "contenteditable", "dir", "draggable", "enterkeyhint", "hidden", "id", "inert", "inputmode", "is", "itemid", "itemprop", "itemref", "itemscope", "itemtype", "lang", "nonce", "popover", "slot", "spellcheck", "style", "tabindex", "title", "translate", "writingsuggestions"])], ["a", new Set(["charset", "coords", "download", "href", "hreflang", "name", "ping", "referrerpolicy", "rel", "rev", "shape", "target", "type"])], ["applet", new Set(["align", "alt", "archive", "code", "codebase", "height", "hspace", "name", "object", "vspace", "width"])], ["area", new Set(["alt", "coords", "download", "href", "hreflang", "nohref", "ping", "referrerpolicy", "rel", "shape", "target", "type"])], ["audio", new Set(["autoplay", "controls", "crossorigin", "loop", "muted", "preload", "src"])], ["base", new Set(["href", "target"])], ["basefont", new Set(["color", "face", "size"])], ["blockquote", new Set(["cite"])], ["body", new Set(["alink", "background", "bgcolor", "link", "text", "vlink"])], ["br", new Set(["clear"])], ["button", new Set(["disabled", "form", "formaction", "formenctype", "formmethod", "formnovalidate", "formtarget", "name", "popovertarget", "popovertargetaction", "type", "value"])], ["canvas", new Set(["height", "width"])], ["caption", new Set(["align"])], ["col", new Set(["align", "char", "charoff", "span", "valign", "width"])], ["colgroup", new Set(["align", "char", "charoff", "span", "valign", "width"])], ["data", new Set(["value"])], ["del", new Set(["cite", "datetime"])], ["details", new Set(["name", "open"])], ["dialog", new Set(["open"])], ["dir", new Set(["compact"])], ["div", new Set(["align"])], ["dl", new Set(["compact"])], ["embed", new Set(["height", "src", "type", "width"])], ["fieldset", new Set(["disabled", "form", "name"])], ["font", new Set(["color", "face", "size"])], ["form", new Set(["accept", "accept-charset", "action", "autocomplete", "enctype", "method", "name", "novalidate", "target"])], ["frame", new Set(["frameborder", "longdesc", "marginheight", "marginwidth", "name", "noresize", "scrolling", "src"])], ["frameset", new Set(["cols", "rows"])], ["h1", new Set(["align"])], ["h2", new Set(["align"])], ["h3", new Set(["align"])], ["h4", new Set(["align"])], ["h5", new Set(["align"])], ["h6", new Set(["align"])], ["head", new Set(["profile"])], ["hr", new Set(["align", "noshade", "size", "width"])], ["html", new Set(["manifest", "version"])], ["iframe", new Set(["align", "allow", "allowfullscreen", "allowpaymentrequest", "allowusermedia", "frameborder", "height", "loading", "longdesc", "marginheight", "marginwidth", "name", "referrerpolicy", "sandbox", "scrolling", "src", "srcdoc", "width"])], ["img", new Set(["align", "alt", "border", "crossorigin", "decoding", "fetchpriority", "height", "hspace", "ismap", "loading", "longdesc", "name", "referrerpolicy", "sizes", "src", "srcset", "usemap", "vspace", "width"])], ["input", new Set(["accept", "align", "alt", "autocomplete", "checked", "dirname", "disabled", "form", "formaction", "formenctype", "formmethod", "formnovalidate", "formtarget", "height", "ismap", "list", "max", "maxlength", "min", "minlength", "multiple", "name", "pattern", "placeholder", "popovertarget", "popovertargetaction", "readonly", "required", "size", "src", "step", "type", "usemap", "value", "width"])], ["ins", new Set(["cite", "datetime"])], ["isindex", new Set(["prompt"])], ["label", new Set(["for", "form"])], ["legend", new Set(["align"])], ["li", new Set(["type", "value"])], ["link", new Set(["as", "blocking", "charset", "color", "crossorigin", "disabled", "fetchpriority", "href", "hreflang", "imagesizes", "imagesrcset", "integrity", "media", "referrerpolicy", "rel", "rev", "sizes", "target", "type"])], ["map", new Set(["name"])], ["menu", new Set(["compact"])], ["meta", new Set(["charset", "content", "http-equiv", "media", "name", "scheme"])], ["meter", new Set(["high", "low", "max", "min", "optimum", "value"])], ["object", new Set(["align", "archive", "border", "classid", "codebase", "codetype", "data", "declare", "form", "height", "hspace", "name", "standby", "type", "typemustmatch", "usemap", "vspace", "width"])], ["ol", new Set(["compact", "reversed", "start", "type"])], ["optgroup", new Set(["disabled", "label"])], ["option", new Set(["disabled", "label", "selected", "value"])], ["output", new Set(["for", "form", "name"])], ["p", new Set(["align"])], ["param", new Set(["name", "type", "value", "valuetype"])], ["pre", new Set(["width"])], ["progress", new Set(["max", "value"])], ["q", new Set(["cite"])], ["script", new Set(["async", "blocking", "charset", "crossorigin", "defer", "fetchpriority", "integrity", "language", "nomodule", "referrerpolicy", "src", "type"])], ["select", new Set(["autocomplete", "disabled", "form", "multiple", "name", "required", "size"])], ["slot", new Set(["name"])], ["source", new Set(["height", "media", "sizes", "src", "srcset", "type", "width"])], ["style", new Set(["blocking", "media", "type"])], ["table", new Set(["align", "bgcolor", "border", "cellpadding", "cellspacing", "frame", "rules", "summary", "width"])], ["tbody", new Set(["align", "char", "charoff", "valign"])], ["td", new Set(["abbr", "align", "axis", "bgcolor", "char", "charoff", "colspan", "headers", "height", "nowrap", "rowspan", "scope", "valign", "width"])], ["template", new Set(["shadowrootclonable", "shadowrootdelegatesfocus", "shadowrootmode"])], ["textarea", new Set(["autocomplete", "cols", "dirname", "disabled", "form", "maxlength", "minlength", "name", "placeholder", "readonly", "required", "rows", "wrap"])], ["tfoot", new Set(["align", "char", "charoff", "valign"])], ["th", new Set(["abbr", "align", "axis", "bgcolor", "char", "charoff", "colspan", "headers", "height", "nowrap", "rowspan", "scope", "valign", "width"])], ["thead", new Set(["align", "char", "charoff", "valign"])], ["time", new Set(["datetime"])], ["tr", new Set(["align", "bgcolor", "char", "charoff", "valign"])], ["track", new Set(["default", "kind", "label", "src", "srclang"])], ["ul", new Set(["compact", "type"])], ["video", new Set(["autoplay", "controls", "crossorigin", "height", "loop", "muted", "playsinline", "poster", "preload", "src", "width"])]]);
var gi = new Set(["a", "abbr", "acronym", "address", "applet", "area", "article", "aside", "audio", "b", "base", "basefont", "bdi", "bdo", "bgsound", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "command", "content", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "font", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "image", "img", "input", "ins", "isindex", "kbd", "keygen", "label", "legend", "li", "link", "listing", "main", "map", "mark", "marquee", "math", "menu", "menuitem", "meta", "meter", "multicol", "nav", "nextid", "nobr", "noembed", "noframes", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "plaintext", "pre", "progress", "q", "rb", "rbc", "rp", "rt", "rtc", "ruby", "s", "samp", "script", "search", "section", "select", "shadow", "slot", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "svg", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "tt", "u", "ul", "var", "video", "wbr", "xmp"]);
function Jo(t7) {
  if (t7.type === "block") {
    if (t7.name = w(false, t7.name.toLowerCase(), /\s+/gu, " ").trim(), t7.type = "angularControlFlowBlock", !me(t7.parameters)) {
      delete t7.parameters;
      return;
    }
    for (let e of t7.parameters)
      e.type = "angularControlFlowBlockParameter";
    t7.parameters = { type: "angularControlFlowBlockParameters", children: t7.parameters, sourceSpan: new h(t7.parameters[0].sourceSpan.start, K(false, t7.parameters, -1).sourceSpan.end) };
  }
}
function Zo(t7) {
  t7.type === "letDeclaration" && (t7.type = "angularLetDeclaration", t7.id = t7.name, t7.init = { type: "angularLetDeclarationInitializer", sourceSpan: new h(t7.valueSpan.start, t7.valueSpan.end), value: t7.value }, delete t7.name, delete t7.value);
}
function eu(t7) {
  (t7.type === "plural" || t7.type === "select") && (t7.clause = t7.type, t7.type = "angularIcuExpression"), t7.type === "expansionCase" && (t7.type = "angularIcuCase");
}
function Si(t7, e, r) {
  let { name: n, canSelfClose: s = true, normalizeTagName: i = false, normalizeAttributeName: a = false, allowHtmComponentClosingTags: o = false, isTagNameCaseSensitive: u = false, shouldParseAsRawText: p } = e, { rootNodes: l, errors: m } = Qr(t7, { canSelfClose: s, allowHtmComponentClosingTags: o, isTagNameCaseSensitive: u, getTagContentType: p ? (...c) => p(...c) ? N.RAW_TEXT : undefined : undefined, tokenizeAngularBlocks: n === "angular" ? true : undefined, tokenizeAngularLetDeclaration: n === "angular" ? true : undefined });
  if (n === "vue") {
    if (l.some((x) => x.type === "docType" && x.value === "html" || x.type === "element" && x.name.toLowerCase() === "html"))
      return Si(t7, en, r);
    let g, y = () => g ?? (g = Qr(t7, { canSelfClose: s, allowHtmComponentClosingTags: o, isTagNameCaseSensitive: u })), q = (x) => y().rootNodes.find(({ startSourceSpan: U }) => U && U.start.offset === x.startSourceSpan.start.offset) ?? x;
    for (let [x, U] of l.entries()) {
      let { endSourceSpan: nn, startSourceSpan: Ei } = U;
      if (nn === null)
        m = y().errors, l[x] = q(U);
      else if (tu(U, r)) {
        let sn = y().errors.find((an) => an.span.start.offset > Ei.start.offset && an.span.start.offset < nn.end.offset);
        sn && Ci(sn), l[x] = q(U);
      }
    }
  }
  m.length > 0 && Ci(m[0]);
  let f = (c) => {
    let g = c.name.startsWith(":") ? c.name.slice(1).split(":")[0] : null, y = c.nameSpan.toString(), q = g !== null && y.startsWith(`${g}:`), x = q ? y.slice(g.length + 1) : y;
    c.name = x, c.namespace = g, c.hasExplicitNamespace = q;
  }, C = (c) => {
    switch (c.type) {
      case "element":
        f(c);
        for (let g of c.attrs)
          f(g), g.valueSpan ? (g.value = g.valueSpan.toString(), /["']/u.test(g.value[0]) && (g.value = g.value.slice(1, -1))) : g.value = null;
        break;
      case "comment":
        c.value = c.sourceSpan.toString().slice(4, -3);
        break;
      case "text":
        c.value = c.sourceSpan.toString();
        break;
    }
  }, A = (c, g) => {
    let y = c.toLowerCase();
    return g(y) ? y : c;
  }, D = (c) => {
    if (c.type === "element" && (i && (!c.namespace || c.namespace === c.tagDefinition.implicitNamespacePrefix || fe(c)) && (c.name = A(c.name, (g) => gi.has(g))), a))
      for (let g of c.attrs)
        g.namespace || (g.name = A(g.name, (y) => ur.has(c.name) && (ur.get("*").has(y) || ur.get(c.name).has(y))));
  }, I = (c) => {
    c.sourceSpan && c.endSourceSpan && (c.sourceSpan = new h(c.sourceSpan.start, c.endSourceSpan.end));
  }, F = (c) => {
    if (c.type === "element") {
      let g = He(u ? c.name : c.name.toLowerCase());
      !c.namespace || c.namespace === g.implicitNamespacePrefix || fe(c) ? c.tagDefinition = g : c.tagDefinition = He("");
    }
  };
  return Qt(new class extends ft {
    visitExpansionCase(c, g) {
      n === "angular" && this.visitChildren(g, (y) => {
        y(c.expression);
      });
    }
    visit(c) {
      C(c), F(c), D(c), I(c);
    }
  }, l), l;
}
function tu(t7, e) {
  var n;
  if (t7.type !== "element" || t7.name !== "template")
    return false;
  let r = (n = t7.attrs.find((s) => s.name === "lang")) == null ? undefined : n.value;
  return !r || Ne(e, { language: r }) === "html";
}
function Ci(t7) {
  let { msg: e, span: { start: r, end: n } } = t7;
  throw hi(e, { loc: { start: { line: r.line + 1, column: r.col + 1 }, end: { line: n.line + 1, column: n.col + 1 } }, cause: t7 });
}
function _i(t7, e, r = {}, n = true) {
  let { frontMatter: s, content: i } = n ? mi(t7) : { frontMatter: null, content: t7 }, a = new ve(t7, r.filepath), o = new ie(a, 0, 0, 0), u = o.moveBy(t7.length), p = { type: "root", sourceSpan: new h(o, u), children: Si(i, e, r) };
  if (s) {
    let f = new ie(a, 0, 0, 0), C = f.moveBy(s.raw.length);
    s.sourceSpan = new h(f, C), p.children.unshift(s);
  }
  let l = new or(p), m = (f, C) => {
    let { offset: A } = C, D = w(false, t7.slice(0, A), /[^\n\r]/gu, " "), F = _i(D + f, e, r, false);
    F.sourceSpan = new h(C, K(false, F.children, -1).sourceSpan.end);
    let c = F.children[0];
    return c.length === A ? F.children.shift() : (c.sourceSpan = new h(c.sourceSpan.start.moveBy(A), c.sourceSpan.end), c.value = c.value.slice(A)), F;
  };
  return l.walk((f) => {
    if (f.type === "comment") {
      let C = di(f, m);
      C && f.parent.replaceChild(f, C);
    }
    Jo(f), Zo(f), eu(f);
  }), l;
}
function Et(t7) {
  return { parse: (e, r) => _i(e, t7, r), hasPragma: ws, hasIgnorePragma: bs, astFormat: "html", locStart: J, locEnd: se };
}
var en = { name: "html", normalizeTagName: true, normalizeAttributeName: true, allowHtmComponentClosingTags: true };
var ru = Et(en);
var nu = new Set(["mj-style", "mj-raw"]);
var su = Et({ ...en, name: "mjml", shouldParseAsRawText: (t7) => nu.has(t7) });
var iu = Et({ name: "angular" });
var au = Et({ name: "vue", isTagNameCaseSensitive: true, shouldParseAsRawText(t7, e, r, n) {
  return t7.toLowerCase() !== "html" && !r && (t7 !== "template" || n.some(({ name: s, value: i }) => s === "lang" && i !== "html" && i !== "" && i !== undefined));
} });
var ou = Et({ name: "lwc", canSelfClose: false });
var uu = { html: qs };
var ym = rn;

// ../../node_modules/.bun/prettier@3.6.2/node_modules/prettier/standalone.mjs
var Fu = Object.create;
var pt2 = Object.defineProperty;
var pu = Object.getOwnPropertyDescriptor;
var du = Object.getOwnPropertyNames;
var mu = Object.getPrototypeOf;
var Eu = Object.prototype.hasOwnProperty;
var er = (e) => {
  throw TypeError(e);
};
var Cu = (e, t7) => () => (t7 || e((t7 = { exports: {} }).exports, t7), t7.exports);
var dt = (e, t7) => {
  for (var r in t7)
    pt2(e, r, { get: t7[r], enumerable: true });
};
var hu = (e, t7, r, n) => {
  if (t7 && typeof t7 == "object" || typeof t7 == "function")
    for (let u of du(t7))
      !Eu.call(e, u) && u !== r && pt2(e, u, { get: () => t7[u], enumerable: !(n = pu(t7, u)) || n.enumerable });
  return e;
};
var gu = (e, t7, r) => (r = e != null ? Fu(mu(e)) : {}, hu(t7 || !e || !e.__esModule ? pt2(r, "default", { value: e, enumerable: true }) : r, e));
var yu = (e, t7, r) => t7.has(e) || er("Cannot " + r);
var tr = (e, t7, r) => t7.has(e) ? er("Cannot add the same private member more than once") : t7 instanceof WeakSet ? t7.add(e) : t7.set(e, r);
var fe2 = (e, t7, r) => (yu(e, t7, "access private method"), r);
var Pn2 = Cu((Mt2) => {
  Object.defineProperty(Mt2, "__esModule", { value: true });
  function Co() {
    return new Proxy({}, { get: () => (e) => e });
  }
  var On2 = /\r\n|[\n\r\u2028\u2029]/;
  function ho2(e, t7, r) {
    let n = Object.assign({ column: 0, line: -1 }, e.start), u = Object.assign({}, n, e.end), { linesAbove: o = 2, linesBelow: i = 3 } = r || {}, s = n.line, a = n.column, c = u.line, D = u.column, p = Math.max(s - (o + 1), 0), l = Math.min(t7.length, c + i);
    s === -1 && (p = 0), c === -1 && (l = t7.length);
    let F = c - s, f = {};
    if (F)
      for (let d2 = 0;d2 <= F; d2++) {
        let m = d2 + s;
        if (!a)
          f[m] = true;
        else if (d2 === 0) {
          let C = t7[m - 1].length;
          f[m] = [a, C - a + 1];
        } else if (d2 === F)
          f[m] = [0, D];
        else {
          let C = t7[m - d2].length;
          f[m] = [0, C];
        }
      }
    else
      a === D ? a ? f[s] = [a, 0] : f[s] = true : f[s] = [a, D - a];
    return { start: p, end: l, markerLines: f };
  }
  function go2(e, t7, r = {}) {
    let u = Co(false), o = e.split(On2), { start: i, end: s, markerLines: a } = ho2(t7, o, r), c = t7.start && typeof t7.start.column == "number", D = String(s).length, l = e.split(On2, s).slice(i, s).map((F, f) => {
      let d2 = i + 1 + f, C = ` ${` ${d2}`.slice(-D)} |`, E2 = a[d2], h2 = !a[d2 + 1];
      if (E2) {
        let x = "";
        if (Array.isArray(E2)) {
          let A = F.slice(0, Math.max(E2[0] - 1, 0)).replace(/[^\t]/g, " "), $2 = E2[1] || 1;
          x = [`
 `, u.gutter(C.replace(/\d/g, " ")), " ", A, u.marker("^").repeat($2)].join(""), h2 && r.message && (x += " " + u.message(r.message));
        }
        return [u.marker(">"), u.gutter(C), F.length > 0 ? ` ${F}` : "", x].join("");
      } else
        return ` ${u.gutter(C)}${F.length > 0 ? ` ${F}` : ""}`;
    }).join(`
`);
    return r.message && !c && (l = `${" ".repeat(D + 1)}${r.message}
${l}`), l;
  }
  Mt2.codeFrameColumns = go2;
});
var Zt = {};
dt(Zt, { __debug: () => ui, check: () => ri2, doc: () => qt2, format: () => fu, formatWithCursor: () => cu, getSupportInfo: () => ni2, util: () => Qt2, version: () => tu2 });
var Au = (e, t7, r, n) => {
  if (!(e && t7 == null))
    return t7.replaceAll ? t7.replaceAll(r, n) : r.global ? t7.replace(r, n) : t7.split(r).join(n);
};
var te = Au;
var _e2 = class {
  diff(t7, r, n = {}) {
    let u;
    typeof n == "function" ? (u = n, n = {}) : ("callback" in n) && (u = n.callback);
    let o = this.castInput(t7, n), i = this.castInput(r, n), s = this.removeEmpty(this.tokenize(o, n)), a = this.removeEmpty(this.tokenize(i, n));
    return this.diffWithOptionsObj(s, a, n, u);
  }
  diffWithOptionsObj(t7, r, n, u) {
    var o;
    let i = (E2) => {
      if (E2 = this.postProcess(E2, n), u) {
        setTimeout(function() {
          u(E2);
        }, 0);
        return;
      } else
        return E2;
    }, s = r.length, a = t7.length, c = 1, D = s + a;
    n.maxEditLength != null && (D = Math.min(D, n.maxEditLength));
    let p = (o = n.timeout) !== null && o !== undefined ? o : 1 / 0, l = Date.now() + p, F = [{ oldPos: -1, lastComponent: undefined }], f = this.extractCommon(F[0], r, t7, 0, n);
    if (F[0].oldPos + 1 >= a && f + 1 >= s)
      return i(this.buildValues(F[0].lastComponent, r, t7));
    let d2 = -1 / 0, m = 1 / 0, C = () => {
      for (let E2 = Math.max(d2, -c);E2 <= Math.min(m, c); E2 += 2) {
        let h2, x = F[E2 - 1], A = F[E2 + 1];
        x && (F[E2 - 1] = undefined);
        let $2 = false;
        if (A) {
          let Be2 = A.oldPos - E2;
          $2 = A && 0 <= Be2 && Be2 < s;
        }
        let ue = x && x.oldPos + 1 < a;
        if (!$2 && !ue) {
          F[E2] = undefined;
          continue;
        }
        if (!ue || $2 && x.oldPos < A.oldPos ? h2 = this.addToPath(A, true, false, 0, n) : h2 = this.addToPath(x, false, true, 1, n), f = this.extractCommon(h2, r, t7, E2, n), h2.oldPos + 1 >= a && f + 1 >= s)
          return i(this.buildValues(h2.lastComponent, r, t7)) || true;
        F[E2] = h2, h2.oldPos + 1 >= a && (m = Math.min(m, E2 - 1)), f + 1 >= s && (d2 = Math.max(d2, E2 + 1));
      }
      c++;
    };
    if (u)
      (function E() {
        setTimeout(function() {
          if (c > D || Date.now() > l)
            return u(undefined);
          C() || E();
        }, 0);
      })();
    else
      for (;c <= D && Date.now() <= l; ) {
        let E2 = C();
        if (E2)
          return E2;
      }
  }
  addToPath(t7, r, n, u, o) {
    let i = t7.lastComponent;
    return i && !o.oneChangePerToken && i.added === r && i.removed === n ? { oldPos: t7.oldPos + u, lastComponent: { count: i.count + 1, added: r, removed: n, previousComponent: i.previousComponent } } : { oldPos: t7.oldPos + u, lastComponent: { count: 1, added: r, removed: n, previousComponent: i } };
  }
  extractCommon(t7, r, n, u, o) {
    let i = r.length, s = n.length, a = t7.oldPos, c = a - u, D = 0;
    for (;c + 1 < i && a + 1 < s && this.equals(n[a + 1], r[c + 1], o); )
      c++, a++, D++, o.oneChangePerToken && (t7.lastComponent = { count: 1, previousComponent: t7.lastComponent, added: false, removed: false });
    return D && !o.oneChangePerToken && (t7.lastComponent = { count: D, previousComponent: t7.lastComponent, added: false, removed: false }), t7.oldPos = a, c;
  }
  equals(t7, r, n) {
    return n.comparator ? n.comparator(t7, r) : t7 === r || !!n.ignoreCase && t7.toLowerCase() === r.toLowerCase();
  }
  removeEmpty(t7) {
    let r = [];
    for (let n = 0;n < t7.length; n++)
      t7[n] && r.push(t7[n]);
    return r;
  }
  castInput(t7, r) {
    return t7;
  }
  tokenize(t7, r) {
    return Array.from(t7);
  }
  join(t7) {
    return t7.join("");
  }
  postProcess(t7, r) {
    return t7;
  }
  get useLongestToken() {
    return false;
  }
  buildValues(t7, r, n) {
    let u = [], o;
    for (;t7; )
      u.push(t7), o = t7.previousComponent, delete t7.previousComponent, t7 = o;
    u.reverse();
    let i = u.length, s = 0, a = 0, c = 0;
    for (;s < i; s++) {
      let D = u[s];
      if (D.removed)
        D.value = this.join(n.slice(c, c + D.count)), c += D.count;
      else {
        if (!D.added && this.useLongestToken) {
          let p = r.slice(a, a + D.count);
          p = p.map(function(l, F) {
            let f = n[c + F];
            return f.length > l.length ? f : l;
          }), D.value = this.join(p);
        } else
          D.value = this.join(r.slice(a, a + D.count));
        a += D.count, D.added || (c += D.count);
      }
    }
    return u;
  }
};
var mt2 = class extends _e2 {
  tokenize(t7) {
    return t7.slice();
  }
  join(t7) {
    return t7;
  }
  removeEmpty(t7) {
    return t7;
  }
};
var rr2 = new mt2;
function Et2(e, t7, r) {
  return rr2.diff(e, t7, r);
}
function nr2(e) {
  let t7 = e.indexOf("\r");
  return t7 !== -1 ? e.charAt(t7 + 1) === `
` ? "crlf" : "cr" : "lf";
}
function xe2(e) {
  switch (e) {
    case "cr":
      return "\r";
    case "crlf":
      return `\r
`;
    default:
      return `
`;
  }
}
function Ct2(e, t7) {
  let r;
  switch (t7) {
    case `
`:
      r = /\n/gu;
      break;
    case "\r":
      r = /\r/gu;
      break;
    case `\r
`:
      r = /\r\n/gu;
      break;
    default:
      throw new Error(`Unexpected "eol" ${JSON.stringify(t7)}.`);
  }
  let n = e.match(r);
  return n ? n.length : 0;
}
function ur2(e) {
  return te(false, e, /\r\n?/gu, `
`);
}
var W2 = "string";
var Y2 = "array";
var j2 = "cursor";
var N2 = "indent";
var O2 = "align";
var P2 = "trim";
var B2 = "group";
var k2 = "fill";
var _2 = "if-break";
var v2 = "indent-if-break";
var L2 = "line-suffix";
var I = "line-suffix-boundary";
var g = "line";
var S2 = "label";
var w2 = "break-parent";
var Ue2 = new Set([j2, N2, O2, P2, B2, k2, _2, v2, L2, I, g, S2, w2]);
var Bu = (e, t7, r) => {
  if (!(e && t7 == null))
    return Array.isArray(t7) || typeof t7 == "string" ? t7[r < 0 ? t7.length + r : r] : t7.at(r);
};
var y = Bu;
function or2(e) {
  let t7 = e.length;
  for (;t7 > 0 && (e[t7 - 1] === "\r" || e[t7 - 1] === `
`); )
    t7--;
  return t7 < e.length ? e.slice(0, t7) : e;
}
function _u(e) {
  if (typeof e == "string")
    return W2;
  if (Array.isArray(e))
    return Y2;
  if (!e)
    return;
  let { type: t7 } = e;
  if (Ue2.has(t7))
    return t7;
}
var M = _u;
var xu = (e) => new Intl.ListFormat("en-US", { type: "disjunction" }).format(e);
function wu(e) {
  let t7 = e === null ? "null" : typeof e;
  if (t7 !== "string" && t7 !== "object")
    return `Unexpected doc '${t7}', 
Expected it to be 'string' or 'object'.`;
  if (M(e))
    throw new Error("doc is valid.");
  let r = Object.prototype.toString.call(e);
  if (r !== "[object Object]")
    return `Unexpected doc '${r}'.`;
  let n = xu([...Ue2].map((u) => `'${u}'`));
  return `Unexpected doc.type '${e.type}'.
Expected it to be ${n}.`;
}
var ht2 = class extends Error {
  name = "InvalidDocError";
  constructor(t7) {
    super(wu(t7)), this.doc = t7;
  }
};
var q = ht2;
var ir2 = {};
function bu(e, t7, r, n) {
  let u = [e];
  for (;u.length > 0; ) {
    let o = u.pop();
    if (o === ir2) {
      r(u.pop());
      continue;
    }
    r && u.push(o, ir2);
    let i = M(o);
    if (!i)
      throw new q(o);
    if ((t7 == null ? undefined : t7(o)) !== false)
      switch (i) {
        case Y2:
        case k2: {
          let s = i === Y2 ? o : o.parts;
          for (let a = s.length, c = a - 1;c >= 0; --c)
            u.push(s[c]);
          break;
        }
        case _2:
          u.push(o.flatContents, o.breakContents);
          break;
        case B2:
          if (n && o.expandedStates)
            for (let s = o.expandedStates.length, a = s - 1;a >= 0; --a)
              u.push(o.expandedStates[a]);
          else
            u.push(o.contents);
          break;
        case O2:
        case N2:
        case v2:
        case S2:
        case L2:
          u.push(o.contents);
          break;
        case W2:
        case j2:
        case P2:
        case I:
        case g:
        case w2:
          break;
        default:
          throw new q(o);
      }
  }
}
var le2 = bu;
function be2(e, t7) {
  if (typeof e == "string")
    return t7(e);
  let r = new Map;
  return n(e);
  function n(o) {
    if (r.has(o))
      return r.get(o);
    let i = u(o);
    return r.set(o, i), i;
  }
  function u(o) {
    switch (M(o)) {
      case Y2:
        return t7(o.map(n));
      case k2:
        return t7({ ...o, parts: o.parts.map(n) });
      case _2:
        return t7({ ...o, breakContents: n(o.breakContents), flatContents: n(o.flatContents) });
      case B2: {
        let { expandedStates: i, contents: s } = o;
        return i ? (i = i.map(n), s = i[0]) : s = n(s), t7({ ...o, contents: s, expandedStates: i });
      }
      case O2:
      case N2:
      case v2:
      case S2:
      case L2:
        return t7({ ...o, contents: n(o.contents) });
      case W2:
      case j2:
      case P2:
      case I:
      case g:
      case w2:
        return t7(o);
      default:
        throw new q(o);
    }
  }
}
function Ve2(e, t7, r) {
  let n = r, u = false;
  function o(i) {
    if (u)
      return false;
    let s = t7(i);
    s !== undefined && (u = true, n = s);
  }
  return le2(e, o), n;
}
function ku(e) {
  if (e.type === B2 && e.break || e.type === g && e.hard || e.type === w2)
    return true;
}
function Dr2(e) {
  return Ve2(e, ku, false);
}
function sr2(e) {
  if (e.length > 0) {
    let t7 = y(false, e, -1);
    !t7.expandedStates && !t7.break && (t7.break = "propagated");
  }
  return null;
}
function cr2(e) {
  let t7 = new Set, r = [];
  function n(o) {
    if (o.type === w2 && sr2(r), o.type === B2) {
      if (r.push(o), t7.has(o))
        return false;
      t7.add(o);
    }
  }
  function u(o) {
    o.type === B2 && r.pop().break && sr2(r);
  }
  le2(e, n, u, true);
}
function Su(e) {
  return e.type === g && !e.hard ? e.soft ? "" : " " : e.type === _2 ? e.flatContents : e;
}
function fr2(e) {
  return be2(e, Su);
}
function ar2(e) {
  for (e = [...e];e.length >= 2 && y(false, e, -2).type === g && y(false, e, -1).type === w2; )
    e.length -= 2;
  if (e.length > 0) {
    let t7 = we2(y(false, e, -1));
    e[e.length - 1] = t7;
  }
  return e;
}
function we2(e) {
  switch (M(e)) {
    case N2:
    case v2:
    case B2:
    case L2:
    case S2: {
      let t7 = we2(e.contents);
      return { ...e, contents: t7 };
    }
    case _2:
      return { ...e, breakContents: we2(e.breakContents), flatContents: we2(e.flatContents) };
    case k2:
      return { ...e, parts: ar2(e.parts) };
    case Y2:
      return ar2(e);
    case W2:
      return or2(e);
    case O2:
    case j2:
    case P2:
    case I:
    case g:
    case w2:
      break;
    default:
      throw new q(e);
  }
  return e;
}
function $e(e) {
  return we2(Nu(e));
}
function Tu(e) {
  switch (M(e)) {
    case k2:
      if (e.parts.every((t7) => t7 === ""))
        return "";
      break;
    case B2:
      if (!e.contents && !e.id && !e.break && !e.expandedStates)
        return "";
      if (e.contents.type === B2 && e.contents.id === e.id && e.contents.break === e.break && e.contents.expandedStates === e.expandedStates)
        return e.contents;
      break;
    case O2:
    case N2:
    case v2:
    case L2:
      if (!e.contents)
        return "";
      break;
    case _2:
      if (!e.flatContents && !e.breakContents)
        return "";
      break;
    case Y2: {
      let t7 = [];
      for (let r of e) {
        if (!r)
          continue;
        let [n, ...u] = Array.isArray(r) ? r : [r];
        typeof n == "string" && typeof y(false, t7, -1) == "string" ? t7[t7.length - 1] += n : t7.push(n), t7.push(...u);
      }
      return t7.length === 0 ? "" : t7.length === 1 ? t7[0] : t7;
    }
    case W2:
    case j2:
    case P2:
    case I:
    case g:
    case S2:
    case w2:
      break;
    default:
      throw new q(e);
  }
  return e;
}
function Nu(e) {
  return be2(e, (t7) => Tu(t7));
}
function lr2(e, t7 = We) {
  return be2(e, (r) => typeof r == "string" ? ke2(t7, r.split(`
`)) : r);
}
function Ou(e) {
  if (e.type === g)
    return true;
}
function Fr2(e) {
  return Ve2(e, Ou, false);
}
function Fe2(e, t7) {
  return e.type === S2 ? { ...e, contents: t7(e.contents) } : t7(e);
}
var gt2 = () => {};
var K2 = gt2;
var yt2 = gt2;
var pr2 = gt2;
function ie2(e) {
  return K2(e), { type: N2, contents: e };
}
function oe(e, t7) {
  return K2(t7), { type: O2, contents: t7, n: e };
}
function At2(e, t7 = {}) {
  return K2(e), yt2(t7.expandedStates, true), { type: B2, id: t7.id, contents: e, break: !!t7.shouldBreak, expandedStates: t7.expandedStates };
}
function dr2(e) {
  return oe(Number.NEGATIVE_INFINITY, e);
}
function mr2(e) {
  return oe({ type: "root" }, e);
}
function Er2(e) {
  return oe(-1, e);
}
function Cr2(e, t7) {
  return At2(e[0], { ...t7, expandedStates: e });
}
function hr2(e) {
  return pr2(e), { type: k2, parts: e };
}
function gr2(e, t7 = "", r = {}) {
  return K2(e), t7 !== "" && K2(t7), { type: _2, breakContents: e, flatContents: t7, groupId: r.groupId };
}
function yr2(e, t7) {
  return K2(e), { type: v2, contents: e, groupId: t7.groupId, negate: t7.negate };
}
function Se2(e) {
  return K2(e), { type: L2, contents: e };
}
var Ar2 = { type: I };
var pe2 = { type: w2 };
var Br2 = { type: P2 };
var Te2 = { type: g, hard: true };
var Bt2 = { type: g, hard: true, literal: true };
var Me2 = { type: g };
var _r2 = { type: g, soft: true };
var z2 = [Te2, pe2];
var We = [Bt2, pe2];
var X2 = { type: j2 };
function ke2(e, t7) {
  K2(e), yt2(t7);
  let r = [];
  for (let n = 0;n < t7.length; n++)
    n !== 0 && r.push(e), r.push(t7[n]);
  return r;
}
function Ge3(e, t7, r) {
  K2(e);
  let n = e;
  if (t7 > 0) {
    for (let u = 0;u < Math.floor(t7 / r); ++u)
      n = ie2(n);
    n = oe(t7 % r, n), n = oe(Number.NEGATIVE_INFINITY, n);
  }
  return n;
}
function xr2(e, t7) {
  return K2(t7), e ? { type: S2, label: e, contents: t7 } : t7;
}
function Q2(e) {
  var t7;
  if (!e)
    return "";
  if (Array.isArray(e)) {
    let r = [];
    for (let n of e)
      if (Array.isArray(n))
        r.push(...Q2(n));
      else {
        let u = Q2(n);
        u !== "" && r.push(u);
      }
    return r;
  }
  return e.type === _2 ? { ...e, breakContents: Q2(e.breakContents), flatContents: Q2(e.flatContents) } : e.type === B2 ? { ...e, contents: Q2(e.contents), expandedStates: (t7 = e.expandedStates) == null ? undefined : t7.map(Q2) } : e.type === k2 ? { type: "fill", parts: e.parts.map(Q2) } : e.contents ? { ...e, contents: Q2(e.contents) } : e;
}
function wr2(e) {
  let t7 = Object.create(null), r = new Set;
  return n(Q2(e));
  function n(o, i, s) {
    var a, c;
    if (typeof o == "string")
      return JSON.stringify(o);
    if (Array.isArray(o)) {
      let D = o.map(n).filter(Boolean);
      return D.length === 1 ? D[0] : `[${D.join(", ")}]`;
    }
    if (o.type === g) {
      let D = ((a = s == null ? undefined : s[i + 1]) == null ? undefined : a.type) === w2;
      return o.literal ? D ? "literalline" : "literallineWithoutBreakParent" : o.hard ? D ? "hardline" : "hardlineWithoutBreakParent" : o.soft ? "softline" : "line";
    }
    if (o.type === w2)
      return ((c = s == null ? undefined : s[i - 1]) == null ? undefined : c.type) === g && s[i - 1].hard ? undefined : "breakParent";
    if (o.type === P2)
      return "trim";
    if (o.type === N2)
      return "indent(" + n(o.contents) + ")";
    if (o.type === O2)
      return o.n === Number.NEGATIVE_INFINITY ? "dedentToRoot(" + n(o.contents) + ")" : o.n < 0 ? "dedent(" + n(o.contents) + ")" : o.n.type === "root" ? "markAsRoot(" + n(o.contents) + ")" : "align(" + JSON.stringify(o.n) + ", " + n(o.contents) + ")";
    if (o.type === _2)
      return "ifBreak(" + n(o.breakContents) + (o.flatContents ? ", " + n(o.flatContents) : "") + (o.groupId ? (o.flatContents ? "" : ', ""') + `, { groupId: ${u(o.groupId)} }` : "") + ")";
    if (o.type === v2) {
      let D = [];
      o.negate && D.push("negate: true"), o.groupId && D.push(`groupId: ${u(o.groupId)}`);
      let p = D.length > 0 ? `, { ${D.join(", ")} }` : "";
      return `indentIfBreak(${n(o.contents)}${p})`;
    }
    if (o.type === B2) {
      let D = [];
      o.break && o.break !== "propagated" && D.push("shouldBreak: true"), o.id && D.push(`id: ${u(o.id)}`);
      let p = D.length > 0 ? `, { ${D.join(", ")} }` : "";
      return o.expandedStates ? `conditionalGroup([${o.expandedStates.map((l) => n(l)).join(",")}]${p})` : `group(${n(o.contents)}${p})`;
    }
    if (o.type === k2)
      return `fill([${o.parts.map((D) => n(D)).join(", ")}])`;
    if (o.type === L2)
      return "lineSuffix(" + n(o.contents) + ")";
    if (o.type === I)
      return "lineSuffixBoundary";
    if (o.type === S2)
      return `label(${JSON.stringify(o.label)}, ${n(o.contents)})`;
    if (o.type === j2)
      return "cursor";
    throw new Error("Unknown doc type " + o.type);
  }
  function u(o) {
    if (typeof o != "symbol")
      return JSON.stringify(String(o));
    if (o in t7)
      return t7[o];
    let i = o.description || "symbol";
    for (let s = 0;; s++) {
      let a = i + (s > 0 ? ` #${s}` : "");
      if (!r.has(a))
        return r.add(a), t7[o] = `Symbol.for(${JSON.stringify(a)})`;
    }
  }
}
var br2 = () => /[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26D3\uFE0F?(?:\u200D\uD83D\uDCA5)?|\u26F9(?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF43\uDF45-\uDF4A\uDF4C-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDF44(?:\u200D\uD83D\uDFEB)?|\uDF4B(?:\u200D\uD83D\uDFE9)?|\uDFC3(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4\uDEB5](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC25\uDC27-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE41\uDE43\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDC-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC08(?:\u200D\u2B1B)?|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC26(?:\u200D(?:\u2B1B|\uD83D\uDD25))?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?|\uDE42(?:\u200D[\u2194\u2195]\uFE0F?)?|\uDEB6(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF8](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE7C\uDE80-\uDE89\uDE8F-\uDEC2\uDEC6\uDECE-\uDEDC\uDEDF-\uDEE9]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDCE(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1|\uDDD1\u200D\uD83E\uDDD2(?:\u200D\uD83E\uDDD2)?|\uDDD2(?:\u200D\uD83E\uDDD2)?))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?)/g;
function kr2(e) {
  return e === 12288 || e >= 65281 && e <= 65376 || e >= 65504 && e <= 65510;
}
function Sr2(e) {
  return e >= 4352 && e <= 4447 || e === 8986 || e === 8987 || e === 9001 || e === 9002 || e >= 9193 && e <= 9196 || e === 9200 || e === 9203 || e === 9725 || e === 9726 || e === 9748 || e === 9749 || e >= 9776 && e <= 9783 || e >= 9800 && e <= 9811 || e === 9855 || e >= 9866 && e <= 9871 || e === 9875 || e === 9889 || e === 9898 || e === 9899 || e === 9917 || e === 9918 || e === 9924 || e === 9925 || e === 9934 || e === 9940 || e === 9962 || e === 9970 || e === 9971 || e === 9973 || e === 9978 || e === 9981 || e === 9989 || e === 9994 || e === 9995 || e === 10024 || e === 10060 || e === 10062 || e >= 10067 && e <= 10069 || e === 10071 || e >= 10133 && e <= 10135 || e === 10160 || e === 10175 || e === 11035 || e === 11036 || e === 11088 || e === 11093 || e >= 11904 && e <= 11929 || e >= 11931 && e <= 12019 || e >= 12032 && e <= 12245 || e >= 12272 && e <= 12287 || e >= 12289 && e <= 12350 || e >= 12353 && e <= 12438 || e >= 12441 && e <= 12543 || e >= 12549 && e <= 12591 || e >= 12593 && e <= 12686 || e >= 12688 && e <= 12773 || e >= 12783 && e <= 12830 || e >= 12832 && e <= 12871 || e >= 12880 && e <= 42124 || e >= 42128 && e <= 42182 || e >= 43360 && e <= 43388 || e >= 44032 && e <= 55203 || e >= 63744 && e <= 64255 || e >= 65040 && e <= 65049 || e >= 65072 && e <= 65106 || e >= 65108 && e <= 65126 || e >= 65128 && e <= 65131 || e >= 94176 && e <= 94180 || e === 94192 || e === 94193 || e >= 94208 && e <= 100343 || e >= 100352 && e <= 101589 || e >= 101631 && e <= 101640 || e >= 110576 && e <= 110579 || e >= 110581 && e <= 110587 || e === 110589 || e === 110590 || e >= 110592 && e <= 110882 || e === 110898 || e >= 110928 && e <= 110930 || e === 110933 || e >= 110948 && e <= 110951 || e >= 110960 && e <= 111355 || e >= 119552 && e <= 119638 || e >= 119648 && e <= 119670 || e === 126980 || e === 127183 || e === 127374 || e >= 127377 && e <= 127386 || e >= 127488 && e <= 127490 || e >= 127504 && e <= 127547 || e >= 127552 && e <= 127560 || e === 127568 || e === 127569 || e >= 127584 && e <= 127589 || e >= 127744 && e <= 127776 || e >= 127789 && e <= 127797 || e >= 127799 && e <= 127868 || e >= 127870 && e <= 127891 || e >= 127904 && e <= 127946 || e >= 127951 && e <= 127955 || e >= 127968 && e <= 127984 || e === 127988 || e >= 127992 && e <= 128062 || e === 128064 || e >= 128066 && e <= 128252 || e >= 128255 && e <= 128317 || e >= 128331 && e <= 128334 || e >= 128336 && e <= 128359 || e === 128378 || e === 128405 || e === 128406 || e === 128420 || e >= 128507 && e <= 128591 || e >= 128640 && e <= 128709 || e === 128716 || e >= 128720 && e <= 128722 || e >= 128725 && e <= 128727 || e >= 128732 && e <= 128735 || e === 128747 || e === 128748 || e >= 128756 && e <= 128764 || e >= 128992 && e <= 129003 || e === 129008 || e >= 129292 && e <= 129338 || e >= 129340 && e <= 129349 || e >= 129351 && e <= 129535 || e >= 129648 && e <= 129660 || e >= 129664 && e <= 129673 || e >= 129679 && e <= 129734 || e >= 129742 && e <= 129756 || e >= 129759 && e <= 129769 || e >= 129776 && e <= 129784 || e >= 131072 && e <= 196605 || e >= 196608 && e <= 262141;
}
var Tr2 = (e) => !(kr2(e) || Sr2(e));
var Pu = /[^\x20-\x7F]/u;
function vu(e) {
  if (!e)
    return 0;
  if (!Pu.test(e))
    return e.length;
  e = e.replace(br2(), "  ");
  let t7 = 0;
  for (let r of e) {
    let n = r.codePointAt(0);
    n <= 31 || n >= 127 && n <= 159 || n >= 768 && n <= 879 || (t7 += Tr2(n) ? 1 : 2);
  }
  return t7;
}
var Ne2 = vu;
var R2 = Symbol("MODE_BREAK");
var H2 = Symbol("MODE_FLAT");
var de2 = Symbol("cursor");
var _t2 = Symbol("DOC_FILL_PRINTED_LENGTH");
function Nr2() {
  return { value: "", length: 0, queue: [] };
}
function Lu(e, t7) {
  return xt2(e, { type: "indent" }, t7);
}
function Iu(e, t7, r) {
  return t7 === Number.NEGATIVE_INFINITY ? e.root || Nr2() : t7 < 0 ? xt2(e, { type: "dedent" }, r) : t7 ? t7.type === "root" ? { ...e, root: e } : xt2(e, { type: typeof t7 == "string" ? "stringAlign" : "numberAlign", n: t7 }, r) : e;
}
function xt2(e, t7, r) {
  let n = t7.type === "dedent" ? e.queue.slice(0, -1) : [...e.queue, t7], u = "", o = 0, i = 0, s = 0;
  for (let f of n)
    switch (f.type) {
      case "indent":
        D(), r.useTabs ? a(1) : c(r.tabWidth);
        break;
      case "stringAlign":
        D(), u += f.n, o += f.n.length;
        break;
      case "numberAlign":
        i += 1, s += f.n;
        break;
      default:
        throw new Error(`Unexpected type '${f.type}'`);
    }
  return l(), { ...e, value: u, length: o, queue: n };
  function a(f) {
    u += "\t".repeat(f), o += r.tabWidth * f;
  }
  function c(f) {
    u += " ".repeat(f), o += f;
  }
  function D() {
    r.useTabs ? p() : l();
  }
  function p() {
    i > 0 && a(i), F();
  }
  function l() {
    s > 0 && c(s), F();
  }
  function F() {
    i = 0, s = 0;
  }
}
function wt2(e) {
  let t7 = 0, r = 0, n = e.length;
  e:
    for (;n--; ) {
      let u = e[n];
      if (u === de2) {
        r++;
        continue;
      }
      for (let o = u.length - 1;o >= 0; o--) {
        let i = u[o];
        if (i === " " || i === "\t")
          t7++;
        else {
          e[n] = u.slice(0, o + 1);
          break e;
        }
      }
    }
  if (t7 > 0 || r > 0)
    for (e.length = n + 1;r-- > 0; )
      e.push(de2);
  return t7;
}
function Ke2(e, t7, r, n, u, o) {
  if (r === Number.POSITIVE_INFINITY)
    return true;
  let i = t7.length, s = [e], a = [];
  for (;r >= 0; ) {
    if (s.length === 0) {
      if (i === 0)
        return true;
      s.push(t7[--i]);
      continue;
    }
    let { mode: c, doc: D } = s.pop(), p = M(D);
    switch (p) {
      case W2:
        a.push(D), r -= Ne2(D);
        break;
      case Y2:
      case k2: {
        let l = p === Y2 ? D : D.parts, F = D[_t2] ?? 0;
        for (let f = l.length - 1;f >= F; f--)
          s.push({ mode: c, doc: l[f] });
        break;
      }
      case N2:
      case O2:
      case v2:
      case S2:
        s.push({ mode: c, doc: D.contents });
        break;
      case P2:
        r += wt2(a);
        break;
      case B2: {
        if (o && D.break)
          return false;
        let l = D.break ? R2 : c, F = D.expandedStates && l === R2 ? y(false, D.expandedStates, -1) : D.contents;
        s.push({ mode: l, doc: F });
        break;
      }
      case _2: {
        let F = (D.groupId ? u[D.groupId] || H2 : c) === R2 ? D.breakContents : D.flatContents;
        F && s.push({ mode: c, doc: F });
        break;
      }
      case g:
        if (c === R2 || D.hard)
          return true;
        D.soft || (a.push(" "), r--);
        break;
      case L2:
        n = true;
        break;
      case I:
        if (n)
          return false;
        break;
    }
  }
  return false;
}
function me2(e, t7) {
  let r = {}, n = t7.printWidth, u = xe2(t7.endOfLine), o = 0, i = [{ ind: Nr2(), mode: R2, doc: e }], s = [], a = false, c = [], D = 0;
  for (cr2(e);i.length > 0; ) {
    let { ind: l, mode: F, doc: f } = i.pop();
    switch (M(f)) {
      case W2: {
        let d2 = u !== `
` ? te(false, f, `
`, u) : f;
        s.push(d2), i.length > 0 && (o += Ne2(d2));
        break;
      }
      case Y2:
        for (let d2 = f.length - 1;d2 >= 0; d2--)
          i.push({ ind: l, mode: F, doc: f[d2] });
        break;
      case j2:
        if (D >= 2)
          throw new Error("There are too many 'cursor' in doc.");
        s.push(de2), D++;
        break;
      case N2:
        i.push({ ind: Lu(l, t7), mode: F, doc: f.contents });
        break;
      case O2:
        i.push({ ind: Iu(l, f.n, t7), mode: F, doc: f.contents });
        break;
      case P2:
        o -= wt2(s);
        break;
      case B2:
        switch (F) {
          case H2:
            if (!a) {
              i.push({ ind: l, mode: f.break ? R2 : H2, doc: f.contents });
              break;
            }
          case R2: {
            a = false;
            let d2 = { ind: l, mode: H2, doc: f.contents }, m = n - o, C = c.length > 0;
            if (!f.break && Ke2(d2, i, m, C, r))
              i.push(d2);
            else if (f.expandedStates) {
              let E2 = y(false, f.expandedStates, -1);
              if (f.break) {
                i.push({ ind: l, mode: R2, doc: E2 });
                break;
              } else
                for (let h2 = 1;h2 < f.expandedStates.length + 1; h2++)
                  if (h2 >= f.expandedStates.length) {
                    i.push({ ind: l, mode: R2, doc: E2 });
                    break;
                  } else {
                    let x = f.expandedStates[h2], A = { ind: l, mode: H2, doc: x };
                    if (Ke2(A, i, m, C, r)) {
                      i.push(A);
                      break;
                    }
                  }
            } else
              i.push({ ind: l, mode: R2, doc: f.contents });
            break;
          }
        }
        f.id && (r[f.id] = y(false, i, -1).mode);
        break;
      case k2: {
        let d2 = n - o, m = f[_t2] ?? 0, { parts: C } = f, E2 = C.length - m;
        if (E2 === 0)
          break;
        let h2 = C[m + 0], x = C[m + 1], A = { ind: l, mode: H2, doc: h2 }, $2 = { ind: l, mode: R2, doc: h2 }, ue = Ke2(A, [], d2, c.length > 0, r, true);
        if (E2 === 1) {
          ue ? i.push(A) : i.push($2);
          break;
        }
        let Be2 = { ind: l, mode: H2, doc: x }, lt3 = { ind: l, mode: R2, doc: x };
        if (E2 === 2) {
          ue ? i.push(Be2, A) : i.push(lt3, $2);
          break;
        }
        let lu = C[m + 2], Ft2 = { ind: l, mode: F, doc: { ...f, [_t2]: m + 2 } };
        Ke2({ ind: l, mode: H2, doc: [h2, x, lu] }, [], d2, c.length > 0, r, true) ? i.push(Ft2, Be2, A) : ue ? i.push(Ft2, lt3, A) : i.push(Ft2, lt3, $2);
        break;
      }
      case _2:
      case v2: {
        let d2 = f.groupId ? r[f.groupId] : F;
        if (d2 === R2) {
          let m = f.type === _2 ? f.breakContents : f.negate ? f.contents : ie2(f.contents);
          m && i.push({ ind: l, mode: F, doc: m });
        }
        if (d2 === H2) {
          let m = f.type === _2 ? f.flatContents : f.negate ? ie2(f.contents) : f.contents;
          m && i.push({ ind: l, mode: F, doc: m });
        }
        break;
      }
      case L2:
        c.push({ ind: l, mode: F, doc: f.contents });
        break;
      case I:
        c.length > 0 && i.push({ ind: l, mode: F, doc: Te2 });
        break;
      case g:
        switch (F) {
          case H2:
            if (f.hard)
              a = true;
            else {
              f.soft || (s.push(" "), o += 1);
              break;
            }
          case R2:
            if (c.length > 0) {
              i.push({ ind: l, mode: F, doc: f }, ...c.reverse()), c.length = 0;
              break;
            }
            f.literal ? l.root ? (s.push(u, l.root.value), o = l.root.length) : (s.push(u), o = 0) : (o -= wt2(s), s.push(u + l.value), o = l.length);
            break;
        }
        break;
      case S2:
        i.push({ ind: l, mode: F, doc: f.contents });
        break;
      case w2:
        break;
      default:
        throw new q(f);
    }
    i.length === 0 && c.length > 0 && (i.push(...c.reverse()), c.length = 0);
  }
  let p = s.indexOf(de2);
  if (p !== -1) {
    let l = s.indexOf(de2, p + 1);
    if (l === -1)
      return { formatted: s.filter((m) => m !== de2).join("") };
    let F = s.slice(0, p).join(""), f = s.slice(p + 1, l).join(""), d2 = s.slice(l + 1).join("");
    return { formatted: F + f + d2, cursorNodeStart: F.length, cursorNodeText: f };
  }
  return { formatted: s.join("") };
}
function Ru(e, t7, r = 0) {
  let n = 0;
  for (let u = r;u < e.length; ++u)
    e[u] === "\t" ? n = n + t7 - n % t7 : n++;
  return n;
}
var Ee2 = Ru;
var Z2;
var kt2;
var ze2;
var bt2 = class {
  constructor(t7) {
    tr(this, Z2);
    this.stack = [t7];
  }
  get key() {
    let { stack: t7, siblings: r } = this;
    return y(false, t7, r === null ? -2 : -4) ?? null;
  }
  get index() {
    return this.siblings === null ? null : y(false, this.stack, -2);
  }
  get node() {
    return y(false, this.stack, -1);
  }
  get parent() {
    return this.getNode(1);
  }
  get grandparent() {
    return this.getNode(2);
  }
  get isInArray() {
    return this.siblings !== null;
  }
  get siblings() {
    let { stack: t7 } = this, r = y(false, t7, -3);
    return Array.isArray(r) ? r : null;
  }
  get next() {
    let { siblings: t7 } = this;
    return t7 === null ? null : t7[this.index + 1];
  }
  get previous() {
    let { siblings: t7 } = this;
    return t7 === null ? null : t7[this.index - 1];
  }
  get isFirst() {
    return this.index === 0;
  }
  get isLast() {
    let { siblings: t7, index: r } = this;
    return t7 !== null && r === t7.length - 1;
  }
  get isRoot() {
    return this.stack.length === 1;
  }
  get root() {
    return this.stack[0];
  }
  get ancestors() {
    return [...fe2(this, Z2, ze2).call(this)];
  }
  getName() {
    let { stack: t7 } = this, { length: r } = t7;
    return r > 1 ? y(false, t7, -2) : null;
  }
  getValue() {
    return y(false, this.stack, -1);
  }
  getNode(t7 = 0) {
    let r = fe2(this, Z2, kt2).call(this, t7);
    return r === -1 ? null : this.stack[r];
  }
  getParentNode(t7 = 0) {
    return this.getNode(t7 + 1);
  }
  call(t7, ...r) {
    let { stack: n } = this, { length: u } = n, o = y(false, n, -1);
    for (let i of r)
      o = o[i], n.push(i, o);
    try {
      return t7(this);
    } finally {
      n.length = u;
    }
  }
  callParent(t7, r = 0) {
    let n = fe2(this, Z2, kt2).call(this, r + 1), u = this.stack.splice(n + 1);
    try {
      return t7(this);
    } finally {
      this.stack.push(...u);
    }
  }
  each(t7, ...r) {
    let { stack: n } = this, { length: u } = n, o = y(false, n, -1);
    for (let i of r)
      o = o[i], n.push(i, o);
    try {
      for (let i = 0;i < o.length; ++i)
        n.push(i, o[i]), t7(this, i, o), n.length -= 2;
    } finally {
      n.length = u;
    }
  }
  map(t7, ...r) {
    let n = [];
    return this.each((u, o, i) => {
      n[o] = t7(u, o, i);
    }, ...r), n;
  }
  match(...t7) {
    let r = this.stack.length - 1, n = null, u = this.stack[r--];
    for (let o of t7) {
      if (u === undefined)
        return false;
      let i = null;
      if (typeof n == "number" && (i = n, n = this.stack[r--], u = this.stack[r--]), o && !o(u, n, i))
        return false;
      n = this.stack[r--], u = this.stack[r--];
    }
    return true;
  }
  findAncestor(t7) {
    for (let r of fe2(this, Z2, ze2).call(this))
      if (t7(r))
        return r;
  }
  hasAncestor(t7) {
    for (let r of fe2(this, Z2, ze2).call(this))
      if (t7(r))
        return true;
    return false;
  }
};
Z2 = new WeakSet, kt2 = function(t7) {
  let { stack: r } = this;
  for (let n = r.length - 1;n >= 0; n -= 2)
    if (!Array.isArray(r[n]) && --t7 < 0)
      return n;
  return -1;
}, ze2 = function* () {
  let { stack: t7 } = this;
  for (let r = t7.length - 3;r >= 0; r -= 2) {
    let n = t7[r];
    Array.isArray(n) || (yield n);
  }
};
var Or2 = bt2;
var Pr2 = new Proxy(() => {}, { get: () => Pr2 });
var Oe2 = Pr2;
function Yu(e) {
  return e !== null && typeof e == "object";
}
var vr2 = Yu;
function* Ce2(e, t7) {
  let { getVisitorKeys: r, filter: n = () => true } = t7, u = (o) => vr2(o) && n(o);
  for (let o of r(e)) {
    let i = e[o];
    if (Array.isArray(i))
      for (let s of i)
        u(s) && (yield s);
    else
      u(i) && (yield i);
  }
}
function* Lr2(e, t7) {
  let r = [e];
  for (let n = 0;n < r.length; n++) {
    let u = r[n];
    for (let o of Ce2(u, t7))
      yield o, r.push(o);
  }
}
function Ir2(e, t7) {
  return Ce2(e, t7).next().done;
}
function he2(e) {
  return (t7, r, n) => {
    let u = !!(n != null && n.backwards);
    if (r === false)
      return false;
    let { length: o } = t7, i = r;
    for (;i >= 0 && i < o; ) {
      let s = t7.charAt(i);
      if (e instanceof RegExp) {
        if (!e.test(s))
          return i;
      } else if (!e.includes(s))
        return i;
      u ? i-- : i++;
    }
    return i === -1 || i === o ? i : false;
  };
}
var Rr2 = he2(/\s/u);
var T2 = he2(" \t");
var He2 = he2(",; \t");
var Je2 = he2(/[^\n\r]/u);
function ju(e, t7, r) {
  let n = !!(r != null && r.backwards);
  if (t7 === false)
    return false;
  let u = e.charAt(t7);
  if (n) {
    if (e.charAt(t7 - 1) === "\r" && u === `
`)
      return t7 - 2;
    if (u === `
` || u === "\r" || u === "\u2028" || u === "\u2029")
      return t7 - 1;
  } else {
    if (u === "\r" && e.charAt(t7 + 1) === `
`)
      return t7 + 2;
    if (u === `
` || u === "\r" || u === "\u2028" || u === "\u2029")
      return t7 + 1;
  }
  return t7;
}
var U = ju;
function Uu(e, t7, r = {}) {
  let n = T2(e, r.backwards ? t7 - 1 : t7, r), u = U(e, n, r);
  return n !== u;
}
var G2 = Uu;
function Vu(e) {
  return Array.isArray(e) && e.length > 0;
}
var qe2 = Vu;
var Yr = new Set(["tokens", "comments", "parent", "enclosingNode", "precedingNode", "followingNode"]);
var $u = (e) => Object.keys(e).filter((t7) => !Yr.has(t7));
function Wu(e) {
  return e ? (t7) => e(t7, Yr) : $u;
}
var J2 = Wu;
function Mu(e) {
  let t7 = e.type || e.kind || "(unknown type)", r = String(e.name || e.id && (typeof e.id == "object" ? e.id.name : e.id) || e.key && (typeof e.key == "object" ? e.key.name : e.key) || e.value && (typeof e.value == "object" ? "" : String(e.value)) || e.operator || "");
  return r.length > 20 && (r = r.slice(0, 19) + "…"), t7 + (r ? " " + r : "");
}
function St2(e, t7) {
  (e.comments ?? (e.comments = [])).push(t7), t7.printed = false, t7.nodeDescription = Mu(e);
}
function se2(e, t7) {
  t7.leading = true, t7.trailing = false, St2(e, t7);
}
function ee2(e, t7, r) {
  t7.leading = false, t7.trailing = false, r && (t7.marker = r), St2(e, t7);
}
function ae2(e, t7) {
  t7.leading = false, t7.trailing = true, St2(e, t7);
}
var Tt2 = new WeakMap;
function Xe2(e, t7) {
  if (Tt2.has(e))
    return Tt2.get(e);
  let { printer: { getCommentChildNodes: r, canAttachComment: n, getVisitorKeys: u }, locStart: o, locEnd: i } = t7;
  if (!n)
    return [];
  let s = ((r == null ? undefined : r(e, t7)) ?? [...Ce2(e, { getVisitorKeys: J2(u) })]).flatMap((a) => n(a) ? [a] : Xe2(a, t7));
  return s.sort((a, c) => o(a) - o(c) || i(a) - i(c)), Tt2.set(e, s), s;
}
function Ur2(e, t7, r, n) {
  let { locStart: u, locEnd: o } = r, i = u(t7), s = o(t7), a = Xe2(e, r), c, D, p = 0, l = a.length;
  for (;p < l; ) {
    let F = p + l >> 1, f = a[F], d2 = u(f), m = o(f);
    if (d2 <= i && s <= m)
      return Ur2(f, t7, r, f);
    if (m <= i) {
      c = f, p = F + 1;
      continue;
    }
    if (s <= d2) {
      D = f, l = F;
      continue;
    }
    throw new Error("Comment location overlaps with node location");
  }
  if ((n == null ? undefined : n.type) === "TemplateLiteral") {
    let { quasis: F } = n, f = Ot2(F, t7, r);
    c && Ot2(F, c, r) !== f && (c = null), D && Ot2(F, D, r) !== f && (D = null);
  }
  return { enclosingNode: n, precedingNode: c, followingNode: D };
}
var Nt2 = () => false;
function Vr(e, t7) {
  let { comments: r } = e;
  if (delete e.comments, !qe2(r) || !t7.printer.canAttachComment)
    return;
  let n = [], { printer: { experimentalFeatures: { avoidAstMutation: u = false } = {}, handleComments: o = {} }, originalText: i } = t7, { ownLine: s = Nt2, endOfLine: a = Nt2, remaining: c = Nt2 } = o, D = r.map((p, l) => ({ ...Ur2(e, p, t7), comment: p, text: i, options: t7, ast: e, isLastComment: r.length - 1 === l }));
  for (let [p, l] of D.entries()) {
    let { comment: F, precedingNode: f, enclosingNode: d2, followingNode: m, text: C, options: E2, ast: h2, isLastComment: x } = l, A;
    if (u ? A = [l] : (F.enclosingNode = d2, F.precedingNode = f, F.followingNode = m, A = [F, C, E2, h2, x]), Gu(C, E2, D, p))
      F.placement = "ownLine", s(...A) || (m ? se2(m, F) : f ? ae2(f, F) : d2 ? ee2(d2, F) : ee2(h2, F));
    else if (Ku(C, E2, D, p))
      F.placement = "endOfLine", a(...A) || (f ? ae2(f, F) : m ? se2(m, F) : d2 ? ee2(d2, F) : ee2(h2, F));
    else if (F.placement = "remaining", !c(...A))
      if (f && m) {
        let $2 = n.length;
        $2 > 0 && n[$2 - 1].followingNode !== m && jr2(n, E2), n.push(l);
      } else
        f ? ae2(f, F) : m ? se2(m, F) : d2 ? ee2(d2, F) : ee2(h2, F);
  }
  if (jr2(n, t7), !u)
    for (let p of r)
      delete p.precedingNode, delete p.enclosingNode, delete p.followingNode;
}
var $r2 = (e) => !/[\S\n\u2028\u2029]/u.test(e);
function Gu(e, t7, r, n) {
  let { comment: u, precedingNode: o } = r[n], { locStart: i, locEnd: s } = t7, a = i(u);
  if (o)
    for (let c = n - 1;c >= 0; c--) {
      let { comment: D, precedingNode: p } = r[c];
      if (p !== o || !$r2(e.slice(s(D), a)))
        break;
      a = i(D);
    }
  return G2(e, a, { backwards: true });
}
function Ku(e, t7, r, n) {
  let { comment: u, followingNode: o } = r[n], { locStart: i, locEnd: s } = t7, a = s(u);
  if (o)
    for (let c = n + 1;c < r.length; c++) {
      let { comment: D, followingNode: p } = r[c];
      if (p !== o || !$r2(e.slice(a, i(D))))
        break;
      a = s(D);
    }
  return G2(e, a);
}
function jr2(e, t7) {
  var s, a;
  let r = e.length;
  if (r === 0)
    return;
  let { precedingNode: n, followingNode: u } = e[0], o = t7.locStart(u), i;
  for (i = r;i > 0; --i) {
    let { comment: c, precedingNode: D, followingNode: p } = e[i - 1];
    Oe2.strictEqual(D, n), Oe2.strictEqual(p, u);
    let l = t7.originalText.slice(t7.locEnd(c), o);
    if (((a = (s = t7.printer).isGap) == null ? undefined : a.call(s, l, t7)) ?? /^[\s(]*$/u.test(l))
      o = t7.locStart(c);
    else
      break;
  }
  for (let [c, { comment: D }] of e.entries())
    c < i ? ae2(n, D) : se2(u, D);
  for (let c of [n, u])
    c.comments && c.comments.length > 1 && c.comments.sort((D, p) => t7.locStart(D) - t7.locStart(p));
  e.length = 0;
}
function Ot2(e, t7, r) {
  let n = r.locStart(t7) - 1;
  for (let u = 1;u < e.length; ++u)
    if (n < r.locStart(e[u]))
      return u - 1;
  return 0;
}
function zu(e, t7) {
  let r = t7 - 1;
  r = T2(e, r, { backwards: true }), r = U(e, r, { backwards: true }), r = T2(e, r, { backwards: true });
  let n = U(e, r, { backwards: true });
  return r !== n;
}
var Pe2 = zu;
function Wr2(e, t7) {
  let r = e.node;
  return r.printed = true, t7.printer.printComment(e, t7);
}
function Hu(e, t7) {
  var D;
  let r = e.node, n = [Wr2(e, t7)], { printer: u, originalText: o, locStart: i, locEnd: s } = t7;
  if ((D = u.isBlockComment) == null ? undefined : D.call(u, r)) {
    let p = G2(o, s(r)) ? G2(o, i(r), { backwards: true }) ? z2 : Me2 : " ";
    n.push(p);
  } else
    n.push(z2);
  let c = U(o, T2(o, s(r)));
  return c !== false && G2(o, c) && n.push(z2), n;
}
function Ju(e, t7, r) {
  var c;
  let n = e.node, u = Wr2(e, t7), { printer: o, originalText: i, locStart: s } = t7, a = (c = o.isBlockComment) == null ? undefined : c.call(o, n);
  if (r != null && r.hasLineSuffix && !(r != null && r.isBlock) || G2(i, s(n), { backwards: true })) {
    let D = Pe2(i, s(n));
    return { doc: Se2([z2, D ? z2 : "", u]), isBlock: a, hasLineSuffix: true };
  }
  return !a || r != null && r.hasLineSuffix ? { doc: [Se2([" ", u]), pe2], isBlock: a, hasLineSuffix: true } : { doc: [" ", u], isBlock: a, hasLineSuffix: false };
}
function qu(e, t7) {
  let r = e.node;
  if (!r)
    return {};
  let n = t7[Symbol.for("printedComments")];
  if ((r.comments || []).filter((a) => !n.has(a)).length === 0)
    return { leading: "", trailing: "" };
  let o = [], i = [], s;
  return e.each(() => {
    let a = e.node;
    if (n != null && n.has(a))
      return;
    let { leading: c, trailing: D } = a;
    c ? o.push(Hu(e, t7)) : D && (s = Ju(e, t7, s), i.push(s.doc));
  }, "comments"), { leading: o, trailing: i };
}
function Mr(e, t7, r) {
  let { leading: n, trailing: u } = qu(e, r);
  return !n && !u ? t7 : Fe2(t7, (o) => [n, o, u]);
}
function Gr2(e) {
  let { [Symbol.for("comments")]: t7, [Symbol.for("printedComments")]: r } = e;
  for (let n of t7) {
    if (!n.printed && !r.has(n))
      throw new Error('Comment "' + n.value.trim() + '" was not printed. Please report this error!');
    delete n.printed;
  }
}
function Xu(e) {
  return () => {};
}
var Kr2 = Xu;
var ve2 = class extends Error {
  name = "ConfigError";
};
var Le2 = class extends Error {
  name = "UndefinedParserError";
};
var zr = { checkIgnorePragma: { category: "Special", type: "boolean", default: false, description: "Check whether the file's first docblock comment contains '@noprettier' or '@noformat' to determine if it should be formatted.", cliCategory: "Other" }, cursorOffset: { category: "Special", type: "int", default: -1, range: { start: -1, end: 1 / 0, step: 1 }, description: "Print (to stderr) where a cursor at the given position would move to after formatting.", cliCategory: "Editor" }, endOfLine: { category: "Global", type: "choice", default: "lf", description: "Which end of line characters to apply.", choices: [{ value: "lf", description: "Line Feed only (\\n), common on Linux and macOS as well as inside git repos" }, { value: "crlf", description: "Carriage Return + Line Feed characters (\\r\\n), common on Windows" }, { value: "cr", description: "Carriage Return character only (\\r), used very rarely" }, { value: "auto", description: `Maintain existing
(mixed values within one file are normalised by looking at what's used after the first line)` }] }, filepath: { category: "Special", type: "path", description: "Specify the input filepath. This will be used to do parser inference.", cliName: "stdin-filepath", cliCategory: "Other", cliDescription: "Path to the file to pretend that stdin comes from." }, insertPragma: { category: "Special", type: "boolean", default: false, description: "Insert @format pragma into file's first docblock comment.", cliCategory: "Other" }, parser: { category: "Global", type: "choice", default: undefined, description: "Which parser to use.", exception: (e) => typeof e == "string" || typeof e == "function", choices: [{ value: "flow", description: "Flow" }, { value: "babel", description: "JavaScript" }, { value: "babel-flow", description: "Flow" }, { value: "babel-ts", description: "TypeScript" }, { value: "typescript", description: "TypeScript" }, { value: "acorn", description: "JavaScript" }, { value: "espree", description: "JavaScript" }, { value: "meriyah", description: "JavaScript" }, { value: "css", description: "CSS" }, { value: "less", description: "Less" }, { value: "scss", description: "SCSS" }, { value: "json", description: "JSON" }, { value: "json5", description: "JSON5" }, { value: "jsonc", description: "JSON with Comments" }, { value: "json-stringify", description: "JSON.stringify" }, { value: "graphql", description: "GraphQL" }, { value: "markdown", description: "Markdown" }, { value: "mdx", description: "MDX" }, { value: "vue", description: "Vue" }, { value: "yaml", description: "YAML" }, { value: "glimmer", description: "Ember / Handlebars" }, { value: "html", description: "HTML" }, { value: "angular", description: "Angular" }, { value: "lwc", description: "Lightning Web Components" }, { value: "mjml", description: "MJML" }] }, plugins: { type: "path", array: true, default: [{ value: [] }], category: "Global", description: "Add a plugin. Multiple plugins can be passed as separate `--plugin`s.", exception: (e) => typeof e == "string" || typeof e == "object", cliName: "plugin", cliCategory: "Config" }, printWidth: { category: "Global", type: "int", default: 80, description: "The line length where Prettier will try wrap.", range: { start: 0, end: 1 / 0, step: 1 } }, rangeEnd: { category: "Special", type: "int", default: 1 / 0, range: { start: 0, end: 1 / 0, step: 1 }, description: `Format code ending at a given character offset (exclusive).
The range will extend forwards to the end of the selected statement.`, cliCategory: "Editor" }, rangeStart: { category: "Special", type: "int", default: 0, range: { start: 0, end: 1 / 0, step: 1 }, description: `Format code starting at a given character offset.
The range will extend backwards to the start of the first line containing the selected statement.`, cliCategory: "Editor" }, requirePragma: { category: "Special", type: "boolean", default: false, description: "Require either '@prettier' or '@format' to be present in the file's first docblock comment in order for it to be formatted.", cliCategory: "Other" }, tabWidth: { type: "int", category: "Global", default: 2, description: "Number of spaces per indentation level.", range: { start: 0, end: 1 / 0, step: 1 } }, useTabs: { category: "Global", type: "boolean", default: false, description: "Indent with tabs instead of spaces." }, embeddedLanguageFormatting: { category: "Global", type: "choice", default: "auto", description: "Control how Prettier formats quoted code embedded in the file.", choices: [{ value: "auto", description: "Format embedded code if Prettier can automatically identify it." }, { value: "off", description: "Never automatically format embedded code." }] } };
function Qe2({ plugins: e = [], showDeprecated: t7 = false } = {}) {
  let r = e.flatMap((u) => u.languages ?? []), n = [];
  for (let u of Zu(Object.assign({}, ...e.map(({ options: o }) => o), zr)))
    !t7 && u.deprecated || (Array.isArray(u.choices) && (t7 || (u.choices = u.choices.filter((o) => !o.deprecated)), u.name === "parser" && (u.choices = [...u.choices, ...Qu(u.choices, r, e)])), u.pluginDefaults = Object.fromEntries(e.filter((o) => {
      var i;
      return ((i = o.defaultOptions) == null ? undefined : i[u.name]) !== undefined;
    }).map((o) => [o.name, o.defaultOptions[u.name]])), n.push(u));
  return { languages: r, options: n };
}
function* Qu(e, t7, r) {
  let n = new Set(e.map((u) => u.value));
  for (let u of t7)
    if (u.parsers) {
      for (let o of u.parsers)
        if (!n.has(o)) {
          n.add(o);
          let i = r.find((a) => a.parsers && Object.prototype.hasOwnProperty.call(a.parsers, o)), s = u.name;
          i != null && i.name && (s += ` (plugin: ${i.name})`), yield { value: o, description: s };
        }
    }
}
function Zu(e) {
  let t7 = [];
  for (let [r, n] of Object.entries(e)) {
    let u = { name: r, ...n };
    Array.isArray(u.default) && (u.default = y(false, u.default, -1).value), t7.push(u);
  }
  return t7;
}
var eo2 = (e, t7) => {
  if (!(e && t7 == null))
    return t7.toReversed || !Array.isArray(t7) ? t7.toReversed() : [...t7].reverse();
};
var Hr = eo2;
var Jr2;
var qr;
var Xr2;
var Qr2;
var Zr2;
var to2 = ((Jr2 = globalThis.Deno) == null ? undefined : Jr2.build.os) === "windows" || ((Xr2 = (qr = globalThis.navigator) == null ? undefined : qr.platform) == null ? undefined : Xr2.startsWith("Win")) || ((Zr2 = (Qr2 = globalThis.process) == null ? undefined : Qr2.platform) == null ? undefined : Zr2.startsWith("win")) || false;
function en2(e) {
  if (e = e instanceof URL ? e : new URL(e), e.protocol !== "file:")
    throw new TypeError(`URL must be a file URL: received "${e.protocol}"`);
  return e;
}
function ro2(e) {
  return e = en2(e), decodeURIComponent(e.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
}
function no2(e) {
  e = en2(e);
  let t7 = decodeURIComponent(e.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
  return e.hostname !== "" && (t7 = `\\\\${e.hostname}${t7}`), t7;
}
function tn2(e) {
  return to2 ? no2(e) : ro2(e);
}
var rn2 = tn2;
var uo2 = (e) => String(e).split(/[/\\]/u).pop();
function nn(e, t7) {
  if (!t7)
    return;
  let r = uo2(t7).toLowerCase();
  return e.find(({ filenames: n }) => n == null ? undefined : n.some((u) => u.toLowerCase() === r)) ?? e.find(({ extensions: n }) => n == null ? undefined : n.some((u) => r.endsWith(u)));
}
function oo2(e, t7) {
  if (t7)
    return e.find(({ name: r }) => r.toLowerCase() === t7) ?? e.find(({ aliases: r }) => r == null ? undefined : r.includes(t7)) ?? e.find(({ extensions: r }) => r == null ? undefined : r.includes(`.${t7}`));
}
function un2(e, t7) {
  if (t7) {
    if (String(t7).startsWith("file:"))
      try {
        t7 = rn2(t7);
      } catch {
        return;
      }
    if (typeof t7 == "string")
      return e.find(({ isSupported: r }) => r == null ? undefined : r({ filepath: t7 }));
  }
}
function io2(e, t7) {
  let r = Hr(false, e.plugins).flatMap((u) => u.languages ?? []), n = oo2(r, t7.language) ?? nn(r, t7.physicalFile) ?? nn(r, t7.file) ?? un2(r, t7.physicalFile) ?? un2(r, t7.file) ?? (t7.physicalFile, undefined);
  return n == null ? undefined : n.parsers[0];
}
var on2 = io2;
var re2 = { key: (e) => /^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e) ? e : JSON.stringify(e), value(e) {
  if (e === null || typeof e != "object")
    return JSON.stringify(e);
  if (Array.isArray(e))
    return `[${e.map((r) => re2.value(r)).join(", ")}]`;
  let t7 = Object.keys(e);
  return t7.length === 0 ? "{}" : `{ ${t7.map((r) => `${re2.key(r)}: ${re2.value(e[r])}`).join(", ")} }`;
}, pair: ({ key: e, value: t7 }) => re2.value({ [e]: t7 }) };
var sn = new Proxy(String, { get: () => sn });
var V2 = sn;
var an = (e, t7, { descriptor: r }) => {
  let n = [`${V2.yellow(typeof e == "string" ? r.key(e) : r.pair(e))} is deprecated`];
  return t7 && n.push(`we now treat it as ${V2.blue(typeof t7 == "string" ? r.key(t7) : r.pair(t7))}`), n.join("; ") + ".";
};
var Ze2 = Symbol.for("vnopts.VALUE_NOT_EXIST");
var ge2 = Symbol.for("vnopts.VALUE_UNCHANGED");
var Dn2 = " ".repeat(2);
var fn2 = (e, t7, r) => {
  let { text: n, list: u } = r.normalizeExpectedResult(r.schemas[e].expected(r)), o = [];
  return n && o.push(cn2(e, t7, n, r.descriptor)), u && o.push([cn2(e, t7, u.title, r.descriptor)].concat(u.values.map((i) => ln2(i, r.loggerPrintWidth))).join(`
`)), Fn2(o, r.loggerPrintWidth);
};
function cn2(e, t7, r, n) {
  return [`Invalid ${V2.red(n.key(e))} value.`, `Expected ${V2.blue(r)},`, `but received ${t7 === Ze2 ? V2.gray("nothing") : V2.red(n.value(t7))}.`].join(" ");
}
function ln2({ text: e, list: t7 }, r) {
  let n = [];
  return e && n.push(`- ${V2.blue(e)}`), t7 && n.push([`- ${V2.blue(t7.title)}:`].concat(t7.values.map((u) => ln2(u, r - Dn2.length).replace(/^|\n/g, `$&${Dn2}`))).join(`
`)), Fn2(n, r);
}
function Fn2(e, t7) {
  if (e.length === 1)
    return e[0];
  let [r, n] = e, [u, o] = e.map((i) => i.split(`
`, 1)[0].length);
  return u > t7 && u > o ? n : r;
}
var Pt2 = [];
var pn2 = [];
function vt2(e, t7) {
  if (e === t7)
    return 0;
  let r = e;
  e.length > t7.length && (e = t7, t7 = r);
  let n = e.length, u = t7.length;
  for (;n > 0 && e.charCodeAt(~-n) === t7.charCodeAt(~-u); )
    n--, u--;
  let o = 0;
  for (;o < n && e.charCodeAt(o) === t7.charCodeAt(o); )
    o++;
  if (n -= o, u -= o, n === 0)
    return u;
  let i, s, a, c, D = 0, p = 0;
  for (;D < n; )
    pn2[D] = e.charCodeAt(o + D), Pt2[D] = ++D;
  for (;p < u; )
    for (i = t7.charCodeAt(o + p), a = p++, s = p, D = 0;D < n; D++)
      c = i === pn2[D] ? a : a + 1, a = Pt2[D], s = Pt2[D] = a > s ? c > s ? s + 1 : c : c > a ? a + 1 : c;
  return s;
}
var et2 = (e, t7, { descriptor: r, logger: n, schemas: u }) => {
  let o = [`Ignored unknown option ${V2.yellow(r.pair({ key: e, value: t7 }))}.`], i = Object.keys(u).sort().find((s) => vt2(e, s) < 3);
  i && o.push(`Did you mean ${V2.blue(r.key(i))}?`), n.warn(o.join(" "));
};
var so2 = ["default", "expected", "validate", "deprecated", "forward", "redirect", "overlap", "preprocess", "postprocess"];
function ao2(e, t7) {
  let r = new e(t7), n = Object.create(r);
  for (let u of so2)
    u in t7 && (n[u] = Do(t7[u], r, b2.prototype[u].length));
  return n;
}
var b2 = class {
  static create(t7) {
    return ao2(this, t7);
  }
  constructor(t7) {
    this.name = t7.name;
  }
  default(t7) {}
  expected(t7) {
    return "nothing";
  }
  validate(t7, r) {
    return false;
  }
  deprecated(t7, r) {
    return false;
  }
  forward(t7, r) {}
  redirect(t7, r) {}
  overlap(t7, r, n) {
    return t7;
  }
  preprocess(t7, r) {
    return t7;
  }
  postprocess(t7, r) {
    return ge2;
  }
};
function Do(e, t7, r) {
  return typeof e == "function" ? (...n) => e(...n.slice(0, r - 1), t7, ...n.slice(r - 1)) : () => e;
}
var tt2 = class extends b2 {
  constructor(t7) {
    super(t7), this._sourceName = t7.sourceName;
  }
  expected(t7) {
    return t7.schemas[this._sourceName].expected(t7);
  }
  validate(t7, r) {
    return r.schemas[this._sourceName].validate(t7, r);
  }
  redirect(t7, r) {
    return this._sourceName;
  }
};
var rt2 = class extends b2 {
  expected() {
    return "anything";
  }
  validate() {
    return true;
  }
};
var nt2 = class extends b2 {
  constructor({ valueSchema: t7, name: r = t7.name, ...n }) {
    super({ ...n, name: r }), this._valueSchema = t7;
  }
  expected(t7) {
    let { text: r, list: n } = t7.normalizeExpectedResult(this._valueSchema.expected(t7));
    return { text: r && `an array of ${r}`, list: n && { title: "an array of the following values", values: [{ list: n }] } };
  }
  validate(t7, r) {
    if (!Array.isArray(t7))
      return false;
    let n = [];
    for (let u of t7) {
      let o = r.normalizeValidateResult(this._valueSchema.validate(u, r), u);
      o !== true && n.push(o.value);
    }
    return n.length === 0 ? true : { value: n };
  }
  deprecated(t7, r) {
    let n = [];
    for (let u of t7) {
      let o = r.normalizeDeprecatedResult(this._valueSchema.deprecated(u, r), u);
      o !== false && n.push(...o.map(({ value: i }) => ({ value: [i] })));
    }
    return n;
  }
  forward(t7, r) {
    let n = [];
    for (let u of t7) {
      let o = r.normalizeForwardResult(this._valueSchema.forward(u, r), u);
      n.push(...o.map(dn2));
    }
    return n;
  }
  redirect(t7, r) {
    let n = [], u = [];
    for (let o of t7) {
      let i = r.normalizeRedirectResult(this._valueSchema.redirect(o, r), o);
      "remain" in i && n.push(i.remain), u.push(...i.redirect.map(dn2));
    }
    return n.length === 0 ? { redirect: u } : { redirect: u, remain: n };
  }
  overlap(t7, r) {
    return t7.concat(r);
  }
};
function dn2({ from: e, to: t7 }) {
  return { from: [e], to: t7 };
}
var ut2 = class extends b2 {
  expected() {
    return "true or false";
  }
  validate(t7) {
    return typeof t7 == "boolean";
  }
};
function En2(e, t7) {
  let r = Object.create(null);
  for (let n of e) {
    let u = n[t7];
    if (r[u])
      throw new Error(`Duplicate ${t7} ${JSON.stringify(u)}`);
    r[u] = n;
  }
  return r;
}
function Cn2(e, t7) {
  let r = new Map;
  for (let n of e) {
    let u = n[t7];
    if (r.has(u))
      throw new Error(`Duplicate ${t7} ${JSON.stringify(u)}`);
    r.set(u, n);
  }
  return r;
}
function hn2() {
  let e = Object.create(null);
  return (t7) => {
    let r = JSON.stringify(t7);
    return e[r] ? true : (e[r] = true, false);
  };
}
function gn2(e, t7) {
  let r = [], n = [];
  for (let u of e)
    t7(u) ? r.push(u) : n.push(u);
  return [r, n];
}
function yn2(e) {
  return e === Math.floor(e);
}
function An2(e, t7) {
  if (e === t7)
    return 0;
  let r = typeof e, n = typeof t7, u = ["undefined", "object", "boolean", "number", "string"];
  return r !== n ? u.indexOf(r) - u.indexOf(n) : r !== "string" ? Number(e) - Number(t7) : e.localeCompare(t7);
}
function Bn2(e) {
  return (...t7) => {
    let r = e(...t7);
    return typeof r == "string" ? new Error(r) : r;
  };
}
function Lt2(e) {
  return e === undefined ? {} : e;
}
function It2(e) {
  if (typeof e == "string")
    return { text: e };
  let { text: t7, list: r } = e;
  return co2((t7 || r) !== undefined, "Unexpected `expected` result, there should be at least one field."), r ? { text: t7, list: { title: r.title, values: r.values.map(It2) } } : { text: t7 };
}
function Rt2(e, t7) {
  return e === true ? true : e === false ? { value: t7 } : e;
}
function Yt2(e, t7, r = false) {
  return e === false ? false : e === true ? r ? true : [{ value: t7 }] : ("value" in e) ? [e] : e.length === 0 ? false : e;
}
function mn2(e, t7) {
  return typeof e == "string" || "key" in e ? { from: t7, to: e } : ("from" in e) ? { from: e.from, to: e.to } : { from: t7, to: e.to };
}
function ot2(e, t7) {
  return e === undefined ? [] : Array.isArray(e) ? e.map((r) => mn2(r, t7)) : [mn2(e, t7)];
}
function jt2(e, t7) {
  let r = ot2(typeof e == "object" && "redirect" in e ? e.redirect : e, t7);
  return r.length === 0 ? { remain: t7, redirect: r } : typeof e == "object" && ("remain" in e) ? { remain: e.remain, redirect: r } : { redirect: r };
}
function co2(e, t7) {
  if (!e)
    throw new Error(t7);
}
var it2 = class extends b2 {
  constructor(t7) {
    super(t7), this._choices = Cn2(t7.choices.map((r) => r && typeof r == "object" ? r : { value: r }), "value");
  }
  expected({ descriptor: t7 }) {
    let r = Array.from(this._choices.keys()).map((i) => this._choices.get(i)).filter(({ hidden: i }) => !i).map((i) => i.value).sort(An2).map(t7.value), n = r.slice(0, -2), u = r.slice(-2);
    return { text: n.concat(u.join(" or ")).join(", "), list: { title: "one of the following values", values: r } };
  }
  validate(t7) {
    return this._choices.has(t7);
  }
  deprecated(t7) {
    let r = this._choices.get(t7);
    return r && r.deprecated ? { value: t7 } : false;
  }
  forward(t7) {
    let r = this._choices.get(t7);
    return r ? r.forward : undefined;
  }
  redirect(t7) {
    let r = this._choices.get(t7);
    return r ? r.redirect : undefined;
  }
};
var st2 = class extends b2 {
  expected() {
    return "a number";
  }
  validate(t7, r) {
    return typeof t7 == "number";
  }
};
var at2 = class extends st2 {
  expected() {
    return "an integer";
  }
  validate(t7, r) {
    return r.normalizeValidateResult(super.validate(t7, r), t7) === true && yn2(t7);
  }
};
var Ie2 = class extends b2 {
  expected() {
    return "a string";
  }
  validate(t7) {
    return typeof t7 == "string";
  }
};
var _n2 = re2;
var xn2 = et2;
var wn2 = fn2;
var bn2 = an;
var Dt2 = class {
  constructor(t7, r) {
    let { logger: n = console, loggerPrintWidth: u = 80, descriptor: o = _n2, unknown: i = xn2, invalid: s = wn2, deprecated: a = bn2, missing: c = () => false, required: D = () => false, preprocess: p = (F) => F, postprocess: l = () => ge2 } = r || {};
    this._utils = { descriptor: o, logger: n || { warn: () => {} }, loggerPrintWidth: u, schemas: En2(t7, "name"), normalizeDefaultResult: Lt2, normalizeExpectedResult: It2, normalizeDeprecatedResult: Yt2, normalizeForwardResult: ot2, normalizeRedirectResult: jt2, normalizeValidateResult: Rt2 }, this._unknownHandler = i, this._invalidHandler = Bn2(s), this._deprecatedHandler = a, this._identifyMissing = (F, f) => !(F in f) || c(F, f), this._identifyRequired = D, this._preprocess = p, this._postprocess = l, this.cleanHistory();
  }
  cleanHistory() {
    this._hasDeprecationWarned = hn2();
  }
  normalize(t7) {
    let r = {}, u = [this._preprocess(t7, this._utils)], o = () => {
      for (;u.length !== 0; ) {
        let i = u.shift(), s = this._applyNormalization(i, r);
        u.push(...s);
      }
    };
    o();
    for (let i of Object.keys(this._utils.schemas)) {
      let s = this._utils.schemas[i];
      if (!(i in r)) {
        let a = Lt2(s.default(this._utils));
        "value" in a && u.push({ [i]: a.value });
      }
    }
    o();
    for (let i of Object.keys(this._utils.schemas)) {
      if (!(i in r))
        continue;
      let s = this._utils.schemas[i], a = r[i], c = s.postprocess(a, this._utils);
      c !== ge2 && (this._applyValidation(c, i, s), r[i] = c);
    }
    return this._applyPostprocess(r), this._applyRequiredCheck(r), r;
  }
  _applyNormalization(t7, r) {
    let n = [], { knownKeys: u, unknownKeys: o } = this._partitionOptionKeys(t7);
    for (let i of u) {
      let s = this._utils.schemas[i], a = s.preprocess(t7[i], this._utils);
      this._applyValidation(a, i, s);
      let c = ({ from: F, to: f }) => {
        n.push(typeof f == "string" ? { [f]: F } : { [f.key]: f.value });
      }, D = ({ value: F, redirectTo: f }) => {
        let d2 = Yt2(s.deprecated(F, this._utils), a, true);
        if (d2 !== false)
          if (d2 === true)
            this._hasDeprecationWarned(i) || this._utils.logger.warn(this._deprecatedHandler(i, f, this._utils));
          else
            for (let { value: m } of d2) {
              let C = { key: i, value: m };
              if (!this._hasDeprecationWarned(C)) {
                let E2 = typeof f == "string" ? { key: f, value: m } : f;
                this._utils.logger.warn(this._deprecatedHandler(C, E2, this._utils));
              }
            }
      };
      ot2(s.forward(a, this._utils), a).forEach(c);
      let l = jt2(s.redirect(a, this._utils), a);
      if (l.redirect.forEach(c), "remain" in l) {
        let F = l.remain;
        r[i] = i in r ? s.overlap(r[i], F, this._utils) : F, D({ value: F });
      }
      for (let { from: F, to: f } of l.redirect)
        D({ value: F, redirectTo: f });
    }
    for (let i of o) {
      let s = t7[i];
      this._applyUnknownHandler(i, s, r, (a, c) => {
        n.push({ [a]: c });
      });
    }
    return n;
  }
  _applyRequiredCheck(t7) {
    for (let r of Object.keys(this._utils.schemas))
      if (this._identifyMissing(r, t7) && this._identifyRequired(r))
        throw this._invalidHandler(r, Ze2, this._utils);
  }
  _partitionOptionKeys(t7) {
    let [r, n] = gn2(Object.keys(t7).filter((u) => !this._identifyMissing(u, t7)), (u) => (u in this._utils.schemas));
    return { knownKeys: r, unknownKeys: n };
  }
  _applyValidation(t7, r, n) {
    let u = Rt2(n.validate(t7, this._utils), t7);
    if (u !== true)
      throw this._invalidHandler(r, u.value, this._utils);
  }
  _applyUnknownHandler(t7, r, n, u) {
    let o = this._unknownHandler(t7, r, this._utils);
    if (o)
      for (let i of Object.keys(o)) {
        if (this._identifyMissing(i, o))
          continue;
        let s = o[i];
        i in this._utils.schemas ? u(i, s) : n[i] = s;
      }
  }
  _applyPostprocess(t7) {
    let r = this._postprocess(t7, this._utils);
    if (r !== ge2) {
      if (r.delete)
        for (let n of r.delete)
          delete t7[n];
      if (r.override) {
        let { knownKeys: n, unknownKeys: u } = this._partitionOptionKeys(r.override);
        for (let o of n) {
          let i = r.override[o];
          this._applyValidation(i, o, this._utils.schemas[o]), t7[o] = i;
        }
        for (let o of u) {
          let i = r.override[o];
          this._applyUnknownHandler(o, i, t7, (s, a) => {
            let c = this._utils.schemas[s];
            this._applyValidation(a, s, c), t7[s] = a;
          });
        }
      }
    }
  }
};
var Ut2;
function lo2(e, t7, { logger: r = false, isCLI: n = false, passThrough: u = false, FlagSchema: o, descriptor: i } = {}) {
  if (n) {
    if (!o)
      throw new Error("'FlagSchema' option is required.");
    if (!i)
      throw new Error("'descriptor' option is required.");
  } else
    i = re2;
  let s = u ? Array.isArray(u) ? (l, F) => u.includes(l) ? { [l]: F } : undefined : (l, F) => ({ [l]: F }) : (l, F, f) => {
    let { _: d2, ...m } = f.schemas;
    return et2(l, F, { ...f, schemas: m });
  }, a = Fo(t7, { isCLI: n, FlagSchema: o }), c = new Dt2(a, { logger: r, unknown: s, descriptor: i }), D = r !== false;
  D && Ut2 && (c._hasDeprecationWarned = Ut2);
  let p = c.normalize(e);
  return D && (Ut2 = c._hasDeprecationWarned), p;
}
function Fo(e, { isCLI: t7, FlagSchema: r }) {
  let n = [];
  t7 && n.push(rt2.create({ name: "_" }));
  for (let u of e)
    n.push(po2(u, { isCLI: t7, optionInfos: e, FlagSchema: r })), u.alias && t7 && n.push(tt2.create({ name: u.alias, sourceName: u.name }));
  return n;
}
function po2(e, { isCLI: t7, optionInfos: r, FlagSchema: n }) {
  let { name: u } = e, o = { name: u }, i, s = {};
  switch (e.type) {
    case "int":
      i = at2, t7 && (o.preprocess = Number);
      break;
    case "string":
      i = Ie2;
      break;
    case "choice":
      i = it2, o.choices = e.choices.map((a) => a != null && a.redirect ? { ...a, redirect: { to: { key: e.name, value: a.redirect } } } : a);
      break;
    case "boolean":
      i = ut2;
      break;
    case "flag":
      i = n, o.flags = r.flatMap((a) => [a.alias, a.description && a.name, a.oppositeDescription && `no-${a.name}`].filter(Boolean));
      break;
    case "path":
      i = Ie2;
      break;
    default:
      throw new Error(`Unexpected type ${e.type}`);
  }
  if (e.exception ? o.validate = (a, c, D) => e.exception(a) || c.validate(a, D) : o.validate = (a, c, D) => a === undefined || c.validate(a, D), e.redirect && (s.redirect = (a) => a ? { to: typeof e.redirect == "string" ? e.redirect : { key: e.redirect.option, value: e.redirect.value } } : undefined), e.deprecated && (s.deprecated = true), t7 && !e.array) {
    let a = o.preprocess || ((c) => c);
    o.preprocess = (c, D, p) => D.preprocess(a(Array.isArray(c) ? y(false, c, -1) : c), p);
  }
  return e.array ? nt2.create({ ...t7 ? { preprocess: (a) => Array.isArray(a) ? a : [a] } : {}, ...s, valueSchema: i.create(o) }) : i.create({ ...o, ...s });
}
var kn2 = lo2;
var mo = (e, t7, r) => {
  if (!(e && t7 == null)) {
    if (t7.findLast)
      return t7.findLast(r);
    for (let n = t7.length - 1;n >= 0; n--) {
      let u = t7[n];
      if (r(u, n, t7))
        return u;
    }
  }
};
var Vt2 = mo;
function $t2(e, t7) {
  if (!t7)
    throw new Error("parserName is required.");
  let r = Vt2(false, e, (u) => u.parsers && Object.prototype.hasOwnProperty.call(u.parsers, t7));
  if (r)
    return r;
  let n = `Couldn't resolve parser "${t7}".`;
  throw n += " Plugins must be explicitly added to the standalone bundle.", new ve2(n);
}
function Sn2(e, t7) {
  if (!t7)
    throw new Error("astFormat is required.");
  let r = Vt2(false, e, (u) => u.printers && Object.prototype.hasOwnProperty.call(u.printers, t7));
  if (r)
    return r;
  let n = `Couldn't find plugin for AST format "${t7}".`;
  throw n += " Plugins must be explicitly added to the standalone bundle.", new ve2(n);
}
function Re2({ plugins: e, parser: t7 }) {
  let r = $t2(e, t7);
  return Wt2(r, t7);
}
function Wt2(e, t7) {
  let r = e.parsers[t7];
  return typeof r == "function" ? r() : r;
}
function Tn2(e, t7) {
  let r = e.printers[t7];
  return typeof r == "function" ? r() : r;
}
var Nn2 = { astFormat: "estree", printer: {}, originalText: undefined, locStart: null, locEnd: null };
async function Eo(e, t7 = {}) {
  var p;
  let r = { ...e };
  if (!r.parser)
    if (r.filepath) {
      if (r.parser = on2(r, { physicalFile: r.filepath }), !r.parser)
        throw new Le2(`No parser could be inferred for file "${r.filepath}".`);
    } else
      throw new Le2("No parser and no file path given, couldn't infer a parser.");
  let n = Qe2({ plugins: e.plugins, showDeprecated: true }).options, u = { ...Nn2, ...Object.fromEntries(n.filter((l) => l.default !== undefined).map((l) => [l.name, l.default])) }, o = $t2(r.plugins, r.parser), i = await Wt2(o, r.parser);
  r.astFormat = i.astFormat, r.locEnd = i.locEnd, r.locStart = i.locStart;
  let s = (p = o.printers) != null && p[i.astFormat] ? o : Sn2(r.plugins, i.astFormat), a = await Tn2(s, i.astFormat);
  r.printer = a;
  let c = s.defaultOptions ? Object.fromEntries(Object.entries(s.defaultOptions).filter(([, l]) => l !== undefined)) : {}, D = { ...u, ...c };
  for (let [l, F] of Object.entries(D))
    (r[l] === null || r[l] === undefined) && (r[l] = F);
  return r.parser === "json" && (r.trailingComma = "none"), kn2(r, n, { passThrough: Object.keys(Nn2), ...t7 });
}
var ne2 = Eo;
var vn2 = gu(Pn2(), 1);
async function yo(e, t7) {
  let r = await Re2(t7), n = r.preprocess ? r.preprocess(e, t7) : e;
  t7.originalText = n;
  let u;
  try {
    u = await r.parse(n, t7, t7);
  } catch (o) {
    Ao(o, e);
  }
  return { text: n, ast: u };
}
function Ao(e, t7) {
  let { loc: r } = e;
  if (r) {
    let n = (0, vn2.codeFrameColumns)(t7, r, { highlightCode: true });
    throw e.message += `
` + n, e.codeFrame = n, e;
  }
  throw e;
}
var De2 = yo;
async function Ln2(e, t7, r, n, u) {
  let { embeddedLanguageFormatting: o, printer: { embed: i, hasPrettierIgnore: s = () => false, getVisitorKeys: a } } = r;
  if (!i || o !== "auto")
    return;
  if (i.length > 2)
    throw new Error("printer.embed has too many parameters. The API changed in Prettier v3. Please update your plugin. See https://prettier.io/docs/plugins#optional-embed");
  let c = J2(i.getVisitorKeys ?? a), D = [];
  F();
  let p = e.stack;
  for (let { print: f, node: d2, pathStack: m } of D)
    try {
      e.stack = m;
      let C = await f(l, t7, e, r);
      C && u.set(d2, C);
    } catch (C) {
      if (globalThis.PRETTIER_DEBUG)
        throw C;
    }
  e.stack = p;
  function l(f, d2) {
    return Bo(f, d2, r, n);
  }
  function F() {
    let { node: f } = e;
    if (f === null || typeof f != "object" || s(e))
      return;
    for (let m of c(f))
      Array.isArray(f[m]) ? e.each(F, m) : e.call(F, m);
    let d2 = i(e, r);
    if (d2) {
      if (typeof d2 == "function") {
        D.push({ print: d2, node: f, pathStack: [...e.stack] });
        return;
      }
      u.set(f, d2);
    }
  }
}
async function Bo(e, t7, r, n) {
  let u = await ne2({ ...r, ...t7, parentParser: r.parser, originalText: e, cursorOffset: undefined, rangeStart: undefined, rangeEnd: undefined }, { passThrough: true }), { ast: o } = await De2(e, u), i = await n(o, u);
  return $e(i);
}
function _o(e, t7) {
  let { originalText: r, [Symbol.for("comments")]: n, locStart: u, locEnd: o, [Symbol.for("printedComments")]: i } = t7, { node: s } = e, a = u(s), c = o(s);
  for (let D of n)
    u(D) >= a && o(D) <= c && i.add(D);
  return r.slice(a, c);
}
var In2 = _o;
async function Ye2(e, t7) {
  ({ ast: e } = await Gt2(e, t7));
  let r = new Map, n = new Or2(e), u = Kr2(t7), o = new Map;
  await Ln2(n, s, t7, Ye2, o);
  let i = await Rn2(n, t7, s, undefined, o);
  if (Gr2(t7), t7.cursorOffset >= 0) {
    if (t7.nodeAfterCursor && !t7.nodeBeforeCursor)
      return [X2, i];
    if (t7.nodeBeforeCursor && !t7.nodeAfterCursor)
      return [i, X2];
  }
  return i;
  function s(c, D) {
    return c === undefined || c === n ? a(D) : Array.isArray(c) ? n.call(() => a(D), ...c) : n.call(() => a(D), c);
  }
  function a(c) {
    u(n);
    let D = n.node;
    if (D == null)
      return "";
    let p = D && typeof D == "object" && c === undefined;
    if (p && r.has(D))
      return r.get(D);
    let l = Rn2(n, t7, s, c, o);
    return p && r.set(D, l), l;
  }
}
function Rn2(e, t7, r, n, u) {
  var a;
  let { node: o } = e, { printer: i } = t7, s;
  switch ((a = i.hasPrettierIgnore) != null && a.call(i, e) ? s = In2(e, t7) : u.has(o) ? s = u.get(o) : s = i.print(e, t7, r, n), o) {
    case t7.cursorNode:
      s = Fe2(s, (c) => [X2, c, X2]);
      break;
    case t7.nodeBeforeCursor:
      s = Fe2(s, (c) => [c, X2]);
      break;
    case t7.nodeAfterCursor:
      s = Fe2(s, (c) => [X2, c]);
      break;
  }
  return i.printComment && (!i.willPrintOwnComments || !i.willPrintOwnComments(e, t7)) && (s = Mr(e, s, t7)), s;
}
async function Gt2(e, t7) {
  let r = e.comments ?? [];
  t7[Symbol.for("comments")] = r, t7[Symbol.for("printedComments")] = new Set, Vr(e, t7);
  let { printer: { preprocess: n } } = t7;
  return e = n ? await n(e, t7) : e, { ast: e, comments: r };
}
function xo(e, t7) {
  let { cursorOffset: r, locStart: n, locEnd: u } = t7, o = J2(t7.printer.getVisitorKeys), i = (F) => n(F) <= r && u(F) >= r, s = e, a = [e];
  for (let F of Lr2(e, { getVisitorKeys: o, filter: i }))
    a.push(F), s = F;
  if (Ir2(s, { getVisitorKeys: o }))
    return { cursorNode: s };
  let c, D, p = -1, l = Number.POSITIVE_INFINITY;
  for (;a.length > 0 && (c === undefined || D === undefined); ) {
    s = a.pop();
    let F = c !== undefined, f = D !== undefined;
    for (let d2 of Ce2(s, { getVisitorKeys: o })) {
      if (!F) {
        let m = u(d2);
        m <= r && m > p && (c = d2, p = m);
      }
      if (!f) {
        let m = n(d2);
        m >= r && m < l && (D = d2, l = m);
      }
    }
  }
  return { nodeBeforeCursor: c, nodeAfterCursor: D };
}
var Kt2 = xo;
function wo(e, t7) {
  let { printer: { massageAstNode: r, getVisitorKeys: n } } = t7;
  if (!r)
    return e;
  let u = J2(n), o = r.ignoredProperties ?? new Set;
  return i(e);
  function i(s, a) {
    if (!(s !== null && typeof s == "object"))
      return s;
    if (Array.isArray(s))
      return s.map((l) => i(l, a)).filter(Boolean);
    let c = {}, D = new Set(u(s));
    for (let l in s)
      !Object.prototype.hasOwnProperty.call(s, l) || o.has(l) || (D.has(l) ? c[l] = i(s[l], s) : c[l] = s[l]);
    let p = r(s, c, a);
    if (p !== null)
      return p ?? c;
  }
}
var Yn2 = wo;
var bo = (e, t7, r) => {
  if (!(e && t7 == null)) {
    if (t7.findLastIndex)
      return t7.findLastIndex(r);
    for (let n = t7.length - 1;n >= 0; n--) {
      let u = t7[n];
      if (r(u, n, t7))
        return n;
    }
    return -1;
  }
};
var jn2 = bo;
var ko = ({ parser: e }) => e === "json" || e === "json5" || e === "jsonc" || e === "json-stringify";
function So(e, t7) {
  let r = [e.node, ...e.parentNodes], n = new Set([t7.node, ...t7.parentNodes]);
  return r.find((u) => $n2.has(u.type) && n.has(u));
}
function Un2(e) {
  let t7 = jn2(false, e, (r) => r.type !== "Program" && r.type !== "File");
  return t7 === -1 ? e : e.slice(0, t7 + 1);
}
function To(e, t7, { locStart: r, locEnd: n }) {
  let u = e.node, o = t7.node;
  if (u === o)
    return { startNode: u, endNode: o };
  let i = r(e.node);
  for (let a of Un2(t7.parentNodes))
    if (r(a) >= i)
      o = a;
    else
      break;
  let s = n(t7.node);
  for (let a of Un2(e.parentNodes)) {
    if (n(a) <= s)
      u = a;
    else
      break;
    if (u === o)
      break;
  }
  return { startNode: u, endNode: o };
}
function zt2(e, t7, r, n, u = [], o) {
  let { locStart: i, locEnd: s } = r, a = i(e), c = s(e);
  if (!(t7 > c || t7 < a || o === "rangeEnd" && t7 === a || o === "rangeStart" && t7 === c)) {
    for (let D of Xe2(e, r)) {
      let p = zt2(D, t7, r, n, [e, ...u], o);
      if (p)
        return p;
    }
    if (!n || n(e, u[0]))
      return { node: e, parentNodes: u };
  }
}
function No(e, t7) {
  return t7 !== "DeclareExportDeclaration" && e !== "TypeParameterDeclaration" && (e === "Directive" || e === "TypeAlias" || e === "TSExportAssignment" || e.startsWith("Declare") || e.startsWith("TSDeclare") || e.endsWith("Statement") || e.endsWith("Declaration"));
}
var $n2 = new Set(["JsonRoot", "ObjectExpression", "ArrayExpression", "StringLiteral", "NumericLiteral", "BooleanLiteral", "NullLiteral", "UnaryExpression", "TemplateLiteral"]);
var Oo2 = new Set(["OperationDefinition", "FragmentDefinition", "VariableDefinition", "TypeExtensionDefinition", "ObjectTypeDefinition", "FieldDefinition", "DirectiveDefinition", "EnumTypeDefinition", "EnumValueDefinition", "InputValueDefinition", "InputObjectTypeDefinition", "SchemaDefinition", "OperationTypeDefinition", "InterfaceTypeDefinition", "UnionTypeDefinition", "ScalarTypeDefinition"]);
function Vn2(e, t7, r) {
  if (!t7)
    return false;
  switch (e.parser) {
    case "flow":
    case "hermes":
    case "babel":
    case "babel-flow":
    case "babel-ts":
    case "typescript":
    case "acorn":
    case "espree":
    case "meriyah":
    case "oxc":
    case "oxc-ts":
    case "__babel_estree":
      return No(t7.type, r == null ? undefined : r.type);
    case "json":
    case "json5":
    case "jsonc":
    case "json-stringify":
      return $n2.has(t7.type);
    case "graphql":
      return Oo2.has(t7.kind);
    case "vue":
      return t7.tag !== "root";
  }
  return false;
}
function Wn2(e, t7, r) {
  let { rangeStart: n, rangeEnd: u, locStart: o, locEnd: i } = t7;
  Oe2.ok(u > n);
  let s = e.slice(n, u).search(/\S/u), a = s === -1;
  if (!a)
    for (n += s;u > n && !/\S/u.test(e[u - 1]); --u)
      ;
  let c = zt2(r, n, t7, (F, f) => Vn2(t7, F, f), [], "rangeStart"), D = a ? c : zt2(r, u, t7, (F) => Vn2(t7, F), [], "rangeEnd");
  if (!c || !D)
    return { rangeStart: 0, rangeEnd: 0 };
  let p, l;
  if (ko(t7)) {
    let F = So(c, D);
    p = F, l = F;
  } else
    ({ startNode: p, endNode: l } = To(c, D, t7));
  return { rangeStart: Math.min(o(p), o(l)), rangeEnd: Math.max(i(p), i(l)) };
}
var zn2 = "\uFEFF";
var Mn2 = Symbol("cursor");
async function Hn2(e, t7, r = 0) {
  if (!e || e.trim().length === 0)
    return { formatted: "", cursorOffset: -1, comments: [] };
  let { ast: n, text: u } = await De2(e, t7);
  t7.cursorOffset >= 0 && (t7 = { ...t7, ...Kt2(n, t7) });
  let o = await Ye2(n, t7, r);
  r > 0 && (o = Ge3([z2, o], r, t7.tabWidth));
  let i = me2(o, t7);
  if (r > 0) {
    let a = i.formatted.trim();
    i.cursorNodeStart !== undefined && (i.cursorNodeStart -= i.formatted.indexOf(a), i.cursorNodeStart < 0 && (i.cursorNodeStart = 0, i.cursorNodeText = i.cursorNodeText.trimStart()), i.cursorNodeStart + i.cursorNodeText.length > a.length && (i.cursorNodeText = i.cursorNodeText.trimEnd())), i.formatted = a + xe2(t7.endOfLine);
  }
  let s = t7[Symbol.for("comments")];
  if (t7.cursorOffset >= 0) {
    let a, c, D, p;
    if ((t7.cursorNode || t7.nodeBeforeCursor || t7.nodeAfterCursor) && i.cursorNodeText)
      if (D = i.cursorNodeStart, p = i.cursorNodeText, t7.cursorNode)
        a = t7.locStart(t7.cursorNode), c = u.slice(a, t7.locEnd(t7.cursorNode));
      else {
        if (!t7.nodeBeforeCursor && !t7.nodeAfterCursor)
          throw new Error("Cursor location must contain at least one of cursorNode, nodeBeforeCursor, nodeAfterCursor");
        a = t7.nodeBeforeCursor ? t7.locEnd(t7.nodeBeforeCursor) : 0;
        let C = t7.nodeAfterCursor ? t7.locStart(t7.nodeAfterCursor) : u.length;
        c = u.slice(a, C);
      }
    else
      a = 0, c = u, D = 0, p = i.formatted;
    let l = t7.cursorOffset - a;
    if (c === p)
      return { formatted: i.formatted, cursorOffset: D + l, comments: s };
    let F = c.split("");
    F.splice(l, 0, Mn2);
    let f = p.split(""), d2 = Et2(F, f), m = D;
    for (let C of d2)
      if (C.removed) {
        if (C.value.includes(Mn2))
          break;
      } else
        m += C.count;
    return { formatted: i.formatted, cursorOffset: m, comments: s };
  }
  return { formatted: i.formatted, cursorOffset: -1, comments: s };
}
async function Po(e, t7) {
  let { ast: r, text: n } = await De2(e, t7), { rangeStart: u, rangeEnd: o } = Wn2(n, t7, r), i = n.slice(u, o), s = Math.min(u, n.lastIndexOf(`
`, u) + 1), a = n.slice(s, u).match(/^\s*/u)[0], c = Ee2(a, t7.tabWidth), D = await Hn2(i, { ...t7, rangeStart: 0, rangeEnd: Number.POSITIVE_INFINITY, cursorOffset: t7.cursorOffset > u && t7.cursorOffset <= o ? t7.cursorOffset - u : -1, endOfLine: "lf" }, c), p = D.formatted.trimEnd(), { cursorOffset: l } = t7;
  l > o ? l += p.length - i.length : D.cursorOffset >= 0 && (l = D.cursorOffset + u);
  let F = n.slice(0, u) + p + n.slice(o);
  if (t7.endOfLine !== "lf") {
    let f = xe2(t7.endOfLine);
    l >= 0 && f === `\r
` && (l += Ct2(F.slice(0, l), `
`)), F = te(false, F, `
`, f);
  }
  return { formatted: F, cursorOffset: l, comments: D.comments };
}
function Ht2(e, t7, r) {
  return typeof t7 != "number" || Number.isNaN(t7) || t7 < 0 || t7 > e.length ? r : t7;
}
function Gn2(e, t7) {
  let { cursorOffset: r, rangeStart: n, rangeEnd: u } = t7;
  return r = Ht2(e, r, -1), n = Ht2(e, n, 0), u = Ht2(e, u, e.length), { ...t7, cursorOffset: r, rangeStart: n, rangeEnd: u };
}
function Jn2(e, t7) {
  let { cursorOffset: r, rangeStart: n, rangeEnd: u, endOfLine: o } = Gn2(e, t7), i = e.charAt(0) === zn2;
  if (i && (e = e.slice(1), r--, n--, u--), o === "auto" && (o = nr2(e)), e.includes("\r")) {
    let s = (a) => Ct2(e.slice(0, Math.max(a, 0)), `\r
`);
    r -= s(r), n -= s(n), u -= s(u), e = ur2(e);
  }
  return { hasBOM: i, text: e, options: Gn2(e, { ...t7, cursorOffset: r, rangeStart: n, rangeEnd: u, endOfLine: o }) };
}
async function Kn2(e, t7) {
  let r = await Re2(t7);
  return !r.hasPragma || r.hasPragma(e);
}
async function vo(e, t7) {
  var n;
  let r = await Re2(t7);
  return (n = r.hasIgnorePragma) == null ? undefined : n.call(r, e);
}
async function Jt(e, t7) {
  let { hasBOM: r, text: n, options: u } = Jn2(e, await ne2(t7));
  if (u.rangeStart >= u.rangeEnd && n !== "" || u.requirePragma && !await Kn2(n, u) || u.checkIgnorePragma && await vo(n, u))
    return { formatted: e, cursorOffset: t7.cursorOffset, comments: [] };
  let o;
  return u.rangeStart > 0 || u.rangeEnd < n.length ? o = await Po(n, u) : (!u.requirePragma && u.insertPragma && u.printer.insertPragma && !await Kn2(n, u) && (n = u.printer.insertPragma(n)), o = await Hn2(n, u)), r && (o.formatted = zn2 + o.formatted, o.cursorOffset >= 0 && o.cursorOffset++), o;
}
async function qn2(e, t7, r) {
  let { text: n, options: u } = Jn2(e, await ne2(t7)), o = await De2(n, u);
  return r && (r.preprocessForPrint && (o.ast = await Gt2(o.ast, u)), r.massage && (o.ast = Yn2(o.ast, u))), o;
}
async function Xn2(e, t7) {
  t7 = await ne2(t7);
  let r = await Ye2(e, t7);
  return me2(r, t7);
}
async function Qn2(e, t7) {
  let r = wr2(e), { formatted: n } = await Jt(r, { ...t7, parser: "__js_expression" });
  return n;
}
async function Zn2(e, t7) {
  t7 = await ne2(t7);
  let { ast: r } = await De2(e, t7);
  return t7.cursorOffset >= 0 && (t7 = { ...t7, ...Kt2(r, t7) }), Ye2(r, t7);
}
async function eu2(e, t7) {
  return me2(e, await ne2(t7));
}
var qt2 = {};
dt(qt2, { builders: () => Io2, printer: () => Ro2, utils: () => Yo2 });
var Io2 = { join: ke2, line: Me2, softline: _r2, hardline: z2, literalline: We, group: At2, conditionalGroup: Cr2, fill: hr2, lineSuffix: Se2, lineSuffixBoundary: Ar2, cursor: X2, breakParent: pe2, ifBreak: gr2, trim: Br2, indent: ie2, indentIfBreak: yr2, align: oe, addAlignmentToDoc: Ge3, markAsRoot: mr2, dedentToRoot: dr2, dedent: Er2, hardlineWithoutBreakParent: Te2, literallineWithoutBreakParent: Bt2, label: xr2, concat: (e) => e };
var Ro2 = { printDocToString: me2 };
var Yo2 = { willBreak: Dr2, traverseDoc: le2, findInDoc: Ve2, mapDoc: be2, removeLines: fr2, stripTrailingHardline: $e, replaceEndOfLine: lr2, canBreak: Fr2 };
var tu2 = "3.6.2";
var Qt2 = {};
dt(Qt2, { addDanglingComment: () => ee2, addLeadingComment: () => se2, addTrailingComment: () => ae2, getAlignmentSize: () => Ee2, getIndentSize: () => ru2, getMaxContinuousCount: () => nu2, getNextNonSpaceNonCommentCharacter: () => uu2, getNextNonSpaceNonCommentCharacterIndex: () => Xo2, getPreferredQuote: () => iu2, getStringWidth: () => Ne2, hasNewline: () => G2, hasNewlineInRange: () => su2, hasSpaces: () => au2, isNextLineEmpty: () => ti2, isNextLineEmptyAfterIndex: () => ct2, isPreviousLineEmpty: () => Zo2, makeString: () => Du, skip: () => he2, skipEverythingButNewLine: () => Je2, skipInlineComment: () => ye, skipNewline: () => U, skipSpaces: () => T2, skipToLineEnd: () => He2, skipTrailingComment: () => Ae2, skipWhitespace: () => Rr2 });
function jo2(e, t7) {
  if (t7 === false)
    return false;
  if (e.charAt(t7) === "/" && e.charAt(t7 + 1) === "*") {
    for (let r = t7 + 2;r < e.length; ++r)
      if (e.charAt(r) === "*" && e.charAt(r + 1) === "/")
        return r + 2;
  }
  return t7;
}
var ye = jo2;
function Uo2(e, t7) {
  return t7 === false ? false : e.charAt(t7) === "/" && e.charAt(t7 + 1) === "/" ? Je2(e, t7) : t7;
}
var Ae2 = Uo2;
function Vo2(e, t7) {
  let r = null, n = t7;
  for (;n !== r; )
    r = n, n = T2(e, n), n = ye(e, n), n = Ae2(e, n), n = U(e, n);
  return n;
}
var je2 = Vo2;
function $o2(e, t7) {
  let r = null, n = t7;
  for (;n !== r; )
    r = n, n = He2(e, n), n = ye(e, n), n = T2(e, n);
  return n = Ae2(e, n), n = U(e, n), n !== false && G2(e, n);
}
var ct2 = $o2;
function Wo2(e, t7) {
  let r = e.lastIndexOf(`
`);
  return r === -1 ? 0 : Ee2(e.slice(r + 1).match(/^[\t ]*/u)[0], t7);
}
var ru2 = Wo2;
function Xt2(e) {
  if (typeof e != "string")
    throw new TypeError("Expected a string");
  return e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
function Mo2(e, t7) {
  let r = e.match(new RegExp(`(${Xt2(t7)})+`, "gu"));
  return r === null ? 0 : r.reduce((n, u) => Math.max(n, u.length / t7.length), 0);
}
var nu2 = Mo2;
function Go2(e, t7) {
  let r = je2(e, t7);
  return r === false ? "" : e.charAt(r);
}
var uu2 = Go2;
var ft2 = "'";
var ou2 = '"';
function Ko2(e, t7) {
  let r = t7 === true || t7 === ft2 ? ft2 : ou2, n = r === ft2 ? ou2 : ft2, u = 0, o = 0;
  for (let i of e)
    i === r ? u++ : i === n && o++;
  return u > o ? n : r;
}
var iu2 = Ko2;
function zo2(e, t7, r) {
  for (let n = t7;n < r; ++n)
    if (e.charAt(n) === `
`)
      return true;
  return false;
}
var su2 = zo2;
function Ho2(e, t7, r = {}) {
  return T2(e, r.backwards ? t7 - 1 : t7, r) !== t7;
}
var au2 = Ho2;
function Jo2(e, t7, r) {
  let n = t7 === '"' ? "'" : '"', o = te(false, e, /\\(.)|(["'])/gsu, (i, s, a) => s === n ? s : a === t7 ? "\\" + a : a || (r && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/u.test(s) ? s : "\\" + s));
  return t7 + o + t7;
}
var Du = Jo2;
function qo2(e, t7, r) {
  return je2(e, r(t7));
}
function Xo2(e, t7) {
  return arguments.length === 2 || typeof t7 == "number" ? je2(e, t7) : qo2(...arguments);
}
function Qo2(e, t7, r) {
  return Pe2(e, r(t7));
}
function Zo2(e, t7) {
  return arguments.length === 2 || typeof t7 == "number" ? Pe2(e, t7) : Qo2(...arguments);
}
function ei(e, t7, r) {
  return ct2(e, r(t7));
}
function ti2(e, t7) {
  return arguments.length === 2 || typeof t7 == "number" ? ct2(e, t7) : ei(...arguments);
}
function ce2(e, t7 = 1) {
  return async (...r) => {
    let n = r[t7] ?? {}, u = n.plugins ?? [];
    return r[t7] = { ...n, plugins: Array.isArray(u) ? u : Object.values(u) }, e(...r);
  };
}
var cu = ce2(Jt);
async function fu(e, t7) {
  let { formatted: r } = await cu(e, { ...t7, cursorOffset: -1 });
  return r;
}
async function ri2(e, t7) {
  return await fu(e, t7) === e;
}
var ni2 = ce2(Qe2, 0);
var ui = { parse: ce2(qn2), formatAST: ce2(Xn2), formatDoc: ce2(Qn2), printToDoc: ce2(Zn2), printDocToString: ce2(eu2) };

// ../../node_modules/.bun/domelementtype@2.3.0/node_modules/domelementtype/lib/esm/index.js
var ElementType;
(function(ElementType2) {
  ElementType2["Root"] = "root";
  ElementType2["Text"] = "text";
  ElementType2["Directive"] = "directive";
  ElementType2["Comment"] = "comment";
  ElementType2["Script"] = "script";
  ElementType2["Style"] = "style";
  ElementType2["Tag"] = "tag";
  ElementType2["CDATA"] = "cdata";
  ElementType2["Doctype"] = "doctype";
})(ElementType || (ElementType = {}));
function isTag(elem) {
  return elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;
}
var Root = ElementType.Root;
var Text = ElementType.Text;
var Directive = ElementType.Directive;
var Comment = ElementType.Comment;
var Script = ElementType.Script;
var Style = ElementType.Style;
var Tag = ElementType.Tag;
var CDATA = ElementType.CDATA;
var Doctype = ElementType.Doctype;

// ../../node_modules/.bun/domhandler@5.0.3/node_modules/domhandler/lib/esm/node.js
class Node {
  constructor() {
    this.parent = null;
    this.prev = null;
    this.next = null;
    this.startIndex = null;
    this.endIndex = null;
  }
  get parentNode() {
    return this.parent;
  }
  set parentNode(parent) {
    this.parent = parent;
  }
  get previousSibling() {
    return this.prev;
  }
  set previousSibling(prev) {
    this.prev = prev;
  }
  get nextSibling() {
    return this.next;
  }
  set nextSibling(next) {
    this.next = next;
  }
  cloneNode(recursive = false) {
    return cloneNode(this, recursive);
  }
}

class DataNode extends Node {
  constructor(data) {
    super();
    this.data = data;
  }
  get nodeValue() {
    return this.data;
  }
  set nodeValue(data) {
    this.data = data;
  }
}

class Text2 extends DataNode {
  constructor() {
    super(...arguments);
    this.type = ElementType.Text;
  }
  get nodeType() {
    return 3;
  }
}

class Comment2 extends DataNode {
  constructor() {
    super(...arguments);
    this.type = ElementType.Comment;
  }
  get nodeType() {
    return 8;
  }
}

class ProcessingInstruction extends DataNode {
  constructor(name, data) {
    super(data);
    this.name = name;
    this.type = ElementType.Directive;
  }
  get nodeType() {
    return 1;
  }
}

class NodeWithChildren extends Node {
  constructor(children) {
    super();
    this.children = children;
  }
  get firstChild() {
    var _a2;
    return (_a2 = this.children[0]) !== null && _a2 !== undefined ? _a2 : null;
  }
  get lastChild() {
    return this.children.length > 0 ? this.children[this.children.length - 1] : null;
  }
  get childNodes() {
    return this.children;
  }
  set childNodes(children) {
    this.children = children;
  }
}

class CDATA2 extends NodeWithChildren {
  constructor() {
    super(...arguments);
    this.type = ElementType.CDATA;
  }
  get nodeType() {
    return 4;
  }
}

class Document extends NodeWithChildren {
  constructor() {
    super(...arguments);
    this.type = ElementType.Root;
  }
  get nodeType() {
    return 9;
  }
}

class Element extends NodeWithChildren {
  constructor(name, attribs, children = [], type = name === "script" ? ElementType.Script : name === "style" ? ElementType.Style : ElementType.Tag) {
    super(children);
    this.name = name;
    this.attribs = attribs;
    this.type = type;
  }
  get nodeType() {
    return 1;
  }
  get tagName() {
    return this.name;
  }
  set tagName(name) {
    this.name = name;
  }
  get attributes() {
    return Object.keys(this.attribs).map((name) => {
      var _a2, _b;
      return {
        name,
        value: this.attribs[name],
        namespace: (_a2 = this["x-attribsNamespace"]) === null || _a2 === undefined ? undefined : _a2[name],
        prefix: (_b = this["x-attribsPrefix"]) === null || _b === undefined ? undefined : _b[name]
      };
    });
  }
}
function isTag2(node) {
  return isTag(node);
}
function isCDATA(node) {
  return node.type === ElementType.CDATA;
}
function isText(node) {
  return node.type === ElementType.Text;
}
function isComment(node) {
  return node.type === ElementType.Comment;
}
function isDirective(node) {
  return node.type === ElementType.Directive;
}
function isDocument(node) {
  return node.type === ElementType.Root;
}
function cloneNode(node, recursive = false) {
  let result;
  if (isText(node)) {
    result = new Text2(node.data);
  } else if (isComment(node)) {
    result = new Comment2(node.data);
  } else if (isTag2(node)) {
    const children = recursive ? cloneChildren(node.children) : [];
    const clone = new Element(node.name, { ...node.attribs }, children);
    children.forEach((child) => child.parent = clone);
    if (node.namespace != null) {
      clone.namespace = node.namespace;
    }
    if (node["x-attribsNamespace"]) {
      clone["x-attribsNamespace"] = { ...node["x-attribsNamespace"] };
    }
    if (node["x-attribsPrefix"]) {
      clone["x-attribsPrefix"] = { ...node["x-attribsPrefix"] };
    }
    result = clone;
  } else if (isCDATA(node)) {
    const children = recursive ? cloneChildren(node.children) : [];
    const clone = new CDATA2(children);
    children.forEach((child) => child.parent = clone);
    result = clone;
  } else if (isDocument(node)) {
    const children = recursive ? cloneChildren(node.children) : [];
    const clone = new Document(children);
    children.forEach((child) => child.parent = clone);
    if (node["x-mode"]) {
      clone["x-mode"] = node["x-mode"];
    }
    result = clone;
  } else if (isDirective(node)) {
    const instruction = new ProcessingInstruction(node.name, node.data);
    if (node["x-name"] != null) {
      instruction["x-name"] = node["x-name"];
      instruction["x-publicId"] = node["x-publicId"];
      instruction["x-systemId"] = node["x-systemId"];
    }
    result = instruction;
  } else {
    throw new Error(`Not implemented yet: ${node.type}`);
  }
  result.startIndex = node.startIndex;
  result.endIndex = node.endIndex;
  if (node.sourceCodeLocation != null) {
    result.sourceCodeLocation = node.sourceCodeLocation;
  }
  return result;
}
function cloneChildren(childs) {
  const children = childs.map((child) => cloneNode(child, true));
  for (let i = 1;i < children.length; i++) {
    children[i].prev = children[i - 1];
    children[i - 1].next = children[i];
  }
  return children;
}

// ../../node_modules/.bun/domhandler@5.0.3/node_modules/domhandler/lib/esm/index.js
var defaultOpts = {
  withStartIndices: false,
  withEndIndices: false,
  xmlMode: false
};

class DomHandler {
  constructor(callback, options, elementCB) {
    this.dom = [];
    this.root = new Document(this.dom);
    this.done = false;
    this.tagStack = [this.root];
    this.lastNode = null;
    this.parser = null;
    if (typeof options === "function") {
      elementCB = options;
      options = defaultOpts;
    }
    if (typeof callback === "object") {
      options = callback;
      callback = undefined;
    }
    this.callback = callback !== null && callback !== undefined ? callback : null;
    this.options = options !== null && options !== undefined ? options : defaultOpts;
    this.elementCB = elementCB !== null && elementCB !== undefined ? elementCB : null;
  }
  onparserinit(parser) {
    this.parser = parser;
  }
  onreset() {
    this.dom = [];
    this.root = new Document(this.dom);
    this.done = false;
    this.tagStack = [this.root];
    this.lastNode = null;
    this.parser = null;
  }
  onend() {
    if (this.done)
      return;
    this.done = true;
    this.parser = null;
    this.handleCallback(null);
  }
  onerror(error) {
    this.handleCallback(error);
  }
  onclosetag() {
    this.lastNode = null;
    const elem = this.tagStack.pop();
    if (this.options.withEndIndices) {
      elem.endIndex = this.parser.endIndex;
    }
    if (this.elementCB)
      this.elementCB(elem);
  }
  onopentag(name, attribs) {
    const type = this.options.xmlMode ? ElementType.Tag : undefined;
    const element = new Element(name, attribs, undefined, type);
    this.addNode(element);
    this.tagStack.push(element);
  }
  ontext(data) {
    const { lastNode } = this;
    if (lastNode && lastNode.type === ElementType.Text) {
      lastNode.data += data;
      if (this.options.withEndIndices) {
        lastNode.endIndex = this.parser.endIndex;
      }
    } else {
      const node2 = new Text2(data);
      this.addNode(node2);
      this.lastNode = node2;
    }
  }
  oncomment(data) {
    if (this.lastNode && this.lastNode.type === ElementType.Comment) {
      this.lastNode.data += data;
      return;
    }
    const node2 = new Comment2(data);
    this.addNode(node2);
    this.lastNode = node2;
  }
  oncommentend() {
    this.lastNode = null;
  }
  oncdatastart() {
    const text2 = new Text2("");
    const node2 = new CDATA2([text2]);
    this.addNode(node2);
    text2.parent = node2;
    this.lastNode = text2;
  }
  oncdataend() {
    this.lastNode = null;
  }
  onprocessinginstruction(name, data) {
    const node2 = new ProcessingInstruction(name, data);
    this.addNode(node2);
  }
  handleCallback(error) {
    if (typeof this.callback === "function") {
      this.callback(error, this.dom);
    } else if (error) {
      throw error;
    }
  }
  addNode(node2) {
    const parent = this.tagStack[this.tagStack.length - 1];
    const previousSibling = parent.children[parent.children.length - 1];
    if (this.options.withStartIndices) {
      node2.startIndex = this.parser.startIndex;
    }
    if (this.options.withEndIndices) {
      node2.endIndex = this.parser.endIndex;
    }
    parent.children.push(node2);
    if (previousSibling) {
      node2.prev = previousSibling;
      previousSibling.next = node2;
    }
    node2.parent = parent;
    this.lastNode = null;
  }
}

// ../../node_modules/.bun/leac@0.6.0/node_modules/leac/lib/leac.mjs
var e = /\n/g;
function n(n2) {
  const o = [...n2.matchAll(e)].map((e2) => e2.index || 0);
  o.unshift(-1);
  const s = t7(o, 0, o.length);
  return (e2) => r(s, e2);
}
function t7(e2, n2, r) {
  if (r - n2 == 1)
    return { offset: e2[n2], index: n2 + 1 };
  const o = Math.ceil((n2 + r) / 2), s = t7(e2, n2, o), l = t7(e2, o, r);
  return { offset: s.offset, low: s, high: l };
}
function r(e2, n2) {
  return function(e3) {
    return Object.prototype.hasOwnProperty.call(e3, "index");
  }(e2) ? { line: e2.index, column: n2 - e2.offset } : r(e2.high.offset < n2 ? e2.high : e2.low, n2);
}
function o(e2, t8 = "", r2 = {}) {
  const o2 = typeof t8 != "string" ? t8 : r2, l = typeof t8 == "string" ? t8 : "", c = e2.map(s), f = !!o2.lineNumbers;
  return function(e3, t9 = 0) {
    const r3 = f ? n(e3) : () => ({ line: 0, column: 0 });
    let o3 = t9;
    const s = [];
    e:
      for (;o3 < e3.length; ) {
        let n2 = false;
        for (const t10 of c) {
          t10.regex.lastIndex = o3;
          const c2 = t10.regex.exec(e3);
          if (c2 && c2[0].length > 0) {
            if (!t10.discard) {
              const e4 = r3(o3), n3 = typeof t10.replace == "string" ? c2[0].replace(new RegExp(t10.regex.source, t10.regex.flags), t10.replace) : c2[0];
              s.push({ state: l, name: t10.name, text: n3, offset: o3, len: c2[0].length, line: e4.line, column: e4.column });
            }
            if (o3 = t10.regex.lastIndex, n2 = true, t10.push) {
              const n3 = t10.push(e3, o3);
              s.push(...n3.tokens), o3 = n3.offset;
            }
            if (t10.pop)
              break e;
            break;
          }
        }
        if (!n2)
          break;
      }
    return { tokens: s, offset: o3, complete: e3.length <= o3 };
  };
}
function s(e2, n2) {
  return { ...e2, regex: l(e2, n2) };
}
function l(e2, n2) {
  if (e2.name.length === 0)
    throw new Error(`Rule #${n2} has empty name, which is not allowed.`);
  if (function(e3) {
    return Object.prototype.hasOwnProperty.call(e3, "regex");
  }(e2))
    return function(e3) {
      if (e3.global)
        throw new Error(`Regular expression /${e3.source}/${e3.flags} contains the global flag, which is not allowed.`);
      return e3.sticky ? e3 : new RegExp(e3.source, e3.flags + "y");
    }(e2.regex);
  if (function(e3) {
    return Object.prototype.hasOwnProperty.call(e3, "str");
  }(e2)) {
    if (e2.str.length === 0)
      throw new Error(`Rule #${n2} ("${e2.name}") has empty "str" property, which is not allowed.`);
    return new RegExp(c(e2.str), "y");
  }
  return new RegExp(c(e2.name), "y");
}
function c(e2) {
  return e2.replace(/[-[\]{}()*+!<=:?./\\^$|#\s,]/g, "\\$&");
}

// ../../node_modules/.bun/peberminta@0.9.0/node_modules/peberminta/lib/core.mjs
function token(onToken, onEnd) {
  return (data, i) => {
    let position = i;
    let value = undefined;
    if (i < data.tokens.length) {
      value = onToken(data.tokens[i], data, i);
      if (value !== undefined) {
        position++;
      }
    } else {
      onEnd?.(data, i);
    }
    return value === undefined ? { matched: false } : {
      matched: true,
      position,
      value
    };
  };
}
function mapInner(r2, f) {
  return r2.matched ? {
    matched: true,
    position: r2.position,
    value: f(r2.value, r2.position)
  } : r2;
}
function mapOuter(r2, f) {
  return r2.matched ? f(r2) : r2;
}
function map(p, mapper) {
  return (data, i) => mapInner(p(data, i), (v3, j3) => mapper(v3, data, i, j3));
}
function option(p, def) {
  return (data, i) => {
    const r2 = p(data, i);
    return r2.matched ? r2 : {
      matched: true,
      position: i,
      value: def
    };
  };
}
function choice(...ps2) {
  return (data, i) => {
    for (const p of ps2) {
      const result = p(data, i);
      if (result.matched) {
        return result;
      }
    }
    return { matched: false };
  };
}
function otherwise(pa2, pb) {
  return (data, i) => {
    const r1 = pa2(data, i);
    return r1.matched ? r1 : pb(data, i);
  };
}
function takeWhile(p, test) {
  return (data, i) => {
    const values = [];
    let success = true;
    do {
      const r2 = p(data, i);
      if (r2.matched && test(r2.value, values.length + 1, data, i, r2.position)) {
        values.push(r2.value);
        i = r2.position;
      } else {
        success = false;
      }
    } while (success);
    return {
      matched: true,
      position: i,
      value: values
    };
  };
}
function many(p) {
  return takeWhile(p, () => true);
}
function many1(p) {
  return ab(p, many(p), (head, tail) => [head, ...tail]);
}
function ab(pa2, pb, join) {
  return (data, i) => mapOuter(pa2(data, i), (ma2) => mapInner(pb(data, ma2.position), (vb, j3) => join(ma2.value, vb, data, i, j3)));
}
function left(pa2, pb) {
  return ab(pa2, pb, (va2) => va2);
}
function right(pa2, pb) {
  return ab(pa2, pb, (va2, vb) => vb);
}
function abc(pa2, pb, pc, join) {
  return (data, i) => mapOuter(pa2(data, i), (ma2) => mapOuter(pb(data, ma2.position), (mb) => mapInner(pc(data, mb.position), (vc, j3) => join(ma2.value, mb.value, vc, data, i, j3))));
}
function middle(pa2, pb, pc) {
  return abc(pa2, pb, pc, (ra2, rb) => rb);
}
function all(...ps2) {
  return (data, i) => {
    const result = [];
    let position = i;
    for (const p of ps2) {
      const r1 = p(data, position);
      if (r1.matched) {
        result.push(r1.value);
        position = r1.position;
      } else {
        return { matched: false };
      }
    }
    return {
      matched: true,
      position,
      value: result
    };
  };
}
function flatten(...ps2) {
  return flatten1(all(...ps2));
}
function flatten1(p) {
  return map(p, (vs2) => vs2.flatMap((v3) => v3));
}
function chainReduce(acc, f) {
  return (data, i) => {
    let loop = true;
    let acc1 = acc;
    let pos = i;
    do {
      const r2 = f(acc1, data, pos)(data, pos);
      if (r2.matched) {
        acc1 = r2.value;
        pos = r2.position;
      } else {
        loop = false;
      }
    } while (loop);
    return {
      matched: true,
      position: pos,
      value: acc1
    };
  };
}
function reduceLeft(acc, p, reducer) {
  return chainReduce(acc, (acc2) => map(p, (v3, data, i, j3) => reducer(acc2, v3, data, i, j3)));
}
function leftAssoc2(pLeft, pOper, pRight) {
  return chain(pLeft, (v0) => reduceLeft(v0, ab(pOper, pRight, (f, y2) => [f, y2]), (acc, [f, y2]) => f(acc, y2)));
}
function chain(p, f) {
  return (data, i) => mapOuter(p(data, i), (m1) => f(m1.value, data, i, m1.position)(data, m1.position));
}

// ../../node_modules/.bun/parseley@0.12.1/node_modules/parseley/lib/parseley.mjs
var ws2 = `(?:[ \\t\\r\\n\\f]*)`;
var nl = `(?:\\n|\\r\\n|\\r|\\f)`;
var nonascii = `[^\\x00-\\x7F]`;
var unicode = `(?:\\\\[0-9a-f]{1,6}(?:\\r\\n|[ \\n\\r\\t\\f])?)`;
var escape = `(?:\\\\[^\\n\\r\\f0-9a-f])`;
var nmstart = `(?:[_a-z]|${nonascii}|${unicode}|${escape})`;
var nmchar = `(?:[_a-z0-9-]|${nonascii}|${unicode}|${escape})`;
var name = `(?:${nmchar}+)`;
var ident = `(?:[-]?${nmstart}${nmchar}*)`;
var string1 = `'([^\\n\\r\\f\\\\']|\\\\${nl}|${nonascii}|${unicode}|${escape})*'`;
var string2 = `"([^\\n\\r\\f\\\\"]|\\\\${nl}|${nonascii}|${unicode}|${escape})*"`;
var lexSelector = o([
  { name: "ws", regex: new RegExp(ws2) },
  { name: "hash", regex: new RegExp(`#${name}`, "i") },
  { name: "ident", regex: new RegExp(ident, "i") },
  { name: "str1", regex: new RegExp(string1, "i") },
  { name: "str2", regex: new RegExp(string2, "i") },
  { name: "*" },
  { name: "." },
  { name: "," },
  { name: "[" },
  { name: "]" },
  { name: "=" },
  { name: ">" },
  { name: "|" },
  { name: "+" },
  { name: "~" },
  { name: "^" },
  { name: "$" }
]);
var lexEscapedString = o([
  { name: "unicode", regex: new RegExp(unicode, "i") },
  { name: "escape", regex: new RegExp(escape, "i") },
  { name: "any", regex: new RegExp("[\\s\\S]", "i") }
]);
function sumSpec([a0, a1, a2], [b0, b1, b22]) {
  return [a0 + b0, a1 + b1, a2 + b22];
}
function sumAllSpec(ss2) {
  return ss2.reduce(sumSpec, [0, 0, 0]);
}
var unicodeEscapedSequence_ = token((t8) => t8.name === "unicode" ? String.fromCodePoint(parseInt(t8.text.slice(1), 16)) : undefined);
var escapedSequence_ = token((t8) => t8.name === "escape" ? t8.text.slice(1) : undefined);
var anyChar_ = token((t8) => t8.name === "any" ? t8.text : undefined);
var escapedString_ = map(many(choice(unicodeEscapedSequence_, escapedSequence_, anyChar_)), (cs2) => cs2.join(""));
function unescape2(escapedString) {
  const lexerResult = lexEscapedString(escapedString);
  const result = escapedString_({ tokens: lexerResult.tokens, options: undefined }, 0);
  return result.value;
}
function literal(name2) {
  return token((t8) => t8.name === name2 ? true : undefined);
}
var whitespace_ = token((t8) => t8.name === "ws" ? null : undefined);
var optionalWhitespace_ = option(whitespace_, null);
function optionallySpaced(parser) {
  return middle(optionalWhitespace_, parser, optionalWhitespace_);
}
var identifier_ = token((t8) => t8.name === "ident" ? unescape2(t8.text) : undefined);
var hashId_ = token((t8) => t8.name === "hash" ? unescape2(t8.text.slice(1)) : undefined);
var string_ = token((t8) => t8.name.startsWith("str") ? unescape2(t8.text.slice(1, -1)) : undefined);
var namespace_ = left(option(identifier_, ""), literal("|"));
var qualifiedName_ = otherwise(ab(namespace_, identifier_, (ns2, name2) => ({ name: name2, namespace: ns2 })), map(identifier_, (name2) => ({ name: name2, namespace: null })));
var uniSelector_ = otherwise(ab(namespace_, literal("*"), (ns2) => ({ type: "universal", namespace: ns2, specificity: [0, 0, 0] })), map(literal("*"), () => ({ type: "universal", namespace: null, specificity: [0, 0, 0] })));
var tagSelector_ = map(qualifiedName_, ({ name: name2, namespace }) => ({
  type: "tag",
  name: name2,
  namespace,
  specificity: [0, 0, 1]
}));
var classSelector_ = ab(literal("."), identifier_, (fullstop, name2) => ({
  type: "class",
  name: name2,
  specificity: [0, 1, 0]
}));
var idSelector_ = map(hashId_, (name2) => ({
  type: "id",
  name: name2,
  specificity: [1, 0, 0]
}));
var attrModifier_ = token((t8) => {
  if (t8.name === "ident") {
    if (t8.text === "i" || t8.text === "I") {
      return "i";
    }
    if (t8.text === "s" || t8.text === "S") {
      return "s";
    }
  }
  return;
});
var attrValue_ = otherwise(ab(string_, option(right(optionalWhitespace_, attrModifier_), null), (v3, mod) => ({ value: v3, modifier: mod })), ab(identifier_, option(right(whitespace_, attrModifier_), null), (v3, mod) => ({ value: v3, modifier: mod })));
var attrMatcher_ = choice(map(literal("="), () => "="), ab(literal("~"), literal("="), () => "~="), ab(literal("|"), literal("="), () => "|="), ab(literal("^"), literal("="), () => "^="), ab(literal("$"), literal("="), () => "$="), ab(literal("*"), literal("="), () => "*="));
var attrPresenceSelector_ = abc(literal("["), optionallySpaced(qualifiedName_), literal("]"), (lbr, { name: name2, namespace }) => ({
  type: "attrPresence",
  name: name2,
  namespace,
  specificity: [0, 1, 0]
}));
var attrValueSelector_ = middle(literal("["), abc(optionallySpaced(qualifiedName_), attrMatcher_, optionallySpaced(attrValue_), ({ name: name2, namespace }, matcher, { value, modifier }) => ({
  type: "attrValue",
  name: name2,
  namespace,
  matcher,
  value,
  modifier,
  specificity: [0, 1, 0]
})), literal("]"));
var attrSelector_ = otherwise(attrPresenceSelector_, attrValueSelector_);
var typeSelector_ = otherwise(uniSelector_, tagSelector_);
var subclassSelector_ = choice(idSelector_, classSelector_, attrSelector_);
var compoundSelector_ = map(otherwise(flatten(typeSelector_, many(subclassSelector_)), many1(subclassSelector_)), (ss2) => {
  return {
    type: "compound",
    list: ss2,
    specificity: sumAllSpec(ss2.map((s2) => s2.specificity))
  };
});
var combinator_ = choice(map(literal(">"), () => ">"), map(literal("+"), () => "+"), map(literal("~"), () => "~"), ab(literal("|"), literal("|"), () => "||"));
var combinatorSeparator_ = otherwise(optionallySpaced(combinator_), map(whitespace_, () => " "));
var complexSelector_ = leftAssoc2(compoundSelector_, map(combinatorSeparator_, (c2) => (left2, right2) => ({
  type: "compound",
  list: [...right2.list, { type: "combinator", combinator: c2, left: left2, specificity: left2.specificity }],
  specificity: sumSpec(left2.specificity, right2.specificity)
})), compoundSelector_);
var listSelector_ = leftAssoc2(map(complexSelector_, (s2) => ({ type: "list", list: [s2] })), map(optionallySpaced(literal(",")), () => (acc, next) => ({ type: "list", list: [...acc.list, next] })), complexSelector_);
function parse_(parser, str) {
  if (!(typeof str === "string" || str instanceof String)) {
    throw new Error("Expected a selector string. Actual input is not a string!");
  }
  const lexerResult = lexSelector(str);
  if (!lexerResult.complete) {
    throw new Error(`The input "${str}" was only partially tokenized, stopped at offset ${lexerResult.offset}!
` + prettyPrintPosition(str, lexerResult.offset));
  }
  const result = optionallySpaced(parser)({ tokens: lexerResult.tokens, options: undefined }, 0);
  if (!result.matched) {
    throw new Error(`No match for "${str}" input!`);
  }
  if (result.position < lexerResult.tokens.length) {
    const token2 = lexerResult.tokens[result.position];
    throw new Error(`The input "${str}" was only partially parsed, stopped at offset ${token2.offset}!
` + prettyPrintPosition(str, token2.offset, token2.len));
  }
  return result.value;
}
function prettyPrintPosition(str, offset, len = 1) {
  return `${str.replace(/(\t)|(\r)|(\n)/g, (m, t8, r2) => t8 ? "␉" : r2 ? "␍" : "␊")}
${"".padEnd(offset)}${"^".repeat(len)}`;
}
function parse1(str) {
  return parse_(complexSelector_, str);
}
function serialize(selector) {
  if (!selector.type) {
    throw new Error("This is not an AST node.");
  }
  switch (selector.type) {
    case "universal":
      return _serNs(selector.namespace) + "*";
    case "tag":
      return _serNs(selector.namespace) + _serIdent(selector.name);
    case "class":
      return "." + _serIdent(selector.name);
    case "id":
      return "#" + _serIdent(selector.name);
    case "attrPresence":
      return `[${_serNs(selector.namespace)}${_serIdent(selector.name)}]`;
    case "attrValue":
      return `[${_serNs(selector.namespace)}${_serIdent(selector.name)}${selector.matcher}"${_serStr(selector.value)}"${selector.modifier ? selector.modifier : ""}]`;
    case "combinator":
      return serialize(selector.left) + selector.combinator;
    case "compound":
      return selector.list.reduce((acc, node2) => {
        if (node2.type === "combinator") {
          return serialize(node2) + acc;
        } else {
          return acc + serialize(node2);
        }
      }, "");
    case "list":
      return selector.list.map(serialize).join(",");
  }
}
function _serNs(ns2) {
  return ns2 || ns2 === "" ? _serIdent(ns2) + "|" : "";
}
function _codePoint(char) {
  return `\\${char.codePointAt(0).toString(16)} `;
}
function _serIdent(str) {
  return str.replace(/(^[0-9])|(^-[0-9])|(^-$)|([-0-9a-zA-Z_]|[^\x00-\x7F])|(\x00)|([\x01-\x1f]|\x7f)|([\s\S])/g, (m, d1, d2, hy, safe, nl2, ctrl, other) => d1 ? _codePoint(d1) : d2 ? "-" + _codePoint(d2.slice(1)) : hy ? "\\-" : safe ? safe : nl2 ? "�" : ctrl ? _codePoint(ctrl) : "\\" + other);
}
function _serStr(str) {
  return str.replace(/(")|(\\)|(\x00)|([\x01-\x1f]|\x7f)/g, (m, dq, bs2, nl2, ctrl) => dq ? "\\\"" : bs2 ? "\\\\" : nl2 ? "�" : _codePoint(ctrl));
}
function normalize(selector) {
  if (!selector.type) {
    throw new Error("This is not an AST node.");
  }
  switch (selector.type) {
    case "compound": {
      selector.list.forEach(normalize);
      selector.list.sort((a, b3) => _compareArrays(_getSelectorPriority(a), _getSelectorPriority(b3)));
      break;
    }
    case "combinator": {
      normalize(selector.left);
      break;
    }
    case "list": {
      selector.list.forEach(normalize);
      selector.list.sort((a, b3) => serialize(a) < serialize(b3) ? -1 : 1);
      break;
    }
  }
  return selector;
}
function _getSelectorPriority(selector) {
  switch (selector.type) {
    case "universal":
      return [1];
    case "tag":
      return [1];
    case "id":
      return [2];
    case "class":
      return [3, selector.name];
    case "attrPresence":
      return [4, serialize(selector)];
    case "attrValue":
      return [5, serialize(selector)];
    case "combinator":
      return [15, serialize(selector)];
  }
}
function compareSpecificity(a, b3) {
  return _compareArrays(a, b3);
}
function _compareArrays(a, b3) {
  if (!Array.isArray(a) || !Array.isArray(b3)) {
    throw new Error("Arguments must be arrays.");
  }
  const shorter = a.length < b3.length ? a.length : b3.length;
  for (let i = 0;i < shorter; i++) {
    if (a[i] === b3[i]) {
      continue;
    }
    return a[i] < b3[i] ? -1 : 1;
  }
  return a.length - b3.length;
}

// ../../node_modules/.bun/selderee@0.11.0/node_modules/selderee/lib/selderee.mjs
class DecisionTree {
  constructor(input) {
    this.branches = weave(toAstTerminalPairs(input));
  }
  build(builder) {
    return builder(this.branches);
  }
}
function toAstTerminalPairs(array) {
  const len = array.length;
  const results = new Array(len);
  for (let i = 0;i < len; i++) {
    const [selectorString, val] = array[i];
    const ast = preprocess(parse1(selectorString));
    results[i] = {
      ast,
      terminal: {
        type: "terminal",
        valueContainer: { index: i, value: val, specificity: ast.specificity }
      }
    };
  }
  return results;
}
function preprocess(ast) {
  reduceSelectorVariants(ast);
  normalize(ast);
  return ast;
}
function reduceSelectorVariants(ast) {
  const newList = [];
  ast.list.forEach((sel) => {
    switch (sel.type) {
      case "class":
        newList.push({
          matcher: "~=",
          modifier: null,
          name: "class",
          namespace: null,
          specificity: sel.specificity,
          type: "attrValue",
          value: sel.name
        });
        break;
      case "id":
        newList.push({
          matcher: "=",
          modifier: null,
          name: "id",
          namespace: null,
          specificity: sel.specificity,
          type: "attrValue",
          value: sel.name
        });
        break;
      case "combinator":
        reduceSelectorVariants(sel.left);
        newList.push(sel);
        break;
      case "universal":
        break;
      default:
        newList.push(sel);
        break;
    }
  });
  ast.list = newList;
}
function weave(items) {
  const branches = [];
  while (items.length) {
    const topKind = findTopKey(items, (sel) => true, getSelectorKind);
    const { matches, nonmatches, empty } = breakByKind(items, topKind);
    items = nonmatches;
    if (matches.length) {
      branches.push(branchOfKind(topKind, matches));
    }
    if (empty.length) {
      branches.push(...terminate(empty));
    }
  }
  return branches;
}
function terminate(items) {
  const results = [];
  for (const item of items) {
    const terminal = item.terminal;
    if (terminal.type === "terminal") {
      results.push(terminal);
    } else {
      const { matches, rest } = partition(terminal.cont, (node2) => node2.type === "terminal");
      matches.forEach((node2) => results.push(node2));
      if (rest.length) {
        terminal.cont = rest;
        results.push(terminal);
      }
    }
  }
  return results;
}
function breakByKind(items, selectedKind) {
  const matches = [];
  const nonmatches = [];
  const empty = [];
  for (const item of items) {
    const simpsels = item.ast.list;
    if (simpsels.length) {
      const isMatch = simpsels.some((node2) => getSelectorKind(node2) === selectedKind);
      (isMatch ? matches : nonmatches).push(item);
    } else {
      empty.push(item);
    }
  }
  return { matches, nonmatches, empty };
}
function getSelectorKind(sel) {
  switch (sel.type) {
    case "attrPresence":
      return `attrPresence ${sel.name}`;
    case "attrValue":
      return `attrValue ${sel.name}`;
    case "combinator":
      return `combinator ${sel.combinator}`;
    default:
      return sel.type;
  }
}
function branchOfKind(kind, items) {
  if (kind === "tag") {
    return tagNameBranch(items);
  }
  if (kind.startsWith("attrValue ")) {
    return attrValueBranch(kind.substring(10), items);
  }
  if (kind.startsWith("attrPresence ")) {
    return attrPresenceBranch(kind.substring(13), items);
  }
  if (kind === "combinator >") {
    return combinatorBranch(">", items);
  }
  if (kind === "combinator +") {
    return combinatorBranch("+", items);
  }
  throw new Error(`Unsupported selector kind: ${kind}`);
}
function tagNameBranch(items) {
  const groups = spliceAndGroup(items, (x) => x.type === "tag", (x) => x.name);
  const variants = Object.entries(groups).map(([name2, group]) => ({
    type: "variant",
    value: name2,
    cont: weave(group.items)
  }));
  return {
    type: "tagName",
    variants
  };
}
function attrPresenceBranch(name2, items) {
  for (const item of items) {
    spliceSimpleSelector(item, (x) => x.type === "attrPresence" && x.name === name2);
  }
  return {
    type: "attrPresence",
    name: name2,
    cont: weave(items)
  };
}
function attrValueBranch(name2, items) {
  const groups = spliceAndGroup(items, (x) => x.type === "attrValue" && x.name === name2, (x) => `${x.matcher} ${x.modifier || ""} ${x.value}`);
  const matchers = [];
  for (const group of Object.values(groups)) {
    const sel = group.oneSimpleSelector;
    const predicate = getAttrPredicate(sel);
    const continuation = weave(group.items);
    matchers.push({
      type: "matcher",
      matcher: sel.matcher,
      modifier: sel.modifier,
      value: sel.value,
      predicate,
      cont: continuation
    });
  }
  return {
    type: "attrValue",
    name: name2,
    matchers
  };
}
function getAttrPredicate(sel) {
  if (sel.modifier === "i") {
    const expected = sel.value.toLowerCase();
    switch (sel.matcher) {
      case "=":
        return (actual) => expected === actual.toLowerCase();
      case "~=":
        return (actual) => actual.toLowerCase().split(/[ \t]+/).includes(expected);
      case "^=":
        return (actual) => actual.toLowerCase().startsWith(expected);
      case "$=":
        return (actual) => actual.toLowerCase().endsWith(expected);
      case "*=":
        return (actual) => actual.toLowerCase().includes(expected);
      case "|=":
        return (actual) => {
          const lower = actual.toLowerCase();
          return expected === lower || lower.startsWith(expected) && lower[expected.length] === "-";
        };
    }
  } else {
    const expected = sel.value;
    switch (sel.matcher) {
      case "=":
        return (actual) => expected === actual;
      case "~=":
        return (actual) => actual.split(/[ \t]+/).includes(expected);
      case "^=":
        return (actual) => actual.startsWith(expected);
      case "$=":
        return (actual) => actual.endsWith(expected);
      case "*=":
        return (actual) => actual.includes(expected);
      case "|=":
        return (actual) => expected === actual || actual.startsWith(expected) && actual[expected.length] === "-";
    }
  }
}
function combinatorBranch(combinator, items) {
  const groups = spliceAndGroup(items, (x) => x.type === "combinator" && x.combinator === combinator, (x) => serialize(x.left));
  const leftItems = [];
  for (const group of Object.values(groups)) {
    const rightCont = weave(group.items);
    const leftAst = group.oneSimpleSelector.left;
    leftItems.push({
      ast: leftAst,
      terminal: { type: "popElement", cont: rightCont }
    });
  }
  return {
    type: "pushElement",
    combinator,
    cont: weave(leftItems)
  };
}
function spliceAndGroup(items, predicate, keyCallback) {
  const groups = {};
  while (items.length) {
    const bestKey = findTopKey(items, predicate, keyCallback);
    const bestKeyPredicate = (sel) => predicate(sel) && keyCallback(sel) === bestKey;
    const hasBestKeyPredicate = (item) => item.ast.list.some(bestKeyPredicate);
    const { matches, rest } = partition1(items, hasBestKeyPredicate);
    let oneSimpleSelector = null;
    for (const item of matches) {
      const splicedNode = spliceSimpleSelector(item, bestKeyPredicate);
      if (!oneSimpleSelector) {
        oneSimpleSelector = splicedNode;
      }
    }
    if (oneSimpleSelector == null) {
      throw new Error("No simple selector is found.");
    }
    groups[bestKey] = { oneSimpleSelector, items: matches };
    items = rest;
  }
  return groups;
}
function spliceSimpleSelector(item, predicate) {
  const simpsels = item.ast.list;
  const matches = new Array(simpsels.length);
  let firstIndex = -1;
  for (let i = simpsels.length;i-- > 0; ) {
    if (predicate(simpsels[i])) {
      matches[i] = true;
      firstIndex = i;
    }
  }
  if (firstIndex == -1) {
    throw new Error(`Couldn't find the required simple selector.`);
  }
  const result = simpsels[firstIndex];
  item.ast.list = simpsels.filter((sel, i) => !matches[i]);
  return result;
}
function findTopKey(items, predicate, keyCallback) {
  const candidates = {};
  for (const item of items) {
    const candidates1 = {};
    for (const node2 of item.ast.list.filter(predicate)) {
      candidates1[keyCallback(node2)] = true;
    }
    for (const key of Object.keys(candidates1)) {
      if (candidates[key]) {
        candidates[key]++;
      } else {
        candidates[key] = 1;
      }
    }
  }
  let topKind = "";
  let topCounter = 0;
  for (const entry of Object.entries(candidates)) {
    if (entry[1] > topCounter) {
      topKind = entry[0];
      topCounter = entry[1];
    }
  }
  return topKind;
}
function partition(src, predicate) {
  const matches = [];
  const rest = [];
  for (const x of src) {
    if (predicate(x)) {
      matches.push(x);
    } else {
      rest.push(x);
    }
  }
  return { matches, rest };
}
function partition1(src, predicate) {
  const matches = [];
  const rest = [];
  for (const x of src) {
    if (predicate(x)) {
      matches.push(x);
    } else {
      rest.push(x);
    }
  }
  return { matches, rest };
}

class Picker {
  constructor(f) {
    this.f = f;
  }
  pickAll(el) {
    return this.f(el);
  }
  pick1(el, preferFirst = false) {
    const results = this.f(el);
    const len = results.length;
    if (len === 0) {
      return null;
    }
    if (len === 1) {
      return results[0].value;
    }
    const comparator = preferFirst ? comparatorPreferFirst : comparatorPreferLast;
    let result = results[0];
    for (let i = 1;i < len; i++) {
      const next = results[i];
      if (comparator(result, next)) {
        result = next;
      }
    }
    return result.value;
  }
}
function comparatorPreferFirst(acc, next) {
  const diff = compareSpecificity(next.specificity, acc.specificity);
  return diff > 0 || diff === 0 && next.index < acc.index;
}
function comparatorPreferLast(acc, next) {
  const diff = compareSpecificity(next.specificity, acc.specificity);
  return diff > 0 || diff === 0 && next.index > acc.index;
}

// ../../node_modules/.bun/@selderee+plugin-htmlparser2@0.11.0/node_modules/@selderee/plugin-htmlparser2/lib/hp2-builder.mjs
function hp2Builder(nodes) {
  return new Picker(handleArray(nodes));
}
function handleArray(nodes) {
  const matchers = nodes.map(handleNode);
  return (el, ...tail) => matchers.flatMap((m) => m(el, ...tail));
}
function handleNode(node2) {
  switch (node2.type) {
    case "terminal": {
      const result = [node2.valueContainer];
      return (el, ...tail) => result;
    }
    case "tagName":
      return handleTagName(node2);
    case "attrValue":
      return handleAttrValueName(node2);
    case "attrPresence":
      return handleAttrPresenceName(node2);
    case "pushElement":
      return handlePushElementNode(node2);
    case "popElement":
      return handlePopElementNode(node2);
  }
}
function handleTagName(node2) {
  const variants = {};
  for (const variant of node2.variants) {
    variants[variant.value] = handleArray(variant.cont);
  }
  return (el, ...tail) => {
    const continuation = variants[el.name];
    return continuation ? continuation(el, ...tail) : [];
  };
}
function handleAttrPresenceName(node2) {
  const attrName = node2.name;
  const continuation = handleArray(node2.cont);
  return (el, ...tail) => Object.prototype.hasOwnProperty.call(el.attribs, attrName) ? continuation(el, ...tail) : [];
}
function handleAttrValueName(node2) {
  const callbacks = [];
  for (const matcher of node2.matchers) {
    const predicate = matcher.predicate;
    const continuation = handleArray(matcher.cont);
    callbacks.push((attr, el, ...tail) => predicate(attr) ? continuation(el, ...tail) : []);
  }
  const attrName = node2.name;
  return (el, ...tail) => {
    const attr = el.attribs[attrName];
    return attr || attr === "" ? callbacks.flatMap((cb) => cb(attr, el, ...tail)) : [];
  };
}
function handlePushElementNode(node2) {
  const continuation = handleArray(node2.cont);
  const leftElementGetter = node2.combinator === "+" ? getPrecedingElement : getParentElement;
  return (el, ...tail) => {
    const next = leftElementGetter(el);
    if (next === null) {
      return [];
    }
    return continuation(next, el, ...tail);
  };
}
var getPrecedingElement = (el) => {
  const prev = el.prev;
  if (prev === null) {
    return null;
  }
  return isTag2(prev) ? prev : getPrecedingElement(prev);
};
var getParentElement = (el) => {
  const parent = el.parent;
  return parent && isTag2(parent) ? parent : null;
};
function handlePopElementNode(node2) {
  const continuation = handleArray(node2.cont);
  return (el, next, ...tail) => continuation(next, ...tail);
}

// ../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-html.js
var decode_data_html_default = new Uint16Array("ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\x00\x00\x00\x00\x00\x00ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀\uD835\uDD04rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀\uD835\uDD38plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀\uD835\uDC9Cign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀\uD835\uDD05pf;쀀\uD835\uDD39eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀\uD835\uDC9EpĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀\uD835\uDD07Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\x00\x00\x00͔͂\x00Ѕf;쀀\uD835\uDD3Bƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\x00\x00ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\x00\x00ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\x00ц\x00ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\x00ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀\uD835\uDC9Frok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀\uD835\uDD08rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\x00\x00ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀\uD835\uDD3Csilon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀\uD835\uDD09lledɓ֗\x00\x00֣mallSquare;旼erySmallSquare;斪Ͱֺ\x00ֿ\x00\x00ׄf;쀀\uD835\uDD3DAll;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀\uD835\uDD0A;拙pf;쀀\uD835\uDD3Eeater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀\uD835\uDCA2;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\x00ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\x00ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀\uD835\uDD40a;䎙cr;愐ilde;䄨ǫޚ\x00ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀\uD835\uDD0Dpf;쀀\uD835\uDD41ǣ߇\x00ߌr;쀀\uD835\uDCA5rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀\uD835\uDD0Epf;쀀\uD835\uDD42cr;쀀\uD835\uDCA6րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\x00ࣃbleBracket;柦nǔࣈ\x00࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀\uD835\uDD0FĀ;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀\uD835\uDD43erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀\uD835\uDD10nusPlus;戓pf;쀀\uD835\uDD44cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀\uD835\uDD11ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀\uD835\uDCA9ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀\uD835\uDD12rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀\uD835\uDD46enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀\uD835\uDCAAash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀\uD835\uDD13i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀\uD835\uDCAB;䎨ȀUfos༑༖༛༟OT耻\"䀢r;쀀\uD835\uDD14pf;愚cr;쀀\uD835\uDCAC؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\x00စbleBracket;柧nǔည\x00နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀\uD835\uDD16ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀\uD835\uDD4Aɲᅭ\x00\x00ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀\uD835\uDCAEar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀\uD835\uDD17Āeiቻ኉ǲኀ\x00ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀\uD835\uDD4BipleDot;惛Āctዖዛr;쀀\uD835\uDCAFrok;䅦ૡዷጎጚጦ\x00ጬጱ\x00\x00\x00\x00\x00ጸጽ፷ᎅ\x00᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\x00጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀\uD835\uDD18rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀\uD835\uDD4CЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀\uD835\uDCB0ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀\uD835\uDD19pf;쀀\uD835\uDD4Dcr;쀀\uD835\uDCB1dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀\uD835\uDD1Apf;쀀\uD835\uDD4Ecr;쀀\uD835\uDCB2Ȁfiosᓋᓐᓒᓘr;쀀\uD835\uDD1B;䎞pf;쀀\uD835\uDD4Fcr;쀀\uD835\uDCB3ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀\uD835\uDD1Cpf;쀀\uD835\uDD50cr;쀀\uD835\uDCB4ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\x00ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀\uD835\uDCB5௡ᖃᖊᖐ\x00ᖰᖶᖿ\x00\x00\x00\x00ᗆᗛᗫᙟ᙭\x00ᚕ᚛ᚲᚹ\x00ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀\uD835\uDD1Erave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\x00\x00ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀\uD835\uDD52΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀\uD835\uDCB6;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀\uD835\uDD1Fg΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\x00\x00ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\x00ᠳƲᠯ\x00ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀\uD835\uDD53Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀\uD835\uDCB7mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\x00᧨ᨑᨕᨲ\x00ᨷᩐ\x00\x00᪴\x00\x00᫁\x00\x00ᬡᬮ᭍᭒\x00᯽\x00ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\x00᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀\uD835\uDD20ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\x00\x00᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\x00ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\x00\x00᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\x00ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀\uD835\uDD54oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀\uD835\uDCB8Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\x00\x00᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\x00\x00ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀\uD835\uDD21arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\x00\x00ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀\uD835\uDD55ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\x00\x00ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀\uD835\uDCB9;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀\uD835\uDD22ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀\uD835\uDD56ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\x00\x00ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\x00ᾞ\x00ᾡᾧ\x00\x00ῆῌ\x00ΐ\x00ῦῪ \x00 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\x00\x00᾽g;耀ﬀig;耀ﬄ;쀀\uD835\uDD23lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\x00ῳf;쀀\uD835\uDD57ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\x00⁐β•‥‧‪‬\x00‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\x00‶;慔;慖ʴ‾⁁\x00\x00⁃耻¾䂾;慗;慜5;慘ƶ⁌\x00⁎;慚;慝8;慞l;恄wn;挢cr;쀀\uD835\uDCBBࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀\uD835\uDD24Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀\uD835\uDD58Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\x00↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀\uD835\uDD25sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀\uD835\uDD59bar;怕ƀclt≯≴≸r;쀀\uD835\uDCBDasè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\x00⊪\x00⊸⋅⋎\x00⋕⋳\x00\x00⋸⌢⍧⍢⍿\x00⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀\uD835\uDD26rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀\uD835\uDD5Aa;䎹uest耻¿䂿Āci⎊⎏r;쀀\uD835\uDCBEnʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\x00⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀\uD835\uDD27ath;䈷pf;쀀\uD835\uDD5Bǣ⏬\x00⏱r;쀀\uD835\uDCBFrcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀\uD835\uDD28reen;䄸cy;䑅cy;䑜pf;쀀\uD835\uDD5Ccr;쀀\uD835\uDCC0஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\x00⒪\x00⒱\x00\x00\x00\x00\x00⒵Ⓔ\x00ⓆⓈⓍ\x00⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀\uD835\uDD29Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀\uD835\uDD5Dus;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀\uD835\uDCC1mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀\uD835\uDD2Ao;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀\uD835\uDD5EĀct⣸⣽r;쀀\uD835\uDCC2pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\x00⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\x00⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀\uD835\uDD2BȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀\uD835\uDD5F膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀\uD835\uDCC3ortɭ⬅\x00\x00⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ⴭ\x00ⴸⵈⵠⵥ⵲ⶄᬇ\x00\x00ⶍⶫ\x00ⷈⷎ\x00ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀\uD835\uDD2Cͯ⵹\x00\x00⵼\x00ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀\uD835\uDD60ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\x00⹽\x00⺀⺝\x00⺢⺹\x00\x00⻋ຜ\x00⼓\x00\x00⼫⾼\x00⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\x00\x00⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀\uD835\uDD2Dƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀\uD835\uDD61nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀\uD835\uDCC5;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀\uD835\uDD2Epf;쀀\uD835\uDD62rime;恗cr;쀀\uD835\uDCC6ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀\uD835\uDD2FĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀\uD835\uDD63us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀\uD835\uDCC7Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\x00㍺㎤\x00\x00㏬㏰\x00㐨㑈㑚㒭㒱㓊㓱\x00㘖\x00\x00㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\x00㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀\uD835\uDD30Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\x00\x00㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀\uD835\uDD64aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀\uD835\uDCC8tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\x00㙾㛂\x00\x00\x00\x00\x00㛛㜃\x00㜉㝬\x00\x00\x00㞇ɲ㙖\x00\x00㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀\uD835\uDD31Ȁeiko㚆㚝㚵㚼ǲ㚋\x00㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀\uD835\uDD65rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀\uD835\uDCC9;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\x00㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀\uD835\uDD32rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\x00\x00㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀\uD835\uDD66̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\x00\x00㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀\uD835\uDCCAƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀\uD835\uDD33tré㦮suĀbp㧯㧱»ജ»൙pf;쀀\uD835\uDD67roð໻tré㦴Ācu㨆㨋r;쀀\uD835\uDCCBĀbp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀\uD835\uDD34pf;쀀\uD835\uDD68Ā;eᑹ㩦atèᑹcr;쀀\uD835\uDCCCૣណ㪇\x00㪋\x00㪐㪛\x00\x00㪝㪨㪫㪯\x00\x00㫃㫎\x00㫘ៜ៟tré៑r;쀀\uD835\uDD35ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀\uD835\uDD69imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀\uD835\uDCCDĀpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀\uD835\uDD36cy;䑗pf;쀀\uD835\uDD6Acr;쀀\uD835\uDCCEĀcm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀\uD835\uDD37cy;䐶grarr;懝pf;쀀\uD835\uDD6Bcr;쀀\uD835\uDCCFĀjn㮅㮇;怍j;怌".split("").map((c2) => c2.charCodeAt(0)));

// ../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-xml.js
var decode_data_xml_default = new Uint16Array("Ȁaglq\t\x15\x18\x1Bɭ\x0F\x00\x00\x12p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((c2) => c2.charCodeAt(0)));

// ../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.js
var _a2;
var decodeMap = new Map([
  [0, 65533],
  [128, 8364],
  [130, 8218],
  [131, 402],
  [132, 8222],
  [133, 8230],
  [134, 8224],
  [135, 8225],
  [136, 710],
  [137, 8240],
  [138, 352],
  [139, 8249],
  [140, 338],
  [142, 381],
  [145, 8216],
  [146, 8217],
  [147, 8220],
  [148, 8221],
  [149, 8226],
  [150, 8211],
  [151, 8212],
  [152, 732],
  [153, 8482],
  [154, 353],
  [155, 8250],
  [156, 339],
  [158, 382],
  [159, 376]
]);
var fromCodePoint = (_a2 = String.fromCodePoint) !== null && _a2 !== undefined ? _a2 : function(codePoint) {
  let output = "";
  if (codePoint > 65535) {
    codePoint -= 65536;
    output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296);
    codePoint = 56320 | codePoint & 1023;
  }
  output += String.fromCharCode(codePoint);
  return output;
};
function replaceCodePoint(codePoint) {
  var _a3;
  if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {
    return 65533;
  }
  return (_a3 = decodeMap.get(codePoint)) !== null && _a3 !== undefined ? _a3 : codePoint;
}
// ../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/decode.js
var CharCodes;
(function(CharCodes2) {
  CharCodes2[CharCodes2["NUM"] = 35] = "NUM";
  CharCodes2[CharCodes2["SEMI"] = 59] = "SEMI";
  CharCodes2[CharCodes2["EQUALS"] = 61] = "EQUALS";
  CharCodes2[CharCodes2["ZERO"] = 48] = "ZERO";
  CharCodes2[CharCodes2["NINE"] = 57] = "NINE";
  CharCodes2[CharCodes2["LOWER_A"] = 97] = "LOWER_A";
  CharCodes2[CharCodes2["LOWER_F"] = 102] = "LOWER_F";
  CharCodes2[CharCodes2["LOWER_X"] = 120] = "LOWER_X";
  CharCodes2[CharCodes2["LOWER_Z"] = 122] = "LOWER_Z";
  CharCodes2[CharCodes2["UPPER_A"] = 65] = "UPPER_A";
  CharCodes2[CharCodes2["UPPER_F"] = 70] = "UPPER_F";
  CharCodes2[CharCodes2["UPPER_Z"] = 90] = "UPPER_Z";
})(CharCodes || (CharCodes = {}));
var TO_LOWER_BIT = 32;
var BinTrieFlags;
(function(BinTrieFlags2) {
  BinTrieFlags2[BinTrieFlags2["VALUE_LENGTH"] = 49152] = "VALUE_LENGTH";
  BinTrieFlags2[BinTrieFlags2["BRANCH_LENGTH"] = 16256] = "BRANCH_LENGTH";
  BinTrieFlags2[BinTrieFlags2["JUMP_TABLE"] = 127] = "JUMP_TABLE";
})(BinTrieFlags || (BinTrieFlags = {}));
function isNumber(code) {
  return code >= CharCodes.ZERO && code <= CharCodes.NINE;
}
function isHexadecimalCharacter(code) {
  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F;
}
function isAsciiAlphaNumeric(code) {
  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z || isNumber(code);
}
function isEntityInAttributeInvalidEnd(code) {
  return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);
}
var EntityDecoderState;
(function(EntityDecoderState2) {
  EntityDecoderState2[EntityDecoderState2["EntityStart"] = 0] = "EntityStart";
  EntityDecoderState2[EntityDecoderState2["NumericStart"] = 1] = "NumericStart";
  EntityDecoderState2[EntityDecoderState2["NumericDecimal"] = 2] = "NumericDecimal";
  EntityDecoderState2[EntityDecoderState2["NumericHex"] = 3] = "NumericHex";
  EntityDecoderState2[EntityDecoderState2["NamedEntity"] = 4] = "NamedEntity";
})(EntityDecoderState || (EntityDecoderState = {}));
var DecodingMode;
(function(DecodingMode2) {
  DecodingMode2[DecodingMode2["Legacy"] = 0] = "Legacy";
  DecodingMode2[DecodingMode2["Strict"] = 1] = "Strict";
  DecodingMode2[DecodingMode2["Attribute"] = 2] = "Attribute";
})(DecodingMode || (DecodingMode = {}));

class EntityDecoder {
  constructor(decodeTree, emitCodePoint, errors) {
    this.decodeTree = decodeTree;
    this.emitCodePoint = emitCodePoint;
    this.errors = errors;
    this.state = EntityDecoderState.EntityStart;
    this.consumed = 1;
    this.result = 0;
    this.treeIndex = 0;
    this.excess = 1;
    this.decodeMode = DecodingMode.Strict;
  }
  startEntity(decodeMode) {
    this.decodeMode = decodeMode;
    this.state = EntityDecoderState.EntityStart;
    this.result = 0;
    this.treeIndex = 0;
    this.excess = 1;
    this.consumed = 1;
  }
  write(str, offset) {
    switch (this.state) {
      case EntityDecoderState.EntityStart: {
        if (str.charCodeAt(offset) === CharCodes.NUM) {
          this.state = EntityDecoderState.NumericStart;
          this.consumed += 1;
          return this.stateNumericStart(str, offset + 1);
        }
        this.state = EntityDecoderState.NamedEntity;
        return this.stateNamedEntity(str, offset);
      }
      case EntityDecoderState.NumericStart: {
        return this.stateNumericStart(str, offset);
      }
      case EntityDecoderState.NumericDecimal: {
        return this.stateNumericDecimal(str, offset);
      }
      case EntityDecoderState.NumericHex: {
        return this.stateNumericHex(str, offset);
      }
      case EntityDecoderState.NamedEntity: {
        return this.stateNamedEntity(str, offset);
      }
    }
  }
  stateNumericStart(str, offset) {
    if (offset >= str.length) {
      return -1;
    }
    if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {
      this.state = EntityDecoderState.NumericHex;
      this.consumed += 1;
      return this.stateNumericHex(str, offset + 1);
    }
    this.state = EntityDecoderState.NumericDecimal;
    return this.stateNumericDecimal(str, offset);
  }
  addToNumericResult(str, start, end, base) {
    if (start !== end) {
      const digitCount = end - start;
      this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);
      this.consumed += digitCount;
    }
  }
  stateNumericHex(str, offset) {
    const startIdx = offset;
    while (offset < str.length) {
      const char = str.charCodeAt(offset);
      if (isNumber(char) || isHexadecimalCharacter(char)) {
        offset += 1;
      } else {
        this.addToNumericResult(str, startIdx, offset, 16);
        return this.emitNumericEntity(char, 3);
      }
    }
    this.addToNumericResult(str, startIdx, offset, 16);
    return -1;
  }
  stateNumericDecimal(str, offset) {
    const startIdx = offset;
    while (offset < str.length) {
      const char = str.charCodeAt(offset);
      if (isNumber(char)) {
        offset += 1;
      } else {
        this.addToNumericResult(str, startIdx, offset, 10);
        return this.emitNumericEntity(char, 2);
      }
    }
    this.addToNumericResult(str, startIdx, offset, 10);
    return -1;
  }
  emitNumericEntity(lastCp, expectedLength) {
    var _a3;
    if (this.consumed <= expectedLength) {
      (_a3 = this.errors) === null || _a3 === undefined || _a3.absenceOfDigitsInNumericCharacterReference(this.consumed);
      return 0;
    }
    if (lastCp === CharCodes.SEMI) {
      this.consumed += 1;
    } else if (this.decodeMode === DecodingMode.Strict) {
      return 0;
    }
    this.emitCodePoint(replaceCodePoint(this.result), this.consumed);
    if (this.errors) {
      if (lastCp !== CharCodes.SEMI) {
        this.errors.missingSemicolonAfterCharacterReference();
      }
      this.errors.validateNumericCharacterReference(this.result);
    }
    return this.consumed;
  }
  stateNamedEntity(str, offset) {
    const { decodeTree } = this;
    let current = decodeTree[this.treeIndex];
    let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
    for (;offset < str.length; offset++, this.excess++) {
      const char = str.charCodeAt(offset);
      this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);
      if (this.treeIndex < 0) {
        return this.result === 0 || this.decodeMode === DecodingMode.Attribute && (valueLength === 0 || isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();
      }
      current = decodeTree[this.treeIndex];
      valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
      if (valueLength !== 0) {
        if (char === CharCodes.SEMI) {
          return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);
        }
        if (this.decodeMode !== DecodingMode.Strict) {
          this.result = this.treeIndex;
          this.consumed += this.excess;
          this.excess = 0;
        }
      }
    }
    return -1;
  }
  emitNotTerminatedNamedEntity() {
    var _a3;
    const { result, decodeTree } = this;
    const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;
    this.emitNamedEntityData(result, valueLength, this.consumed);
    (_a3 = this.errors) === null || _a3 === undefined || _a3.missingSemicolonAfterCharacterReference();
    return this.consumed;
  }
  emitNamedEntityData(result, valueLength, consumed) {
    const { decodeTree } = this;
    this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);
    if (valueLength === 3) {
      this.emitCodePoint(decodeTree[result + 2], consumed);
    }
    return consumed;
  }
  end() {
    var _a3;
    switch (this.state) {
      case EntityDecoderState.NamedEntity: {
        return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
      }
      case EntityDecoderState.NumericDecimal: {
        return this.emitNumericEntity(0, 2);
      }
      case EntityDecoderState.NumericHex: {
        return this.emitNumericEntity(0, 3);
      }
      case EntityDecoderState.NumericStart: {
        (_a3 = this.errors) === null || _a3 === undefined || _a3.absenceOfDigitsInNumericCharacterReference(this.consumed);
        return 0;
      }
      case EntityDecoderState.EntityStart: {
        return 0;
      }
    }
  }
}
function getDecoder(decodeTree) {
  let ret = "";
  const decoder = new EntityDecoder(decodeTree, (str) => ret += fromCodePoint(str));
  return function decodeWithTrie(str, decodeMode) {
    let lastIndex = 0;
    let offset = 0;
    while ((offset = str.indexOf("&", offset)) >= 0) {
      ret += str.slice(lastIndex, offset);
      decoder.startEntity(decodeMode);
      const len = decoder.write(str, offset + 1);
      if (len < 0) {
        lastIndex = offset + decoder.end();
        break;
      }
      lastIndex = offset + len;
      offset = len === 0 ? lastIndex + 1 : lastIndex;
    }
    const result = ret + str.slice(lastIndex);
    ret = "";
    return result;
  };
}
function determineBranch(decodeTree, current, nodeIdx, char) {
  const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;
  const jumpOffset = current & BinTrieFlags.JUMP_TABLE;
  if (branchCount === 0) {
    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;
  }
  if (jumpOffset) {
    const value = char - jumpOffset;
    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;
  }
  let lo3 = nodeIdx;
  let hi2 = lo3 + branchCount - 1;
  while (lo3 <= hi2) {
    const mid = lo3 + hi2 >>> 1;
    const midVal = decodeTree[mid];
    if (midVal < char) {
      lo3 = mid + 1;
    } else if (midVal > char) {
      hi2 = mid - 1;
    } else {
      return decodeTree[mid + branchCount];
    }
  }
  return -1;
}
var htmlDecoder = getDecoder(decode_data_html_default);
var xmlDecoder = getDecoder(decode_data_xml_default);

// ../../node_modules/.bun/htmlparser2@8.0.2/node_modules/htmlparser2/lib/esm/Tokenizer.js
var CharCodes2;
(function(CharCodes3) {
  CharCodes3[CharCodes3["Tab"] = 9] = "Tab";
  CharCodes3[CharCodes3["NewLine"] = 10] = "NewLine";
  CharCodes3[CharCodes3["FormFeed"] = 12] = "FormFeed";
  CharCodes3[CharCodes3["CarriageReturn"] = 13] = "CarriageReturn";
  CharCodes3[CharCodes3["Space"] = 32] = "Space";
  CharCodes3[CharCodes3["ExclamationMark"] = 33] = "ExclamationMark";
  CharCodes3[CharCodes3["Number"] = 35] = "Number";
  CharCodes3[CharCodes3["Amp"] = 38] = "Amp";
  CharCodes3[CharCodes3["SingleQuote"] = 39] = "SingleQuote";
  CharCodes3[CharCodes3["DoubleQuote"] = 34] = "DoubleQuote";
  CharCodes3[CharCodes3["Dash"] = 45] = "Dash";
  CharCodes3[CharCodes3["Slash"] = 47] = "Slash";
  CharCodes3[CharCodes3["Zero"] = 48] = "Zero";
  CharCodes3[CharCodes3["Nine"] = 57] = "Nine";
  CharCodes3[CharCodes3["Semi"] = 59] = "Semi";
  CharCodes3[CharCodes3["Lt"] = 60] = "Lt";
  CharCodes3[CharCodes3["Eq"] = 61] = "Eq";
  CharCodes3[CharCodes3["Gt"] = 62] = "Gt";
  CharCodes3[CharCodes3["Questionmark"] = 63] = "Questionmark";
  CharCodes3[CharCodes3["UpperA"] = 65] = "UpperA";
  CharCodes3[CharCodes3["LowerA"] = 97] = "LowerA";
  CharCodes3[CharCodes3["UpperF"] = 70] = "UpperF";
  CharCodes3[CharCodes3["LowerF"] = 102] = "LowerF";
  CharCodes3[CharCodes3["UpperZ"] = 90] = "UpperZ";
  CharCodes3[CharCodes3["LowerZ"] = 122] = "LowerZ";
  CharCodes3[CharCodes3["LowerX"] = 120] = "LowerX";
  CharCodes3[CharCodes3["OpeningSquareBracket"] = 91] = "OpeningSquareBracket";
})(CharCodes2 || (CharCodes2 = {}));
var State;
(function(State2) {
  State2[State2["Text"] = 1] = "Text";
  State2[State2["BeforeTagName"] = 2] = "BeforeTagName";
  State2[State2["InTagName"] = 3] = "InTagName";
  State2[State2["InSelfClosingTag"] = 4] = "InSelfClosingTag";
  State2[State2["BeforeClosingTagName"] = 5] = "BeforeClosingTagName";
  State2[State2["InClosingTagName"] = 6] = "InClosingTagName";
  State2[State2["AfterClosingTagName"] = 7] = "AfterClosingTagName";
  State2[State2["BeforeAttributeName"] = 8] = "BeforeAttributeName";
  State2[State2["InAttributeName"] = 9] = "InAttributeName";
  State2[State2["AfterAttributeName"] = 10] = "AfterAttributeName";
  State2[State2["BeforeAttributeValue"] = 11] = "BeforeAttributeValue";
  State2[State2["InAttributeValueDq"] = 12] = "InAttributeValueDq";
  State2[State2["InAttributeValueSq"] = 13] = "InAttributeValueSq";
  State2[State2["InAttributeValueNq"] = 14] = "InAttributeValueNq";
  State2[State2["BeforeDeclaration"] = 15] = "BeforeDeclaration";
  State2[State2["InDeclaration"] = 16] = "InDeclaration";
  State2[State2["InProcessingInstruction"] = 17] = "InProcessingInstruction";
  State2[State2["BeforeComment"] = 18] = "BeforeComment";
  State2[State2["CDATASequence"] = 19] = "CDATASequence";
  State2[State2["InSpecialComment"] = 20] = "InSpecialComment";
  State2[State2["InCommentLike"] = 21] = "InCommentLike";
  State2[State2["BeforeSpecialS"] = 22] = "BeforeSpecialS";
  State2[State2["SpecialStartSequence"] = 23] = "SpecialStartSequence";
  State2[State2["InSpecialTag"] = 24] = "InSpecialTag";
  State2[State2["BeforeEntity"] = 25] = "BeforeEntity";
  State2[State2["BeforeNumericEntity"] = 26] = "BeforeNumericEntity";
  State2[State2["InNamedEntity"] = 27] = "InNamedEntity";
  State2[State2["InNumericEntity"] = 28] = "InNumericEntity";
  State2[State2["InHexEntity"] = 29] = "InHexEntity";
})(State || (State = {}));
function isWhitespace(c2) {
  return c2 === CharCodes2.Space || c2 === CharCodes2.NewLine || c2 === CharCodes2.Tab || c2 === CharCodes2.FormFeed || c2 === CharCodes2.CarriageReturn;
}
function isEndOfTagSection(c2) {
  return c2 === CharCodes2.Slash || c2 === CharCodes2.Gt || isWhitespace(c2);
}
function isNumber2(c2) {
  return c2 >= CharCodes2.Zero && c2 <= CharCodes2.Nine;
}
function isASCIIAlpha(c2) {
  return c2 >= CharCodes2.LowerA && c2 <= CharCodes2.LowerZ || c2 >= CharCodes2.UpperA && c2 <= CharCodes2.UpperZ;
}
function isHexDigit(c2) {
  return c2 >= CharCodes2.UpperA && c2 <= CharCodes2.UpperF || c2 >= CharCodes2.LowerA && c2 <= CharCodes2.LowerF;
}
var QuoteType;
(function(QuoteType2) {
  QuoteType2[QuoteType2["NoValue"] = 0] = "NoValue";
  QuoteType2[QuoteType2["Unquoted"] = 1] = "Unquoted";
  QuoteType2[QuoteType2["Single"] = 2] = "Single";
  QuoteType2[QuoteType2["Double"] = 3] = "Double";
})(QuoteType || (QuoteType = {}));
var Sequences = {
  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),
  CdataEnd: new Uint8Array([93, 93, 62]),
  CommentEnd: new Uint8Array([45, 45, 62]),
  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),
  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),
  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101])
};

class Tokenizer {
  constructor({ xmlMode = false, decodeEntities = true }, cbs) {
    this.cbs = cbs;
    this.state = State.Text;
    this.buffer = "";
    this.sectionStart = 0;
    this.index = 0;
    this.baseState = State.Text;
    this.isSpecial = false;
    this.running = true;
    this.offset = 0;
    this.currentSequence = undefined;
    this.sequenceIndex = 0;
    this.trieIndex = 0;
    this.trieCurrent = 0;
    this.entityResult = 0;
    this.entityExcess = 0;
    this.xmlMode = xmlMode;
    this.decodeEntities = decodeEntities;
    this.entityTrie = xmlMode ? decode_data_xml_default : decode_data_html_default;
  }
  reset() {
    this.state = State.Text;
    this.buffer = "";
    this.sectionStart = 0;
    this.index = 0;
    this.baseState = State.Text;
    this.currentSequence = undefined;
    this.running = true;
    this.offset = 0;
  }
  write(chunk) {
    this.offset += this.buffer.length;
    this.buffer = chunk;
    this.parse();
  }
  end() {
    if (this.running)
      this.finish();
  }
  pause() {
    this.running = false;
  }
  resume() {
    this.running = true;
    if (this.index < this.buffer.length + this.offset) {
      this.parse();
    }
  }
  getIndex() {
    return this.index;
  }
  getSectionStart() {
    return this.sectionStart;
  }
  stateText(c2) {
    if (c2 === CharCodes2.Lt || !this.decodeEntities && this.fastForwardTo(CharCodes2.Lt)) {
      if (this.index > this.sectionStart) {
        this.cbs.ontext(this.sectionStart, this.index);
      }
      this.state = State.BeforeTagName;
      this.sectionStart = this.index;
    } else if (this.decodeEntities && c2 === CharCodes2.Amp) {
      this.state = State.BeforeEntity;
    }
  }
  stateSpecialStartSequence(c2) {
    const isEnd = this.sequenceIndex === this.currentSequence.length;
    const isMatch = isEnd ? isEndOfTagSection(c2) : (c2 | 32) === this.currentSequence[this.sequenceIndex];
    if (!isMatch) {
      this.isSpecial = false;
    } else if (!isEnd) {
      this.sequenceIndex++;
      return;
    }
    this.sequenceIndex = 0;
    this.state = State.InTagName;
    this.stateInTagName(c2);
  }
  stateInSpecialTag(c2) {
    if (this.sequenceIndex === this.currentSequence.length) {
      if (c2 === CharCodes2.Gt || isWhitespace(c2)) {
        const endOfText = this.index - this.currentSequence.length;
        if (this.sectionStart < endOfText) {
          const actualIndex = this.index;
          this.index = endOfText;
          this.cbs.ontext(this.sectionStart, endOfText);
          this.index = actualIndex;
        }
        this.isSpecial = false;
        this.sectionStart = endOfText + 2;
        this.stateInClosingTagName(c2);
        return;
      }
      this.sequenceIndex = 0;
    }
    if ((c2 | 32) === this.currentSequence[this.sequenceIndex]) {
      this.sequenceIndex += 1;
    } else if (this.sequenceIndex === 0) {
      if (this.currentSequence === Sequences.TitleEnd) {
        if (this.decodeEntities && c2 === CharCodes2.Amp) {
          this.state = State.BeforeEntity;
        }
      } else if (this.fastForwardTo(CharCodes2.Lt)) {
        this.sequenceIndex = 1;
      }
    } else {
      this.sequenceIndex = Number(c2 === CharCodes2.Lt);
    }
  }
  stateCDATASequence(c2) {
    if (c2 === Sequences.Cdata[this.sequenceIndex]) {
      if (++this.sequenceIndex === Sequences.Cdata.length) {
        this.state = State.InCommentLike;
        this.currentSequence = Sequences.CdataEnd;
        this.sequenceIndex = 0;
        this.sectionStart = this.index + 1;
      }
    } else {
      this.sequenceIndex = 0;
      this.state = State.InDeclaration;
      this.stateInDeclaration(c2);
    }
  }
  fastForwardTo(c2) {
    while (++this.index < this.buffer.length + this.offset) {
      if (this.buffer.charCodeAt(this.index - this.offset) === c2) {
        return true;
      }
    }
    this.index = this.buffer.length + this.offset - 1;
    return false;
  }
  stateInCommentLike(c2) {
    if (c2 === this.currentSequence[this.sequenceIndex]) {
      if (++this.sequenceIndex === this.currentSequence.length) {
        if (this.currentSequence === Sequences.CdataEnd) {
          this.cbs.oncdata(this.sectionStart, this.index, 2);
        } else {
          this.cbs.oncomment(this.sectionStart, this.index, 2);
        }
        this.sequenceIndex = 0;
        this.sectionStart = this.index + 1;
        this.state = State.Text;
      }
    } else if (this.sequenceIndex === 0) {
      if (this.fastForwardTo(this.currentSequence[0])) {
        this.sequenceIndex = 1;
      }
    } else if (c2 !== this.currentSequence[this.sequenceIndex - 1]) {
      this.sequenceIndex = 0;
    }
  }
  isTagStartChar(c2) {
    return this.xmlMode ? !isEndOfTagSection(c2) : isASCIIAlpha(c2);
  }
  startSpecial(sequence, offset) {
    this.isSpecial = true;
    this.currentSequence = sequence;
    this.sequenceIndex = offset;
    this.state = State.SpecialStartSequence;
  }
  stateBeforeTagName(c2) {
    if (c2 === CharCodes2.ExclamationMark) {
      this.state = State.BeforeDeclaration;
      this.sectionStart = this.index + 1;
    } else if (c2 === CharCodes2.Questionmark) {
      this.state = State.InProcessingInstruction;
      this.sectionStart = this.index + 1;
    } else if (this.isTagStartChar(c2)) {
      const lower = c2 | 32;
      this.sectionStart = this.index;
      if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {
        this.startSpecial(Sequences.TitleEnd, 3);
      } else {
        this.state = !this.xmlMode && lower === Sequences.ScriptEnd[2] ? State.BeforeSpecialS : State.InTagName;
      }
    } else if (c2 === CharCodes2.Slash) {
      this.state = State.BeforeClosingTagName;
    } else {
      this.state = State.Text;
      this.stateText(c2);
    }
  }
  stateInTagName(c2) {
    if (isEndOfTagSection(c2)) {
      this.cbs.onopentagname(this.sectionStart, this.index);
      this.sectionStart = -1;
      this.state = State.BeforeAttributeName;
      this.stateBeforeAttributeName(c2);
    }
  }
  stateBeforeClosingTagName(c2) {
    if (isWhitespace(c2)) {} else if (c2 === CharCodes2.Gt) {
      this.state = State.Text;
    } else {
      this.state = this.isTagStartChar(c2) ? State.InClosingTagName : State.InSpecialComment;
      this.sectionStart = this.index;
    }
  }
  stateInClosingTagName(c2) {
    if (c2 === CharCodes2.Gt || isWhitespace(c2)) {
      this.cbs.onclosetag(this.sectionStart, this.index);
      this.sectionStart = -1;
      this.state = State.AfterClosingTagName;
      this.stateAfterClosingTagName(c2);
    }
  }
  stateAfterClosingTagName(c2) {
    if (c2 === CharCodes2.Gt || this.fastForwardTo(CharCodes2.Gt)) {
      this.state = State.Text;
      this.baseState = State.Text;
      this.sectionStart = this.index + 1;
    }
  }
  stateBeforeAttributeName(c2) {
    if (c2 === CharCodes2.Gt) {
      this.cbs.onopentagend(this.index);
      if (this.isSpecial) {
        this.state = State.InSpecialTag;
        this.sequenceIndex = 0;
      } else {
        this.state = State.Text;
      }
      this.baseState = this.state;
      this.sectionStart = this.index + 1;
    } else if (c2 === CharCodes2.Slash) {
      this.state = State.InSelfClosingTag;
    } else if (!isWhitespace(c2)) {
      this.state = State.InAttributeName;
      this.sectionStart = this.index;
    }
  }
  stateInSelfClosingTag(c2) {
    if (c2 === CharCodes2.Gt) {
      this.cbs.onselfclosingtag(this.index);
      this.state = State.Text;
      this.baseState = State.Text;
      this.sectionStart = this.index + 1;
      this.isSpecial = false;
    } else if (!isWhitespace(c2)) {
      this.state = State.BeforeAttributeName;
      this.stateBeforeAttributeName(c2);
    }
  }
  stateInAttributeName(c2) {
    if (c2 === CharCodes2.Eq || isEndOfTagSection(c2)) {
      this.cbs.onattribname(this.sectionStart, this.index);
      this.sectionStart = -1;
      this.state = State.AfterAttributeName;
      this.stateAfterAttributeName(c2);
    }
  }
  stateAfterAttributeName(c2) {
    if (c2 === CharCodes2.Eq) {
      this.state = State.BeforeAttributeValue;
    } else if (c2 === CharCodes2.Slash || c2 === CharCodes2.Gt) {
      this.cbs.onattribend(QuoteType.NoValue, this.index);
      this.state = State.BeforeAttributeName;
      this.stateBeforeAttributeName(c2);
    } else if (!isWhitespace(c2)) {
      this.cbs.onattribend(QuoteType.NoValue, this.index);
      this.state = State.InAttributeName;
      this.sectionStart = this.index;
    }
  }
  stateBeforeAttributeValue(c2) {
    if (c2 === CharCodes2.DoubleQuote) {
      this.state = State.InAttributeValueDq;
      this.sectionStart = this.index + 1;
    } else if (c2 === CharCodes2.SingleQuote) {
      this.state = State.InAttributeValueSq;
      this.sectionStart = this.index + 1;
    } else if (!isWhitespace(c2)) {
      this.sectionStart = this.index;
      this.state = State.InAttributeValueNq;
      this.stateInAttributeValueNoQuotes(c2);
    }
  }
  handleInAttributeValue(c2, quote) {
    if (c2 === quote || !this.decodeEntities && this.fastForwardTo(quote)) {
      this.cbs.onattribdata(this.sectionStart, this.index);
      this.sectionStart = -1;
      this.cbs.onattribend(quote === CharCodes2.DoubleQuote ? QuoteType.Double : QuoteType.Single, this.index);
      this.state = State.BeforeAttributeName;
    } else if (this.decodeEntities && c2 === CharCodes2.Amp) {
      this.baseState = this.state;
      this.state = State.BeforeEntity;
    }
  }
  stateInAttributeValueDoubleQuotes(c2) {
    this.handleInAttributeValue(c2, CharCodes2.DoubleQuote);
  }
  stateInAttributeValueSingleQuotes(c2) {
    this.handleInAttributeValue(c2, CharCodes2.SingleQuote);
  }
  stateInAttributeValueNoQuotes(c2) {
    if (isWhitespace(c2) || c2 === CharCodes2.Gt) {
      this.cbs.onattribdata(this.sectionStart, this.index);
      this.sectionStart = -1;
      this.cbs.onattribend(QuoteType.Unquoted, this.index);
      this.state = State.BeforeAttributeName;
      this.stateBeforeAttributeName(c2);
    } else if (this.decodeEntities && c2 === CharCodes2.Amp) {
      this.baseState = this.state;
      this.state = State.BeforeEntity;
    }
  }
  stateBeforeDeclaration(c2) {
    if (c2 === CharCodes2.OpeningSquareBracket) {
      this.state = State.CDATASequence;
      this.sequenceIndex = 0;
    } else {
      this.state = c2 === CharCodes2.Dash ? State.BeforeComment : State.InDeclaration;
    }
  }
  stateInDeclaration(c2) {
    if (c2 === CharCodes2.Gt || this.fastForwardTo(CharCodes2.Gt)) {
      this.cbs.ondeclaration(this.sectionStart, this.index);
      this.state = State.Text;
      this.sectionStart = this.index + 1;
    }
  }
  stateInProcessingInstruction(c2) {
    if (c2 === CharCodes2.Gt || this.fastForwardTo(CharCodes2.Gt)) {
      this.cbs.onprocessinginstruction(this.sectionStart, this.index);
      this.state = State.Text;
      this.sectionStart = this.index + 1;
    }
  }
  stateBeforeComment(c2) {
    if (c2 === CharCodes2.Dash) {
      this.state = State.InCommentLike;
      this.currentSequence = Sequences.CommentEnd;
      this.sequenceIndex = 2;
      this.sectionStart = this.index + 1;
    } else {
      this.state = State.InDeclaration;
    }
  }
  stateInSpecialComment(c2) {
    if (c2 === CharCodes2.Gt || this.fastForwardTo(CharCodes2.Gt)) {
      this.cbs.oncomment(this.sectionStart, this.index, 0);
      this.state = State.Text;
      this.sectionStart = this.index + 1;
    }
  }
  stateBeforeSpecialS(c2) {
    const lower = c2 | 32;
    if (lower === Sequences.ScriptEnd[3]) {
      this.startSpecial(Sequences.ScriptEnd, 4);
    } else if (lower === Sequences.StyleEnd[3]) {
      this.startSpecial(Sequences.StyleEnd, 4);
    } else {
      this.state = State.InTagName;
      this.stateInTagName(c2);
    }
  }
  stateBeforeEntity(c2) {
    this.entityExcess = 1;
    this.entityResult = 0;
    if (c2 === CharCodes2.Number) {
      this.state = State.BeforeNumericEntity;
    } else if (c2 === CharCodes2.Amp) {} else {
      this.trieIndex = 0;
      this.trieCurrent = this.entityTrie[0];
      this.state = State.InNamedEntity;
      this.stateInNamedEntity(c2);
    }
  }
  stateInNamedEntity(c2) {
    this.entityExcess += 1;
    this.trieIndex = determineBranch(this.entityTrie, this.trieCurrent, this.trieIndex + 1, c2);
    if (this.trieIndex < 0) {
      this.emitNamedEntity();
      this.index--;
      return;
    }
    this.trieCurrent = this.entityTrie[this.trieIndex];
    const masked = this.trieCurrent & BinTrieFlags.VALUE_LENGTH;
    if (masked) {
      const valueLength = (masked >> 14) - 1;
      if (!this.allowLegacyEntity() && c2 !== CharCodes2.Semi) {
        this.trieIndex += valueLength;
      } else {
        const entityStart = this.index - this.entityExcess + 1;
        if (entityStart > this.sectionStart) {
          this.emitPartial(this.sectionStart, entityStart);
        }
        this.entityResult = this.trieIndex;
        this.trieIndex += valueLength;
        this.entityExcess = 0;
        this.sectionStart = this.index + 1;
        if (valueLength === 0) {
          this.emitNamedEntity();
        }
      }
    }
  }
  emitNamedEntity() {
    this.state = this.baseState;
    if (this.entityResult === 0) {
      return;
    }
    const valueLength = (this.entityTrie[this.entityResult] & BinTrieFlags.VALUE_LENGTH) >> 14;
    switch (valueLength) {
      case 1: {
        this.emitCodePoint(this.entityTrie[this.entityResult] & ~BinTrieFlags.VALUE_LENGTH);
        break;
      }
      case 2: {
        this.emitCodePoint(this.entityTrie[this.entityResult + 1]);
        break;
      }
      case 3: {
        this.emitCodePoint(this.entityTrie[this.entityResult + 1]);
        this.emitCodePoint(this.entityTrie[this.entityResult + 2]);
      }
    }
  }
  stateBeforeNumericEntity(c2) {
    if ((c2 | 32) === CharCodes2.LowerX) {
      this.entityExcess++;
      this.state = State.InHexEntity;
    } else {
      this.state = State.InNumericEntity;
      this.stateInNumericEntity(c2);
    }
  }
  emitNumericEntity(strict) {
    const entityStart = this.index - this.entityExcess - 1;
    const numberStart = entityStart + 2 + Number(this.state === State.InHexEntity);
    if (numberStart !== this.index) {
      if (entityStart > this.sectionStart) {
        this.emitPartial(this.sectionStart, entityStart);
      }
      this.sectionStart = this.index + Number(strict);
      this.emitCodePoint(replaceCodePoint(this.entityResult));
    }
    this.state = this.baseState;
  }
  stateInNumericEntity(c2) {
    if (c2 === CharCodes2.Semi) {
      this.emitNumericEntity(true);
    } else if (isNumber2(c2)) {
      this.entityResult = this.entityResult * 10 + (c2 - CharCodes2.Zero);
      this.entityExcess++;
    } else {
      if (this.allowLegacyEntity()) {
        this.emitNumericEntity(false);
      } else {
        this.state = this.baseState;
      }
      this.index--;
    }
  }
  stateInHexEntity(c2) {
    if (c2 === CharCodes2.Semi) {
      this.emitNumericEntity(true);
    } else if (isNumber2(c2)) {
      this.entityResult = this.entityResult * 16 + (c2 - CharCodes2.Zero);
      this.entityExcess++;
    } else if (isHexDigit(c2)) {
      this.entityResult = this.entityResult * 16 + ((c2 | 32) - CharCodes2.LowerA + 10);
      this.entityExcess++;
    } else {
      if (this.allowLegacyEntity()) {
        this.emitNumericEntity(false);
      } else {
        this.state = this.baseState;
      }
      this.index--;
    }
  }
  allowLegacyEntity() {
    return !this.xmlMode && (this.baseState === State.Text || this.baseState === State.InSpecialTag);
  }
  cleanup() {
    if (this.running && this.sectionStart !== this.index) {
      if (this.state === State.Text || this.state === State.InSpecialTag && this.sequenceIndex === 0) {
        this.cbs.ontext(this.sectionStart, this.index);
        this.sectionStart = this.index;
      } else if (this.state === State.InAttributeValueDq || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueNq) {
        this.cbs.onattribdata(this.sectionStart, this.index);
        this.sectionStart = this.index;
      }
    }
  }
  shouldContinue() {
    return this.index < this.buffer.length + this.offset && this.running;
  }
  parse() {
    while (this.shouldContinue()) {
      const c2 = this.buffer.charCodeAt(this.index - this.offset);
      switch (this.state) {
        case State.Text: {
          this.stateText(c2);
          break;
        }
        case State.SpecialStartSequence: {
          this.stateSpecialStartSequence(c2);
          break;
        }
        case State.InSpecialTag: {
          this.stateInSpecialTag(c2);
          break;
        }
        case State.CDATASequence: {
          this.stateCDATASequence(c2);
          break;
        }
        case State.InAttributeValueDq: {
          this.stateInAttributeValueDoubleQuotes(c2);
          break;
        }
        case State.InAttributeName: {
          this.stateInAttributeName(c2);
          break;
        }
        case State.InCommentLike: {
          this.stateInCommentLike(c2);
          break;
        }
        case State.InSpecialComment: {
          this.stateInSpecialComment(c2);
          break;
        }
        case State.BeforeAttributeName: {
          this.stateBeforeAttributeName(c2);
          break;
        }
        case State.InTagName: {
          this.stateInTagName(c2);
          break;
        }
        case State.InClosingTagName: {
          this.stateInClosingTagName(c2);
          break;
        }
        case State.BeforeTagName: {
          this.stateBeforeTagName(c2);
          break;
        }
        case State.AfterAttributeName: {
          this.stateAfterAttributeName(c2);
          break;
        }
        case State.InAttributeValueSq: {
          this.stateInAttributeValueSingleQuotes(c2);
          break;
        }
        case State.BeforeAttributeValue: {
          this.stateBeforeAttributeValue(c2);
          break;
        }
        case State.BeforeClosingTagName: {
          this.stateBeforeClosingTagName(c2);
          break;
        }
        case State.AfterClosingTagName: {
          this.stateAfterClosingTagName(c2);
          break;
        }
        case State.BeforeSpecialS: {
          this.stateBeforeSpecialS(c2);
          break;
        }
        case State.InAttributeValueNq: {
          this.stateInAttributeValueNoQuotes(c2);
          break;
        }
        case State.InSelfClosingTag: {
          this.stateInSelfClosingTag(c2);
          break;
        }
        case State.InDeclaration: {
          this.stateInDeclaration(c2);
          break;
        }
        case State.BeforeDeclaration: {
          this.stateBeforeDeclaration(c2);
          break;
        }
        case State.BeforeComment: {
          this.stateBeforeComment(c2);
          break;
        }
        case State.InProcessingInstruction: {
          this.stateInProcessingInstruction(c2);
          break;
        }
        case State.InNamedEntity: {
          this.stateInNamedEntity(c2);
          break;
        }
        case State.BeforeEntity: {
          this.stateBeforeEntity(c2);
          break;
        }
        case State.InHexEntity: {
          this.stateInHexEntity(c2);
          break;
        }
        case State.InNumericEntity: {
          this.stateInNumericEntity(c2);
          break;
        }
        default: {
          this.stateBeforeNumericEntity(c2);
        }
      }
      this.index++;
    }
    this.cleanup();
  }
  finish() {
    if (this.state === State.InNamedEntity) {
      this.emitNamedEntity();
    }
    if (this.sectionStart < this.index) {
      this.handleTrailingData();
    }
    this.cbs.onend();
  }
  handleTrailingData() {
    const endIndex = this.buffer.length + this.offset;
    if (this.state === State.InCommentLike) {
      if (this.currentSequence === Sequences.CdataEnd) {
        this.cbs.oncdata(this.sectionStart, endIndex, 0);
      } else {
        this.cbs.oncomment(this.sectionStart, endIndex, 0);
      }
    } else if (this.state === State.InNumericEntity && this.allowLegacyEntity()) {
      this.emitNumericEntity(false);
    } else if (this.state === State.InHexEntity && this.allowLegacyEntity()) {
      this.emitNumericEntity(false);
    } else if (this.state === State.InTagName || this.state === State.BeforeAttributeName || this.state === State.BeforeAttributeValue || this.state === State.AfterAttributeName || this.state === State.InAttributeName || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueDq || this.state === State.InAttributeValueNq || this.state === State.InClosingTagName) {} else {
      this.cbs.ontext(this.sectionStart, endIndex);
    }
  }
  emitPartial(start, endIndex) {
    if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {
      this.cbs.onattribdata(start, endIndex);
    } else {
      this.cbs.ontext(start, endIndex);
    }
  }
  emitCodePoint(cp) {
    if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {
      this.cbs.onattribentity(cp);
    } else {
      this.cbs.ontextentity(cp);
    }
  }
}

// ../../node_modules/.bun/htmlparser2@8.0.2/node_modules/htmlparser2/lib/esm/Parser.js
var formTags = new Set([
  "input",
  "option",
  "optgroup",
  "select",
  "button",
  "datalist",
  "textarea"
]);
var pTag = new Set(["p"]);
var tableSectionTags = new Set(["thead", "tbody"]);
var ddtTags = new Set(["dd", "dt"]);
var rtpTags = new Set(["rt", "rp"]);
var openImpliesClose = new Map([
  ["tr", new Set(["tr", "th", "td"])],
  ["th", new Set(["th"])],
  ["td", new Set(["thead", "th", "td"])],
  ["body", new Set(["head", "link", "script"])],
  ["li", new Set(["li"])],
  ["p", pTag],
  ["h1", pTag],
  ["h2", pTag],
  ["h3", pTag],
  ["h4", pTag],
  ["h5", pTag],
  ["h6", pTag],
  ["select", formTags],
  ["input", formTags],
  ["output", formTags],
  ["button", formTags],
  ["datalist", formTags],
  ["textarea", formTags],
  ["option", new Set(["option"])],
  ["optgroup", new Set(["optgroup", "option"])],
  ["dd", ddtTags],
  ["dt", ddtTags],
  ["address", pTag],
  ["article", pTag],
  ["aside", pTag],
  ["blockquote", pTag],
  ["details", pTag],
  ["div", pTag],
  ["dl", pTag],
  ["fieldset", pTag],
  ["figcaption", pTag],
  ["figure", pTag],
  ["footer", pTag],
  ["form", pTag],
  ["header", pTag],
  ["hr", pTag],
  ["main", pTag],
  ["nav", pTag],
  ["ol", pTag],
  ["pre", pTag],
  ["section", pTag],
  ["table", pTag],
  ["ul", pTag],
  ["rt", rtpTags],
  ["rp", rtpTags],
  ["tbody", tableSectionTags],
  ["tfoot", tableSectionTags]
]);
var voidElements = new Set([
  "area",
  "base",
  "basefont",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "img",
  "input",
  "isindex",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "track",
  "wbr"
]);
var foreignContextElements = new Set(["math", "svg"]);
var htmlIntegrationElements = new Set([
  "mi",
  "mo",
  "mn",
  "ms",
  "mtext",
  "annotation-xml",
  "foreignobject",
  "desc",
  "title"
]);
var reNameEnd = /\s|\//;

class Parser {
  constructor(cbs, options = {}) {
    var _a3, _b, _c, _d, _e3;
    this.options = options;
    this.startIndex = 0;
    this.endIndex = 0;
    this.openTagStart = 0;
    this.tagname = "";
    this.attribname = "";
    this.attribvalue = "";
    this.attribs = null;
    this.stack = [];
    this.foreignContext = [];
    this.buffers = [];
    this.bufferOffset = 0;
    this.writeIndex = 0;
    this.ended = false;
    this.cbs = cbs !== null && cbs !== undefined ? cbs : {};
    this.lowerCaseTagNames = (_a3 = options.lowerCaseTags) !== null && _a3 !== undefined ? _a3 : !options.xmlMode;
    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== undefined ? _b : !options.xmlMode;
    this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== undefined ? _c : Tokenizer)(this.options, this);
    (_e3 = (_d = this.cbs).onparserinit) === null || _e3 === undefined || _e3.call(_d, this);
  }
  ontext(start, endIndex) {
    var _a3, _b;
    const data = this.getSlice(start, endIndex);
    this.endIndex = endIndex - 1;
    (_b = (_a3 = this.cbs).ontext) === null || _b === undefined || _b.call(_a3, data);
    this.startIndex = endIndex;
  }
  ontextentity(cp) {
    var _a3, _b;
    const index = this.tokenizer.getSectionStart();
    this.endIndex = index - 1;
    (_b = (_a3 = this.cbs).ontext) === null || _b === undefined || _b.call(_a3, fromCodePoint(cp));
    this.startIndex = index;
  }
  isVoidElement(name2) {
    return !this.options.xmlMode && voidElements.has(name2);
  }
  onopentagname(start, endIndex) {
    this.endIndex = endIndex;
    let name2 = this.getSlice(start, endIndex);
    if (this.lowerCaseTagNames) {
      name2 = name2.toLowerCase();
    }
    this.emitOpenTag(name2);
  }
  emitOpenTag(name2) {
    var _a3, _b, _c, _d;
    this.openTagStart = this.startIndex;
    this.tagname = name2;
    const impliesClose = !this.options.xmlMode && openImpliesClose.get(name2);
    if (impliesClose) {
      while (this.stack.length > 0 && impliesClose.has(this.stack[this.stack.length - 1])) {
        const element = this.stack.pop();
        (_b = (_a3 = this.cbs).onclosetag) === null || _b === undefined || _b.call(_a3, element, true);
      }
    }
    if (!this.isVoidElement(name2)) {
      this.stack.push(name2);
      if (foreignContextElements.has(name2)) {
        this.foreignContext.push(true);
      } else if (htmlIntegrationElements.has(name2)) {
        this.foreignContext.push(false);
      }
    }
    (_d = (_c = this.cbs).onopentagname) === null || _d === undefined || _d.call(_c, name2);
    if (this.cbs.onopentag)
      this.attribs = {};
  }
  endOpenTag(isImplied) {
    var _a3, _b;
    this.startIndex = this.openTagStart;
    if (this.attribs) {
      (_b = (_a3 = this.cbs).onopentag) === null || _b === undefined || _b.call(_a3, this.tagname, this.attribs, isImplied);
      this.attribs = null;
    }
    if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {
      this.cbs.onclosetag(this.tagname, true);
    }
    this.tagname = "";
  }
  onopentagend(endIndex) {
    this.endIndex = endIndex;
    this.endOpenTag(false);
    this.startIndex = endIndex + 1;
  }
  onclosetag(start, endIndex) {
    var _a3, _b, _c, _d, _e3, _f;
    this.endIndex = endIndex;
    let name2 = this.getSlice(start, endIndex);
    if (this.lowerCaseTagNames) {
      name2 = name2.toLowerCase();
    }
    if (foreignContextElements.has(name2) || htmlIntegrationElements.has(name2)) {
      this.foreignContext.pop();
    }
    if (!this.isVoidElement(name2)) {
      const pos = this.stack.lastIndexOf(name2);
      if (pos !== -1) {
        if (this.cbs.onclosetag) {
          let count = this.stack.length - pos;
          while (count--) {
            this.cbs.onclosetag(this.stack.pop(), count !== 0);
          }
        } else
          this.stack.length = pos;
      } else if (!this.options.xmlMode && name2 === "p") {
        this.emitOpenTag("p");
        this.closeCurrentTag(true);
      }
    } else if (!this.options.xmlMode && name2 === "br") {
      (_b = (_a3 = this.cbs).onopentagname) === null || _b === undefined || _b.call(_a3, "br");
      (_d = (_c = this.cbs).onopentag) === null || _d === undefined || _d.call(_c, "br", {}, true);
      (_f = (_e3 = this.cbs).onclosetag) === null || _f === undefined || _f.call(_e3, "br", false);
    }
    this.startIndex = endIndex + 1;
  }
  onselfclosingtag(endIndex) {
    this.endIndex = endIndex;
    if (this.options.xmlMode || this.options.recognizeSelfClosing || this.foreignContext[this.foreignContext.length - 1]) {
      this.closeCurrentTag(false);
      this.startIndex = endIndex + 1;
    } else {
      this.onopentagend(endIndex);
    }
  }
  closeCurrentTag(isOpenImplied) {
    var _a3, _b;
    const name2 = this.tagname;
    this.endOpenTag(isOpenImplied);
    if (this.stack[this.stack.length - 1] === name2) {
      (_b = (_a3 = this.cbs).onclosetag) === null || _b === undefined || _b.call(_a3, name2, !isOpenImplied);
      this.stack.pop();
    }
  }
  onattribname(start, endIndex) {
    this.startIndex = start;
    const name2 = this.getSlice(start, endIndex);
    this.attribname = this.lowerCaseAttributeNames ? name2.toLowerCase() : name2;
  }
  onattribdata(start, endIndex) {
    this.attribvalue += this.getSlice(start, endIndex);
  }
  onattribentity(cp) {
    this.attribvalue += fromCodePoint(cp);
  }
  onattribend(quote, endIndex) {
    var _a3, _b;
    this.endIndex = endIndex;
    (_b = (_a3 = this.cbs).onattribute) === null || _b === undefined || _b.call(_a3, this.attribname, this.attribvalue, quote === QuoteType.Double ? '"' : quote === QuoteType.Single ? "'" : quote === QuoteType.NoValue ? undefined : null);
    if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {
      this.attribs[this.attribname] = this.attribvalue;
    }
    this.attribvalue = "";
  }
  getInstructionName(value) {
    const index = value.search(reNameEnd);
    let name2 = index < 0 ? value : value.substr(0, index);
    if (this.lowerCaseTagNames) {
      name2 = name2.toLowerCase();
    }
    return name2;
  }
  ondeclaration(start, endIndex) {
    this.endIndex = endIndex;
    const value = this.getSlice(start, endIndex);
    if (this.cbs.onprocessinginstruction) {
      const name2 = this.getInstructionName(value);
      this.cbs.onprocessinginstruction(`!${name2}`, `!${value}`);
    }
    this.startIndex = endIndex + 1;
  }
  onprocessinginstruction(start, endIndex) {
    this.endIndex = endIndex;
    const value = this.getSlice(start, endIndex);
    if (this.cbs.onprocessinginstruction) {
      const name2 = this.getInstructionName(value);
      this.cbs.onprocessinginstruction(`?${name2}`, `?${value}`);
    }
    this.startIndex = endIndex + 1;
  }
  oncomment(start, endIndex, offset) {
    var _a3, _b, _c, _d;
    this.endIndex = endIndex;
    (_b = (_a3 = this.cbs).oncomment) === null || _b === undefined || _b.call(_a3, this.getSlice(start, endIndex - offset));
    (_d = (_c = this.cbs).oncommentend) === null || _d === undefined || _d.call(_c);
    this.startIndex = endIndex + 1;
  }
  oncdata(start, endIndex, offset) {
    var _a3, _b, _c, _d, _e3, _f, _g, _h, _j, _k;
    this.endIndex = endIndex;
    const value = this.getSlice(start, endIndex - offset);
    if (this.options.xmlMode || this.options.recognizeCDATA) {
      (_b = (_a3 = this.cbs).oncdatastart) === null || _b === undefined || _b.call(_a3);
      (_d = (_c = this.cbs).ontext) === null || _d === undefined || _d.call(_c, value);
      (_f = (_e3 = this.cbs).oncdataend) === null || _f === undefined || _f.call(_e3);
    } else {
      (_h = (_g = this.cbs).oncomment) === null || _h === undefined || _h.call(_g, `[CDATA[${value}]]`);
      (_k = (_j = this.cbs).oncommentend) === null || _k === undefined || _k.call(_j);
    }
    this.startIndex = endIndex + 1;
  }
  onend() {
    var _a3, _b;
    if (this.cbs.onclosetag) {
      this.endIndex = this.startIndex;
      for (let index = this.stack.length;index > 0; this.cbs.onclosetag(this.stack[--index], true))
        ;
    }
    (_b = (_a3 = this.cbs).onend) === null || _b === undefined || _b.call(_a3);
  }
  reset() {
    var _a3, _b, _c, _d;
    (_b = (_a3 = this.cbs).onreset) === null || _b === undefined || _b.call(_a3);
    this.tokenizer.reset();
    this.tagname = "";
    this.attribname = "";
    this.attribs = null;
    this.stack.length = 0;
    this.startIndex = 0;
    this.endIndex = 0;
    (_d = (_c = this.cbs).onparserinit) === null || _d === undefined || _d.call(_c, this);
    this.buffers.length = 0;
    this.bufferOffset = 0;
    this.writeIndex = 0;
    this.ended = false;
  }
  parseComplete(data) {
    this.reset();
    this.end(data);
  }
  getSlice(start, end) {
    while (start - this.bufferOffset >= this.buffers[0].length) {
      this.shiftBuffer();
    }
    let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);
    while (end - this.bufferOffset > this.buffers[0].length) {
      this.shiftBuffer();
      slice += this.buffers[0].slice(0, end - this.bufferOffset);
    }
    return slice;
  }
  shiftBuffer() {
    this.bufferOffset += this.buffers[0].length;
    this.writeIndex--;
    this.buffers.shift();
  }
  write(chunk) {
    var _a3, _b;
    if (this.ended) {
      (_b = (_a3 = this.cbs).onerror) === null || _b === undefined || _b.call(_a3, new Error(".write() after done!"));
      return;
    }
    this.buffers.push(chunk);
    if (this.tokenizer.running) {
      this.tokenizer.write(chunk);
      this.writeIndex++;
    }
  }
  end(chunk) {
    var _a3, _b;
    if (this.ended) {
      (_b = (_a3 = this.cbs).onerror) === null || _b === undefined || _b.call(_a3, new Error(".end() after done!"));
      return;
    }
    if (chunk)
      this.write(chunk);
    this.ended = true;
    this.tokenizer.end();
  }
  pause() {
    this.tokenizer.pause();
  }
  resume() {
    this.tokenizer.resume();
    while (this.tokenizer.running && this.writeIndex < this.buffers.length) {
      this.tokenizer.write(this.buffers[this.writeIndex++]);
    }
    if (this.ended)
      this.tokenizer.end();
  }
  parseChunk(chunk) {
    this.write(chunk);
  }
  done(chunk) {
    this.end(chunk);
  }
}
// ../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/escape.js
var xmlReplacer = /["&'<>$\x80-\uFFFF]/g;
var xmlCodeMap = new Map([
  [34, "&quot;"],
  [38, "&amp;"],
  [39, "&apos;"],
  [60, "&lt;"],
  [62, "&gt;"]
]);
var getCodePoint = String.prototype.codePointAt != null ? (str, index) => str.codePointAt(index) : (c2, index) => (c2.charCodeAt(index) & 64512) === 55296 ? (c2.charCodeAt(index) - 55296) * 1024 + c2.charCodeAt(index + 1) - 56320 + 65536 : c2.charCodeAt(index);
function encodeXML(str) {
  let ret = "";
  let lastIdx = 0;
  let match;
  while ((match = xmlReplacer.exec(str)) !== null) {
    const i = match.index;
    const char = str.charCodeAt(i);
    const next = xmlCodeMap.get(char);
    if (next !== undefined) {
      ret += str.substring(lastIdx, i) + next;
      lastIdx = i + 1;
    } else {
      ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;
      lastIdx = xmlReplacer.lastIndex += Number((char & 64512) === 55296);
    }
  }
  return ret + str.substr(lastIdx);
}
function getEscaper(regex, map2) {
  return function escape(data) {
    let match;
    let lastIdx = 0;
    let result = "";
    while (match = regex.exec(data)) {
      if (lastIdx !== match.index) {
        result += data.substring(lastIdx, match.index);
      }
      result += map2.get(match[0].charCodeAt(0));
      lastIdx = match.index + 1;
    }
    return result + data.substring(lastIdx);
  };
}
var escapeUTF8 = getEscaper(/[&<>'"]/g, xmlCodeMap);
var escapeAttribute = getEscaper(/["&\u00A0]/g, new Map([
  [34, "&quot;"],
  [38, "&amp;"],
  [160, "&nbsp;"]
]));
var escapeText = getEscaper(/[&<>\u00A0]/g, new Map([
  [38, "&amp;"],
  [60, "&lt;"],
  [62, "&gt;"],
  [160, "&nbsp;"]
]));
// ../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/index.js
var EntityLevel;
(function(EntityLevel2) {
  EntityLevel2[EntityLevel2["XML"] = 0] = "XML";
  EntityLevel2[EntityLevel2["HTML"] = 1] = "HTML";
})(EntityLevel || (EntityLevel = {}));
var EncodingMode;
(function(EncodingMode2) {
  EncodingMode2[EncodingMode2["UTF8"] = 0] = "UTF8";
  EncodingMode2[EncodingMode2["ASCII"] = 1] = "ASCII";
  EncodingMode2[EncodingMode2["Extensive"] = 2] = "Extensive";
  EncodingMode2[EncodingMode2["Attribute"] = 3] = "Attribute";
  EncodingMode2[EncodingMode2["Text"] = 4] = "Text";
})(EncodingMode || (EncodingMode = {}));

// ../../node_modules/.bun/dom-serializer@2.0.0/node_modules/dom-serializer/lib/esm/foreignNames.js
var elementNames = new Map([
  "altGlyph",
  "altGlyphDef",
  "altGlyphItem",
  "animateColor",
  "animateMotion",
  "animateTransform",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feDropShadow",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "glyphRef",
  "linearGradient",
  "radialGradient",
  "textPath"
].map((val) => [val.toLowerCase(), val]));
var attributeNames = new Map([
  "definitionURL",
  "attributeName",
  "attributeType",
  "baseFrequency",
  "baseProfile",
  "calcMode",
  "clipPathUnits",
  "diffuseConstant",
  "edgeMode",
  "filterUnits",
  "glyphRef",
  "gradientTransform",
  "gradientUnits",
  "kernelMatrix",
  "kernelUnitLength",
  "keyPoints",
  "keySplines",
  "keyTimes",
  "lengthAdjust",
  "limitingConeAngle",
  "markerHeight",
  "markerUnits",
  "markerWidth",
  "maskContentUnits",
  "maskUnits",
  "numOctaves",
  "pathLength",
  "patternContentUnits",
  "patternTransform",
  "patternUnits",
  "pointsAtX",
  "pointsAtY",
  "pointsAtZ",
  "preserveAlpha",
  "preserveAspectRatio",
  "primitiveUnits",
  "refX",
  "refY",
  "repeatCount",
  "repeatDur",
  "requiredExtensions",
  "requiredFeatures",
  "specularConstant",
  "specularExponent",
  "spreadMethod",
  "startOffset",
  "stdDeviation",
  "stitchTiles",
  "surfaceScale",
  "systemLanguage",
  "tableValues",
  "targetX",
  "targetY",
  "textLength",
  "viewBox",
  "viewTarget",
  "xChannelSelector",
  "yChannelSelector",
  "zoomAndPan"
].map((val) => [val.toLowerCase(), val]));

// ../../node_modules/.bun/dom-serializer@2.0.0/node_modules/dom-serializer/lib/esm/index.js
var unencodedElements = new Set([
  "style",
  "script",
  "xmp",
  "iframe",
  "noembed",
  "noframes",
  "plaintext",
  "noscript"
]);
function replaceQuotes(value) {
  return value.replace(/"/g, "&quot;");
}
function formatAttributes(attributes, opts) {
  var _a3;
  if (!attributes)
    return;
  const encode = ((_a3 = opts.encodeEntities) !== null && _a3 !== undefined ? _a3 : opts.decodeEntities) === false ? replaceQuotes : opts.xmlMode || opts.encodeEntities !== "utf8" ? encodeXML : escapeAttribute;
  return Object.keys(attributes).map((key) => {
    var _a4, _b;
    const value = (_a4 = attributes[key]) !== null && _a4 !== undefined ? _a4 : "";
    if (opts.xmlMode === "foreign") {
      key = (_b = attributeNames.get(key)) !== null && _b !== undefined ? _b : key;
    }
    if (!opts.emptyAttrs && !opts.xmlMode && value === "") {
      return key;
    }
    return `${key}="${encode(value)}"`;
  }).join(" ");
}
var singleTag = new Set([
  "area",
  "base",
  "basefont",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "img",
  "input",
  "isindex",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "track",
  "wbr"
]);
function render(node2, options = {}) {
  const nodes = "length" in node2 ? node2 : [node2];
  let output = "";
  for (let i = 0;i < nodes.length; i++) {
    output += renderNode(nodes[i], options);
  }
  return output;
}
function renderNode(node2, options) {
  switch (node2.type) {
    case Root:
      return render(node2.children, options);
    case Doctype:
    case Directive:
      return renderDirective(node2);
    case Comment:
      return renderComment(node2);
    case CDATA:
      return renderCdata(node2);
    case Script:
    case Style:
    case Tag:
      return renderTag(node2, options);
    case Text:
      return renderText(node2, options);
  }
}
var foreignModeIntegrationPoints = new Set([
  "mi",
  "mo",
  "mn",
  "ms",
  "mtext",
  "annotation-xml",
  "foreignObject",
  "desc",
  "title"
]);
var foreignElements = new Set(["svg", "math"]);
function renderTag(elem, opts) {
  var _a3;
  if (opts.xmlMode === "foreign") {
    elem.name = (_a3 = elementNames.get(elem.name)) !== null && _a3 !== undefined ? _a3 : elem.name;
    if (elem.parent && foreignModeIntegrationPoints.has(elem.parent.name)) {
      opts = { ...opts, xmlMode: false };
    }
  }
  if (!opts.xmlMode && foreignElements.has(elem.name)) {
    opts = { ...opts, xmlMode: "foreign" };
  }
  let tag = `<${elem.name}`;
  const attribs = formatAttributes(elem.attribs, opts);
  if (attribs) {
    tag += ` ${attribs}`;
  }
  if (elem.children.length === 0 && (opts.xmlMode ? opts.selfClosingTags !== false : opts.selfClosingTags && singleTag.has(elem.name))) {
    if (!opts.xmlMode)
      tag += " ";
    tag += "/>";
  } else {
    tag += ">";
    if (elem.children.length > 0) {
      tag += render(elem.children, opts);
    }
    if (opts.xmlMode || !singleTag.has(elem.name)) {
      tag += `</${elem.name}>`;
    }
  }
  return tag;
}
function renderDirective(elem) {
  return `<${elem.data}>`;
}
function renderText(elem, opts) {
  var _a3;
  let data = elem.data || "";
  if (((_a3 = opts.encodeEntities) !== null && _a3 !== undefined ? _a3 : opts.decodeEntities) !== false && !(!opts.xmlMode && elem.parent && unencodedElements.has(elem.parent.name))) {
    data = opts.xmlMode || opts.encodeEntities !== "utf8" ? encodeXML(data) : escapeText(data);
  }
  return data;
}
function renderCdata(elem) {
  return `<![CDATA[${elem.children[0].data}]]>`;
}
function renderComment(elem) {
  return `<!--${elem.data}-->`;
}

// ../../node_modules/.bun/htmlparser2@8.0.2/node_modules/htmlparser2/lib/esm/index.js
function parseDocument(data, options) {
  const handler = new DomHandler(undefined, options);
  new Parser(handler, options).end(data);
  return handler.root;
}

// ../../node_modules/.bun/html-to-text@9.0.5/node_modules/html-to-text/lib/html-to-text.mjs
var import_deepmerge = __toESM(require_cjs(), 1);
function limitedDepthRecursive(n2, f, g2 = () => {
  return;
}) {
  if (n2 === undefined) {
    const f1 = function(...args) {
      return f(f1, ...args);
    };
    return f1;
  }
  if (n2 >= 0) {
    return function(...args) {
      return f(limitedDepthRecursive(n2 - 1, f, g2), ...args);
    };
  }
  return g2;
}
function trimCharacter(str, char) {
  let start = 0;
  let end = str.length;
  while (start < end && str[start] === char) {
    ++start;
  }
  while (end > start && str[end - 1] === char) {
    --end;
  }
  return start > 0 || end < str.length ? str.substring(start, end) : str;
}
function trimCharacterEnd(str, char) {
  let end = str.length;
  while (end > 0 && str[end - 1] === char) {
    --end;
  }
  return end < str.length ? str.substring(0, end) : str;
}
function unicodeEscape(str) {
  return str.replace(/[\s\S]/g, (c2) => "\\u" + c2.charCodeAt().toString(16).padStart(4, "0"));
}
function mergeDuplicatesPreferLast(items, getKey) {
  const map2 = new Map;
  for (let i = items.length;i-- > 0; ) {
    const item = items[i];
    const key = getKey(item);
    map2.set(key, map2.has(key) ? import_deepmerge.default(item, map2.get(key), { arrayMerge: overwriteMerge$1 }) : item);
  }
  return [...map2.values()].reverse();
}
var overwriteMerge$1 = (acc, src, options) => [...src];
function get(obj, path) {
  for (const key of path) {
    if (!obj) {
      return;
    }
    obj = obj[key];
  }
  return obj;
}
function numberToLetterSequence(num, baseChar = "a", base = 26) {
  const digits = [];
  do {
    num -= 1;
    digits.push(num % base);
    num = num / base >> 0;
  } while (num > 0);
  const baseCode = baseChar.charCodeAt(0);
  return digits.reverse().map((n2) => String.fromCharCode(baseCode + n2)).join("");
}
var I2 = ["I", "X", "C", "M"];
var V3 = ["V", "L", "D"];
function numberToRoman(num) {
  return [...num + ""].map((n2) => +n2).reverse().map((v3, i) => v3 % 5 < 4 ? (v3 < 5 ? "" : V3[i]) + I2[i].repeat(v3 % 5) : I2[i] + (v3 < 5 ? V3[i] : I2[i + 1])).reverse().join("");
}

class InlineTextBuilder {
  constructor(options, maxLineLength = undefined) {
    this.lines = [];
    this.nextLineWords = [];
    this.maxLineLength = maxLineLength || options.wordwrap || Number.MAX_VALUE;
    this.nextLineAvailableChars = this.maxLineLength;
    this.wrapCharacters = get(options, ["longWordSplit", "wrapCharacters"]) || [];
    this.forceWrapOnLimit = get(options, ["longWordSplit", "forceWrapOnLimit"]) || false;
    this.stashedSpace = false;
    this.wordBreakOpportunity = false;
  }
  pushWord(word, noWrap = false) {
    if (this.nextLineAvailableChars <= 0 && !noWrap) {
      this.startNewLine();
    }
    const isLineStart = this.nextLineWords.length === 0;
    const cost = word.length + (isLineStart ? 0 : 1);
    if (cost <= this.nextLineAvailableChars || noWrap) {
      this.nextLineWords.push(word);
      this.nextLineAvailableChars -= cost;
    } else {
      const [first, ...rest] = this.splitLongWord(word);
      if (!isLineStart) {
        this.startNewLine();
      }
      this.nextLineWords.push(first);
      this.nextLineAvailableChars -= first.length;
      for (const part of rest) {
        this.startNewLine();
        this.nextLineWords.push(part);
        this.nextLineAvailableChars -= part.length;
      }
    }
  }
  popWord() {
    const lastWord = this.nextLineWords.pop();
    if (lastWord !== undefined) {
      const isLineStart = this.nextLineWords.length === 0;
      const cost = lastWord.length + (isLineStart ? 0 : 1);
      this.nextLineAvailableChars += cost;
    }
    return lastWord;
  }
  concatWord(word, noWrap = false) {
    if (this.wordBreakOpportunity && word.length > this.nextLineAvailableChars) {
      this.pushWord(word, noWrap);
      this.wordBreakOpportunity = false;
    } else {
      const lastWord = this.popWord();
      this.pushWord(lastWord ? lastWord.concat(word) : word, noWrap);
    }
  }
  startNewLine(n2 = 1) {
    this.lines.push(this.nextLineWords);
    if (n2 > 1) {
      this.lines.push(...Array.from({ length: n2 - 1 }, () => []));
    }
    this.nextLineWords = [];
    this.nextLineAvailableChars = this.maxLineLength;
  }
  isEmpty() {
    return this.lines.length === 0 && this.nextLineWords.length === 0;
  }
  clear() {
    this.lines.length = 0;
    this.nextLineWords.length = 0;
    this.nextLineAvailableChars = this.maxLineLength;
  }
  toString() {
    return [...this.lines, this.nextLineWords].map((words) => words.join(" ")).join(`
`);
  }
  splitLongWord(word) {
    const parts = [];
    let idx = 0;
    while (word.length > this.maxLineLength) {
      const firstLine = word.substring(0, this.maxLineLength);
      const remainingChars = word.substring(this.maxLineLength);
      const splitIndex = firstLine.lastIndexOf(this.wrapCharacters[idx]);
      if (splitIndex > -1) {
        word = firstLine.substring(splitIndex + 1) + remainingChars;
        parts.push(firstLine.substring(0, splitIndex + 1));
      } else {
        idx++;
        if (idx < this.wrapCharacters.length) {
          word = firstLine + remainingChars;
        } else {
          if (this.forceWrapOnLimit) {
            parts.push(firstLine);
            word = remainingChars;
            if (word.length > this.maxLineLength) {
              continue;
            }
          } else {
            word = firstLine + remainingChars;
          }
          break;
        }
      }
    }
    parts.push(word);
    return parts;
  }
}

class StackItem {
  constructor(next = null) {
    this.next = next;
  }
  getRoot() {
    return this.next ? this.next : this;
  }
}

class BlockStackItem extends StackItem {
  constructor(options, next = null, leadingLineBreaks = 1, maxLineLength = undefined) {
    super(next);
    this.leadingLineBreaks = leadingLineBreaks;
    this.inlineTextBuilder = new InlineTextBuilder(options, maxLineLength);
    this.rawText = "";
    this.stashedLineBreaks = 0;
    this.isPre = next && next.isPre;
    this.isNoWrap = next && next.isNoWrap;
  }
}

class ListStackItem extends BlockStackItem {
  constructor(options, next = null, {
    interRowLineBreaks = 1,
    leadingLineBreaks = 2,
    maxLineLength = undefined,
    maxPrefixLength = 0,
    prefixAlign = "left"
  } = {}) {
    super(options, next, leadingLineBreaks, maxLineLength);
    this.maxPrefixLength = maxPrefixLength;
    this.prefixAlign = prefixAlign;
    this.interRowLineBreaks = interRowLineBreaks;
  }
}

class ListItemStackItem extends BlockStackItem {
  constructor(options, next = null, {
    leadingLineBreaks = 1,
    maxLineLength = undefined,
    prefix = ""
  } = {}) {
    super(options, next, leadingLineBreaks, maxLineLength);
    this.prefix = prefix;
  }
}

class TableStackItem extends StackItem {
  constructor(next = null) {
    super(next);
    this.rows = [];
    this.isPre = next && next.isPre;
    this.isNoWrap = next && next.isNoWrap;
  }
}

class TableRowStackItem extends StackItem {
  constructor(next = null) {
    super(next);
    this.cells = [];
    this.isPre = next && next.isPre;
    this.isNoWrap = next && next.isNoWrap;
  }
}

class TableCellStackItem extends StackItem {
  constructor(options, next = null, maxColumnWidth = undefined) {
    super(next);
    this.inlineTextBuilder = new InlineTextBuilder(options, maxColumnWidth);
    this.rawText = "";
    this.stashedLineBreaks = 0;
    this.isPre = next && next.isPre;
    this.isNoWrap = next && next.isNoWrap;
  }
}

class TransformerStackItem extends StackItem {
  constructor(next = null, transform) {
    super(next);
    this.transform = transform;
  }
}
function charactersToCodes(str) {
  return [...str].map((c2) => "\\u" + c2.charCodeAt(0).toString(16).padStart(4, "0")).join("");
}

class WhitespaceProcessor {
  constructor(options) {
    this.whitespaceChars = options.preserveNewlines ? options.whitespaceCharacters.replace(/\n/g, "") : options.whitespaceCharacters;
    const whitespaceCodes = charactersToCodes(this.whitespaceChars);
    this.leadingWhitespaceRe = new RegExp(`^[${whitespaceCodes}]`);
    this.trailingWhitespaceRe = new RegExp(`[${whitespaceCodes}]$`);
    this.allWhitespaceOrEmptyRe = new RegExp(`^[${whitespaceCodes}]*$`);
    this.newlineOrNonWhitespaceRe = new RegExp(`(\\n|[^\\n${whitespaceCodes}])`, "g");
    this.newlineOrNonNewlineStringRe = new RegExp(`(\\n|[^\\n]+)`, "g");
    if (options.preserveNewlines) {
      const wordOrNewlineRe = new RegExp(`\\n|[^\\n${whitespaceCodes}]+`, "gm");
      this.shrinkWrapAdd = function(text2, inlineTextBuilder, transform = (str) => str, noWrap = false) {
        if (!text2) {
          return;
        }
        const previouslyStashedSpace = inlineTextBuilder.stashedSpace;
        let anyMatch = false;
        let m = wordOrNewlineRe.exec(text2);
        if (m) {
          anyMatch = true;
          if (m[0] === `
`) {
            inlineTextBuilder.startNewLine();
          } else if (previouslyStashedSpace || this.testLeadingWhitespace(text2)) {
            inlineTextBuilder.pushWord(transform(m[0]), noWrap);
          } else {
            inlineTextBuilder.concatWord(transform(m[0]), noWrap);
          }
          while ((m = wordOrNewlineRe.exec(text2)) !== null) {
            if (m[0] === `
`) {
              inlineTextBuilder.startNewLine();
            } else {
              inlineTextBuilder.pushWord(transform(m[0]), noWrap);
            }
          }
        }
        inlineTextBuilder.stashedSpace = previouslyStashedSpace && !anyMatch || this.testTrailingWhitespace(text2);
      };
    } else {
      const wordRe = new RegExp(`[^${whitespaceCodes}]+`, "g");
      this.shrinkWrapAdd = function(text2, inlineTextBuilder, transform = (str) => str, noWrap = false) {
        if (!text2) {
          return;
        }
        const previouslyStashedSpace = inlineTextBuilder.stashedSpace;
        let anyMatch = false;
        let m = wordRe.exec(text2);
        if (m) {
          anyMatch = true;
          if (previouslyStashedSpace || this.testLeadingWhitespace(text2)) {
            inlineTextBuilder.pushWord(transform(m[0]), noWrap);
          } else {
            inlineTextBuilder.concatWord(transform(m[0]), noWrap);
          }
          while ((m = wordRe.exec(text2)) !== null) {
            inlineTextBuilder.pushWord(transform(m[0]), noWrap);
          }
        }
        inlineTextBuilder.stashedSpace = previouslyStashedSpace && !anyMatch || this.testTrailingWhitespace(text2);
      };
    }
  }
  addLiteral(text2, inlineTextBuilder, noWrap = true) {
    if (!text2) {
      return;
    }
    const previouslyStashedSpace = inlineTextBuilder.stashedSpace;
    let anyMatch = false;
    let m = this.newlineOrNonNewlineStringRe.exec(text2);
    if (m) {
      anyMatch = true;
      if (m[0] === `
`) {
        inlineTextBuilder.startNewLine();
      } else if (previouslyStashedSpace) {
        inlineTextBuilder.pushWord(m[0], noWrap);
      } else {
        inlineTextBuilder.concatWord(m[0], noWrap);
      }
      while ((m = this.newlineOrNonNewlineStringRe.exec(text2)) !== null) {
        if (m[0] === `
`) {
          inlineTextBuilder.startNewLine();
        } else {
          inlineTextBuilder.pushWord(m[0], noWrap);
        }
      }
    }
    inlineTextBuilder.stashedSpace = previouslyStashedSpace && !anyMatch;
  }
  testLeadingWhitespace(text2) {
    return this.leadingWhitespaceRe.test(text2);
  }
  testTrailingWhitespace(text2) {
    return this.trailingWhitespaceRe.test(text2);
  }
  testContainsWords(text2) {
    return !this.allWhitespaceOrEmptyRe.test(text2);
  }
  countNewlinesNoWords(text2) {
    this.newlineOrNonWhitespaceRe.lastIndex = 0;
    let counter = 0;
    let match;
    while ((match = this.newlineOrNonWhitespaceRe.exec(text2)) !== null) {
      if (match[0] === `
`) {
        counter++;
      } else {
        return 0;
      }
    }
    return counter;
  }
}

class BlockTextBuilder {
  constructor(options, picker, metadata = undefined) {
    this.options = options;
    this.picker = picker;
    this.metadata = metadata;
    this.whitespaceProcessor = new WhitespaceProcessor(options);
    this._stackItem = new BlockStackItem(options);
    this._wordTransformer = undefined;
  }
  pushWordTransform(wordTransform) {
    this._wordTransformer = new TransformerStackItem(this._wordTransformer, wordTransform);
  }
  popWordTransform() {
    if (!this._wordTransformer) {
      return;
    }
    const transform = this._wordTransformer.transform;
    this._wordTransformer = this._wordTransformer.next;
    return transform;
  }
  startNoWrap() {
    this._stackItem.isNoWrap = true;
  }
  stopNoWrap() {
    this._stackItem.isNoWrap = false;
  }
  _getCombinedWordTransformer() {
    const wt3 = this._wordTransformer ? (str) => applyTransformer(str, this._wordTransformer) : undefined;
    const ce3 = this.options.encodeCharacters;
    return wt3 ? ce3 ? (str) => ce3(wt3(str)) : wt3 : ce3;
  }
  _popStackItem() {
    const item = this._stackItem;
    this._stackItem = item.next;
    return item;
  }
  addLineBreak() {
    if (!(this._stackItem instanceof BlockStackItem || this._stackItem instanceof ListItemStackItem || this._stackItem instanceof TableCellStackItem)) {
      return;
    }
    if (this._stackItem.isPre) {
      this._stackItem.rawText += `
`;
    } else {
      this._stackItem.inlineTextBuilder.startNewLine();
    }
  }
  addWordBreakOpportunity() {
    if (this._stackItem instanceof BlockStackItem || this._stackItem instanceof ListItemStackItem || this._stackItem instanceof TableCellStackItem) {
      this._stackItem.inlineTextBuilder.wordBreakOpportunity = true;
    }
  }
  addInline(str, { noWordTransform = false } = {}) {
    if (!(this._stackItem instanceof BlockStackItem || this._stackItem instanceof ListItemStackItem || this._stackItem instanceof TableCellStackItem)) {
      return;
    }
    if (this._stackItem.isPre) {
      this._stackItem.rawText += str;
      return;
    }
    if (str.length === 0 || this._stackItem.stashedLineBreaks && !this.whitespaceProcessor.testContainsWords(str)) {
      return;
    }
    if (this.options.preserveNewlines) {
      const newlinesNumber = this.whitespaceProcessor.countNewlinesNoWords(str);
      if (newlinesNumber > 0) {
        this._stackItem.inlineTextBuilder.startNewLine(newlinesNumber);
        return;
      }
    }
    if (this._stackItem.stashedLineBreaks) {
      this._stackItem.inlineTextBuilder.startNewLine(this._stackItem.stashedLineBreaks);
    }
    this.whitespaceProcessor.shrinkWrapAdd(str, this._stackItem.inlineTextBuilder, noWordTransform ? undefined : this._getCombinedWordTransformer(), this._stackItem.isNoWrap);
    this._stackItem.stashedLineBreaks = 0;
  }
  addLiteral(str) {
    if (!(this._stackItem instanceof BlockStackItem || this._stackItem instanceof ListItemStackItem || this._stackItem instanceof TableCellStackItem)) {
      return;
    }
    if (str.length === 0) {
      return;
    }
    if (this._stackItem.isPre) {
      this._stackItem.rawText += str;
      return;
    }
    if (this._stackItem.stashedLineBreaks) {
      this._stackItem.inlineTextBuilder.startNewLine(this._stackItem.stashedLineBreaks);
    }
    this.whitespaceProcessor.addLiteral(str, this._stackItem.inlineTextBuilder, this._stackItem.isNoWrap);
    this._stackItem.stashedLineBreaks = 0;
  }
  openBlock({ leadingLineBreaks = 1, reservedLineLength = 0, isPre = false } = {}) {
    const maxLineLength = Math.max(20, this._stackItem.inlineTextBuilder.maxLineLength - reservedLineLength);
    this._stackItem = new BlockStackItem(this.options, this._stackItem, leadingLineBreaks, maxLineLength);
    if (isPre) {
      this._stackItem.isPre = true;
    }
  }
  closeBlock({ trailingLineBreaks = 1, blockTransform = undefined } = {}) {
    const block = this._popStackItem();
    const blockText = blockTransform ? blockTransform(getText(block)) : getText(block);
    addText(this._stackItem, blockText, block.leadingLineBreaks, Math.max(block.stashedLineBreaks, trailingLineBreaks));
  }
  openList({ maxPrefixLength = 0, prefixAlign = "left", interRowLineBreaks = 1, leadingLineBreaks = 2 } = {}) {
    this._stackItem = new ListStackItem(this.options, this._stackItem, {
      interRowLineBreaks,
      leadingLineBreaks,
      maxLineLength: this._stackItem.inlineTextBuilder.maxLineLength,
      maxPrefixLength,
      prefixAlign
    });
  }
  openListItem({ prefix = "" } = {}) {
    if (!(this._stackItem instanceof ListStackItem)) {
      throw new Error("Can't add a list item to something that is not a list! Check the formatter.");
    }
    const list = this._stackItem;
    const prefixLength = Math.max(prefix.length, list.maxPrefixLength);
    const maxLineLength = Math.max(20, list.inlineTextBuilder.maxLineLength - prefixLength);
    this._stackItem = new ListItemStackItem(this.options, list, {
      prefix,
      maxLineLength,
      leadingLineBreaks: list.interRowLineBreaks
    });
  }
  closeListItem() {
    const listItem = this._popStackItem();
    const list = listItem.next;
    const prefixLength = Math.max(listItem.prefix.length, list.maxPrefixLength);
    const spacing = `
` + " ".repeat(prefixLength);
    const prefix = list.prefixAlign === "right" ? listItem.prefix.padStart(prefixLength) : listItem.prefix.padEnd(prefixLength);
    const text2 = prefix + getText(listItem).replace(/\n/g, spacing);
    addText(list, text2, listItem.leadingLineBreaks, Math.max(listItem.stashedLineBreaks, list.interRowLineBreaks));
  }
  closeList({ trailingLineBreaks = 2 } = {}) {
    const list = this._popStackItem();
    const text2 = getText(list);
    if (text2) {
      addText(this._stackItem, text2, list.leadingLineBreaks, trailingLineBreaks);
    }
  }
  openTable() {
    this._stackItem = new TableStackItem(this._stackItem);
  }
  openTableRow() {
    if (!(this._stackItem instanceof TableStackItem)) {
      throw new Error("Can't add a table row to something that is not a table! Check the formatter.");
    }
    this._stackItem = new TableRowStackItem(this._stackItem);
  }
  openTableCell({ maxColumnWidth = undefined } = {}) {
    if (!(this._stackItem instanceof TableRowStackItem)) {
      throw new Error("Can't add a table cell to something that is not a table row! Check the formatter.");
    }
    this._stackItem = new TableCellStackItem(this.options, this._stackItem, maxColumnWidth);
  }
  closeTableCell({ colspan = 1, rowspan = 1 } = {}) {
    const cell = this._popStackItem();
    const text2 = trimCharacter(getText(cell), `
`);
    cell.next.cells.push({ colspan, rowspan, text: text2 });
  }
  closeTableRow() {
    const row = this._popStackItem();
    row.next.rows.push(row.cells);
  }
  closeTable({ tableToString, leadingLineBreaks = 2, trailingLineBreaks = 2 }) {
    const table = this._popStackItem();
    const output = tableToString(table.rows);
    if (output) {
      addText(this._stackItem, output, leadingLineBreaks, trailingLineBreaks);
    }
  }
  toString() {
    return getText(this._stackItem.getRoot());
  }
}
function getText(stackItem) {
  if (!(stackItem instanceof BlockStackItem || stackItem instanceof ListItemStackItem || stackItem instanceof TableCellStackItem)) {
    throw new Error("Only blocks, list items and table cells can be requested for text contents.");
  }
  return stackItem.inlineTextBuilder.isEmpty() ? stackItem.rawText : stackItem.rawText + stackItem.inlineTextBuilder.toString();
}
function addText(stackItem, text2, leadingLineBreaks, trailingLineBreaks) {
  if (!(stackItem instanceof BlockStackItem || stackItem instanceof ListItemStackItem || stackItem instanceof TableCellStackItem)) {
    throw new Error("Only blocks, list items and table cells can contain text.");
  }
  const parentText = getText(stackItem);
  const lineBreaks = Math.max(stackItem.stashedLineBreaks, leadingLineBreaks);
  stackItem.inlineTextBuilder.clear();
  if (parentText) {
    stackItem.rawText = parentText + `
`.repeat(lineBreaks) + text2;
  } else {
    stackItem.rawText = text2;
    stackItem.leadingLineBreaks = lineBreaks;
  }
  stackItem.stashedLineBreaks = trailingLineBreaks;
}
function applyTransformer(str, transformer) {
  return transformer ? applyTransformer(transformer.transform(str), transformer.next) : str;
}
function compile$1(options = {}) {
  const selectorsWithoutFormat = options.selectors.filter((s2) => !s2.format);
  if (selectorsWithoutFormat.length) {
    throw new Error("Following selectors have no specified format: " + selectorsWithoutFormat.map((s2) => `\`${s2.selector}\``).join(", "));
  }
  const picker = new DecisionTree(options.selectors.map((s2) => [s2.selector, s2])).build(hp2Builder);
  if (typeof options.encodeCharacters !== "function") {
    options.encodeCharacters = makeReplacerFromDict(options.encodeCharacters);
  }
  const baseSelectorsPicker = new DecisionTree(options.baseElements.selectors.map((s2, i) => [s2, i + 1])).build(hp2Builder);
  function findBaseElements(dom) {
    return findBases(dom, options, baseSelectorsPicker);
  }
  const limitedWalk = limitedDepthRecursive(options.limits.maxDepth, recursiveWalk, function(dom, builder) {
    builder.addInline(options.limits.ellipsis || "");
  });
  return function(html, metadata = undefined) {
    return process2(html, metadata, options, picker, findBaseElements, limitedWalk);
  };
}
function process2(html, metadata, options, picker, findBaseElements, walk) {
  const maxInputLength = options.limits.maxInputLength;
  if (maxInputLength && html && html.length > maxInputLength) {
    console.warn(`Input length ${html.length} is above allowed limit of ${maxInputLength}. Truncating without ellipsis.`);
    html = html.substring(0, maxInputLength);
  }
  const document = parseDocument(html, { decodeEntities: options.decodeEntities });
  const bases = findBaseElements(document.children);
  const builder = new BlockTextBuilder(options, picker, metadata);
  walk(bases, builder);
  return builder.toString();
}
function findBases(dom, options, baseSelectorsPicker) {
  const results = [];
  function recursiveWalk(walk, dom2) {
    dom2 = dom2.slice(0, options.limits.maxChildNodes);
    for (const elem of dom2) {
      if (elem.type !== "tag") {
        continue;
      }
      const pickedSelectorIndex = baseSelectorsPicker.pick1(elem);
      if (pickedSelectorIndex > 0) {
        results.push({ selectorIndex: pickedSelectorIndex, element: elem });
      } else if (elem.children) {
        walk(elem.children);
      }
      if (results.length >= options.limits.maxBaseElements) {
        return;
      }
    }
  }
  const limitedWalk = limitedDepthRecursive(options.limits.maxDepth, recursiveWalk);
  limitedWalk(dom);
  if (options.baseElements.orderBy !== "occurrence") {
    results.sort((a, b3) => a.selectorIndex - b3.selectorIndex);
  }
  return options.baseElements.returnDomByDefault && results.length === 0 ? dom : results.map((x) => x.element);
}
function recursiveWalk(walk, dom, builder) {
  if (!dom) {
    return;
  }
  const options = builder.options;
  const tooManyChildNodes = dom.length > options.limits.maxChildNodes;
  if (tooManyChildNodes) {
    dom = dom.slice(0, options.limits.maxChildNodes);
    dom.push({
      data: options.limits.ellipsis,
      type: "text"
    });
  }
  for (const elem of dom) {
    switch (elem.type) {
      case "text": {
        builder.addInline(elem.data);
        break;
      }
      case "tag": {
        const tagDefinition = builder.picker.pick1(elem);
        const format = options.formatters[tagDefinition.format];
        format(elem, walk, builder, tagDefinition.options || {});
        break;
      }
    }
  }
  return;
}
function makeReplacerFromDict(dict) {
  if (!dict || Object.keys(dict).length === 0) {
    return;
  }
  const entries = Object.entries(dict).filter(([, v3]) => v3 !== false);
  const regex = new RegExp(entries.map(([c2]) => `(${unicodeEscape([...c2][0])})`).join("|"), "g");
  const values = entries.map(([, v3]) => v3);
  const replacer = (m, ...cgs) => values[cgs.findIndex((cg) => cg)];
  return (str) => str.replace(regex, replacer);
}
function formatSkip(elem, walk, builder, formatOptions) {}
function formatInlineString(elem, walk, builder, formatOptions) {
  builder.addLiteral(formatOptions.string || "");
}
function formatBlockString(elem, walk, builder, formatOptions) {
  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });
  builder.addLiteral(formatOptions.string || "");
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });
}
function formatInline(elem, walk, builder, formatOptions) {
  walk(elem.children, builder);
}
function formatBlock$1(elem, walk, builder, formatOptions) {
  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });
  walk(elem.children, builder);
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });
}
function renderOpenTag(elem) {
  const attrs = elem.attribs && elem.attribs.length ? " " + Object.entries(elem.attribs).map(([k3, v3]) => v3 === "" ? k3 : `${k3}=${v3.replace(/"/g, "&quot;")}`).join(" ") : "";
  return `<${elem.name}${attrs}>`;
}
function renderCloseTag(elem) {
  return `</${elem.name}>`;
}
function formatInlineTag(elem, walk, builder, formatOptions) {
  builder.startNoWrap();
  builder.addLiteral(renderOpenTag(elem));
  builder.stopNoWrap();
  walk(elem.children, builder);
  builder.startNoWrap();
  builder.addLiteral(renderCloseTag(elem));
  builder.stopNoWrap();
}
function formatBlockTag(elem, walk, builder, formatOptions) {
  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });
  builder.startNoWrap();
  builder.addLiteral(renderOpenTag(elem));
  builder.stopNoWrap();
  walk(elem.children, builder);
  builder.startNoWrap();
  builder.addLiteral(renderCloseTag(elem));
  builder.stopNoWrap();
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });
}
function formatInlineHtml(elem, walk, builder, formatOptions) {
  builder.startNoWrap();
  builder.addLiteral(render(elem, { decodeEntities: builder.options.decodeEntities }));
  builder.stopNoWrap();
}
function formatBlockHtml(elem, walk, builder, formatOptions) {
  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });
  builder.startNoWrap();
  builder.addLiteral(render(elem, { decodeEntities: builder.options.decodeEntities }));
  builder.stopNoWrap();
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });
}
function formatInlineSurround(elem, walk, builder, formatOptions) {
  builder.addLiteral(formatOptions.prefix || "");
  walk(elem.children, builder);
  builder.addLiteral(formatOptions.suffix || "");
}
var genericFormatters = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  block: formatBlock$1,
  blockHtml: formatBlockHtml,
  blockString: formatBlockString,
  blockTag: formatBlockTag,
  inline: formatInline,
  inlineHtml: formatInlineHtml,
  inlineString: formatInlineString,
  inlineSurround: formatInlineSurround,
  inlineTag: formatInlineTag,
  skip: formatSkip
});
function getRow(matrix, j3) {
  if (!matrix[j3]) {
    matrix[j3] = [];
  }
  return matrix[j3];
}
function findFirstVacantIndex(row, x = 0) {
  while (row[x]) {
    x++;
  }
  return x;
}
function transposeInPlace(matrix, maxSize) {
  for (let i = 0;i < maxSize; i++) {
    const rowI = getRow(matrix, i);
    for (let j3 = 0;j3 < i; j3++) {
      const rowJ = getRow(matrix, j3);
      if (rowI[j3] || rowJ[i]) {
        const temp = rowI[j3];
        rowI[j3] = rowJ[i];
        rowJ[i] = temp;
      }
    }
  }
}
function putCellIntoLayout(cell, layout, baseRow, baseCol) {
  for (let r2 = 0;r2 < cell.rowspan; r2++) {
    const layoutRow = getRow(layout, baseRow + r2);
    for (let c2 = 0;c2 < cell.colspan; c2++) {
      layoutRow[baseCol + c2] = cell;
    }
  }
}
function getOrInitOffset(offsets, index) {
  if (offsets[index] === undefined) {
    offsets[index] = index === 0 ? 0 : 1 + getOrInitOffset(offsets, index - 1);
  }
  return offsets[index];
}
function updateOffset(offsets, base, span, value) {
  offsets[base + span] = Math.max(getOrInitOffset(offsets, base + span), getOrInitOffset(offsets, base) + value);
}
function tableToString(tableRows, rowSpacing, colSpacing) {
  const layout = [];
  let colNumber = 0;
  const rowNumber = tableRows.length;
  const rowOffsets = [0];
  for (let j3 = 0;j3 < rowNumber; j3++) {
    const layoutRow = getRow(layout, j3);
    const cells = tableRows[j3];
    let x = 0;
    for (let i = 0;i < cells.length; i++) {
      const cell = cells[i];
      x = findFirstVacantIndex(layoutRow, x);
      putCellIntoLayout(cell, layout, j3, x);
      x += cell.colspan;
      cell.lines = cell.text.split(`
`);
      const cellHeight = cell.lines.length;
      updateOffset(rowOffsets, j3, cell.rowspan, cellHeight + rowSpacing);
    }
    colNumber = layoutRow.length > colNumber ? layoutRow.length : colNumber;
  }
  transposeInPlace(layout, rowNumber > colNumber ? rowNumber : colNumber);
  const outputLines = [];
  const colOffsets = [0];
  for (let x = 0;x < colNumber; x++) {
    let y2 = 0;
    let cell;
    const rowsInThisColumn = Math.min(rowNumber, layout[x].length);
    while (y2 < rowsInThisColumn) {
      cell = layout[x][y2];
      if (cell) {
        if (!cell.rendered) {
          let cellWidth = 0;
          for (let j3 = 0;j3 < cell.lines.length; j3++) {
            const line = cell.lines[j3];
            const lineOffset = rowOffsets[y2] + j3;
            outputLines[lineOffset] = (outputLines[lineOffset] || "").padEnd(colOffsets[x]) + line;
            cellWidth = line.length > cellWidth ? line.length : cellWidth;
          }
          updateOffset(colOffsets, x, cell.colspan, cellWidth + colSpacing);
          cell.rendered = true;
        }
        y2 += cell.rowspan;
      } else {
        const lineOffset = rowOffsets[y2];
        outputLines[lineOffset] = outputLines[lineOffset] || "";
        y2++;
      }
    }
  }
  return outputLines.join(`
`);
}
function formatLineBreak(elem, walk, builder, formatOptions) {
  builder.addLineBreak();
}
function formatWbr(elem, walk, builder, formatOptions) {
  builder.addWordBreakOpportunity();
}
function formatHorizontalLine(elem, walk, builder, formatOptions) {
  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });
  builder.addInline("-".repeat(formatOptions.length || builder.options.wordwrap || 40));
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });
}
function formatParagraph(elem, walk, builder, formatOptions) {
  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });
  walk(elem.children, builder);
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });
}
function formatPre(elem, walk, builder, formatOptions) {
  builder.openBlock({
    isPre: true,
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2
  });
  walk(elem.children, builder);
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });
}
function formatHeading(elem, walk, builder, formatOptions) {
  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });
  if (formatOptions.uppercase !== false) {
    builder.pushWordTransform((str) => str.toUpperCase());
    walk(elem.children, builder);
    builder.popWordTransform();
  } else {
    walk(elem.children, builder);
  }
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });
}
function formatBlockquote(elem, walk, builder, formatOptions) {
  builder.openBlock({
    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,
    reservedLineLength: 2
  });
  walk(elem.children, builder);
  builder.closeBlock({
    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,
    blockTransform: (str) => (formatOptions.trimEmptyLines !== false ? trimCharacter(str, `
`) : str).split(`
`).map((line) => "> " + line).join(`
`)
  });
}
function withBrackets(str, brackets) {
  if (!brackets) {
    return str;
  }
  const lbr = typeof brackets[0] === "string" ? brackets[0] : "[";
  const rbr = typeof brackets[1] === "string" ? brackets[1] : "]";
  return lbr + str + rbr;
}
function pathRewrite(path, rewriter, baseUrl, metadata, elem) {
  const modifiedPath = typeof rewriter === "function" ? rewriter(path, metadata, elem) : path;
  return modifiedPath[0] === "/" && baseUrl ? trimCharacterEnd(baseUrl, "/") + modifiedPath : modifiedPath;
}
function formatImage(elem, walk, builder, formatOptions) {
  const attribs = elem.attribs || {};
  const alt = attribs.alt ? attribs.alt : "";
  const src = !attribs.src ? "" : pathRewrite(attribs.src, formatOptions.pathRewrite, formatOptions.baseUrl, builder.metadata, elem);
  const text2 = !src ? alt : !alt ? withBrackets(src, formatOptions.linkBrackets) : alt + " " + withBrackets(src, formatOptions.linkBrackets);
  builder.addInline(text2, { noWordTransform: true });
}
function formatAnchor(elem, walk, builder, formatOptions) {
  function getHref() {
    if (formatOptions.ignoreHref) {
      return "";
    }
    if (!elem.attribs || !elem.attribs.href) {
      return "";
    }
    let href2 = elem.attribs.href.replace(/^mailto:/, "");
    if (formatOptions.noAnchorUrl && href2[0] === "#") {
      return "";
    }
    href2 = pathRewrite(href2, formatOptions.pathRewrite, formatOptions.baseUrl, builder.metadata, elem);
    return href2;
  }
  const href = getHref();
  if (!href) {
    walk(elem.children, builder);
  } else {
    let text2 = "";
    builder.pushWordTransform((str) => {
      if (str) {
        text2 += str;
      }
      return str;
    });
    walk(elem.children, builder);
    builder.popWordTransform();
    const hideSameLink = formatOptions.hideLinkHrefIfSameAsText && href === text2;
    if (!hideSameLink) {
      builder.addInline(!text2 ? href : " " + withBrackets(href, formatOptions.linkBrackets), { noWordTransform: true });
    }
  }
}
function formatList(elem, walk, builder, formatOptions, nextPrefixCallback) {
  const isNestedList = get(elem, ["parent", "name"]) === "li";
  let maxPrefixLength = 0;
  const listItems = (elem.children || []).filter((child) => child.type !== "text" || !/^\s*$/.test(child.data)).map(function(child) {
    if (child.name !== "li") {
      return { node: child, prefix: "" };
    }
    const prefix = isNestedList ? nextPrefixCallback().trimStart() : nextPrefixCallback();
    if (prefix.length > maxPrefixLength) {
      maxPrefixLength = prefix.length;
    }
    return { node: child, prefix };
  });
  if (!listItems.length) {
    return;
  }
  builder.openList({
    interRowLineBreaks: 1,
    leadingLineBreaks: isNestedList ? 1 : formatOptions.leadingLineBreaks || 2,
    maxPrefixLength,
    prefixAlign: "left"
  });
  for (const { node: node2, prefix } of listItems) {
    builder.openListItem({ prefix });
    walk([node2], builder);
    builder.closeListItem();
  }
  builder.closeList({ trailingLineBreaks: isNestedList ? 1 : formatOptions.trailingLineBreaks || 2 });
}
function formatUnorderedList(elem, walk, builder, formatOptions) {
  const prefix = formatOptions.itemPrefix || " * ";
  return formatList(elem, walk, builder, formatOptions, () => prefix);
}
function formatOrderedList(elem, walk, builder, formatOptions) {
  let nextIndex = Number(elem.attribs.start || "1");
  const indexFunction = getOrderedListIndexFunction(elem.attribs.type);
  const nextPrefixCallback = () => " " + indexFunction(nextIndex++) + ". ";
  return formatList(elem, walk, builder, formatOptions, nextPrefixCallback);
}
function getOrderedListIndexFunction(olType = "1") {
  switch (olType) {
    case "a":
      return (i) => numberToLetterSequence(i, "a");
    case "A":
      return (i) => numberToLetterSequence(i, "A");
    case "i":
      return (i) => numberToRoman(i).toLowerCase();
    case "I":
      return (i) => numberToRoman(i);
    case "1":
    default:
      return (i) => i.toString();
  }
}
function splitClassesAndIds(selectors) {
  const classes = [];
  const ids = [];
  for (const selector of selectors) {
    if (selector.startsWith(".")) {
      classes.push(selector.substring(1));
    } else if (selector.startsWith("#")) {
      ids.push(selector.substring(1));
    }
  }
  return { classes, ids };
}
function isDataTable(attr, tables) {
  if (tables === true) {
    return true;
  }
  if (!attr) {
    return false;
  }
  const { classes, ids } = splitClassesAndIds(tables);
  const attrClasses = (attr["class"] || "").split(" ");
  const attrIds = (attr["id"] || "").split(" ");
  return attrClasses.some((x) => classes.includes(x)) || attrIds.some((x) => ids.includes(x));
}
function formatTable(elem, walk, builder, formatOptions) {
  return isDataTable(elem.attribs, builder.options.tables) ? formatDataTable(elem, walk, builder, formatOptions) : formatBlock(elem, walk, builder, formatOptions);
}
function formatBlock(elem, walk, builder, formatOptions) {
  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks });
  walk(elem.children, builder);
  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks });
}
function formatDataTable(elem, walk, builder, formatOptions) {
  builder.openTable();
  elem.children.forEach(walkTable);
  builder.closeTable({
    tableToString: (rows) => tableToString(rows, formatOptions.rowSpacing ?? 0, formatOptions.colSpacing ?? 3),
    leadingLineBreaks: formatOptions.leadingLineBreaks,
    trailingLineBreaks: formatOptions.trailingLineBreaks
  });
  function formatCell(cellNode) {
    const colspan = +get(cellNode, ["attribs", "colspan"]) || 1;
    const rowspan = +get(cellNode, ["attribs", "rowspan"]) || 1;
    builder.openTableCell({ maxColumnWidth: formatOptions.maxColumnWidth });
    walk(cellNode.children, builder);
    builder.closeTableCell({ colspan, rowspan });
  }
  function walkTable(elem2) {
    if (elem2.type !== "tag") {
      return;
    }
    const formatHeaderCell = formatOptions.uppercaseHeaderCells !== false ? (cellNode) => {
      builder.pushWordTransform((str) => str.toUpperCase());
      formatCell(cellNode);
      builder.popWordTransform();
    } : formatCell;
    switch (elem2.name) {
      case "thead":
      case "tbody":
      case "tfoot":
      case "center":
        elem2.children.forEach(walkTable);
        return;
      case "tr": {
        builder.openTableRow();
        for (const childOfTr of elem2.children) {
          if (childOfTr.type !== "tag") {
            continue;
          }
          switch (childOfTr.name) {
            case "th": {
              formatHeaderCell(childOfTr);
              break;
            }
            case "td": {
              formatCell(childOfTr);
              break;
            }
          }
        }
        builder.closeTableRow();
        break;
      }
    }
  }
}
var textFormatters = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  anchor: formatAnchor,
  blockquote: formatBlockquote,
  dataTable: formatDataTable,
  heading: formatHeading,
  horizontalLine: formatHorizontalLine,
  image: formatImage,
  lineBreak: formatLineBreak,
  orderedList: formatOrderedList,
  paragraph: formatParagraph,
  pre: formatPre,
  table: formatTable,
  unorderedList: formatUnorderedList,
  wbr: formatWbr
});
var DEFAULT_OPTIONS = {
  baseElements: {
    selectors: ["body"],
    orderBy: "selectors",
    returnDomByDefault: true
  },
  decodeEntities: true,
  encodeCharacters: {},
  formatters: {},
  limits: {
    ellipsis: "...",
    maxBaseElements: undefined,
    maxChildNodes: undefined,
    maxDepth: undefined,
    maxInputLength: 1 << 24
  },
  longWordSplit: {
    forceWrapOnLimit: false,
    wrapCharacters: []
  },
  preserveNewlines: false,
  selectors: [
    { selector: "*", format: "inline" },
    {
      selector: "a",
      format: "anchor",
      options: {
        baseUrl: null,
        hideLinkHrefIfSameAsText: false,
        ignoreHref: false,
        linkBrackets: ["[", "]"],
        noAnchorUrl: true
      }
    },
    { selector: "article", format: "block", options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },
    { selector: "aside", format: "block", options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },
    {
      selector: "blockquote",
      format: "blockquote",
      options: { leadingLineBreaks: 2, trailingLineBreaks: 2, trimEmptyLines: true }
    },
    { selector: "br", format: "lineBreak" },
    { selector: "div", format: "block", options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },
    { selector: "footer", format: "block", options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },
    { selector: "form", format: "block", options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },
    { selector: "h1", format: "heading", options: { leadingLineBreaks: 3, trailingLineBreaks: 2, uppercase: true } },
    { selector: "h2", format: "heading", options: { leadingLineBreaks: 3, trailingLineBreaks: 2, uppercase: true } },
    { selector: "h3", format: "heading", options: { leadingLineBreaks: 3, trailingLineBreaks: 2, uppercase: true } },
    { selector: "h4", format: "heading", options: { leadingLineBreaks: 2, trailingLineBreaks: 2, uppercase: true } },
    { selector: "h5", format: "heading", options: { leadingLineBreaks: 2, trailingLineBreaks: 2, uppercase: true } },
    { selector: "h6", format: "heading", options: { leadingLineBreaks: 2, trailingLineBreaks: 2, uppercase: true } },
    { selector: "header", format: "block", options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },
    {
      selector: "hr",
      format: "horizontalLine",
      options: { leadingLineBreaks: 2, length: undefined, trailingLineBreaks: 2 }
    },
    {
      selector: "img",
      format: "image",
      options: { baseUrl: null, linkBrackets: ["[", "]"] }
    },
    { selector: "main", format: "block", options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },
    { selector: "nav", format: "block", options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },
    {
      selector: "ol",
      format: "orderedList",
      options: { leadingLineBreaks: 2, trailingLineBreaks: 2 }
    },
    { selector: "p", format: "paragraph", options: { leadingLineBreaks: 2, trailingLineBreaks: 2 } },
    { selector: "pre", format: "pre", options: { leadingLineBreaks: 2, trailingLineBreaks: 2 } },
    { selector: "section", format: "block", options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },
    {
      selector: "table",
      format: "table",
      options: {
        colSpacing: 3,
        leadingLineBreaks: 2,
        maxColumnWidth: 60,
        rowSpacing: 0,
        trailingLineBreaks: 2,
        uppercaseHeaderCells: true
      }
    },
    {
      selector: "ul",
      format: "unorderedList",
      options: { itemPrefix: " * ", leadingLineBreaks: 2, trailingLineBreaks: 2 }
    },
    { selector: "wbr", format: "wbr" }
  ],
  tables: [],
  whitespaceCharacters: ` 	\r
\f​`,
  wordwrap: 80
};
var concatMerge = (acc, src, options) => [...acc, ...src];
var overwriteMerge = (acc, src, options) => [...src];
var selectorsMerge = (acc, src, options) => acc.some((s2) => typeof s2 === "object") ? concatMerge(acc, src) : overwriteMerge(acc, src);
function compile(options = {}) {
  options = import_deepmerge.default(DEFAULT_OPTIONS, options, {
    arrayMerge: overwriteMerge,
    customMerge: (key) => key === "selectors" ? selectorsMerge : undefined
  });
  options.formatters = Object.assign({}, genericFormatters, textFormatters, options.formatters);
  options.selectors = mergeDuplicatesPreferLast(options.selectors, (s2) => s2.selector);
  handleDeprecatedOptions(options);
  return compile$1(options);
}
function convert(html, options = {}, metadata = undefined) {
  return compile(options)(html, metadata);
}
function handleDeprecatedOptions(options) {
  if (options.tags) {
    const tagDefinitions = Object.entries(options.tags).map(([selector, definition]) => ({ ...definition, selector: selector || "*" }));
    options.selectors.push(...tagDefinitions);
    options.selectors = mergeDuplicatesPreferLast(options.selectors, (s2) => s2.selector);
  }
  function set(obj, path, value) {
    const valueKey = path.pop();
    for (const key of path) {
      let nested = obj[key];
      if (!nested) {
        nested = {};
        obj[key] = nested;
      }
      obj = nested;
    }
    obj[valueKey] = value;
  }
  if (options["baseElement"]) {
    const baseElement = options["baseElement"];
    set(options, ["baseElements", "selectors"], Array.isArray(baseElement) ? baseElement : [baseElement]);
  }
  if (options["returnDomByDefault"] !== undefined) {
    set(options, ["baseElements", "returnDomByDefault"], options["returnDomByDefault"]);
  }
  for (const definition of options.selectors) {
    if (definition.format === "anchor" && get(definition, ["options", "noLinkBrackets"])) {
      set(definition, ["options", "linkBrackets"], false);
    }
  }
}

// ../../node_modules/.bun/@react-email+render@1.4.0+2b5434204782a989/node_modules/@react-email/render/dist/browser/index.mjs
import { jsx as jsx7 } from "react/jsx-runtime";
function recursivelyMapDoc(doc, callback) {
  if (Array.isArray(doc))
    return doc.map((innerDoc) => recursivelyMapDoc(innerDoc, callback));
  if (typeof doc === "object") {
    if (doc.type === "group")
      return {
        ...doc,
        contents: recursivelyMapDoc(doc.contents, callback),
        expandedStates: recursivelyMapDoc(doc.expandedStates, callback)
      };
    if ("contents" in doc)
      return {
        ...doc,
        contents: recursivelyMapDoc(doc.contents, callback)
      };
    if ("parts" in doc)
      return {
        ...doc,
        parts: recursivelyMapDoc(doc.parts, callback)
      };
    if (doc.type === "if-break")
      return {
        ...doc,
        breakContents: recursivelyMapDoc(doc.breakContents, callback),
        flatContents: recursivelyMapDoc(doc.flatContents, callback)
      };
  }
  return callback(doc);
}
var modifiedHtml = { ...exports_html };
if (modifiedHtml.printers) {
  const previousPrint = modifiedHtml.printers.html.print;
  modifiedHtml.printers.html.print = (path, options, print, args) => {
    const node2 = path.getNode();
    const rawPrintingResult = previousPrint(path, options, print, args);
    if (node2.type === "ieConditionalComment")
      return recursivelyMapDoc(rawPrintingResult, (doc) => {
        if (typeof doc === "object" && doc.type === "line")
          return doc.soft ? "" : " ";
        return doc;
      });
    return rawPrintingResult;
  };
}
var defaults = {
  endOfLine: "lf",
  tabWidth: 2,
  plugins: [modifiedHtml],
  bracketSameLine: true,
  parser: "html"
};
var pretty = (str, options = {}) => {
  return fu(str.replaceAll("\x00", ""), {
    ...defaults,
    ...options
  });
};
var plainTextSelectors = [
  {
    selector: "img",
    format: "skip"
  },
  {
    selector: "[data-skip-in-text=true]",
    format: "skip"
  },
  {
    selector: "a",
    options: {
      linkBrackets: false,
      hideLinkHrefIfSameAsText: true
    }
  }
];
function toPlainText(html$1, options) {
  return convert(html$1, {
    selectors: plainTextSelectors,
    wordwrap: false,
    ...options
  });
}
var decoder = new TextDecoder("utf-8");
var readStream = async (stream) => {
  const chunks = [];
  const writableStream = new WritableStream({
    write(chunk) {
      chunks.push(chunk);
    },
    abort(reason) {
      throw new Error("Stream aborted", { cause: { reason } });
    }
  });
  await stream.pipeTo(writableStream);
  let length = 0;
  chunks.forEach((item) => {
    length += item.length;
  });
  const mergedChunks = new Uint8Array(length);
  let offset = 0;
  chunks.forEach((item) => {
    mergedChunks.set(item, offset);
    offset += item.length;
  });
  return decoder.decode(mergedChunks);
};
var render2 = async (node2, options) => {
  const suspendedElement = /* @__PURE__ */ jsx7(Suspense, { children: node2 });
  const reactDOMServer = await import("react-dom/server.browser").then((m) => m.default);
  const html$1 = await new Promise((resolve, reject) => {
    reactDOMServer.renderToReadableStream(suspendedElement, {
      onError(error) {
        reject(error);
      },
      progressiveChunkSize: Number.POSITIVE_INFINITY
    }).then(readStream).then(resolve).catch(reject);
  });
  if (options?.plainText)
    return toPlainText(html$1, options.htmlToTextOptions);
  const document = `<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">${html$1.replace(/<!DOCTYPE.*?>/, "")}`;
  if (options?.pretty)
    return pretty(document);
  return document;
};

// ../../node_modules/.bun/@react-email+section@0.0.16+2f44e903108183df/node_modules/@react-email/section/dist/index.mjs
import * as React7 from "react";
import { jsx as jsx8 } from "react/jsx-runtime";
var __defProp8 = Object.defineProperty;
var __defProps7 = Object.defineProperties;
var __getOwnPropDescs7 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols7 = Object.getOwnPropertySymbols;
var __hasOwnProp8 = Object.prototype.hasOwnProperty;
var __propIsEnum7 = Object.prototype.propertyIsEnumerable;
var __defNormalProp7 = (obj, key, value) => (key in obj) ? __defProp8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues7 = (a, b3) => {
  for (var prop in b3 || (b3 = {}))
    if (__hasOwnProp8.call(b3, prop))
      __defNormalProp7(a, prop, b3[prop]);
  if (__getOwnPropSymbols7)
    for (var prop of __getOwnPropSymbols7(b3)) {
      if (__propIsEnum7.call(b3, prop))
        __defNormalProp7(a, prop, b3[prop]);
    }
  return a;
};
var __spreadProps7 = (a, b3) => __defProps7(a, __getOwnPropDescs7(b3));
var __objRest7 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp8.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols7)
    for (var prop of __getOwnPropSymbols7(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum7.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var Section = React7.forwardRef((_a3, ref) => {
  var _b = _a3, { children, style } = _b, props = __objRest7(_b, ["children", "style"]);
  return /* @__PURE__ */ jsx8("table", __spreadProps7(__spreadValues7({
    align: "center",
    width: "100%",
    border: 0,
    cellPadding: "0",
    cellSpacing: "0",
    role: "presentation"
  }, props), {
    ref,
    style,
    children: /* @__PURE__ */ jsx8("tbody", { children: /* @__PURE__ */ jsx8("tr", { children: /* @__PURE__ */ jsx8("td", { children }) }) })
  }));
});
Section.displayName = "Section";

// ../../node_modules/.bun/@react-email+tailwind@1.2.2+2f44e903108183df/node_modules/@react-email/tailwind/dist/index.mjs
import { jsx as fu2 } from "react/jsx-runtime";
import * as Or3 from "react";
import ot3 from "react";
var __dirname = "/src/rr-cf/node_modules/.bun/@react-email+tailwind@1.2.2+2f44e903108183df/node_modules/@react-email/tailwind/dist";
var ta2 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function He3(u) {
  return u && u.__esModule && Object.prototype.hasOwnProperty.call(u, "default") ? u.default : u;
}
function cu2(u) {
  if (Object.prototype.hasOwnProperty.call(u, "__esModule"))
    return u;
  var a = u.default;
  if (typeof a == "function") {
    var h2 = function p() {
      return this instanceof p ? Reflect.construct(a, arguments, this.constructor) : a.apply(this, arguments);
    };
    h2.prototype = a.prototype;
  } else
    h2 = {};
  return Object.defineProperty(h2, "__esModule", { value: true }), Object.keys(u).forEach(function(p) {
    var l2 = Object.getOwnPropertyDescriptor(u, p);
    Object.defineProperty(h2, p, l2.get ? l2 : {
      enumerable: true,
      get: function() {
        return u[p];
      }
    });
  }), h2;
}
var pt3 = { exports: {} };
var ra2;
function Ti() {
  if (ra2)
    return pt3.exports;
  ra2 = 1;
  var u = String, a = function() {
    return { isColorSupported: false, reset: u, bold: u, dim: u, italic: u, underline: u, inverse: u, hidden: u, strikethrough: u, black: u, red: u, green: u, yellow: u, blue: u, magenta: u, cyan: u, white: u, gray: u, bgBlack: u, bgRed: u, bgGreen: u, bgYellow: u, bgBlue: u, bgMagenta: u, bgCyan: u, bgWhite: u, blackBright: u, redBright: u, greenBright: u, yellowBright: u, blueBright: u, magentaBright: u, cyanBright: u, whiteBright: u, bgBlackBright: u, bgRedBright: u, bgGreenBright: u, bgYellowBright: u, bgBlueBright: u, bgMagentaBright: u, bgCyanBright: u, bgWhiteBright: u };
  };
  return pt3.exports = a(), pt3.exports.createColors = a, pt3.exports;
}
var du2 = {};
var pu2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: du2
}, Symbol.toStringTag, { value: "Module" }));
var Ne3 = /* @__PURE__ */ cu2(pu2);
var kr3;
var na2;
function Ai2() {
  if (na2)
    return kr3;
  na2 = 1;
  let u = /* @__PURE__ */ Ti(), a = Ne3;

  class h2 extends Error {
    constructor(l2, f, s2, c2, t8, e2) {
      super(l2), this.name = "CssSyntaxError", this.reason = l2, t8 && (this.file = t8), c2 && (this.source = c2), e2 && (this.plugin = e2), typeof f < "u" && typeof s2 < "u" && (typeof f == "number" ? (this.line = f, this.column = s2) : (this.line = f.line, this.column = f.column, this.endLine = s2.line, this.endColumn = s2.column)), this.setMessage(), Error.captureStackTrace && Error.captureStackTrace(this, h2);
    }
    setMessage() {
      this.message = this.plugin ? this.plugin + ": " : "", this.message += this.file ? this.file : "<css input>", typeof this.line < "u" && (this.message += ":" + this.line + ":" + this.column), this.message += ": " + this.reason;
    }
    showSourceCode(l2) {
      if (!this.source)
        return "";
      let f = this.source;
      l2 == null && (l2 = u.isColorSupported);
      let s2 = (v3) => v3, c2 = (v3) => v3, t8 = (v3) => v3;
      if (l2) {
        let { bold: v3, gray: m, red: n2 } = u.createColors(true);
        c2 = (d2) => v3(n2(d2)), s2 = (d2) => m(d2), a && (t8 = (d2) => a(d2));
      }
      let e2 = f.split(/\r?\n/), r2 = Math.max(this.line - 3, 0), i = Math.min(this.line + 2, e2.length), o2 = String(i).length;
      return e2.slice(r2, i).map((v3, m) => {
        let n2 = r2 + 1 + m, d2 = " " + (" " + n2).slice(-o2) + " | ";
        if (n2 === this.line) {
          if (v3.length > 160) {
            let w3 = 20, y2 = Math.max(0, this.column - w3), x = Math.max(this.column + w3, this.endColumn + w3), g2 = v3.slice(y2, x), O3 = s2(d2.replace(/\d/g, " ")) + v3.slice(0, Math.min(this.column - 1, w3 - 1)).replace(/[^\t]/g, " ");
            return c2(">") + s2(d2) + t8(g2) + `
 ` + O3 + c2("^");
          }
          let _3 = s2(d2.replace(/\d/g, " ")) + v3.slice(0, this.column - 1).replace(/[^\t]/g, " ");
          return c2(">") + s2(d2) + t8(v3) + `
 ` + _3 + c2("^");
        }
        return " " + s2(d2) + t8(v3);
      }).join(`
`);
    }
    toString() {
      let l2 = this.showSourceCode();
      return l2 && (l2 = `

` + l2 + `
`), this.name + ": " + this.message + l2;
    }
  }
  return kr3 = h2, h2.default = h2, kr3;
}
var Pr3;
var ia2;
function dl() {
  if (ia2)
    return Pr3;
  ia2 = 1;
  const u = {
    after: `
`,
    beforeClose: `
`,
    beforeComment: `
`,
    beforeDecl: `
`,
    beforeOpen: " ",
    beforeRule: `
`,
    colon: ": ",
    commentLeft: " ",
    commentRight: " ",
    emptyBody: "",
    indent: "    ",
    semicolon: false
  };
  function a(p) {
    return p[0].toUpperCase() + p.slice(1);
  }

  class h2 {
    constructor(l2) {
      this.builder = l2;
    }
    atrule(l2, f) {
      let s2 = "@" + l2.name, c2 = l2.params ? this.rawValue(l2, "params") : "";
      if (typeof l2.raws.afterName < "u" ? s2 += l2.raws.afterName : c2 && (s2 += " "), l2.nodes)
        this.block(l2, s2 + c2);
      else {
        let t8 = (l2.raws.between || "") + (f ? ";" : "");
        this.builder(s2 + c2 + t8, l2);
      }
    }
    beforeAfter(l2, f) {
      let s2;
      l2.type === "decl" ? s2 = this.raw(l2, null, "beforeDecl") : l2.type === "comment" ? s2 = this.raw(l2, null, "beforeComment") : f === "before" ? s2 = this.raw(l2, null, "beforeRule") : s2 = this.raw(l2, null, "beforeClose");
      let c2 = l2.parent, t8 = 0;
      for (;c2 && c2.type !== "root"; )
        t8 += 1, c2 = c2.parent;
      if (s2.includes(`
`)) {
        let e2 = this.raw(l2, null, "indent");
        if (e2.length)
          for (let r2 = 0;r2 < t8; r2++)
            s2 += e2;
      }
      return s2;
    }
    block(l2, f) {
      let s2 = this.raw(l2, "between", "beforeOpen");
      this.builder(f + s2 + "{", l2, "start");
      let c2;
      l2.nodes && l2.nodes.length ? (this.body(l2), c2 = this.raw(l2, "after")) : c2 = this.raw(l2, "after", "emptyBody"), c2 && this.builder(c2), this.builder("}", l2, "end");
    }
    body(l2) {
      let f = l2.nodes.length - 1;
      for (;f > 0 && l2.nodes[f].type === "comment"; )
        f -= 1;
      let s2 = this.raw(l2, "semicolon");
      for (let c2 = 0;c2 < l2.nodes.length; c2++) {
        let t8 = l2.nodes[c2], e2 = this.raw(t8, "before");
        e2 && this.builder(e2), this.stringify(t8, f !== c2 || s2);
      }
    }
    comment(l2) {
      let f = this.raw(l2, "left", "commentLeft"), s2 = this.raw(l2, "right", "commentRight");
      this.builder("/*" + f + l2.text + s2 + "*/", l2);
    }
    decl(l2, f) {
      let s2 = this.raw(l2, "between", "colon"), c2 = l2.prop + s2 + this.rawValue(l2, "value");
      l2.important && (c2 += l2.raws.important || " !important"), f && (c2 += ";"), this.builder(c2, l2);
    }
    document(l2) {
      this.body(l2);
    }
    raw(l2, f, s2) {
      let c2;
      if (s2 || (s2 = f), f && (c2 = l2.raws[f], typeof c2 < "u"))
        return c2;
      let t8 = l2.parent;
      if (s2 === "before" && (!t8 || t8.type === "root" && t8.first === l2 || t8 && t8.type === "document"))
        return "";
      if (!t8)
        return u[s2];
      let e2 = l2.root();
      if (e2.rawCache || (e2.rawCache = {}), typeof e2.rawCache[s2] < "u")
        return e2.rawCache[s2];
      if (s2 === "before" || s2 === "after")
        return this.beforeAfter(l2, s2);
      {
        let r2 = "raw" + a(s2);
        this[r2] ? c2 = this[r2](e2, l2) : e2.walk((i) => {
          if (c2 = i.raws[f], typeof c2 < "u")
            return false;
        });
      }
      return typeof c2 > "u" && (c2 = u[s2]), e2.rawCache[s2] = c2, c2;
    }
    rawBeforeClose(l2) {
      let f;
      return l2.walk((s2) => {
        if (s2.nodes && s2.nodes.length > 0 && typeof s2.raws.after < "u")
          return f = s2.raws.after, f.includes(`
`) && (f = f.replace(/[^\n]+$/, "")), false;
      }), f && (f = f.replace(/\S/g, "")), f;
    }
    rawBeforeComment(l2, f) {
      let s2;
      return l2.walkComments((c2) => {
        if (typeof c2.raws.before < "u")
          return s2 = c2.raws.before, s2.includes(`
`) && (s2 = s2.replace(/[^\n]+$/, "")), false;
      }), typeof s2 > "u" ? s2 = this.raw(f, null, "beforeDecl") : s2 && (s2 = s2.replace(/\S/g, "")), s2;
    }
    rawBeforeDecl(l2, f) {
      let s2;
      return l2.walkDecls((c2) => {
        if (typeof c2.raws.before < "u")
          return s2 = c2.raws.before, s2.includes(`
`) && (s2 = s2.replace(/[^\n]+$/, "")), false;
      }), typeof s2 > "u" ? s2 = this.raw(f, null, "beforeRule") : s2 && (s2 = s2.replace(/\S/g, "")), s2;
    }
    rawBeforeOpen(l2) {
      let f;
      return l2.walk((s2) => {
        if (s2.type !== "decl" && (f = s2.raws.between, typeof f < "u"))
          return false;
      }), f;
    }
    rawBeforeRule(l2) {
      let f;
      return l2.walk((s2) => {
        if (s2.nodes && (s2.parent !== l2 || l2.first !== s2) && typeof s2.raws.before < "u")
          return f = s2.raws.before, f.includes(`
`) && (f = f.replace(/[^\n]+$/, "")), false;
      }), f && (f = f.replace(/\S/g, "")), f;
    }
    rawColon(l2) {
      let f;
      return l2.walkDecls((s2) => {
        if (typeof s2.raws.between < "u")
          return f = s2.raws.between.replace(/[^\s:]/g, ""), false;
      }), f;
    }
    rawEmptyBody(l2) {
      let f;
      return l2.walk((s2) => {
        if (s2.nodes && s2.nodes.length === 0 && (f = s2.raws.after, typeof f < "u"))
          return false;
      }), f;
    }
    rawIndent(l2) {
      if (l2.raws.indent)
        return l2.raws.indent;
      let f;
      return l2.walk((s2) => {
        let c2 = s2.parent;
        if (c2 && c2 !== l2 && c2.parent && c2.parent === l2 && typeof s2.raws.before < "u") {
          let t8 = s2.raws.before.split(`
`);
          return f = t8[t8.length - 1], f = f.replace(/\S/g, ""), false;
        }
      }), f;
    }
    rawSemicolon(l2) {
      let f;
      return l2.walk((s2) => {
        if (s2.nodes && s2.nodes.length && s2.last.type === "decl" && (f = s2.raws.semicolon, typeof f < "u"))
          return false;
      }), f;
    }
    rawValue(l2, f) {
      let s2 = l2[f], c2 = l2.raws[f];
      return c2 && c2.value === s2 ? c2.raw : s2;
    }
    root(l2) {
      this.body(l2), l2.raws.after && this.builder(l2.raws.after);
    }
    rule(l2) {
      this.block(l2, this.rawValue(l2, "selector")), l2.raws.ownSemicolon && this.builder(l2.raws.ownSemicolon, l2, "end");
    }
    stringify(l2, f) {
      if (!this[l2.type])
        throw new Error("Unknown AST node type " + l2.type + ". Maybe you need to change PostCSS stringifier.");
      this[l2.type](l2, f);
    }
  }
  return Pr3 = h2, h2.default = h2, Pr3;
}
var Er3;
var aa2;
function or3() {
  if (aa2)
    return Er3;
  aa2 = 1;
  let u = dl();
  function a(h2, p) {
    new u(p).stringify(h2);
  }
  return Er3 = a, a.default = a, Er3;
}
var ht3 = {};
var sa2;
function Ci2() {
  return sa2 || (sa2 = 1, ht3.isClean = Symbol("isClean"), ht3.my = Symbol("my")), ht3;
}
var Tr3;
var oa2;
function lr3() {
  if (oa2)
    return Tr3;
  oa2 = 1;
  let u = Ai2(), a = dl(), h2 = or3(), { isClean: p, my: l2 } = Ci2();
  function f(t8, e2) {
    let r2 = new t8.constructor;
    for (let i in t8) {
      if (!Object.prototype.hasOwnProperty.call(t8, i) || i === "proxyCache")
        continue;
      let o2 = t8[i], v3 = typeof o2;
      i === "parent" && v3 === "object" ? e2 && (r2[i] = e2) : i === "source" ? r2[i] = o2 : Array.isArray(o2) ? r2[i] = o2.map((m) => f(m, r2)) : (v3 === "object" && o2 !== null && (o2 = f(o2)), r2[i] = o2);
    }
    return r2;
  }
  function s2(t8, e2) {
    if (e2 && typeof e2.offset < "u")
      return e2.offset;
    let r2 = 1, i = 1, o2 = 0;
    for (let v3 = 0;v3 < t8.length; v3++) {
      if (i === e2.line && r2 === e2.column) {
        o2 = v3;
        break;
      }
      t8[v3] === `
` ? (r2 = 1, i += 1) : r2 += 1;
    }
    return o2;
  }

  class c2 {
    get proxyOf() {
      return this;
    }
    constructor(e2 = {}) {
      this.raws = {}, this[p] = false, this[l2] = true;
      for (let r2 in e2)
        if (r2 === "nodes") {
          this.nodes = [];
          for (let i of e2[r2])
            typeof i.clone == "function" ? this.append(i.clone()) : this.append(i);
        } else
          this[r2] = e2[r2];
    }
    addToError(e2) {
      if (e2.postcssNode = this, e2.stack && this.source && /\n\s{4}at /.test(e2.stack)) {
        let r2 = this.source;
        e2.stack = e2.stack.replace(/\n\s{4}at /, `$&${r2.input.from}:${r2.start.line}:${r2.start.column}$&`);
      }
      return e2;
    }
    after(e2) {
      return this.parent.insertAfter(this, e2), this;
    }
    assign(e2 = {}) {
      for (let r2 in e2)
        this[r2] = e2[r2];
      return this;
    }
    before(e2) {
      return this.parent.insertBefore(this, e2), this;
    }
    cleanRaws(e2) {
      delete this.raws.before, delete this.raws.after, e2 || delete this.raws.between;
    }
    clone(e2 = {}) {
      let r2 = f(this);
      for (let i in e2)
        r2[i] = e2[i];
      return r2;
    }
    cloneAfter(e2 = {}) {
      let r2 = this.clone(e2);
      return this.parent.insertAfter(this, r2), r2;
    }
    cloneBefore(e2 = {}) {
      let r2 = this.clone(e2);
      return this.parent.insertBefore(this, r2), r2;
    }
    error(e2, r2 = {}) {
      if (this.source) {
        let { end: i, start: o2 } = this.rangeBy(r2);
        return this.source.input.error(e2, { column: o2.column, line: o2.line }, { column: i.column, line: i.line }, r2);
      }
      return new u(e2);
    }
    getProxyProcessor() {
      return {
        get(e2, r2) {
          return r2 === "proxyOf" ? e2 : r2 === "root" ? () => e2.root().toProxy() : e2[r2];
        },
        set(e2, r2, i) {
          return e2[r2] === i || (e2[r2] = i, (r2 === "prop" || r2 === "value" || r2 === "name" || r2 === "params" || r2 === "important" || r2 === "text") && e2.markDirty()), true;
        }
      };
    }
    markClean() {
      this[p] = true;
    }
    markDirty() {
      if (this[p]) {
        this[p] = false;
        let e2 = this;
        for (;e2 = e2.parent; )
          e2[p] = false;
      }
    }
    next() {
      if (!this.parent)
        return;
      let e2 = this.parent.index(this);
      return this.parent.nodes[e2 + 1];
    }
    positionBy(e2) {
      let r2 = this.source.start;
      if (e2.index)
        r2 = this.positionInside(e2.index);
      else if (e2.word) {
        let i = "document" in this.source.input ? this.source.input.document : this.source.input.css, v3 = i.slice(s2(i, this.source.start), s2(i, this.source.end)).indexOf(e2.word);
        v3 !== -1 && (r2 = this.positionInside(v3));
      }
      return r2;
    }
    positionInside(e2) {
      let r2 = this.source.start.column, i = this.source.start.line, o2 = "document" in this.source.input ? this.source.input.document : this.source.input.css, v3 = s2(o2, this.source.start), m = v3 + e2;
      for (let n2 = v3;n2 < m; n2++)
        o2[n2] === `
` ? (r2 = 1, i += 1) : r2 += 1;
      return { column: r2, line: i };
    }
    prev() {
      if (!this.parent)
        return;
      let e2 = this.parent.index(this);
      return this.parent.nodes[e2 - 1];
    }
    rangeBy(e2) {
      let r2 = {
        column: this.source.start.column,
        line: this.source.start.line
      }, i = this.source.end ? {
        column: this.source.end.column + 1,
        line: this.source.end.line
      } : {
        column: r2.column + 1,
        line: r2.line
      };
      if (e2.word) {
        let o2 = "document" in this.source.input ? this.source.input.document : this.source.input.css, m = o2.slice(s2(o2, this.source.start), s2(o2, this.source.end)).indexOf(e2.word);
        m !== -1 && (r2 = this.positionInside(m), i = this.positionInside(m + e2.word.length));
      } else
        e2.start ? r2 = {
          column: e2.start.column,
          line: e2.start.line
        } : e2.index && (r2 = this.positionInside(e2.index)), e2.end ? i = {
          column: e2.end.column,
          line: e2.end.line
        } : typeof e2.endIndex == "number" ? i = this.positionInside(e2.endIndex) : e2.index && (i = this.positionInside(e2.index + 1));
      return (i.line < r2.line || i.line === r2.line && i.column <= r2.column) && (i = { column: r2.column + 1, line: r2.line }), { end: i, start: r2 };
    }
    raw(e2, r2) {
      return new a().raw(this, e2, r2);
    }
    remove() {
      return this.parent && this.parent.removeChild(this), this.parent = undefined, this;
    }
    replaceWith(...e2) {
      if (this.parent) {
        let r2 = this, i = false;
        for (let o2 of e2)
          o2 === this ? i = true : i ? (this.parent.insertAfter(r2, o2), r2 = o2) : this.parent.insertBefore(r2, o2);
        i || this.remove();
      }
      return this;
    }
    root() {
      let e2 = this;
      for (;e2.parent && e2.parent.type !== "document"; )
        e2 = e2.parent;
      return e2;
    }
    toJSON(e2, r2) {
      let i = {}, o2 = r2 == null;
      r2 = r2 || /* @__PURE__ */ new Map;
      let v3 = 0;
      for (let m in this) {
        if (!Object.prototype.hasOwnProperty.call(this, m) || m === "parent" || m === "proxyCache")
          continue;
        let n2 = this[m];
        if (Array.isArray(n2))
          i[m] = n2.map((d2) => typeof d2 == "object" && d2.toJSON ? d2.toJSON(null, r2) : d2);
        else if (typeof n2 == "object" && n2.toJSON)
          i[m] = n2.toJSON(null, r2);
        else if (m === "source") {
          let d2 = r2.get(n2.input);
          d2 == null && (d2 = v3, r2.set(n2.input, v3), v3++), i[m] = {
            end: n2.end,
            inputId: d2,
            start: n2.start
          };
        } else
          i[m] = n2;
      }
      return o2 && (i.inputs = [...r2.keys()].map((m) => m.toJSON())), i;
    }
    toProxy() {
      return this.proxyCache || (this.proxyCache = new Proxy(this, this.getProxyProcessor())), this.proxyCache;
    }
    toString(e2 = h2) {
      e2.stringify && (e2 = e2.stringify);
      let r2 = "";
      return e2(this, (i) => {
        r2 += i;
      }), r2;
    }
    warn(e2, r2, i) {
      let o2 = { node: this };
      for (let v3 in i)
        o2[v3] = i[v3];
      return e2.warn(r2, o2);
    }
  }
  return Tr3 = c2, c2.default = c2, Tr3;
}
var Ar3;
var la2;
function ur3() {
  if (la2)
    return Ar3;
  la2 = 1;
  let u = lr3();

  class a extends u {
    constructor(p) {
      super(p), this.type = "comment";
    }
  }
  return Ar3 = a, a.default = a, Ar3;
}
var Cr3;
var ua2;
function fr3() {
  if (ua2)
    return Cr3;
  ua2 = 1;
  let u = lr3();

  class a extends u {
    get variable() {
      return this.prop.startsWith("--") || this.prop[0] === "$";
    }
    constructor(p) {
      p && typeof p.value < "u" && typeof p.value != "string" && (p = { ...p, value: String(p.value) }), super(p), this.type = "decl";
    }
  }
  return Cr3 = a, a.default = a, Cr3;
}
var Rr3;
var fa2;
function nt3() {
  if (fa2)
    return Rr3;
  fa2 = 1;
  let u = ur3(), a = fr3(), h2 = lr3(), { isClean: p, my: l2 } = Ci2(), f, s2, c2, t8;
  function e2(o2) {
    return o2.map((v3) => (v3.nodes && (v3.nodes = e2(v3.nodes)), delete v3.source, v3));
  }
  function r2(o2) {
    if (o2[p] = false, o2.proxyOf.nodes)
      for (let v3 of o2.proxyOf.nodes)
        r2(v3);
  }

  class i extends h2 {
    get first() {
      if (this.proxyOf.nodes)
        return this.proxyOf.nodes[0];
    }
    get last() {
      if (this.proxyOf.nodes)
        return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];
    }
    append(...v3) {
      for (let m of v3) {
        let n2 = this.normalize(m, this.last);
        for (let d2 of n2)
          this.proxyOf.nodes.push(d2);
      }
      return this.markDirty(), this;
    }
    cleanRaws(v3) {
      if (super.cleanRaws(v3), this.nodes)
        for (let m of this.nodes)
          m.cleanRaws(v3);
    }
    each(v3) {
      if (!this.proxyOf.nodes)
        return;
      let m = this.getIterator(), n2, d2;
      for (;this.indexes[m] < this.proxyOf.nodes.length && (n2 = this.indexes[m], d2 = v3(this.proxyOf.nodes[n2], n2), d2 !== false); )
        this.indexes[m] += 1;
      return delete this.indexes[m], d2;
    }
    every(v3) {
      return this.nodes.every(v3);
    }
    getIterator() {
      this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach += 1;
      let v3 = this.lastEach;
      return this.indexes[v3] = 0, v3;
    }
    getProxyProcessor() {
      return {
        get(v3, m) {
          return m === "proxyOf" ? v3 : v3[m] ? m === "each" || typeof m == "string" && m.startsWith("walk") ? (...n2) => v3[m](...n2.map((d2) => typeof d2 == "function" ? (_3, w3) => d2(_3.toProxy(), w3) : d2)) : m === "every" || m === "some" ? (n2) => v3[m]((d2, ..._3) => n2(d2.toProxy(), ..._3)) : m === "root" ? () => v3.root().toProxy() : m === "nodes" ? v3.nodes.map((n2) => n2.toProxy()) : m === "first" || m === "last" ? v3[m].toProxy() : v3[m] : v3[m];
        },
        set(v3, m, n2) {
          return v3[m] === n2 || (v3[m] = n2, (m === "name" || m === "params" || m === "selector") && v3.markDirty()), true;
        }
      };
    }
    index(v3) {
      return typeof v3 == "number" ? v3 : (v3.proxyOf && (v3 = v3.proxyOf), this.proxyOf.nodes.indexOf(v3));
    }
    insertAfter(v3, m) {
      let n2 = this.index(v3), d2 = this.normalize(m, this.proxyOf.nodes[n2]).reverse();
      n2 = this.index(v3);
      for (let w3 of d2)
        this.proxyOf.nodes.splice(n2 + 1, 0, w3);
      let _3;
      for (let w3 in this.indexes)
        _3 = this.indexes[w3], n2 < _3 && (this.indexes[w3] = _3 + d2.length);
      return this.markDirty(), this;
    }
    insertBefore(v3, m) {
      let n2 = this.index(v3), d2 = n2 === 0 ? "prepend" : false, _3 = this.normalize(m, this.proxyOf.nodes[n2], d2).reverse();
      n2 = this.index(v3);
      for (let y2 of _3)
        this.proxyOf.nodes.splice(n2, 0, y2);
      let w3;
      for (let y2 in this.indexes)
        w3 = this.indexes[y2], n2 <= w3 && (this.indexes[y2] = w3 + _3.length);
      return this.markDirty(), this;
    }
    normalize(v3, m) {
      if (typeof v3 == "string")
        v3 = e2(s2(v3).nodes);
      else if (typeof v3 > "u")
        v3 = [];
      else if (Array.isArray(v3)) {
        v3 = v3.slice(0);
        for (let d2 of v3)
          d2.parent && d2.parent.removeChild(d2, "ignore");
      } else if (v3.type === "root" && this.type !== "document") {
        v3 = v3.nodes.slice(0);
        for (let d2 of v3)
          d2.parent && d2.parent.removeChild(d2, "ignore");
      } else if (v3.type)
        v3 = [v3];
      else if (v3.prop) {
        if (typeof v3.value > "u")
          throw new Error("Value field is missed in node creation");
        typeof v3.value != "string" && (v3.value = String(v3.value)), v3 = [new a(v3)];
      } else if (v3.selector || v3.selectors)
        v3 = [new t8(v3)];
      else if (v3.name)
        v3 = [new f(v3)];
      else if (v3.text)
        v3 = [new u(v3)];
      else
        throw new Error("Unknown node type in node creation");
      return v3.map((d2) => (d2[l2] || i.rebuild(d2), d2 = d2.proxyOf, d2.parent && d2.parent.removeChild(d2), d2[p] && r2(d2), d2.raws || (d2.raws = {}), typeof d2.raws.before > "u" && m && typeof m.raws.before < "u" && (d2.raws.before = m.raws.before.replace(/\S/g, "")), d2.parent = this.proxyOf, d2));
    }
    prepend(...v3) {
      v3 = v3.reverse();
      for (let m of v3) {
        let n2 = this.normalize(m, this.first, "prepend").reverse();
        for (let d2 of n2)
          this.proxyOf.nodes.unshift(d2);
        for (let d2 in this.indexes)
          this.indexes[d2] = this.indexes[d2] + n2.length;
      }
      return this.markDirty(), this;
    }
    push(v3) {
      return v3.parent = this, this.proxyOf.nodes.push(v3), this;
    }
    removeAll() {
      for (let v3 of this.proxyOf.nodes)
        v3.parent = undefined;
      return this.proxyOf.nodes = [], this.markDirty(), this;
    }
    removeChild(v3) {
      v3 = this.index(v3), this.proxyOf.nodes[v3].parent = undefined, this.proxyOf.nodes.splice(v3, 1);
      let m;
      for (let n2 in this.indexes)
        m = this.indexes[n2], m >= v3 && (this.indexes[n2] = m - 1);
      return this.markDirty(), this;
    }
    replaceValues(v3, m, n2) {
      return n2 || (n2 = m, m = {}), this.walkDecls((d2) => {
        m.props && !m.props.includes(d2.prop) || m.fast && !d2.value.includes(m.fast) || (d2.value = d2.value.replace(v3, n2));
      }), this.markDirty(), this;
    }
    some(v3) {
      return this.nodes.some(v3);
    }
    walk(v3) {
      return this.each((m, n2) => {
        let d2;
        try {
          d2 = v3(m, n2);
        } catch (_3) {
          throw m.addToError(_3);
        }
        return d2 !== false && m.walk && (d2 = m.walk(v3)), d2;
      });
    }
    walkAtRules(v3, m) {
      return m ? v3 instanceof RegExp ? this.walk((n2, d2) => {
        if (n2.type === "atrule" && v3.test(n2.name))
          return m(n2, d2);
      }) : this.walk((n2, d2) => {
        if (n2.type === "atrule" && n2.name === v3)
          return m(n2, d2);
      }) : (m = v3, this.walk((n2, d2) => {
        if (n2.type === "atrule")
          return m(n2, d2);
      }));
    }
    walkComments(v3) {
      return this.walk((m, n2) => {
        if (m.type === "comment")
          return v3(m, n2);
      });
    }
    walkDecls(v3, m) {
      return m ? v3 instanceof RegExp ? this.walk((n2, d2) => {
        if (n2.type === "decl" && v3.test(n2.prop))
          return m(n2, d2);
      }) : this.walk((n2, d2) => {
        if (n2.type === "decl" && n2.prop === v3)
          return m(n2, d2);
      }) : (m = v3, this.walk((n2, d2) => {
        if (n2.type === "decl")
          return m(n2, d2);
      }));
    }
    walkRules(v3, m) {
      return m ? v3 instanceof RegExp ? this.walk((n2, d2) => {
        if (n2.type === "rule" && v3.test(n2.selector))
          return m(n2, d2);
      }) : this.walk((n2, d2) => {
        if (n2.type === "rule" && n2.selector === v3)
          return m(n2, d2);
      }) : (m = v3, this.walk((n2, d2) => {
        if (n2.type === "rule")
          return m(n2, d2);
      }));
    }
  }
  return i.registerParse = (o2) => {
    s2 = o2;
  }, i.registerRule = (o2) => {
    t8 = o2;
  }, i.registerAtRule = (o2) => {
    f = o2;
  }, i.registerRoot = (o2) => {
    c2 = o2;
  }, Rr3 = i, i.default = i, i.rebuild = (o2) => {
    o2.type === "atrule" ? Object.setPrototypeOf(o2, f.prototype) : o2.type === "rule" ? Object.setPrototypeOf(o2, t8.prototype) : o2.type === "decl" ? Object.setPrototypeOf(o2, a.prototype) : o2.type === "comment" ? Object.setPrototypeOf(o2, u.prototype) : o2.type === "root" && Object.setPrototypeOf(o2, c2.prototype), o2[l2] = true, o2.nodes && o2.nodes.forEach((v3) => {
      i.rebuild(v3);
    });
  }, Rr3;
}
var Ir3;
var ca2;
function Ri2() {
  if (ca2)
    return Ir3;
  ca2 = 1;
  let u = nt3();

  class a extends u {
    constructor(p) {
      super(p), this.type = "atrule";
    }
    append(...p) {
      return this.proxyOf.nodes || (this.nodes = []), super.append(...p);
    }
    prepend(...p) {
      return this.proxyOf.nodes || (this.nodes = []), super.prepend(...p);
    }
  }
  return Ir3 = a, a.default = a, u.registerAtRule(a), Ir3;
}
var Mr2;
var da2;
function Ii2() {
  if (da2)
    return Mr2;
  da2 = 1;
  let u = nt3(), a, h2;

  class p extends u {
    constructor(f) {
      super({ type: "document", ...f }), this.nodes || (this.nodes = []);
    }
    toResult(f = {}) {
      return new a(new h2, this, f).stringify();
    }
  }
  return p.registerLazyResult = (l2) => {
    a = l2;
  }, p.registerProcessor = (l2) => {
    h2 = l2;
  }, Mr2 = p, p.default = p, Mr2;
}
var Dr3;
var pa2;
function hu2() {
  if (pa2)
    return Dr3;
  pa2 = 1;
  let u = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
  return Dr3 = { nanoid: (p = 21) => {
    let l2 = "", f = p | 0;
    for (;f--; )
      l2 += u[Math.random() * 64 | 0];
    return l2;
  }, customAlphabet: (p, l2 = 21) => (f = l2) => {
    let s2 = "", c2 = f | 0;
    for (;c2--; )
      s2 += p[Math.random() * p.length | 0];
    return s2;
  } }, Dr3;
}
var qr2;
var ha2;
function pl() {
  if (ha2)
    return qr2;
  ha2 = 1;
  let { existsSync: u, readFileSync: a } = Ne3, { dirname: h2, join: p } = Ne3, { SourceMapConsumer: l2, SourceMapGenerator: f } = Ne3;
  function s2(t8) {
    return Buffer ? Buffer.from(t8, "base64").toString() : window.atob(t8);
  }

  class c2 {
    constructor(e2, r2) {
      if (r2.map === false)
        return;
      this.loadAnnotation(e2), this.inline = this.startWith(this.annotation, "data:");
      let i = r2.map ? r2.map.prev : undefined, o2 = this.loadMap(r2.from, i);
      !this.mapFile && r2.from && (this.mapFile = r2.from), this.mapFile && (this.root = h2(this.mapFile)), o2 && (this.text = o2);
    }
    consumer() {
      return this.consumerCache || (this.consumerCache = new l2(this.text)), this.consumerCache;
    }
    decodeInline(e2) {
      let r2 = /^data:application\/json;charset=utf-?8;base64,/, i = /^data:application\/json;base64,/, o2 = /^data:application\/json;charset=utf-?8,/, v3 = /^data:application\/json,/, m = e2.match(o2) || e2.match(v3);
      if (m)
        return decodeURIComponent(e2.substr(m[0].length));
      let n2 = e2.match(r2) || e2.match(i);
      if (n2)
        return s2(e2.substr(n2[0].length));
      let d2 = e2.match(/data:application\/json;([^,]+),/)[1];
      throw new Error("Unsupported source map encoding " + d2);
    }
    getAnnotationURL(e2) {
      return e2.replace(/^\/\*\s*# sourceMappingURL=/, "").trim();
    }
    isMap(e2) {
      return typeof e2 != "object" ? false : typeof e2.mappings == "string" || typeof e2._mappings == "string" || Array.isArray(e2.sections);
    }
    loadAnnotation(e2) {
      let r2 = e2.match(/\/\*\s*# sourceMappingURL=/g);
      if (!r2)
        return;
      let i = e2.lastIndexOf(r2.pop()), o2 = e2.indexOf("*/", i);
      i > -1 && o2 > -1 && (this.annotation = this.getAnnotationURL(e2.substring(i, o2)));
    }
    loadFile(e2) {
      if (this.root = h2(e2), u(e2))
        return this.mapFile = e2, a(e2, "utf-8").toString().trim();
    }
    loadMap(e2, r2) {
      if (r2 === false)
        return false;
      if (r2) {
        if (typeof r2 == "string")
          return r2;
        if (typeof r2 == "function") {
          let i = r2(e2);
          if (i) {
            let o2 = this.loadFile(i);
            if (!o2)
              throw new Error("Unable to load previous source map: " + i.toString());
            return o2;
          }
        } else {
          if (r2 instanceof l2)
            return f.fromSourceMap(r2).toString();
          if (r2 instanceof f)
            return r2.toString();
          if (this.isMap(r2))
            return JSON.stringify(r2);
          throw new Error("Unsupported previous source map format: " + r2.toString());
        }
      } else {
        if (this.inline)
          return this.decodeInline(this.annotation);
        if (this.annotation) {
          let i = this.annotation;
          return e2 && (i = p(h2(e2), i)), this.loadFile(i);
        }
      }
    }
    startWith(e2, r2) {
      return e2 ? e2.substr(0, r2.length) === r2 : false;
    }
    withContent() {
      return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);
    }
  }
  return qr2 = c2, c2.default = c2, qr2;
}
var Lr3;
var va2;
function cr3() {
  if (va2)
    return Lr3;
  va2 = 1;
  let { nanoid: u } = /* @__PURE__ */ hu2(), { isAbsolute: a, resolve: h2 } = Ne3, { SourceMapConsumer: p, SourceMapGenerator: l2 } = Ne3, { fileURLToPath: f, pathToFileURL: s2 } = Ne3, c2 = Ai2(), t8 = pl(), e2 = Ne3, r2 = Symbol("fromOffsetCache"), i = !!(p && l2), o2 = !!(h2 && a);

  class v3 {
    get from() {
      return this.file || this.id;
    }
    constructor(n2, d2 = {}) {
      if (n2 === null || typeof n2 > "u" || typeof n2 == "object" && !n2.toString)
        throw new Error(`PostCSS received ${n2} instead of CSS string`);
      if (this.css = n2.toString(), this.css[0] === "\uFEFF" || this.css[0] === "￾" ? (this.hasBOM = true, this.css = this.css.slice(1)) : this.hasBOM = false, this.document = this.css, d2.document && (this.document = d2.document.toString()), d2.from && (!o2 || /^\w+:\/\//.test(d2.from) || a(d2.from) ? this.file = d2.from : this.file = h2(d2.from)), o2 && i) {
        let _3 = new t8(this.css, d2);
        if (_3.text) {
          this.map = _3;
          let w3 = _3.consumer().file;
          !this.file && w3 && (this.file = this.mapResolve(w3));
        }
      }
      this.file || (this.id = "<input css " + u(6) + ">"), this.map && (this.map.file = this.from);
    }
    error(n2, d2, _3, w3 = {}) {
      let y2, x, g2;
      if (d2 && typeof d2 == "object") {
        let A = d2, E2 = _3;
        if (typeof A.offset == "number") {
          let b3 = this.fromOffset(A.offset);
          d2 = b3.line, _3 = b3.col;
        } else
          d2 = A.line, _3 = A.column;
        if (typeof E2.offset == "number") {
          let b3 = this.fromOffset(E2.offset);
          x = b3.line, y2 = b3.col;
        } else
          x = E2.line, y2 = E2.column;
      } else if (!_3) {
        let A = this.fromOffset(d2);
        d2 = A.line, _3 = A.col;
      }
      let O3 = this.origin(d2, _3, x, y2);
      return O3 ? g2 = new c2(n2, O3.endLine === undefined ? O3.line : { column: O3.column, line: O3.line }, O3.endLine === undefined ? O3.column : { column: O3.endColumn, line: O3.endLine }, O3.source, O3.file, w3.plugin) : g2 = new c2(n2, x === undefined ? d2 : { column: _3, line: d2 }, x === undefined ? _3 : { column: y2, line: x }, this.css, this.file, w3.plugin), g2.input = { column: _3, endColumn: y2, endLine: x, line: d2, source: this.css }, this.file && (s2 && (g2.input.url = s2(this.file).toString()), g2.input.file = this.file), g2;
    }
    fromOffset(n2) {
      let d2, _3;
      if (this[r2])
        _3 = this[r2];
      else {
        let y2 = this.css.split(`
`);
        _3 = new Array(y2.length);
        let x = 0;
        for (let g2 = 0, O3 = y2.length;g2 < O3; g2++)
          _3[g2] = x, x += y2[g2].length + 1;
        this[r2] = _3;
      }
      d2 = _3[_3.length - 1];
      let w3 = 0;
      if (n2 >= d2)
        w3 = _3.length - 1;
      else {
        let y2 = _3.length - 2, x;
        for (;w3 < y2; )
          if (x = w3 + (y2 - w3 >> 1), n2 < _3[x])
            y2 = x - 1;
          else if (n2 >= _3[x + 1])
            w3 = x + 1;
          else {
            w3 = x;
            break;
          }
      }
      return {
        col: n2 - _3[w3] + 1,
        line: w3 + 1
      };
    }
    mapResolve(n2) {
      return /^\w+:\/\//.test(n2) ? n2 : h2(this.map.consumer().sourceRoot || this.map.root || ".", n2);
    }
    origin(n2, d2, _3, w3) {
      if (!this.map)
        return false;
      let y2 = this.map.consumer(), x = y2.originalPositionFor({ column: d2, line: n2 });
      if (!x.source)
        return false;
      let g2;
      typeof _3 == "number" && (g2 = y2.originalPositionFor({ column: w3, line: _3 }));
      let O3;
      a(x.source) ? O3 = s2(x.source) : O3 = new URL(x.source, this.map.consumer().sourceRoot || s2(this.map.mapFile));
      let A = {
        column: x.column,
        endColumn: g2 && g2.column,
        endLine: g2 && g2.line,
        line: x.line,
        url: O3.toString()
      };
      if (O3.protocol === "file:")
        if (f)
          A.file = f(O3);
        else
          throw new Error("file: protocol is not available in this PostCSS build");
      let E2 = y2.sourceContentFor(x.source);
      return E2 && (A.source = E2), A;
    }
    toJSON() {
      let n2 = {};
      for (let d2 of ["hasBOM", "css", "file", "id"])
        this[d2] != null && (n2[d2] = this[d2]);
      return this.map && (n2.map = { ...this.map }, n2.map.consumerCache && (n2.map.consumerCache = undefined)), n2;
    }
  }
  return Lr3 = v3, v3.default = v3, e2 && e2.registerInput && e2.registerInput(v3), Lr3;
}
var Nr3;
var ga2;
function lt3() {
  if (ga2)
    return Nr3;
  ga2 = 1;
  let u = nt3(), a, h2;

  class p extends u {
    constructor(f) {
      super(f), this.type = "root", this.nodes || (this.nodes = []);
    }
    normalize(f, s2, c2) {
      let t8 = super.normalize(f);
      if (s2) {
        if (c2 === "prepend")
          this.nodes.length > 1 ? s2.raws.before = this.nodes[1].raws.before : delete s2.raws.before;
        else if (this.first !== s2)
          for (let e2 of t8)
            e2.raws.before = s2.raws.before;
      }
      return t8;
    }
    removeChild(f, s2) {
      let c2 = this.index(f);
      return !s2 && c2 === 0 && this.nodes.length > 1 && (this.nodes[1].raws.before = this.nodes[c2].raws.before), super.removeChild(f);
    }
    toResult(f = {}) {
      return new a(new h2, this, f).stringify();
    }
  }
  return p.registerLazyResult = (l2) => {
    a = l2;
  }, p.registerProcessor = (l2) => {
    h2 = l2;
  }, Nr3 = p, p.default = p, u.registerRoot(p), Nr3;
}
var Fr3;
var ma2;
function hl() {
  if (ma2)
    return Fr3;
  ma2 = 1;
  let u = {
    comma(a) {
      return u.split(a, [","], true);
    },
    space(a) {
      let h2 = [" ", `
`, "\t"];
      return u.split(a, h2);
    },
    split(a, h2, p) {
      let l2 = [], f = "", s2 = false, c2 = 0, t8 = false, e2 = "", r2 = false;
      for (let i of a)
        r2 ? r2 = false : i === "\\" ? r2 = true : t8 ? i === e2 && (t8 = false) : i === '"' || i === "'" ? (t8 = true, e2 = i) : i === "(" ? c2 += 1 : i === ")" ? c2 > 0 && (c2 -= 1) : c2 === 0 && h2.includes(i) && (s2 = true), s2 ? (f !== "" && l2.push(f.trim()), f = "", s2 = false) : f += i;
      return (p || f !== "") && l2.push(f.trim()), l2;
    }
  };
  return Fr3 = u, u.default = u, Fr3;
}
var $r3;
var ya2;
function Mi2() {
  if (ya2)
    return $r3;
  ya2 = 1;
  let u = nt3(), a = hl();

  class h2 extends u {
    get selectors() {
      return a.comma(this.selector);
    }
    set selectors(l2) {
      let f = this.selector ? this.selector.match(/,\s*/) : null, s2 = f ? f[0] : "," + this.raw("between", "beforeOpen");
      this.selector = l2.join(s2);
    }
    constructor(l2) {
      super(l2), this.type = "rule", this.nodes || (this.nodes = []);
    }
  }
  return $r3 = h2, h2.default = h2, u.registerRule(h2), $r3;
}
var Ur3;
var wa2;
function vu2() {
  if (wa2)
    return Ur3;
  wa2 = 1;
  let u = Ri2(), a = ur3(), h2 = fr3(), p = cr3(), l2 = pl(), f = lt3(), s2 = Mi2();
  function c2(t8, e2) {
    if (Array.isArray(t8))
      return t8.map((o2) => c2(o2));
    let { inputs: r2, ...i } = t8;
    if (r2) {
      e2 = [];
      for (let o2 of r2) {
        let v3 = { ...o2, __proto__: p.prototype };
        v3.map && (v3.map = {
          ...v3.map,
          __proto__: l2.prototype
        }), e2.push(v3);
      }
    }
    if (i.nodes && (i.nodes = t8.nodes.map((o2) => c2(o2, e2))), i.source) {
      let { inputId: o2, ...v3 } = i.source;
      i.source = v3, o2 != null && (i.source.input = e2[o2]);
    }
    if (i.type === "root")
      return new f(i);
    if (i.type === "decl")
      return new h2(i);
    if (i.type === "rule")
      return new s2(i);
    if (i.type === "comment")
      return new a(i);
    if (i.type === "atrule")
      return new u(i);
    throw new Error("Unknown node type: " + t8.type);
  }
  return Ur3 = c2, c2.default = c2, Ur3;
}
var zr2;
var ba2;
function vl() {
  if (ba2)
    return zr2;
  ba2 = 1;
  let { dirname: u, relative: a, resolve: h2, sep: p } = Ne3, { SourceMapConsumer: l2, SourceMapGenerator: f } = Ne3, { pathToFileURL: s2 } = Ne3, c2 = cr3(), t8 = !!(l2 && f), e2 = !!(u && h2 && a && p);

  class r2 {
    constructor(o2, v3, m, n2) {
      this.stringify = o2, this.mapOpts = m.map || {}, this.root = v3, this.opts = m, this.css = n2, this.originalCSS = n2, this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute, this.memoizedFileURLs = /* @__PURE__ */ new Map, this.memoizedPaths = /* @__PURE__ */ new Map, this.memoizedURLs = /* @__PURE__ */ new Map;
    }
    addAnnotation() {
      let o2;
      this.isInline() ? o2 = "data:application/json;base64," + this.toBase64(this.map.toString()) : typeof this.mapOpts.annotation == "string" ? o2 = this.mapOpts.annotation : typeof this.mapOpts.annotation == "function" ? o2 = this.mapOpts.annotation(this.opts.to, this.root) : o2 = this.outputFile() + ".map";
      let v3 = `
`;
      this.css.includes(`\r
`) && (v3 = `\r
`), this.css += v3 + "/*# sourceMappingURL=" + o2 + " */";
    }
    applyPrevMaps() {
      for (let o2 of this.previous()) {
        let v3 = this.toUrl(this.path(o2.file)), m = o2.root || u(o2.file), n2;
        this.mapOpts.sourcesContent === false ? (n2 = new l2(o2.text), n2.sourcesContent && (n2.sourcesContent = null)) : n2 = o2.consumer(), this.map.applySourceMap(n2, v3, this.toUrl(this.path(m)));
      }
    }
    clearAnnotation() {
      if (this.mapOpts.annotation !== false)
        if (this.root) {
          let o2;
          for (let v3 = this.root.nodes.length - 1;v3 >= 0; v3--)
            o2 = this.root.nodes[v3], o2.type === "comment" && o2.text.startsWith("# sourceMappingURL=") && this.root.removeChild(v3);
        } else
          this.css && (this.css = this.css.replace(/\n*\/\*#[\S\s]*?\*\/$/gm, ""));
    }
    generate() {
      if (this.clearAnnotation(), e2 && t8 && this.isMap())
        return this.generateMap();
      {
        let o2 = "";
        return this.stringify(this.root, (v3) => {
          o2 += v3;
        }), [o2];
      }
    }
    generateMap() {
      if (this.root)
        this.generateString();
      else if (this.previous().length === 1) {
        let o2 = this.previous()[0].consumer();
        o2.file = this.outputFile(), this.map = f.fromSourceMap(o2, {
          ignoreInvalidMapping: true
        });
      } else
        this.map = new f({
          file: this.outputFile(),
          ignoreInvalidMapping: true
        }), this.map.addMapping({
          generated: { column: 0, line: 1 },
          original: { column: 0, line: 1 },
          source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>"
        });
      return this.isSourcesContent() && this.setSourcesContent(), this.root && this.previous().length > 0 && this.applyPrevMaps(), this.isAnnotation() && this.addAnnotation(), this.isInline() ? [this.css] : [this.css, this.map];
    }
    generateString() {
      this.css = "", this.map = new f({
        file: this.outputFile(),
        ignoreInvalidMapping: true
      });
      let o2 = 1, v3 = 1, m = "<no source>", n2 = {
        generated: { column: 0, line: 0 },
        original: { column: 0, line: 0 },
        source: ""
      }, d2, _3;
      this.stringify(this.root, (w3, y2, x) => {
        if (this.css += w3, y2 && x !== "end" && (n2.generated.line = o2, n2.generated.column = v3 - 1, y2.source && y2.source.start ? (n2.source = this.sourcePath(y2), n2.original.line = y2.source.start.line, n2.original.column = y2.source.start.column - 1, this.map.addMapping(n2)) : (n2.source = m, n2.original.line = 1, n2.original.column = 0, this.map.addMapping(n2))), _3 = w3.match(/\n/g), _3 ? (o2 += _3.length, d2 = w3.lastIndexOf(`
`), v3 = w3.length - d2) : v3 += w3.length, y2 && x !== "start") {
          let g2 = y2.parent || { raws: {} };
          (!(y2.type === "decl" || y2.type === "atrule" && !y2.nodes) || y2 !== g2.last || g2.raws.semicolon) && (y2.source && y2.source.end ? (n2.source = this.sourcePath(y2), n2.original.line = y2.source.end.line, n2.original.column = y2.source.end.column - 1, n2.generated.line = o2, n2.generated.column = v3 - 2, this.map.addMapping(n2)) : (n2.source = m, n2.original.line = 1, n2.original.column = 0, n2.generated.line = o2, n2.generated.column = v3 - 1, this.map.addMapping(n2)));
        }
      });
    }
    isAnnotation() {
      return this.isInline() ? true : typeof this.mapOpts.annotation < "u" ? this.mapOpts.annotation : this.previous().length ? this.previous().some((o2) => o2.annotation) : true;
    }
    isInline() {
      if (typeof this.mapOpts.inline < "u")
        return this.mapOpts.inline;
      let o2 = this.mapOpts.annotation;
      return typeof o2 < "u" && o2 !== true ? false : this.previous().length ? this.previous().some((v3) => v3.inline) : true;
    }
    isMap() {
      return typeof this.opts.map < "u" ? !!this.opts.map : this.previous().length > 0;
    }
    isSourcesContent() {
      return typeof this.mapOpts.sourcesContent < "u" ? this.mapOpts.sourcesContent : this.previous().length ? this.previous().some((o2) => o2.withContent()) : true;
    }
    outputFile() {
      return this.opts.to ? this.path(this.opts.to) : this.opts.from ? this.path(this.opts.from) : "to.css";
    }
    path(o2) {
      if (this.mapOpts.absolute || o2.charCodeAt(0) === 60 || /^\w+:\/\//.test(o2))
        return o2;
      let v3 = this.memoizedPaths.get(o2);
      if (v3)
        return v3;
      let m = this.opts.to ? u(this.opts.to) : ".";
      typeof this.mapOpts.annotation == "string" && (m = u(h2(m, this.mapOpts.annotation)));
      let n2 = a(m, o2);
      return this.memoizedPaths.set(o2, n2), n2;
    }
    previous() {
      if (!this.previousMaps)
        if (this.previousMaps = [], this.root)
          this.root.walk((o2) => {
            if (o2.source && o2.source.input.map) {
              let v3 = o2.source.input.map;
              this.previousMaps.includes(v3) || this.previousMaps.push(v3);
            }
          });
        else {
          let o2 = new c2(this.originalCSS, this.opts);
          o2.map && this.previousMaps.push(o2.map);
        }
      return this.previousMaps;
    }
    setSourcesContent() {
      let o2 = {};
      if (this.root)
        this.root.walk((v3) => {
          if (v3.source) {
            let m = v3.source.input.from;
            if (m && !o2[m]) {
              o2[m] = true;
              let n2 = this.usesFileUrls ? this.toFileUrl(m) : this.toUrl(this.path(m));
              this.map.setSourceContent(n2, v3.source.input.css);
            }
          }
        });
      else if (this.css) {
        let v3 = this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>";
        this.map.setSourceContent(v3, this.css);
      }
    }
    sourcePath(o2) {
      return this.mapOpts.from ? this.toUrl(this.mapOpts.from) : this.usesFileUrls ? this.toFileUrl(o2.source.input.from) : this.toUrl(this.path(o2.source.input.from));
    }
    toBase64(o2) {
      return Buffer ? Buffer.from(o2).toString("base64") : window.btoa(unescape(encodeURIComponent(o2)));
    }
    toFileUrl(o2) {
      let v3 = this.memoizedFileURLs.get(o2);
      if (v3)
        return v3;
      if (s2) {
        let m = s2(o2).toString();
        return this.memoizedFileURLs.set(o2, m), m;
      } else
        throw new Error("`map.absolute` option is not available in this PostCSS build");
    }
    toUrl(o2) {
      let v3 = this.memoizedURLs.get(o2);
      if (v3)
        return v3;
      p === "\\" && (o2 = o2.replace(/\\/g, "/"));
      let m = encodeURI(o2).replace(/[#?]/g, encodeURIComponent);
      return this.memoizedURLs.set(o2, m), m;
    }
  }
  return zr2 = r2, zr2;
}
var Wr3;
var _a3;
function gu2() {
  if (_a3)
    return Wr3;
  _a3 = 1;
  const u = 39, a = 34, h2 = 92, p = 47, l2 = 10, f = 32, s2 = 12, c2 = 9, t8 = 13, e2 = 91, r2 = 93, i = 40, o2 = 41, v3 = 123, m = 125, n2 = 59, d2 = 42, _3 = 58, w3 = 64, y2 = /[\t\n\f\r "#'()/;[\\\]{}]/g, x = /[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g, g2 = /.[\r\n"'(/\\]/, O3 = /[\da-f]/i;
  return Wr3 = function(E2, b3 = {}) {
    let k3 = E2.css.valueOf(), q2 = b3.ignoreErrors, M2, W3, S3, P3, C, R3, $2, B3, z3, L3, F = k3.length, D = 0, I3 = [], N3 = [];
    function J3() {
      return D;
    }
    function T3(V4) {
      throw E2.error("Unclosed " + V4, D);
    }
    function U2() {
      return N3.length === 0 && D >= F;
    }
    function j3(V4) {
      if (N3.length)
        return N3.pop();
      if (D >= F)
        return;
      let K3 = V4 ? V4.ignoreUnclosed : false;
      switch (M2 = k3.charCodeAt(D), M2) {
        case l2:
        case f:
        case c2:
        case t8:
        case s2: {
          P3 = D;
          do
            P3 += 1, M2 = k3.charCodeAt(P3);
          while (M2 === f || M2 === l2 || M2 === c2 || M2 === t8 || M2 === s2);
          R3 = ["space", k3.slice(D, P3)], D = P3 - 1;
          break;
        }
        case e2:
        case r2:
        case v3:
        case m:
        case _3:
        case n2:
        case o2: {
          let X3 = String.fromCharCode(M2);
          R3 = [X3, X3, D];
          break;
        }
        case i: {
          if (L3 = I3.length ? I3.pop()[1] : "", z3 = k3.charCodeAt(D + 1), L3 === "url" && z3 !== u && z3 !== a && z3 !== f && z3 !== l2 && z3 !== c2 && z3 !== s2 && z3 !== t8) {
            P3 = D;
            do {
              if ($2 = false, P3 = k3.indexOf(")", P3 + 1), P3 === -1)
                if (q2 || K3) {
                  P3 = D;
                  break;
                } else
                  T3("bracket");
              for (B3 = P3;k3.charCodeAt(B3 - 1) === h2; )
                B3 -= 1, $2 = !$2;
            } while ($2);
            R3 = ["brackets", k3.slice(D, P3 + 1), D, P3], D = P3;
          } else
            P3 = k3.indexOf(")", D + 1), W3 = k3.slice(D, P3 + 1), P3 === -1 || g2.test(W3) ? R3 = ["(", "(", D] : (R3 = ["brackets", W3, D, P3], D = P3);
          break;
        }
        case u:
        case a: {
          C = M2 === u ? "'" : '"', P3 = D;
          do {
            if ($2 = false, P3 = k3.indexOf(C, P3 + 1), P3 === -1)
              if (q2 || K3) {
                P3 = D + 1;
                break;
              } else
                T3("string");
            for (B3 = P3;k3.charCodeAt(B3 - 1) === h2; )
              B3 -= 1, $2 = !$2;
          } while ($2);
          R3 = ["string", k3.slice(D, P3 + 1), D, P3], D = P3;
          break;
        }
        case w3: {
          y2.lastIndex = D + 1, y2.test(k3), y2.lastIndex === 0 ? P3 = k3.length - 1 : P3 = y2.lastIndex - 2, R3 = ["at-word", k3.slice(D, P3 + 1), D, P3], D = P3;
          break;
        }
        case h2: {
          for (P3 = D, S3 = true;k3.charCodeAt(P3 + 1) === h2; )
            P3 += 1, S3 = !S3;
          if (M2 = k3.charCodeAt(P3 + 1), S3 && M2 !== p && M2 !== f && M2 !== l2 && M2 !== c2 && M2 !== t8 && M2 !== s2 && (P3 += 1, O3.test(k3.charAt(P3)))) {
            for (;O3.test(k3.charAt(P3 + 1)); )
              P3 += 1;
            k3.charCodeAt(P3 + 1) === f && (P3 += 1);
          }
          R3 = ["word", k3.slice(D, P3 + 1), D, P3], D = P3;
          break;
        }
        default: {
          M2 === p && k3.charCodeAt(D + 1) === d2 ? (P3 = k3.indexOf("*/", D + 2) + 1, P3 === 0 && (q2 || K3 ? P3 = k3.length : T3("comment")), R3 = ["comment", k3.slice(D, P3 + 1), D, P3], D = P3) : (x.lastIndex = D + 1, x.test(k3), x.lastIndex === 0 ? P3 = k3.length - 1 : P3 = x.lastIndex - 2, R3 = ["word", k3.slice(D, P3 + 1), D, P3], I3.push(R3), D = P3);
          break;
        }
      }
      return D++, R3;
    }
    function H3(V4) {
      N3.push(V4);
    }
    return {
      back: H3,
      endOfFile: U2,
      nextToken: j3,
      position: J3
    };
  }, Wr3;
}
var Vr2;
var Sa2;
function mu2() {
  if (Sa2)
    return Vr2;
  Sa2 = 1;
  let u = Ri2(), a = ur3(), h2 = fr3(), p = lt3(), l2 = Mi2(), f = gu2();
  const s2 = {
    empty: true,
    space: true
  };
  function c2(e2) {
    for (let r2 = e2.length - 1;r2 >= 0; r2--) {
      let i = e2[r2], o2 = i[3] || i[2];
      if (o2)
        return o2;
    }
  }

  class t8 {
    constructor(r2) {
      this.input = r2, this.root = new p, this.current = this.root, this.spaces = "", this.semicolon = false, this.createTokenizer(), this.root.source = { input: r2, start: { column: 1, line: 1, offset: 0 } };
    }
    atrule(r2) {
      let i = new u;
      i.name = r2[1].slice(1), i.name === "" && this.unnamedAtrule(i, r2), this.init(i, r2[2]);
      let o2, v3, m, n2 = false, d2 = false, _3 = [], w3 = [];
      for (;!this.tokenizer.endOfFile(); ) {
        if (r2 = this.tokenizer.nextToken(), o2 = r2[0], o2 === "(" || o2 === "[" ? w3.push(o2 === "(" ? ")" : "]") : o2 === "{" && w3.length > 0 ? w3.push("}") : o2 === w3[w3.length - 1] && w3.pop(), w3.length === 0)
          if (o2 === ";") {
            i.source.end = this.getPosition(r2[2]), i.source.end.offset++, this.semicolon = true;
            break;
          } else if (o2 === "{") {
            d2 = true;
            break;
          } else if (o2 === "}") {
            if (_3.length > 0) {
              for (m = _3.length - 1, v3 = _3[m];v3 && v3[0] === "space"; )
                v3 = _3[--m];
              v3 && (i.source.end = this.getPosition(v3[3] || v3[2]), i.source.end.offset++);
            }
            this.end(r2);
            break;
          } else
            _3.push(r2);
        else
          _3.push(r2);
        if (this.tokenizer.endOfFile()) {
          n2 = true;
          break;
        }
      }
      i.raws.between = this.spacesAndCommentsFromEnd(_3), _3.length ? (i.raws.afterName = this.spacesAndCommentsFromStart(_3), this.raw(i, "params", _3), n2 && (r2 = _3[_3.length - 1], i.source.end = this.getPosition(r2[3] || r2[2]), i.source.end.offset++, this.spaces = i.raws.between, i.raws.between = "")) : (i.raws.afterName = "", i.params = ""), d2 && (i.nodes = [], this.current = i);
    }
    checkMissedSemicolon(r2) {
      let i = this.colon(r2);
      if (i === false)
        return;
      let o2 = 0, v3;
      for (let m = i - 1;m >= 0 && (v3 = r2[m], !(v3[0] !== "space" && (o2 += 1, o2 === 2))); m--)
        ;
      throw this.input.error("Missed semicolon", v3[0] === "word" ? v3[3] + 1 : v3[2]);
    }
    colon(r2) {
      let i = 0, o2, v3, m;
      for (let [n2, d2] of r2.entries()) {
        if (v3 = d2, m = v3[0], m === "(" && (i += 1), m === ")" && (i -= 1), i === 0 && m === ":")
          if (!o2)
            this.doubleColon(v3);
          else {
            if (o2[0] === "word" && o2[1] === "progid")
              continue;
            return n2;
          }
        o2 = v3;
      }
      return false;
    }
    comment(r2) {
      let i = new a;
      this.init(i, r2[2]), i.source.end = this.getPosition(r2[3] || r2[2]), i.source.end.offset++;
      let o2 = r2[1].slice(2, -2);
      if (/^\s*$/.test(o2))
        i.text = "", i.raws.left = o2, i.raws.right = "";
      else {
        let v3 = o2.match(/^(\s*)([^]*\S)(\s*)$/);
        i.text = v3[2], i.raws.left = v3[1], i.raws.right = v3[3];
      }
    }
    createTokenizer() {
      this.tokenizer = f(this.input);
    }
    decl(r2, i) {
      let o2 = new h2;
      this.init(o2, r2[0][2]);
      let v3 = r2[r2.length - 1];
      for (v3[0] === ";" && (this.semicolon = true, r2.pop()), o2.source.end = this.getPosition(v3[3] || v3[2] || c2(r2)), o2.source.end.offset++;r2[0][0] !== "word"; )
        r2.length === 1 && this.unknownWord(r2), o2.raws.before += r2.shift()[1];
      for (o2.source.start = this.getPosition(r2[0][2]), o2.prop = "";r2.length; ) {
        let w3 = r2[0][0];
        if (w3 === ":" || w3 === "space" || w3 === "comment")
          break;
        o2.prop += r2.shift()[1];
      }
      o2.raws.between = "";
      let m;
      for (;r2.length; )
        if (m = r2.shift(), m[0] === ":") {
          o2.raws.between += m[1];
          break;
        } else
          m[0] === "word" && /\w/.test(m[1]) && this.unknownWord([m]), o2.raws.between += m[1];
      (o2.prop[0] === "_" || o2.prop[0] === "*") && (o2.raws.before += o2.prop[0], o2.prop = o2.prop.slice(1));
      let n2 = [], d2;
      for (;r2.length && (d2 = r2[0][0], !(d2 !== "space" && d2 !== "comment")); )
        n2.push(r2.shift());
      this.precheckMissedSemicolon(r2);
      for (let w3 = r2.length - 1;w3 >= 0; w3--) {
        if (m = r2[w3], m[1].toLowerCase() === "!important") {
          o2.important = true;
          let y2 = this.stringFrom(r2, w3);
          y2 = this.spacesFromEnd(r2) + y2, y2 !== " !important" && (o2.raws.important = y2);
          break;
        } else if (m[1].toLowerCase() === "important") {
          let y2 = r2.slice(0), x = "";
          for (let g2 = w3;g2 > 0; g2--) {
            let O3 = y2[g2][0];
            if (x.trim().startsWith("!") && O3 !== "space")
              break;
            x = y2.pop()[1] + x;
          }
          x.trim().startsWith("!") && (o2.important = true, o2.raws.important = x, r2 = y2);
        }
        if (m[0] !== "space" && m[0] !== "comment")
          break;
      }
      r2.some((w3) => w3[0] !== "space" && w3[0] !== "comment") && (o2.raws.between += n2.map((w3) => w3[1]).join(""), n2 = []), this.raw(o2, "value", n2.concat(r2), i), o2.value.includes(":") && !i && this.checkMissedSemicolon(r2);
    }
    doubleColon(r2) {
      throw this.input.error("Double colon", { offset: r2[2] }, { offset: r2[2] + r2[1].length });
    }
    emptyRule(r2) {
      let i = new l2;
      this.init(i, r2[2]), i.selector = "", i.raws.between = "", this.current = i;
    }
    end(r2) {
      this.current.nodes && this.current.nodes.length && (this.current.raws.semicolon = this.semicolon), this.semicolon = false, this.current.raws.after = (this.current.raws.after || "") + this.spaces, this.spaces = "", this.current.parent ? (this.current.source.end = this.getPosition(r2[2]), this.current.source.end.offset++, this.current = this.current.parent) : this.unexpectedClose(r2);
    }
    endFile() {
      this.current.parent && this.unclosedBlock(), this.current.nodes && this.current.nodes.length && (this.current.raws.semicolon = this.semicolon), this.current.raws.after = (this.current.raws.after || "") + this.spaces, this.root.source.end = this.getPosition(this.tokenizer.position());
    }
    freeSemicolon(r2) {
      if (this.spaces += r2[1], this.current.nodes) {
        let i = this.current.nodes[this.current.nodes.length - 1];
        i && i.type === "rule" && !i.raws.ownSemicolon && (i.raws.ownSemicolon = this.spaces, this.spaces = "", i.source.end = this.getPosition(r2[2]), i.source.end.offset += i.raws.ownSemicolon.length);
      }
    }
    getPosition(r2) {
      let i = this.input.fromOffset(r2);
      return {
        column: i.col,
        line: i.line,
        offset: r2
      };
    }
    init(r2, i) {
      this.current.push(r2), r2.source = {
        input: this.input,
        start: this.getPosition(i)
      }, r2.raws.before = this.spaces, this.spaces = "", r2.type !== "comment" && (this.semicolon = false);
    }
    other(r2) {
      let i = false, o2 = null, v3 = false, m = null, n2 = [], d2 = r2[1].startsWith("--"), _3 = [], w3 = r2;
      for (;w3; ) {
        if (o2 = w3[0], _3.push(w3), o2 === "(" || o2 === "[")
          m || (m = w3), n2.push(o2 === "(" ? ")" : "]");
        else if (d2 && v3 && o2 === "{")
          m || (m = w3), n2.push("}");
        else if (n2.length === 0)
          if (o2 === ";")
            if (v3) {
              this.decl(_3, d2);
              return;
            } else
              break;
          else if (o2 === "{") {
            this.rule(_3);
            return;
          } else if (o2 === "}") {
            this.tokenizer.back(_3.pop()), i = true;
            break;
          } else
            o2 === ":" && (v3 = true);
        else
          o2 === n2[n2.length - 1] && (n2.pop(), n2.length === 0 && (m = null));
        w3 = this.tokenizer.nextToken();
      }
      if (this.tokenizer.endOfFile() && (i = true), n2.length > 0 && this.unclosedBracket(m), i && v3) {
        if (!d2)
          for (;_3.length && (w3 = _3[_3.length - 1][0], !(w3 !== "space" && w3 !== "comment")); )
            this.tokenizer.back(_3.pop());
        this.decl(_3, d2);
      } else
        this.unknownWord(_3);
    }
    parse() {
      let r2;
      for (;!this.tokenizer.endOfFile(); )
        switch (r2 = this.tokenizer.nextToken(), r2[0]) {
          case "space":
            this.spaces += r2[1];
            break;
          case ";":
            this.freeSemicolon(r2);
            break;
          case "}":
            this.end(r2);
            break;
          case "comment":
            this.comment(r2);
            break;
          case "at-word":
            this.atrule(r2);
            break;
          case "{":
            this.emptyRule(r2);
            break;
          default:
            this.other(r2);
            break;
        }
      this.endFile();
    }
    precheckMissedSemicolon() {}
    raw(r2, i, o2, v3) {
      let m, n2, d2 = o2.length, _3 = "", w3 = true, y2, x;
      for (let g2 = 0;g2 < d2; g2 += 1)
        m = o2[g2], n2 = m[0], n2 === "space" && g2 === d2 - 1 && !v3 ? w3 = false : n2 === "comment" ? (x = o2[g2 - 1] ? o2[g2 - 1][0] : "empty", y2 = o2[g2 + 1] ? o2[g2 + 1][0] : "empty", !s2[x] && !s2[y2] ? _3.slice(-1) === "," ? w3 = false : _3 += m[1] : w3 = false) : _3 += m[1];
      if (!w3) {
        let g2 = o2.reduce((O3, A) => O3 + A[1], "");
        r2.raws[i] = { raw: g2, value: _3 };
      }
      r2[i] = _3;
    }
    rule(r2) {
      r2.pop();
      let i = new l2;
      this.init(i, r2[0][2]), i.raws.between = this.spacesAndCommentsFromEnd(r2), this.raw(i, "selector", r2), this.current = i;
    }
    spacesAndCommentsFromEnd(r2) {
      let i, o2 = "";
      for (;r2.length && (i = r2[r2.length - 1][0], !(i !== "space" && i !== "comment")); )
        o2 = r2.pop()[1] + o2;
      return o2;
    }
    spacesAndCommentsFromStart(r2) {
      let i, o2 = "";
      for (;r2.length && (i = r2[0][0], !(i !== "space" && i !== "comment")); )
        o2 += r2.shift()[1];
      return o2;
    }
    spacesFromEnd(r2) {
      let i, o2 = "";
      for (;r2.length && (i = r2[r2.length - 1][0], i === "space"); )
        o2 = r2.pop()[1] + o2;
      return o2;
    }
    stringFrom(r2, i) {
      let o2 = "";
      for (let v3 = i;v3 < r2.length; v3++)
        o2 += r2[v3][1];
      return r2.splice(i, r2.length - i), o2;
    }
    unclosedBlock() {
      let r2 = this.current.source.start;
      throw this.input.error("Unclosed block", r2.line, r2.column);
    }
    unclosedBracket(r2) {
      throw this.input.error("Unclosed bracket", { offset: r2[2] }, { offset: r2[2] + 1 });
    }
    unexpectedClose(r2) {
      throw this.input.error("Unexpected }", { offset: r2[2] }, { offset: r2[2] + 1 });
    }
    unknownWord(r2) {
      throw this.input.error("Unknown word " + r2[0][1], { offset: r2[0][2] }, { offset: r2[0][2] + r2[0][1].length });
    }
    unnamedAtrule(r2, i) {
      throw this.input.error("At-rule without name", { offset: i[2] }, { offset: i[2] + i[1].length });
    }
  }
  return Vr2 = t8, Vr2;
}
var jr3;
var xa2;
function Di2() {
  if (xa2)
    return jr3;
  xa2 = 1;
  let u = nt3(), a = cr3(), h2 = mu2();
  function p(l2, f) {
    let s2 = new a(l2, f), c2 = new h2(s2);
    try {
      c2.parse();
    } catch (t8) {
      throw false, t8;
    }
    return c2.root;
  }
  return jr3 = p, p.default = p, u.registerParse(p), jr3;
}
var Br3;
var Oa2;
function gl() {
  if (Oa2)
    return Br3;
  Oa2 = 1;

  class u {
    constructor(h2, p = {}) {
      if (this.type = "warning", this.text = h2, p.node && p.node.source) {
        let l2 = p.node.rangeBy(p);
        this.line = l2.start.line, this.column = l2.start.column, this.endLine = l2.end.line, this.endColumn = l2.end.column;
      }
      for (let l2 in p)
        this[l2] = p[l2];
    }
    toString() {
      return this.node ? this.node.error(this.text, {
        index: this.index,
        plugin: this.plugin,
        word: this.word
      }).message : this.plugin ? this.plugin + ": " + this.text : this.text;
    }
  }
  return Br3 = u, u.default = u, Br3;
}
var Gr3;
var ka2;
function qi2() {
  if (ka2)
    return Gr3;
  ka2 = 1;
  let u = gl();

  class a {
    get content() {
      return this.css;
    }
    constructor(p, l2, f) {
      this.processor = p, this.messages = [], this.root = l2, this.opts = f, this.css = undefined, this.map = undefined;
    }
    toString() {
      return this.css;
    }
    warn(p, l2 = {}) {
      l2.plugin || this.lastPlugin && this.lastPlugin.postcssPlugin && (l2.plugin = this.lastPlugin.postcssPlugin);
      let f = new u(p, l2);
      return this.messages.push(f), f;
    }
    warnings() {
      return this.messages.filter((p) => p.type === "warning");
    }
  }
  return Gr3 = a, a.default = a, Gr3;
}
var Yr2;
var Pa2;
function ml() {
  if (Pa2)
    return Yr2;
  Pa2 = 1;
  let u = {};
  return Yr2 = function(h2) {
    u[h2] || (u[h2] = true, typeof console < "u" && console.warn && console.warn(h2));
  }, Yr2;
}
var Qr3;
var Ea2;
function yl() {
  if (Ea2)
    return Qr3;
  Ea2 = 1;
  let u = nt3(), a = Ii2(), h2 = vl(), p = Di2(), l2 = qi2(), f = lt3(), s2 = or3(), { isClean: c2, my: t8 } = Ci2(), e2 = ml();
  const r2 = {
    atrule: "AtRule",
    comment: "Comment",
    decl: "Declaration",
    document: "Document",
    root: "Root",
    rule: "Rule"
  }, i = {
    AtRule: true,
    AtRuleExit: true,
    Comment: true,
    CommentExit: true,
    Declaration: true,
    DeclarationExit: true,
    Document: true,
    DocumentExit: true,
    Once: true,
    OnceExit: true,
    postcssPlugin: true,
    prepare: true,
    Root: true,
    RootExit: true,
    Rule: true,
    RuleExit: true
  }, o2 = {
    Once: true,
    postcssPlugin: true,
    prepare: true
  }, v3 = 0;
  function m(x) {
    return typeof x == "object" && typeof x.then == "function";
  }
  function n2(x) {
    let g2 = false, O3 = r2[x.type];
    return x.type === "decl" ? g2 = x.prop.toLowerCase() : x.type === "atrule" && (g2 = x.name.toLowerCase()), g2 && x.append ? [
      O3,
      O3 + "-" + g2,
      v3,
      O3 + "Exit",
      O3 + "Exit-" + g2
    ] : g2 ? [O3, O3 + "-" + g2, O3 + "Exit", O3 + "Exit-" + g2] : x.append ? [O3, v3, O3 + "Exit"] : [O3, O3 + "Exit"];
  }
  function d2(x) {
    let g2;
    return x.type === "document" ? g2 = ["Document", v3, "DocumentExit"] : x.type === "root" ? g2 = ["Root", v3, "RootExit"] : g2 = n2(x), {
      eventIndex: 0,
      events: g2,
      iterator: 0,
      node: x,
      visitorIndex: 0,
      visitors: []
    };
  }
  function _3(x) {
    return x[c2] = false, x.nodes && x.nodes.forEach((g2) => _3(g2)), x;
  }
  let w3 = {};

  class y2 {
    get content() {
      return this.stringify().content;
    }
    get css() {
      return this.stringify().css;
    }
    get map() {
      return this.stringify().map;
    }
    get messages() {
      return this.sync().messages;
    }
    get opts() {
      return this.result.opts;
    }
    get processor() {
      return this.result.processor;
    }
    get root() {
      return this.sync().root;
    }
    get [Symbol.toStringTag]() {
      return "LazyResult";
    }
    constructor(g2, O3, A) {
      this.stringified = false, this.processed = false;
      let E2;
      if (typeof O3 == "object" && O3 !== null && (O3.type === "root" || O3.type === "document"))
        E2 = _3(O3);
      else if (O3 instanceof y2 || O3 instanceof l2)
        E2 = _3(O3.root), O3.map && (typeof A.map > "u" && (A.map = {}), A.map.inline || (A.map.inline = false), A.map.prev = O3.map);
      else {
        let b3 = p;
        A.syntax && (b3 = A.syntax.parse), A.parser && (b3 = A.parser), b3.parse && (b3 = b3.parse);
        try {
          E2 = b3(O3, A);
        } catch (k3) {
          this.processed = true, this.error = k3;
        }
        E2 && !E2[t8] && u.rebuild(E2);
      }
      this.result = new l2(g2, E2, A), this.helpers = { ...w3, postcss: w3, result: this.result }, this.plugins = this.processor.plugins.map((b3) => typeof b3 == "object" && b3.prepare ? { ...b3, ...b3.prepare(this.result) } : b3);
    }
    async() {
      return this.error ? Promise.reject(this.error) : this.processed ? Promise.resolve(this.result) : (this.processing || (this.processing = this.runAsync()), this.processing);
    }
    catch(g2) {
      return this.async().catch(g2);
    }
    finally(g2) {
      return this.async().then(g2, g2);
    }
    getAsyncError() {
      throw new Error("Use process(css).then(cb) to work with async plugins");
    }
    handleError(g2, O3) {
      let A = this.result.lastPlugin;
      try {
        if (O3 && O3.addToError(g2), this.error = g2, g2.name === "CssSyntaxError" && !g2.plugin)
          g2.plugin = A.postcssPlugin, g2.setMessage();
        else if (A.postcssVersion && false) {}
      } catch (E2) {
        console && console.error && console.error(E2);
      }
      return g2;
    }
    prepareVisitors() {
      this.listeners = {};
      let g2 = (O3, A, E2) => {
        this.listeners[A] || (this.listeners[A] = []), this.listeners[A].push([O3, E2]);
      };
      for (let O3 of this.plugins)
        if (typeof O3 == "object")
          for (let A in O3) {
            if (!i[A] && /^[A-Z]/.test(A))
              throw new Error(`Unknown event ${A} in ${O3.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`);
            if (!o2[A])
              if (typeof O3[A] == "object")
                for (let E2 in O3[A])
                  E2 === "*" ? g2(O3, A, O3[A][E2]) : g2(O3, A + "-" + E2.toLowerCase(), O3[A][E2]);
              else
                typeof O3[A] == "function" && g2(O3, A, O3[A]);
          }
      this.hasListener = Object.keys(this.listeners).length > 0;
    }
    async runAsync() {
      this.plugin = 0;
      for (let g2 = 0;g2 < this.plugins.length; g2++) {
        let O3 = this.plugins[g2], A = this.runOnRoot(O3);
        if (m(A))
          try {
            await A;
          } catch (E2) {
            throw this.handleError(E2);
          }
      }
      if (this.prepareVisitors(), this.hasListener) {
        let g2 = this.result.root;
        for (;!g2[c2]; ) {
          g2[c2] = true;
          let O3 = [d2(g2)];
          for (;O3.length > 0; ) {
            let A = this.visitTick(O3);
            if (m(A))
              try {
                await A;
              } catch (E2) {
                let b3 = O3[O3.length - 1].node;
                throw this.handleError(E2, b3);
              }
          }
        }
        if (this.listeners.OnceExit)
          for (let [O3, A] of this.listeners.OnceExit) {
            this.result.lastPlugin = O3;
            try {
              if (g2.type === "document") {
                let E2 = g2.nodes.map((b3) => A(b3, this.helpers));
                await Promise.all(E2);
              } else
                await A(g2, this.helpers);
            } catch (E2) {
              throw this.handleError(E2);
            }
          }
      }
      return this.processed = true, this.stringify();
    }
    runOnRoot(g2) {
      this.result.lastPlugin = g2;
      try {
        if (typeof g2 == "object" && g2.Once) {
          if (this.result.root.type === "document") {
            let O3 = this.result.root.nodes.map((A) => g2.Once(A, this.helpers));
            return m(O3[0]) ? Promise.all(O3) : O3;
          }
          return g2.Once(this.result.root, this.helpers);
        } else if (typeof g2 == "function")
          return g2(this.result.root, this.result);
      } catch (O3) {
        throw this.handleError(O3);
      }
    }
    stringify() {
      if (this.error)
        throw this.error;
      if (this.stringified)
        return this.result;
      this.stringified = true, this.sync();
      let g2 = this.result.opts, O3 = s2;
      g2.syntax && (O3 = g2.syntax.stringify), g2.stringifier && (O3 = g2.stringifier), O3.stringify && (O3 = O3.stringify);
      let E2 = new h2(O3, this.result.root, this.result.opts).generate();
      return this.result.css = E2[0], this.result.map = E2[1], this.result;
    }
    sync() {
      if (this.error)
        throw this.error;
      if (this.processed)
        return this.result;
      if (this.processed = true, this.processing)
        throw this.getAsyncError();
      for (let g2 of this.plugins) {
        let O3 = this.runOnRoot(g2);
        if (m(O3))
          throw this.getAsyncError();
      }
      if (this.prepareVisitors(), this.hasListener) {
        let g2 = this.result.root;
        for (;!g2[c2]; )
          g2[c2] = true, this.walkSync(g2);
        if (this.listeners.OnceExit)
          if (g2.type === "document")
            for (let O3 of g2.nodes)
              this.visitSync(this.listeners.OnceExit, O3);
          else
            this.visitSync(this.listeners.OnceExit, g2);
      }
      return this.result;
    }
    then(g2, O3) {
      return false, this.async().then(g2, O3);
    }
    toString() {
      return this.css;
    }
    visitSync(g2, O3) {
      for (let [A, E2] of g2) {
        this.result.lastPlugin = A;
        let b3;
        try {
          b3 = E2(O3, this.helpers);
        } catch (k3) {
          throw this.handleError(k3, O3.proxyOf);
        }
        if (O3.type !== "root" && O3.type !== "document" && !O3.parent)
          return true;
        if (m(b3))
          throw this.getAsyncError();
      }
    }
    visitTick(g2) {
      let O3 = g2[g2.length - 1], { node: A, visitors: E2 } = O3;
      if (A.type !== "root" && A.type !== "document" && !A.parent) {
        g2.pop();
        return;
      }
      if (E2.length > 0 && O3.visitorIndex < E2.length) {
        let [k3, q2] = E2[O3.visitorIndex];
        O3.visitorIndex += 1, O3.visitorIndex === E2.length && (O3.visitors = [], O3.visitorIndex = 0), this.result.lastPlugin = k3;
        try {
          return q2(A.toProxy(), this.helpers);
        } catch (M2) {
          throw this.handleError(M2, A);
        }
      }
      if (O3.iterator !== 0) {
        let k3 = O3.iterator, q2;
        for (;q2 = A.nodes[A.indexes[k3]]; )
          if (A.indexes[k3] += 1, !q2[c2]) {
            q2[c2] = true, g2.push(d2(q2));
            return;
          }
        O3.iterator = 0, delete A.indexes[k3];
      }
      let b3 = O3.events;
      for (;O3.eventIndex < b3.length; ) {
        let k3 = b3[O3.eventIndex];
        if (O3.eventIndex += 1, k3 === v3) {
          A.nodes && A.nodes.length && (A[c2] = true, O3.iterator = A.getIterator());
          return;
        } else if (this.listeners[k3]) {
          O3.visitors = this.listeners[k3];
          return;
        }
      }
      g2.pop();
    }
    walkSync(g2) {
      g2[c2] = true;
      let O3 = n2(g2);
      for (let A of O3)
        if (A === v3)
          g2.nodes && g2.each((E2) => {
            E2[c2] || this.walkSync(E2);
          });
        else {
          let E2 = this.listeners[A];
          if (E2 && this.visitSync(E2, g2.toProxy()))
            return;
        }
    }
    warnings() {
      return this.sync().warnings();
    }
  }
  return y2.registerPostcss = (x) => {
    w3 = x;
  }, Qr3 = y2, y2.default = y2, f.registerLazyResult(y2), a.registerLazyResult(y2), Qr3;
}
var Hr2;
var Ta2;
function yu2() {
  if (Ta2)
    return Hr2;
  Ta2 = 1;
  let u = vl(), a = Di2();
  const h2 = qi2();
  let p = or3(), l2 = ml();

  class f {
    get content() {
      return this.result.css;
    }
    get css() {
      return this.result.css;
    }
    get map() {
      return this.result.map;
    }
    get messages() {
      return [];
    }
    get opts() {
      return this.result.opts;
    }
    get processor() {
      return this.result.processor;
    }
    get root() {
      if (this._root)
        return this._root;
      let c2, t8 = a;
      try {
        c2 = t8(this._css, this._opts);
      } catch (e2) {
        this.error = e2;
      }
      if (this.error)
        throw this.error;
      return this._root = c2, c2;
    }
    get [Symbol.toStringTag]() {
      return "NoWorkResult";
    }
    constructor(c2, t8, e2) {
      t8 = t8.toString(), this.stringified = false, this._processor = c2, this._css = t8, this._opts = e2, this._map = undefined;
      let r2, i = p;
      this.result = new h2(this._processor, r2, this._opts), this.result.css = t8;
      let o2 = this;
      Object.defineProperty(this.result, "root", {
        get() {
          return o2.root;
        }
      });
      let v3 = new u(i, r2, this._opts, t8);
      if (v3.isMap()) {
        let [m, n2] = v3.generate();
        m && (this.result.css = m), n2 && (this.result.map = n2);
      } else
        v3.clearAnnotation(), this.result.css = v3.css;
    }
    async() {
      return this.error ? Promise.reject(this.error) : Promise.resolve(this.result);
    }
    catch(c2) {
      return this.async().catch(c2);
    }
    finally(c2) {
      return this.async().then(c2, c2);
    }
    sync() {
      if (this.error)
        throw this.error;
      return this.result;
    }
    then(c2, t8) {
      return false, this.async().then(c2, t8);
    }
    toString() {
      return this._css;
    }
    warnings() {
      return [];
    }
  }
  return Hr2 = f, f.default = f, Hr2;
}
var Jr3;
var Aa2;
function wu2() {
  if (Aa2)
    return Jr3;
  Aa2 = 1;
  let u = Ii2(), a = yl(), h2 = yu2(), p = lt3();

  class l2 {
    constructor(s2 = []) {
      this.version = "8.5.3", this.plugins = this.normalize(s2);
    }
    normalize(s2) {
      let c2 = [];
      for (let t8 of s2)
        if (t8.postcss === true ? t8 = t8() : t8.postcss && (t8 = t8.postcss), typeof t8 == "object" && Array.isArray(t8.plugins))
          c2 = c2.concat(t8.plugins);
        else if (typeof t8 == "object" && t8.postcssPlugin)
          c2.push(t8);
        else if (typeof t8 == "function")
          c2.push(t8);
        else if (typeof t8 == "object" && (t8.parse || t8.stringify)) {
          if (false)
            ;
        } else
          throw new Error(t8 + " is not a PostCSS plugin");
      return c2;
    }
    process(s2, c2 = {}) {
      return !this.plugins.length && !c2.parser && !c2.stringifier && !c2.syntax ? new h2(this, s2, c2) : new a(this, s2, c2);
    }
    use(s2) {
      return this.plugins = this.plugins.concat(this.normalize([s2])), this;
    }
  }
  return Jr3 = l2, l2.default = l2, p.registerProcessor(l2), u.registerProcessor(l2), Jr3;
}
var Kr3;
var Ca2;
function Be2() {
  if (Ca2)
    return Kr3;
  Ca2 = 1;
  let u = Ri2(), a = ur3(), h2 = nt3(), p = Ai2(), l2 = fr3(), f = Ii2(), s2 = vu2(), c2 = cr3(), t8 = yl(), e2 = hl(), r2 = lr3(), i = Di2(), o2 = wu2(), v3 = qi2(), m = lt3(), n2 = Mi2(), d2 = or3(), _3 = gl();
  function w3(...y2) {
    return y2.length === 1 && Array.isArray(y2[0]) && (y2 = y2[0]), new o2(y2);
  }
  return w3.plugin = function(x, g2) {
    let O3 = false;
    function A(...b3) {
      console && console.warn && !O3 && (O3 = true, console.warn(x + `: postcss.plugin was deprecated. Migration guide:
https://evilmartians.com/chronicles/postcss-8-plugin-migration`), process.env.LANG && process.env.LANG.startsWith("cn") && console.warn(x + `: 里面 postcss.plugin 被弃用. 迁移指南:
https://www.w3ctech.com/topic/2226`));
      let k3 = g2(...b3);
      return k3.postcssPlugin = x, k3.postcssVersion = new o2().version, k3;
    }
    let E2;
    return Object.defineProperty(A, "postcss", {
      get() {
        return E2 || (E2 = A()), E2;
      }
    }), A.process = function(b3, k3, q2) {
      return w3([A(q2)]).process(b3, k3);
    }, A;
  }, w3.stringify = d2, w3.parse = i, w3.fromJSON = s2, w3.list = e2, w3.comment = (y2) => new a(y2), w3.atRule = (y2) => new u(y2), w3.decl = (y2) => new l2(y2), w3.rule = (y2) => new n2(y2), w3.root = (y2) => new m(y2), w3.document = (y2) => new f(y2), w3.CssSyntaxError = p, w3.Declaration = l2, w3.Container = h2, w3.Processor = o2, w3.Document = f, w3.Comment = a, w3.Warning = _3, w3.AtRule = u, w3.Result = v3, w3.Input = c2, w3.Rule = n2, w3.Root = m, w3.Node = r2, t8.registerPostcss(w3), Kr3 = w3, w3.default = w3, Kr3;
}
var bu2 = Be2();
var Le3 = /* @__PURE__ */ He3(bu2);
Le3.stringify;
Le3.fromJSON;
Le3.plugin;
var _u2 = Le3.parse;
Le3.list;
Le3.document;
Le3.comment;
Le3.atRule;
var Su2 = Le3.rule;
var xu2 = Le3.decl;
Le3.root;
Le3.CssSyntaxError;
Le3.Declaration;
Le3.Container;
Le3.Processor;
Le3.Document;
Le3.Comment;
Le3.Warning;
var wl = Le3.AtRule;
Le3.Result;
Le3.Input;
var Ra2 = Le3.Rule;
var Ou2 = Le3.Root;
Le3.Node;
var ku2 = (u) => u.replace(/\/\*[\s\S]*?\*\//gm, "").replace(/;\s+/gm, ";").replace(/:\s+/gm, ":").replace(/\)\s*{/gm, "){").replace(/\s+\(/gm, "(").replace(/{\s+/gm, "{").replace(/}\s+/gm, "}").replace(/\s*{/gm, "{").replace(/;?\s*}/gm, "}");
var Li2 = (u) => {
  if (u.first === undefined) {
    const a = u.parent;
    a && (u.remove(), Li2(a));
  }
};
var Pu2 = (u) => {
  u.walkRules((a) => {
    u.walkRules(a.selector, (h2) => {
      if (h2 === a)
        return;
      const p = h2.parent;
      h2.remove(), p && Li2(p);
    });
  });
};
var bl = (u) => typeof u.type == "function" || u.type.render !== undefined;
function sr3(u, a) {
  const h2 = ot3.Children.map(u, (p) => {
    if (ot3.isValidElement(p)) {
      const l2 = { ...p.props };
      p.props.children && !bl(p) && (l2.children = sr3(p.props.children, a));
      const f = a(ot3.cloneElement(p, l2, l2.children));
      if (ot3.isValidElement(f) && (typeof f.type == "function" || f.type.render)) {
        const c2 = (typeof f.type == "object" ? f.type.render : f.type)(f.props);
        return sr3(c2, a);
      }
      return f;
    }
    return a(p);
  });
  return h2 && h2.length === 1 ? h2[0] : h2;
}
var Eu2 = {
  0: "zero",
  1: "one",
  2: "two",
  3: "three",
  4: "four",
  5: "five",
  6: "six",
  7: "seven",
  8: "eight",
  9: "nine"
};
var _l = (u) => u.replaceAll("+", "plus").replaceAll("[", "").replaceAll("%", "pc").replaceAll("]", "").replaceAll("(", "").replaceAll(")", "").replaceAll("!", "imprtnt").replaceAll(">", "gt").replaceAll("<", "lt").replaceAll("=", "eq").replace(/^[0-9]/, (a) => Eu2[a]).replace(/[^a-zA-Z0-9\-_]/g, "_");
var vt3 = { exports: {} };
var gt3 = { exports: {} };
var mt3 = { exports: {} };
var yt3 = { exports: {} };
var wt3 = { exports: {} };
var bt3 = { exports: {} };
var Ye3 = {};
var _t3 = { exports: {} };
var Ia2;
function Sl() {
  return Ia2 || (Ia2 = 1, function(u, a) {
    a.__esModule = true, a.default = l2;
    function h2(f) {
      for (var s2 = f.toLowerCase(), c2 = "", t8 = false, e2 = 0;e2 < 6 && s2[e2] !== undefined; e2++) {
        var r2 = s2.charCodeAt(e2), i = r2 >= 97 && r2 <= 102 || r2 >= 48 && r2 <= 57;
        if (t8 = r2 === 32, !i)
          break;
        c2 += s2[e2];
      }
      if (c2.length !== 0) {
        var o2 = parseInt(c2, 16), v3 = o2 >= 55296 && o2 <= 57343;
        return v3 || o2 === 0 || o2 > 1114111 ? ["�", c2.length + (t8 ? 1 : 0)] : [String.fromCodePoint(o2), c2.length + (t8 ? 1 : 0)];
      }
    }
    var p = /\\/;
    function l2(f) {
      var s2 = p.test(f);
      if (!s2)
        return f;
      for (var c2 = "", t8 = 0;t8 < f.length; t8++) {
        if (f[t8] === "\\") {
          var e2 = h2(f.slice(t8 + 1, t8 + 7));
          if (e2 !== undefined) {
            c2 += e2[0], t8 += e2[1];
            continue;
          }
          if (f[t8 + 1] === "\\") {
            c2 += "\\", t8++;
            continue;
          }
          f.length === t8 + 1 && (c2 += f[t8]);
          continue;
        }
        c2 += f[t8];
      }
      return c2;
    }
    u.exports = a.default;
  }(_t3, _t3.exports)), _t3.exports;
}
var St3 = { exports: {} };
var Ma2;
function Tu2() {
  return Ma2 || (Ma2 = 1, function(u, a) {
    a.__esModule = true, a.default = h2;
    function h2(p) {
      for (var l2 = arguments.length, f = new Array(l2 > 1 ? l2 - 1 : 0), s2 = 1;s2 < l2; s2++)
        f[s2 - 1] = arguments[s2];
      for (;f.length > 0; ) {
        var c2 = f.shift();
        if (!p[c2])
          return;
        p = p[c2];
      }
      return p;
    }
    u.exports = a.default;
  }(St3, St3.exports)), St3.exports;
}
var xt3 = { exports: {} };
var Da2;
function Au2() {
  return Da2 || (Da2 = 1, function(u, a) {
    a.__esModule = true, a.default = h2;
    function h2(p) {
      for (var l2 = arguments.length, f = new Array(l2 > 1 ? l2 - 1 : 0), s2 = 1;s2 < l2; s2++)
        f[s2 - 1] = arguments[s2];
      for (;f.length > 0; ) {
        var c2 = f.shift();
        p[c2] || (p[c2] = {}), p = p[c2];
      }
    }
    u.exports = a.default;
  }(xt3, xt3.exports)), xt3.exports;
}
var Ot3 = { exports: {} };
var qa2;
function Cu2() {
  return qa2 || (qa2 = 1, function(u, a) {
    a.__esModule = true, a.default = h2;
    function h2(p) {
      for (var l2 = "", f = p.indexOf("/*"), s2 = 0;f >= 0; ) {
        l2 = l2 + p.slice(s2, f);
        var c2 = p.indexOf("*/", f + 2);
        if (c2 < 0)
          return l2;
        s2 = c2 + 2, f = p.indexOf("/*", s2);
      }
      return l2 = l2 + p.slice(s2), l2;
    }
    u.exports = a.default;
  }(Ot3, Ot3.exports)), Ot3.exports;
}
var La2;
function dr3() {
  if (La2)
    return Ye3;
  La2 = 1, Ye3.__esModule = true, Ye3.unesc = Ye3.stripComments = Ye3.getProp = Ye3.ensureObject = undefined;
  var u = l2(Sl());
  Ye3.unesc = u.default;
  var a = l2(Tu2());
  Ye3.getProp = a.default;
  var h2 = l2(Au2());
  Ye3.ensureObject = h2.default;
  var p = l2(Cu2());
  Ye3.stripComments = p.default;
  function l2(f) {
    return f && f.__esModule ? f : { default: f };
  }
  return Ye3;
}
var Na2;
function et3() {
  return Na2 || (Na2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = dr3();
    function p(c2, t8) {
      for (var e2 = 0;e2 < t8.length; e2++) {
        var r2 = t8[e2];
        r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(c2, r2.key, r2);
      }
    }
    function l2(c2, t8, e2) {
      return t8 && p(c2.prototype, t8), Object.defineProperty(c2, "prototype", { writable: false }), c2;
    }
    var f = function c(t8, e2) {
      if (typeof t8 != "object" || t8 === null)
        return t8;
      var r2 = new t8.constructor;
      for (var i in t8)
        if (t8.hasOwnProperty(i)) {
          var o2 = t8[i], v3 = typeof o2;
          i === "parent" && v3 === "object" ? e2 && (r2[i] = e2) : o2 instanceof Array ? r2[i] = o2.map(function(m) {
            return c(m, r2);
          }) : r2[i] = c(o2, r2);
        }
      return r2;
    }, s2 = /* @__PURE__ */ function() {
      function c2(e2) {
        e2 === undefined && (e2 = {}), Object.assign(this, e2), this.spaces = this.spaces || {}, this.spaces.before = this.spaces.before || "", this.spaces.after = this.spaces.after || "";
      }
      var t8 = c2.prototype;
      return t8.remove = function() {
        return this.parent && this.parent.removeChild(this), this.parent = undefined, this;
      }, t8.replaceWith = function() {
        if (this.parent) {
          for (var r2 in arguments)
            this.parent.insertBefore(this, arguments[r2]);
          this.remove();
        }
        return this;
      }, t8.next = function() {
        return this.parent.at(this.parent.index(this) + 1);
      }, t8.prev = function() {
        return this.parent.at(this.parent.index(this) - 1);
      }, t8.clone = function(r2) {
        r2 === undefined && (r2 = {});
        var i = f(this);
        for (var o2 in r2)
          i[o2] = r2[o2];
        return i;
      }, t8.appendToPropertyAndEscape = function(r2, i, o2) {
        this.raws || (this.raws = {});
        var v3 = this[r2], m = this.raws[r2];
        this[r2] = v3 + i, m || o2 !== i ? this.raws[r2] = (m || v3) + o2 : delete this.raws[r2];
      }, t8.setPropertyAndEscape = function(r2, i, o2) {
        this.raws || (this.raws = {}), this[r2] = i, this.raws[r2] = o2;
      }, t8.setPropertyWithoutEscape = function(r2, i) {
        this[r2] = i, this.raws && delete this.raws[r2];
      }, t8.isAtPosition = function(r2, i) {
        if (this.source && this.source.start && this.source.end)
          return !(this.source.start.line > r2 || this.source.end.line < r2 || this.source.start.line === r2 && this.source.start.column > i || this.source.end.line === r2 && this.source.end.column < i);
      }, t8.stringifyProperty = function(r2) {
        return this.raws && this.raws[r2] || this[r2];
      }, t8.valueToString = function() {
        return String(this.stringifyProperty("value"));
      }, t8.toString = function() {
        return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join("");
      }, l2(c2, [{
        key: "rawSpaceBefore",
        get: function() {
          var r2 = this.raws && this.raws.spaces && this.raws.spaces.before;
          return r2 === undefined && (r2 = this.spaces && this.spaces.before), r2 || "";
        },
        set: function(r2) {
          (0, h2.ensureObject)(this, "raws", "spaces"), this.raws.spaces.before = r2;
        }
      }, {
        key: "rawSpaceAfter",
        get: function() {
          var r2 = this.raws && this.raws.spaces && this.raws.spaces.after;
          return r2 === undefined && (r2 = this.spaces.after), r2 || "";
        },
        set: function(r2) {
          (0, h2.ensureObject)(this, "raws", "spaces"), this.raws.spaces.after = r2;
        }
      }]), c2;
    }();
    a.default = s2, u.exports = a.default;
  }(bt3, bt3.exports)), bt3.exports;
}
var Re3 = {};
var Fa2;
function Fe3() {
  if (Fa2)
    return Re3;
  Fa2 = 1, Re3.__esModule = true, Re3.UNIVERSAL = Re3.TAG = Re3.STRING = Re3.SELECTOR = Re3.ROOT = Re3.PSEUDO = Re3.NESTING = Re3.ID = Re3.COMMENT = Re3.COMBINATOR = Re3.CLASS = Re3.ATTRIBUTE = undefined;
  var u = "tag";
  Re3.TAG = u;
  var a = "string";
  Re3.STRING = a;
  var h2 = "selector";
  Re3.SELECTOR = h2;
  var p = "root";
  Re3.ROOT = p;
  var l2 = "pseudo";
  Re3.PSEUDO = l2;
  var f = "nesting";
  Re3.NESTING = f;
  var s2 = "id";
  Re3.ID = s2;
  var c2 = "comment";
  Re3.COMMENT = c2;
  var t8 = "combinator";
  Re3.COMBINATOR = t8;
  var e2 = "class";
  Re3.CLASS = e2;
  var r2 = "attribute";
  Re3.ATTRIBUTE = r2;
  var i = "universal";
  return Re3.UNIVERSAL = i, Re3;
}
var $a2;
function Ni2() {
  return $a2 || ($a2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = s2(et3()), p = f(Fe3());
    function l2(n2) {
      if (typeof WeakMap != "function")
        return null;
      var d2 = /* @__PURE__ */ new WeakMap, _3 = /* @__PURE__ */ new WeakMap;
      return (l2 = function(y2) {
        return y2 ? _3 : d2;
      })(n2);
    }
    function f(n2, d2) {
      if (n2 && n2.__esModule)
        return n2;
      if (n2 === null || typeof n2 != "object" && typeof n2 != "function")
        return { default: n2 };
      var _3 = l2(d2);
      if (_3 && _3.has(n2))
        return _3.get(n2);
      var w3 = {}, y2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var x in n2)
        if (x !== "default" && Object.prototype.hasOwnProperty.call(n2, x)) {
          var g2 = y2 ? Object.getOwnPropertyDescriptor(n2, x) : null;
          g2 && (g2.get || g2.set) ? Object.defineProperty(w3, x, g2) : w3[x] = n2[x];
        }
      return w3.default = n2, _3 && _3.set(n2, w3), w3;
    }
    function s2(n2) {
      return n2 && n2.__esModule ? n2 : { default: n2 };
    }
    function c2(n2, d2) {
      var _3 = typeof Symbol < "u" && n2[Symbol.iterator] || n2["@@iterator"];
      if (_3)
        return (_3 = _3.call(n2)).next.bind(_3);
      if (Array.isArray(n2) || (_3 = t8(n2)) || d2) {
        _3 && (n2 = _3);
        var w3 = 0;
        return function() {
          return w3 >= n2.length ? { done: true } : { done: false, value: n2[w3++] };
        };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function t8(n2, d2) {
      if (n2) {
        if (typeof n2 == "string")
          return e2(n2, d2);
        var _3 = Object.prototype.toString.call(n2).slice(8, -1);
        if (_3 === "Object" && n2.constructor && (_3 = n2.constructor.name), _3 === "Map" || _3 === "Set")
          return Array.from(n2);
        if (_3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_3))
          return e2(n2, d2);
      }
    }
    function e2(n2, d2) {
      (d2 == null || d2 > n2.length) && (d2 = n2.length);
      for (var _3 = 0, w3 = new Array(d2);_3 < d2; _3++)
        w3[_3] = n2[_3];
      return w3;
    }
    function r2(n2, d2) {
      for (var _3 = 0;_3 < d2.length; _3++) {
        var w3 = d2[_3];
        w3.enumerable = w3.enumerable || false, w3.configurable = true, "value" in w3 && (w3.writable = true), Object.defineProperty(n2, w3.key, w3);
      }
    }
    function i(n2, d2, _3) {
      return d2 && r2(n2.prototype, d2), Object.defineProperty(n2, "prototype", { writable: false }), n2;
    }
    function o2(n2, d2) {
      n2.prototype = Object.create(d2.prototype), n2.prototype.constructor = n2, v3(n2, d2);
    }
    function v3(n2, d2) {
      return v3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(w3, y2) {
        return w3.__proto__ = y2, w3;
      }, v3(n2, d2);
    }
    var m = /* @__PURE__ */ function(n2) {
      o2(d2, n2);
      function d2(w3) {
        var y2;
        return y2 = n2.call(this, w3) || this, y2.nodes || (y2.nodes = []), y2;
      }
      var _3 = d2.prototype;
      return _3.append = function(y2) {
        return y2.parent = this, this.nodes.push(y2), this;
      }, _3.prepend = function(y2) {
        y2.parent = this, this.nodes.unshift(y2);
        for (var x in this.indexes)
          this.indexes[x]++;
        return this;
      }, _3.at = function(y2) {
        return this.nodes[y2];
      }, _3.index = function(y2) {
        return typeof y2 == "number" ? y2 : this.nodes.indexOf(y2);
      }, _3.removeChild = function(y2) {
        y2 = this.index(y2), this.at(y2).parent = undefined, this.nodes.splice(y2, 1);
        var x;
        for (var g2 in this.indexes)
          x = this.indexes[g2], x >= y2 && (this.indexes[g2] = x - 1);
        return this;
      }, _3.removeAll = function() {
        for (var y2 = c2(this.nodes), x;!(x = y2()).done; ) {
          var g2 = x.value;
          g2.parent = undefined;
        }
        return this.nodes = [], this;
      }, _3.empty = function() {
        return this.removeAll();
      }, _3.insertAfter = function(y2, x) {
        var g2;
        x.parent = this;
        for (var O3 = this.index(y2), A = [], E2 = 2;E2 < arguments.length; E2++)
          A.push(arguments[E2]);
        (g2 = this.nodes).splice.apply(g2, [O3 + 1, 0, x].concat(A)), x.parent = this;
        var b3;
        for (var k3 in this.indexes)
          b3 = this.indexes[k3], O3 < b3 && (this.indexes[k3] = b3 + arguments.length - 1);
        return this;
      }, _3.insertBefore = function(y2, x) {
        var g2;
        x.parent = this;
        for (var O3 = this.index(y2), A = [], E2 = 2;E2 < arguments.length; E2++)
          A.push(arguments[E2]);
        (g2 = this.nodes).splice.apply(g2, [O3, 0, x].concat(A)), x.parent = this;
        var b3;
        for (var k3 in this.indexes)
          b3 = this.indexes[k3], b3 >= O3 && (this.indexes[k3] = b3 + arguments.length - 1);
        return this;
      }, _3._findChildAtPosition = function(y2, x) {
        var g2 = undefined;
        return this.each(function(O3) {
          if (O3.atPosition) {
            var A = O3.atPosition(y2, x);
            if (A)
              return g2 = A, false;
          } else if (O3.isAtPosition(y2, x))
            return g2 = O3, false;
        }), g2;
      }, _3.atPosition = function(y2, x) {
        if (this.isAtPosition(y2, x))
          return this._findChildAtPosition(y2, x) || this;
      }, _3._inferEndPosition = function() {
        this.last && this.last.source && this.last.source.end && (this.source = this.source || {}, this.source.end = this.source.end || {}, Object.assign(this.source.end, this.last.source.end));
      }, _3.each = function(y2) {
        this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach++;
        var x = this.lastEach;
        if (this.indexes[x] = 0, !!this.length) {
          for (var g2, O3;this.indexes[x] < this.length && (g2 = this.indexes[x], O3 = y2(this.at(g2), g2), O3 !== false); )
            this.indexes[x] += 1;
          if (delete this.indexes[x], O3 === false)
            return false;
        }
      }, _3.walk = function(y2) {
        return this.each(function(x, g2) {
          var O3 = y2(x, g2);
          if (O3 !== false && x.length && (O3 = x.walk(y2)), O3 === false)
            return false;
        });
      }, _3.walkAttributes = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.ATTRIBUTE)
            return y2.call(x, g2);
        });
      }, _3.walkClasses = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.CLASS)
            return y2.call(x, g2);
        });
      }, _3.walkCombinators = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.COMBINATOR)
            return y2.call(x, g2);
        });
      }, _3.walkComments = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.COMMENT)
            return y2.call(x, g2);
        });
      }, _3.walkIds = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.ID)
            return y2.call(x, g2);
        });
      }, _3.walkNesting = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.NESTING)
            return y2.call(x, g2);
        });
      }, _3.walkPseudos = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.PSEUDO)
            return y2.call(x, g2);
        });
      }, _3.walkTags = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.TAG)
            return y2.call(x, g2);
        });
      }, _3.walkUniversals = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.UNIVERSAL)
            return y2.call(x, g2);
        });
      }, _3.split = function(y2) {
        var x = this, g2 = [];
        return this.reduce(function(O3, A, E2) {
          var b3 = y2.call(x, A);
          return g2.push(A), b3 ? (O3.push(g2), g2 = []) : E2 === x.length - 1 && O3.push(g2), O3;
        }, []);
      }, _3.map = function(y2) {
        return this.nodes.map(y2);
      }, _3.reduce = function(y2, x) {
        return this.nodes.reduce(y2, x);
      }, _3.every = function(y2) {
        return this.nodes.every(y2);
      }, _3.some = function(y2) {
        return this.nodes.some(y2);
      }, _3.filter = function(y2) {
        return this.nodes.filter(y2);
      }, _3.sort = function(y2) {
        return this.nodes.sort(y2);
      }, _3.toString = function() {
        return this.map(String).join("");
      }, i(d2, [{
        key: "first",
        get: function() {
          return this.at(0);
        }
      }, {
        key: "last",
        get: function() {
          return this.at(this.length - 1);
        }
      }, {
        key: "length",
        get: function() {
          return this.nodes.length;
        }
      }]), d2;
    }(h2.default);
    a.default = m, u.exports = a.default;
  }(wt3, wt3.exports)), wt3.exports;
}
var Ua2;
function xl() {
  return Ua2 || (Ua2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Ni2()), p = Fe3();
    function l2(r2) {
      return r2 && r2.__esModule ? r2 : { default: r2 };
    }
    function f(r2, i) {
      for (var o2 = 0;o2 < i.length; o2++) {
        var v3 = i[o2];
        v3.enumerable = v3.enumerable || false, v3.configurable = true, "value" in v3 && (v3.writable = true), Object.defineProperty(r2, v3.key, v3);
      }
    }
    function s2(r2, i, o2) {
      return i && f(r2.prototype, i), Object.defineProperty(r2, "prototype", { writable: false }), r2;
    }
    function c2(r2, i) {
      r2.prototype = Object.create(i.prototype), r2.prototype.constructor = r2, t8(r2, i);
    }
    function t8(r2, i) {
      return t8 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(v3, m) {
        return v3.__proto__ = m, v3;
      }, t8(r2, i);
    }
    var e2 = /* @__PURE__ */ function(r2) {
      c2(i, r2);
      function i(v3) {
        var m;
        return m = r2.call(this, v3) || this, m.type = p.ROOT, m;
      }
      var o2 = i.prototype;
      return o2.toString = function() {
        var m = this.reduce(function(n2, d2) {
          return n2.push(String(d2)), n2;
        }, []).join(",");
        return this.trailingComma ? m + "," : m;
      }, o2.error = function(m, n2) {
        return this._error ? this._error(m, n2) : new Error(m);
      }, s2(i, [{
        key: "errorGenerator",
        set: function(m) {
          this._error = m;
        }
      }]), i;
    }(h2.default);
    a.default = e2, u.exports = a.default;
  }(yt3, yt3.exports)), yt3.exports;
}
var kt3 = { exports: {} };
var za2;
function Ol() {
  return za2 || (za2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Ni2()), p = Fe3();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.SELECTOR, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(kt3, kt3.exports)), kt3.exports;
}
var Pt3 = { exports: {} };
/*! https://mths.be/cssesc v3.0.0 by @mathias */
var Xr3;
var Wa2;
function at3() {
  if (Wa2)
    return Xr3;
  Wa2 = 1;
  var u = {}, a = u.hasOwnProperty, h2 = function(t8, e2) {
    if (!t8)
      return e2;
    var r2 = {};
    for (var i in e2)
      r2[i] = a.call(t8, i) ? t8[i] : e2[i];
    return r2;
  }, p = /[ -,\.\/:-@\[-\^`\{-~]/, l2 = /[ -,\.\/:-@\[\]\^`\{-~]/, f = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g, s2 = function c(t8, e2) {
    e2 = h2(e2, c.options), e2.quotes != "single" && e2.quotes != "double" && (e2.quotes = "single");
    for (var r2 = e2.quotes == "double" ? '"' : "'", i = e2.isIdentifier, o2 = t8.charAt(0), v3 = "", m = 0, n2 = t8.length;m < n2; ) {
      var d2 = t8.charAt(m++), _3 = d2.charCodeAt(), w3 = undefined;
      if (_3 < 32 || _3 > 126) {
        if (_3 >= 55296 && _3 <= 56319 && m < n2) {
          var y2 = t8.charCodeAt(m++);
          (y2 & 64512) == 56320 ? _3 = ((_3 & 1023) << 10) + (y2 & 1023) + 65536 : m--;
        }
        w3 = "\\" + _3.toString(16).toUpperCase() + " ";
      } else
        e2.escapeEverything ? p.test(d2) ? w3 = "\\" + d2 : w3 = "\\" + _3.toString(16).toUpperCase() + " " : /[\t\n\f\r\x0B]/.test(d2) ? w3 = "\\" + _3.toString(16).toUpperCase() + " " : d2 == "\\" || !i && (d2 == '"' && r2 == d2 || d2 == "'" && r2 == d2) || i && l2.test(d2) ? w3 = "\\" + d2 : w3 = d2;
      v3 += w3;
    }
    return i && (/^-[-\d]/.test(v3) ? v3 = "\\-" + v3.slice(1) : /\d/.test(o2) && (v3 = "\\3" + o2 + " " + v3.slice(1))), v3 = v3.replace(f, function(x, g2, O3) {
      return g2 && g2.length % 2 ? x : (g2 || "") + O3;
    }), !i && e2.wrap ? r2 + v3 + r2 : v3;
  };
  return s2.options = {
    escapeEverything: false,
    isIdentifier: false,
    quotes: "single",
    wrap: false
  }, s2.version = "3.0.0", Xr3 = s2, Xr3;
}
var Va2;
function kl() {
  return Va2 || (Va2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = s2(at3()), p = dr3(), l2 = s2(et3()), f = Fe3();
    function s2(o2) {
      return o2 && o2.__esModule ? o2 : { default: o2 };
    }
    function c2(o2, v3) {
      for (var m = 0;m < v3.length; m++) {
        var n2 = v3[m];
        n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(o2, n2.key, n2);
      }
    }
    function t8(o2, v3, m) {
      return v3 && c2(o2.prototype, v3), Object.defineProperty(o2, "prototype", { writable: false }), o2;
    }
    function e2(o2, v3) {
      o2.prototype = Object.create(v3.prototype), o2.prototype.constructor = o2, r2(o2, v3);
    }
    function r2(o2, v3) {
      return r2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n2, d2) {
        return n2.__proto__ = d2, n2;
      }, r2(o2, v3);
    }
    var i = /* @__PURE__ */ function(o2) {
      e2(v3, o2);
      function v3(n2) {
        var d2;
        return d2 = o2.call(this, n2) || this, d2.type = f.CLASS, d2._constructed = true, d2;
      }
      var m = v3.prototype;
      return m.valueToString = function() {
        return "." + o2.prototype.valueToString.call(this);
      }, t8(v3, [{
        key: "value",
        get: function() {
          return this._value;
        },
        set: function(d2) {
          if (this._constructed) {
            var _3 = (0, h2.default)(d2, {
              isIdentifier: true
            });
            _3 !== d2 ? ((0, p.ensureObject)(this, "raws"), this.raws.value = _3) : this.raws && delete this.raws.value;
          }
          this._value = d2;
        }
      }]), v3;
    }(l2.default);
    a.default = i, u.exports = a.default;
  }(Pt3, Pt3.exports)), Pt3.exports;
}
var Et3 = { exports: {} };
var ja2;
function Pl() {
  return ja2 || (ja2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(et3()), p = Fe3();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.COMMENT, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Et3, Et3.exports)), Et3.exports;
}
var Tt3 = { exports: {} };
var Ba2;
function El() {
  return Ba2 || (Ba2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(et3()), p = Fe3();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(i) {
        var o2;
        return o2 = t8.call(this, i) || this, o2.type = p.ID, o2;
      }
      var r2 = e2.prototype;
      return r2.valueToString = function() {
        return "#" + t8.prototype.valueToString.call(this);
      }, e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Tt3, Tt3.exports)), Tt3.exports;
}
var At3 = { exports: {} };
var Ct3 = { exports: {} };
var Ga2;
function Fi2() {
  return Ga2 || (Ga2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = f(at3()), p = dr3(), l2 = f(et3());
    function f(i) {
      return i && i.__esModule ? i : { default: i };
    }
    function s2(i, o2) {
      for (var v3 = 0;v3 < o2.length; v3++) {
        var m = o2[v3];
        m.enumerable = m.enumerable || false, m.configurable = true, "value" in m && (m.writable = true), Object.defineProperty(i, m.key, m);
      }
    }
    function c2(i, o2, v3) {
      return o2 && s2(i.prototype, o2), Object.defineProperty(i, "prototype", { writable: false }), i;
    }
    function t8(i, o2) {
      i.prototype = Object.create(o2.prototype), i.prototype.constructor = i, e2(i, o2);
    }
    function e2(i, o2) {
      return e2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(m, n2) {
        return m.__proto__ = n2, m;
      }, e2(i, o2);
    }
    var r2 = /* @__PURE__ */ function(i) {
      t8(o2, i);
      function o2() {
        return i.apply(this, arguments) || this;
      }
      var v3 = o2.prototype;
      return v3.qualifiedName = function(n2) {
        return this.namespace ? this.namespaceString + "|" + n2 : n2;
      }, v3.valueToString = function() {
        return this.qualifiedName(i.prototype.valueToString.call(this));
      }, c2(o2, [{
        key: "namespace",
        get: function() {
          return this._namespace;
        },
        set: function(n2) {
          if (n2 === true || n2 === "*" || n2 === "&") {
            this._namespace = n2, this.raws && delete this.raws.namespace;
            return;
          }
          var d2 = (0, h2.default)(n2, {
            isIdentifier: true
          });
          this._namespace = n2, d2 !== n2 ? ((0, p.ensureObject)(this, "raws"), this.raws.namespace = d2) : this.raws && delete this.raws.namespace;
        }
      }, {
        key: "ns",
        get: function() {
          return this._namespace;
        },
        set: function(n2) {
          this.namespace = n2;
        }
      }, {
        key: "namespaceString",
        get: function() {
          if (this.namespace) {
            var n2 = this.stringifyProperty("namespace");
            return n2 === true ? "" : n2;
          } else
            return "";
        }
      }]), o2;
    }(l2.default);
    a.default = r2, u.exports = a.default;
  }(Ct3, Ct3.exports)), Ct3.exports;
}
var Ya2;
function Tl() {
  return Ya2 || (Ya2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Fi2()), p = Fe3();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.TAG, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(At3, At3.exports)), At3.exports;
}
var Rt3 = { exports: {} };
var Qa2;
function Al() {
  return Qa2 || (Qa2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(et3()), p = Fe3();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.STRING, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Rt3, Rt3.exports)), Rt3.exports;
}
var It3 = { exports: {} };
var Ha2;
function Cl() {
  return Ha2 || (Ha2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Ni2()), p = Fe3();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(i) {
        var o2;
        return o2 = t8.call(this, i) || this, o2.type = p.PSEUDO, o2;
      }
      var r2 = e2.prototype;
      return r2.toString = function() {
        var o2 = this.length ? "(" + this.map(String).join(",") + ")" : "";
        return [this.rawSpaceBefore, this.stringifyProperty("value"), o2, this.rawSpaceAfter].join("");
      }, e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(It3, It3.exports)), It3.exports;
}
var Zr3 = {};
var en3;
var Ja2;
function Rl() {
  if (Ja2)
    return en3;
  Ja2 = 1, en3 = u;
  function u(h2, p) {
    if (a("noDeprecation"))
      return h2;
    var l2 = false;
    function f() {
      if (!l2) {
        if (a("throwDeprecation"))
          throw new Error(p);
        a("traceDeprecation") ? console.trace(p) : console.warn(p), l2 = true;
      }
      return h2.apply(this, arguments);
    }
    return f;
  }
  function a(h2) {
    try {
      if (!ta2.localStorage)
        return false;
    } catch {
      return false;
    }
    var p = ta2.localStorage[h2];
    return p == null ? false : String(p).toLowerCase() === "true";
  }
  return en3;
}
var Ka2;
function Il() {
  return Ka2 || (Ka2 = 1, function(u) {
    u.__esModule = true, u.default = undefined, u.unescapeValue = d2;
    var a = s2(at3()), h2 = s2(Sl()), p = s2(Fi2()), l2 = Fe3(), f;
    function s2(g2) {
      return g2 && g2.__esModule ? g2 : { default: g2 };
    }
    function c2(g2, O3) {
      for (var A = 0;A < O3.length; A++) {
        var E2 = O3[A];
        E2.enumerable = E2.enumerable || false, E2.configurable = true, "value" in E2 && (E2.writable = true), Object.defineProperty(g2, E2.key, E2);
      }
    }
    function t8(g2, O3, A) {
      return O3 && c2(g2.prototype, O3), Object.defineProperty(g2, "prototype", { writable: false }), g2;
    }
    function e2(g2, O3) {
      g2.prototype = Object.create(O3.prototype), g2.prototype.constructor = g2, r2(g2, O3);
    }
    function r2(g2, O3) {
      return r2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(E2, b3) {
        return E2.__proto__ = b3, E2;
      }, r2(g2, O3);
    }
    var i = Rl(), o2 = /^('|")([^]*)\1$/, v3 = i(function() {}, "Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead."), m = i(function() {}, "Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead."), n2 = i(function() {}, "Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.");
    function d2(g2) {
      var O3 = false, A = null, E2 = g2, b3 = E2.match(o2);
      return b3 && (A = b3[1], E2 = b3[2]), E2 = (0, h2.default)(E2), E2 !== g2 && (O3 = true), {
        deprecatedUsage: O3,
        unescaped: E2,
        quoteMark: A
      };
    }
    function _3(g2) {
      if (g2.quoteMark !== undefined || g2.value === undefined)
        return g2;
      n2();
      var O3 = d2(g2.value), A = O3.quoteMark, E2 = O3.unescaped;
      return g2.raws || (g2.raws = {}), g2.raws.value === undefined && (g2.raws.value = g2.value), g2.value = E2, g2.quoteMark = A, g2;
    }
    var w3 = /* @__PURE__ */ function(g2) {
      e2(O3, g2);
      function O3(E2) {
        var b3;
        return E2 === undefined && (E2 = {}), b3 = g2.call(this, _3(E2)) || this, b3.type = l2.ATTRIBUTE, b3.raws = b3.raws || {}, Object.defineProperty(b3.raws, "unquoted", {
          get: i(function() {
            return b3.value;
          }, "attr.raws.unquoted is deprecated. Call attr.value instead."),
          set: i(function() {
            return b3.value;
          }, "Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.")
        }), b3._constructed = true, b3;
      }
      var A = O3.prototype;
      return A.getQuotedValue = function(b3) {
        b3 === undefined && (b3 = {});
        var k3 = this._determineQuoteMark(b3), q2 = y2[k3], M2 = (0, a.default)(this._value, q2);
        return M2;
      }, A._determineQuoteMark = function(b3) {
        return b3.smart ? this.smartQuoteMark(b3) : this.preferredQuoteMark(b3);
      }, A.setValue = function(b3, k3) {
        k3 === undefined && (k3 = {}), this._value = b3, this._quoteMark = this._determineQuoteMark(k3), this._syncRawValue();
      }, A.smartQuoteMark = function(b3) {
        var k3 = this.value, q2 = k3.replace(/[^']/g, "").length, M2 = k3.replace(/[^"]/g, "").length;
        if (q2 + M2 === 0) {
          var W3 = (0, a.default)(k3, {
            isIdentifier: true
          });
          if (W3 === k3)
            return O3.NO_QUOTE;
          var S3 = this.preferredQuoteMark(b3);
          if (S3 === O3.NO_QUOTE) {
            var P3 = this.quoteMark || b3.quoteMark || O3.DOUBLE_QUOTE, C = y2[P3], R3 = (0, a.default)(k3, C);
            if (R3.length < W3.length)
              return P3;
          }
          return S3;
        } else
          return M2 === q2 ? this.preferredQuoteMark(b3) : M2 < q2 ? O3.DOUBLE_QUOTE : O3.SINGLE_QUOTE;
      }, A.preferredQuoteMark = function(b3) {
        var k3 = b3.preferCurrentQuoteMark ? this.quoteMark : b3.quoteMark;
        return k3 === undefined && (k3 = b3.preferCurrentQuoteMark ? b3.quoteMark : this.quoteMark), k3 === undefined && (k3 = O3.DOUBLE_QUOTE), k3;
      }, A._syncRawValue = function() {
        var b3 = (0, a.default)(this._value, y2[this.quoteMark]);
        b3 === this._value ? this.raws && delete this.raws.value : this.raws.value = b3;
      }, A._handleEscapes = function(b3, k3) {
        if (this._constructed) {
          var q2 = (0, a.default)(k3, {
            isIdentifier: true
          });
          q2 !== k3 ? this.raws[b3] = q2 : delete this.raws[b3];
        }
      }, A._spacesFor = function(b3) {
        var k3 = {
          before: "",
          after: ""
        }, q2 = this.spaces[b3] || {}, M2 = this.raws.spaces && this.raws.spaces[b3] || {};
        return Object.assign(k3, q2, M2);
      }, A._stringFor = function(b3, k3, q2) {
        k3 === undefined && (k3 = b3), q2 === undefined && (q2 = x);
        var M2 = this._spacesFor(k3);
        return q2(this.stringifyProperty(b3), M2);
      }, A.offsetOf = function(b3) {
        var k3 = 1, q2 = this._spacesFor("attribute");
        if (k3 += q2.before.length, b3 === "namespace" || b3 === "ns")
          return this.namespace ? k3 : -1;
        if (b3 === "attributeNS" || (k3 += this.namespaceString.length, this.namespace && (k3 += 1), b3 === "attribute"))
          return k3;
        k3 += this.stringifyProperty("attribute").length, k3 += q2.after.length;
        var M2 = this._spacesFor("operator");
        k3 += M2.before.length;
        var W3 = this.stringifyProperty("operator");
        if (b3 === "operator")
          return W3 ? k3 : -1;
        k3 += W3.length, k3 += M2.after.length;
        var S3 = this._spacesFor("value");
        k3 += S3.before.length;
        var P3 = this.stringifyProperty("value");
        if (b3 === "value")
          return P3 ? k3 : -1;
        k3 += P3.length, k3 += S3.after.length;
        var C = this._spacesFor("insensitive");
        return k3 += C.before.length, b3 === "insensitive" && this.insensitive ? k3 : -1;
      }, A.toString = function() {
        var b3 = this, k3 = [this.rawSpaceBefore, "["];
        return k3.push(this._stringFor("qualifiedAttribute", "attribute")), this.operator && (this.value || this.value === "") && (k3.push(this._stringFor("operator")), k3.push(this._stringFor("value")), k3.push(this._stringFor("insensitiveFlag", "insensitive", function(q2, M2) {
          return q2.length > 0 && !b3.quoted && M2.before.length === 0 && !(b3.spaces.value && b3.spaces.value.after) && (M2.before = " "), x(q2, M2);
        }))), k3.push("]"), k3.push(this.rawSpaceAfter), k3.join("");
      }, t8(O3, [{
        key: "quoted",
        get: function() {
          var b3 = this.quoteMark;
          return b3 === "'" || b3 === '"';
        },
        set: function(b3) {
          m();
        }
      }, {
        key: "quoteMark",
        get: function() {
          return this._quoteMark;
        },
        set: function(b3) {
          if (!this._constructed) {
            this._quoteMark = b3;
            return;
          }
          this._quoteMark !== b3 && (this._quoteMark = b3, this._syncRawValue());
        }
      }, {
        key: "qualifiedAttribute",
        get: function() {
          return this.qualifiedName(this.raws.attribute || this.attribute);
        }
      }, {
        key: "insensitiveFlag",
        get: function() {
          return this.insensitive ? "i" : "";
        }
      }, {
        key: "value",
        get: function() {
          return this._value;
        },
        set: function(b3) {
          if (this._constructed) {
            var k3 = d2(b3), q2 = k3.deprecatedUsage, M2 = k3.unescaped, W3 = k3.quoteMark;
            if (q2 && v3(), M2 === this._value && W3 === this._quoteMark)
              return;
            this._value = M2, this._quoteMark = W3, this._syncRawValue();
          } else
            this._value = b3;
        }
      }, {
        key: "insensitive",
        get: function() {
          return this._insensitive;
        },
        set: function(b3) {
          b3 || (this._insensitive = false, this.raws && (this.raws.insensitiveFlag === "I" || this.raws.insensitiveFlag === "i") && (this.raws.insensitiveFlag = undefined)), this._insensitive = b3;
        }
      }, {
        key: "attribute",
        get: function() {
          return this._attribute;
        },
        set: function(b3) {
          this._handleEscapes("attribute", b3), this._attribute = b3;
        }
      }]), O3;
    }(p.default);
    u.default = w3, w3.NO_QUOTE = null, w3.SINGLE_QUOTE = "'", w3.DOUBLE_QUOTE = '"';
    var y2 = (f = {
      "'": {
        quotes: "single",
        wrap: true
      },
      '"': {
        quotes: "double",
        wrap: true
      }
    }, f[null] = {
      isIdentifier: true
    }, f);
    function x(g2, O3) {
      return "" + O3.before + g2 + O3.after;
    }
  }(Zr3)), Zr3;
}
var Mt2 = { exports: {} };
var Xa2;
function Ml() {
  return Xa2 || (Xa2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Fi2()), p = Fe3();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.UNIVERSAL, i.value = "*", i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Mt2, Mt2.exports)), Mt2.exports;
}
var Dt3 = { exports: {} };
var Za2;
function Dl() {
  return Za2 || (Za2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(et3()), p = Fe3();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.COMBINATOR, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Dt3, Dt3.exports)), Dt3.exports;
}
var qt3 = { exports: {} };
var es2;
function ql() {
  return es2 || (es2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(et3()), p = Fe3();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.NESTING, i.value = "&", i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(qt3, qt3.exports)), qt3.exports;
}
var Lt3 = { exports: {} };
var ts2;
function Ru2() {
  return ts2 || (ts2 = 1, function(u, a) {
    a.__esModule = true, a.default = h2;
    function h2(p) {
      return p.sort(function(l2, f) {
        return l2 - f;
      });
    }
    u.exports = a.default;
  }(Lt3, Lt3.exports)), Lt3.exports;
}
var tn3 = {};
var oe2 = {};
var rs2;
function Ll() {
  if (rs2)
    return oe2;
  rs2 = 1, oe2.__esModule = true, oe2.word = oe2.tilde = oe2.tab = oe2.str = oe2.space = oe2.slash = oe2.singleQuote = oe2.semicolon = oe2.plus = oe2.pipe = oe2.openSquare = oe2.openParenthesis = oe2.newline = oe2.greaterThan = oe2.feed = oe2.equals = oe2.doubleQuote = oe2.dollar = oe2.cr = oe2.comment = oe2.comma = oe2.combinator = oe2.colon = oe2.closeSquare = oe2.closeParenthesis = oe2.caret = oe2.bang = oe2.backslash = oe2.at = oe2.asterisk = oe2.ampersand = undefined;
  var u = 38;
  oe2.ampersand = u;
  var a = 42;
  oe2.asterisk = a;
  var h2 = 64;
  oe2.at = h2;
  var p = 44;
  oe2.comma = p;
  var l2 = 58;
  oe2.colon = l2;
  var f = 59;
  oe2.semicolon = f;
  var s2 = 40;
  oe2.openParenthesis = s2;
  var c2 = 41;
  oe2.closeParenthesis = c2;
  var t8 = 91;
  oe2.openSquare = t8;
  var e2 = 93;
  oe2.closeSquare = e2;
  var r2 = 36;
  oe2.dollar = r2;
  var i = 126;
  oe2.tilde = i;
  var o2 = 94;
  oe2.caret = o2;
  var v3 = 43;
  oe2.plus = v3;
  var m = 61;
  oe2.equals = m;
  var n2 = 124;
  oe2.pipe = n2;
  var d2 = 62;
  oe2.greaterThan = d2;
  var _3 = 32;
  oe2.space = _3;
  var w3 = 39;
  oe2.singleQuote = w3;
  var y2 = 34;
  oe2.doubleQuote = y2;
  var x = 47;
  oe2.slash = x;
  var g2 = 33;
  oe2.bang = g2;
  var O3 = 92;
  oe2.backslash = O3;
  var A = 13;
  oe2.cr = A;
  var E2 = 12;
  oe2.feed = E2;
  var b3 = 10;
  oe2.newline = b3;
  var k3 = 9;
  oe2.tab = k3;
  var q2 = w3;
  oe2.str = q2;
  var M2 = -1;
  oe2.comment = M2;
  var W3 = -2;
  oe2.word = W3;
  var S3 = -3;
  return oe2.combinator = S3, oe2;
}
var ns2;
function Iu2() {
  return ns2 || (ns2 = 1, function(u) {
    u.__esModule = true, u.FIELDS = undefined, u.default = m;
    var a = f(Ll()), h2, p;
    function l2(n2) {
      if (typeof WeakMap != "function")
        return null;
      var d2 = /* @__PURE__ */ new WeakMap, _3 = /* @__PURE__ */ new WeakMap;
      return (l2 = function(y2) {
        return y2 ? _3 : d2;
      })(n2);
    }
    function f(n2, d2) {
      if (n2 && n2.__esModule)
        return n2;
      if (n2 === null || typeof n2 != "object" && typeof n2 != "function")
        return { default: n2 };
      var _3 = l2(d2);
      if (_3 && _3.has(n2))
        return _3.get(n2);
      var w3 = {}, y2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var x in n2)
        if (x !== "default" && Object.prototype.hasOwnProperty.call(n2, x)) {
          var g2 = y2 ? Object.getOwnPropertyDescriptor(n2, x) : null;
          g2 && (g2.get || g2.set) ? Object.defineProperty(w3, x, g2) : w3[x] = n2[x];
        }
      return w3.default = n2, _3 && _3.set(n2, w3), w3;
    }
    for (var s2 = (h2 = {}, h2[a.tab] = true, h2[a.newline] = true, h2[a.cr] = true, h2[a.feed] = true, h2), c2 = (p = {}, p[a.space] = true, p[a.tab] = true, p[a.newline] = true, p[a.cr] = true, p[a.feed] = true, p[a.ampersand] = true, p[a.asterisk] = true, p[a.bang] = true, p[a.comma] = true, p[a.colon] = true, p[a.semicolon] = true, p[a.openParenthesis] = true, p[a.closeParenthesis] = true, p[a.openSquare] = true, p[a.closeSquare] = true, p[a.singleQuote] = true, p[a.doubleQuote] = true, p[a.plus] = true, p[a.pipe] = true, p[a.tilde] = true, p[a.greaterThan] = true, p[a.equals] = true, p[a.dollar] = true, p[a.caret] = true, p[a.slash] = true, p), t8 = {}, e2 = "0123456789abcdefABCDEF", r2 = 0;r2 < e2.length; r2++)
      t8[e2.charCodeAt(r2)] = true;
    function i(n2, d2) {
      var _3 = d2, w3;
      do {
        if (w3 = n2.charCodeAt(_3), c2[w3])
          return _3 - 1;
        w3 === a.backslash ? _3 = o2(n2, _3) + 1 : _3++;
      } while (_3 < n2.length);
      return _3 - 1;
    }
    function o2(n2, d2) {
      var _3 = d2, w3 = n2.charCodeAt(_3 + 1);
      if (!s2[w3])
        if (t8[w3]) {
          var y2 = 0;
          do
            _3++, y2++, w3 = n2.charCodeAt(_3 + 1);
          while (t8[w3] && y2 < 6);
          y2 < 6 && w3 === a.space && _3++;
        } else
          _3++;
      return _3;
    }
    var v3 = {
      TYPE: 0,
      START_LINE: 1,
      START_COL: 2,
      END_LINE: 3,
      END_COL: 4,
      START_POS: 5,
      END_POS: 6
    };
    u.FIELDS = v3;
    function m(n2) {
      var d2 = [], _3 = n2.css.valueOf(), w3 = _3, y2 = w3.length, x = -1, g2 = 1, O3 = 0, A = 0, E2, b3, k3, q2, M2, W3, S3, P3, C, R3, $2, B3, z3;
      function L3(F, D) {
        if (n2.safe)
          _3 += D, C = _3.length - 1;
        else
          throw n2.error("Unclosed " + F, g2, O3 - x, O3);
      }
      for (;O3 < y2; ) {
        switch (E2 = _3.charCodeAt(O3), E2 === a.newline && (x = O3, g2 += 1), E2) {
          case a.space:
          case a.tab:
          case a.newline:
          case a.cr:
          case a.feed:
            C = O3;
            do
              C += 1, E2 = _3.charCodeAt(C), E2 === a.newline && (x = C, g2 += 1);
            while (E2 === a.space || E2 === a.newline || E2 === a.tab || E2 === a.cr || E2 === a.feed);
            z3 = a.space, q2 = g2, k3 = C - x - 1, A = C;
            break;
          case a.plus:
          case a.greaterThan:
          case a.tilde:
          case a.pipe:
            C = O3;
            do
              C += 1, E2 = _3.charCodeAt(C);
            while (E2 === a.plus || E2 === a.greaterThan || E2 === a.tilde || E2 === a.pipe);
            z3 = a.combinator, q2 = g2, k3 = O3 - x, A = C;
            break;
          case a.asterisk:
          case a.ampersand:
          case a.bang:
          case a.comma:
          case a.equals:
          case a.dollar:
          case a.caret:
          case a.openSquare:
          case a.closeSquare:
          case a.colon:
          case a.semicolon:
          case a.openParenthesis:
          case a.closeParenthesis:
            C = O3, z3 = E2, q2 = g2, k3 = O3 - x, A = C + 1;
            break;
          case a.singleQuote:
          case a.doubleQuote:
            B3 = E2 === a.singleQuote ? "'" : '"', C = O3;
            do
              for (M2 = false, C = _3.indexOf(B3, C + 1), C === -1 && L3("quote", B3), W3 = C;_3.charCodeAt(W3 - 1) === a.backslash; )
                W3 -= 1, M2 = !M2;
            while (M2);
            z3 = a.str, q2 = g2, k3 = O3 - x, A = C + 1;
            break;
          default:
            E2 === a.slash && _3.charCodeAt(O3 + 1) === a.asterisk ? (C = _3.indexOf("*/", O3 + 2) + 1, C === 0 && L3("comment", "*/"), b3 = _3.slice(O3, C + 1), P3 = b3.split(`
`), S3 = P3.length - 1, S3 > 0 ? (R3 = g2 + S3, $2 = C - P3[S3].length) : (R3 = g2, $2 = x), z3 = a.comment, g2 = R3, q2 = R3, k3 = C - $2) : E2 === a.slash ? (C = O3, z3 = E2, q2 = g2, k3 = O3 - x, A = C + 1) : (C = i(_3, O3), z3 = a.word, q2 = g2, k3 = C - x), A = C + 1;
            break;
        }
        d2.push([
          z3,
          g2,
          O3 - x,
          q2,
          k3,
          O3,
          A
        ]), $2 && (x = $2, $2 = null), O3 = A;
      }
      return d2;
    }
  }(tn3)), tn3;
}
var is3;
function Mu2() {
  return is3 || (is3 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = A(xl()), p = A(Ol()), l2 = A(kl()), f = A(Pl()), s2 = A(El()), c2 = A(Tl()), t8 = A(Al()), e2 = A(Cl()), r2 = O3(Il()), i = A(Ml()), o2 = A(Dl()), v3 = A(ql()), m = A(Ru2()), n2 = O3(Iu2()), d2 = O3(Ll()), _3 = O3(Fe3()), w3 = dr3(), y2, x;
    function g2(L3) {
      if (typeof WeakMap != "function")
        return null;
      var F = /* @__PURE__ */ new WeakMap, D = /* @__PURE__ */ new WeakMap;
      return (g2 = function(N3) {
        return N3 ? D : F;
      })(L3);
    }
    function O3(L3, F) {
      if (L3 && L3.__esModule)
        return L3;
      if (L3 === null || typeof L3 != "object" && typeof L3 != "function")
        return { default: L3 };
      var D = g2(F);
      if (D && D.has(L3))
        return D.get(L3);
      var I3 = {}, N3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var J3 in L3)
        if (J3 !== "default" && Object.prototype.hasOwnProperty.call(L3, J3)) {
          var T3 = N3 ? Object.getOwnPropertyDescriptor(L3, J3) : null;
          T3 && (T3.get || T3.set) ? Object.defineProperty(I3, J3, T3) : I3[J3] = L3[J3];
        }
      return I3.default = L3, D && D.set(L3, I3), I3;
    }
    function A(L3) {
      return L3 && L3.__esModule ? L3 : { default: L3 };
    }
    function E2(L3, F) {
      for (var D = 0;D < F.length; D++) {
        var I3 = F[D];
        I3.enumerable = I3.enumerable || false, I3.configurable = true, "value" in I3 && (I3.writable = true), Object.defineProperty(L3, I3.key, I3);
      }
    }
    function b3(L3, F, D) {
      return F && E2(L3.prototype, F), Object.defineProperty(L3, "prototype", { writable: false }), L3;
    }
    var k3 = (y2 = {}, y2[d2.space] = true, y2[d2.cr] = true, y2[d2.feed] = true, y2[d2.newline] = true, y2[d2.tab] = true, y2), q2 = Object.assign({}, k3, (x = {}, x[d2.comment] = true, x));
    function M2(L3) {
      return {
        line: L3[n2.FIELDS.START_LINE],
        column: L3[n2.FIELDS.START_COL]
      };
    }
    function W3(L3) {
      return {
        line: L3[n2.FIELDS.END_LINE],
        column: L3[n2.FIELDS.END_COL]
      };
    }
    function S3(L3, F, D, I3) {
      return {
        start: {
          line: L3,
          column: F
        },
        end: {
          line: D,
          column: I3
        }
      };
    }
    function P3(L3) {
      return S3(L3[n2.FIELDS.START_LINE], L3[n2.FIELDS.START_COL], L3[n2.FIELDS.END_LINE], L3[n2.FIELDS.END_COL]);
    }
    function C(L3, F) {
      if (L3)
        return S3(L3[n2.FIELDS.START_LINE], L3[n2.FIELDS.START_COL], F[n2.FIELDS.END_LINE], F[n2.FIELDS.END_COL]);
    }
    function R3(L3, F) {
      var D = L3[F];
      if (typeof D == "string")
        return D.indexOf("\\") !== -1 && ((0, w3.ensureObject)(L3, "raws"), L3[F] = (0, w3.unesc)(D), L3.raws[F] === undefined && (L3.raws[F] = D)), L3;
    }
    function $2(L3, F) {
      for (var D = -1, I3 = [];(D = L3.indexOf(F, D + 1)) !== -1; )
        I3.push(D);
      return I3;
    }
    function B3() {
      var L3 = Array.prototype.concat.apply([], arguments);
      return L3.filter(function(F, D) {
        return D === L3.indexOf(F);
      });
    }
    var z3 = /* @__PURE__ */ function() {
      function L3(D, I3) {
        I3 === undefined && (I3 = {}), this.rule = D, this.options = Object.assign({
          lossy: false,
          safe: false
        }, I3), this.position = 0, this.css = typeof this.rule == "string" ? this.rule : this.rule.selector, this.tokens = (0, n2.default)({
          css: this.css,
          error: this._errorGenerator(),
          safe: this.options.safe
        });
        var N3 = C(this.tokens[0], this.tokens[this.tokens.length - 1]);
        this.root = new h2.default({
          source: N3
        }), this.root.errorGenerator = this._errorGenerator();
        var J3 = new p.default({
          source: {
            start: {
              line: 1,
              column: 1
            }
          },
          sourceIndex: 0
        });
        this.root.append(J3), this.current = J3, this.loop();
      }
      var F = L3.prototype;
      return F._errorGenerator = function() {
        var I3 = this;
        return function(N3, J3) {
          return typeof I3.rule == "string" ? new Error(N3) : I3.rule.error(N3, J3);
        };
      }, F.attribute = function() {
        var I3 = [], N3 = this.currToken;
        for (this.position++;this.position < this.tokens.length && this.currToken[n2.FIELDS.TYPE] !== d2.closeSquare; )
          I3.push(this.currToken), this.position++;
        if (this.currToken[n2.FIELDS.TYPE] !== d2.closeSquare)
          return this.expected("closing square bracket", this.currToken[n2.FIELDS.START_POS]);
        var J3 = I3.length, T3 = {
          source: S3(N3[1], N3[2], this.currToken[3], this.currToken[4]),
          sourceIndex: N3[n2.FIELDS.START_POS]
        };
        if (J3 === 1 && !~[d2.word].indexOf(I3[0][n2.FIELDS.TYPE]))
          return this.expected("attribute", I3[0][n2.FIELDS.START_POS]);
        for (var U2 = 0, j3 = "", H3 = "", V4 = null, K3 = false;U2 < J3; ) {
          var X3 = I3[U2], Q3 = this.content(X3), ne3 = I3[U2 + 1];
          switch (X3[n2.FIELDS.TYPE]) {
            case d2.space:
              if (K3 = true, this.options.lossy)
                break;
              if (V4) {
                (0, w3.ensureObject)(T3, "spaces", V4);
                var de3 = T3.spaces[V4].after || "";
                T3.spaces[V4].after = de3 + Q3;
                var _e3 = (0, w3.getProp)(T3, "raws", "spaces", V4, "after") || null;
                _e3 && (T3.raws.spaces[V4].after = _e3 + Q3);
              } else
                j3 = j3 + Q3, H3 = H3 + Q3;
              break;
            case d2.asterisk:
              if (ne3[n2.FIELDS.TYPE] === d2.equals)
                T3.operator = Q3, V4 = "operator";
              else if ((!T3.namespace || V4 === "namespace" && !K3) && ne3) {
                j3 && ((0, w3.ensureObject)(T3, "spaces", "attribute"), T3.spaces.attribute.before = j3, j3 = ""), H3 && ((0, w3.ensureObject)(T3, "raws", "spaces", "attribute"), T3.raws.spaces.attribute.before = j3, H3 = ""), T3.namespace = (T3.namespace || "") + Q3;
                var be3 = (0, w3.getProp)(T3, "raws", "namespace") || null;
                be3 && (T3.raws.namespace += Q3), V4 = "namespace";
              }
              K3 = false;
              break;
            case d2.dollar:
              if (V4 === "value") {
                var ie3 = (0, w3.getProp)(T3, "raws", "value");
                T3.value += "$", ie3 && (T3.raws.value = ie3 + "$");
                break;
              }
            case d2.caret:
              ne3[n2.FIELDS.TYPE] === d2.equals && (T3.operator = Q3, V4 = "operator"), K3 = false;
              break;
            case d2.combinator:
              if (Q3 === "~" && ne3[n2.FIELDS.TYPE] === d2.equals && (T3.operator = Q3, V4 = "operator"), Q3 !== "|") {
                K3 = false;
                break;
              }
              ne3[n2.FIELDS.TYPE] === d2.equals ? (T3.operator = Q3, V4 = "operator") : !T3.namespace && !T3.attribute && (T3.namespace = true), K3 = false;
              break;
            case d2.word:
              if (ne3 && this.content(ne3) === "|" && I3[U2 + 2] && I3[U2 + 2][n2.FIELDS.TYPE] !== d2.equals && !T3.operator && !T3.namespace)
                T3.namespace = Q3, V4 = "namespace";
              else if (!T3.attribute || V4 === "attribute" && !K3) {
                j3 && ((0, w3.ensureObject)(T3, "spaces", "attribute"), T3.spaces.attribute.before = j3, j3 = ""), H3 && ((0, w3.ensureObject)(T3, "raws", "spaces", "attribute"), T3.raws.spaces.attribute.before = H3, H3 = ""), T3.attribute = (T3.attribute || "") + Q3;
                var ke3 = (0, w3.getProp)(T3, "raws", "attribute") || null;
                ke3 && (T3.raws.attribute += Q3), V4 = "attribute";
              } else if (!T3.value && T3.value !== "" || V4 === "value" && !(K3 || T3.quoteMark)) {
                var Y3 = (0, w3.unesc)(Q3), G3 = (0, w3.getProp)(T3, "raws", "value") || "", te2 = T3.value || "";
                T3.value = te2 + Y3, T3.quoteMark = null, (Y3 !== Q3 || G3) && ((0, w3.ensureObject)(T3, "raws"), T3.raws.value = (G3 || te2) + Q3), V4 = "value";
              } else {
                var Z3 = Q3 === "i" || Q3 === "I";
                (T3.value || T3.value === "") && (T3.quoteMark || K3) ? (T3.insensitive = Z3, (!Z3 || Q3 === "I") && ((0, w3.ensureObject)(T3, "raws"), T3.raws.insensitiveFlag = Q3), V4 = "insensitive", j3 && ((0, w3.ensureObject)(T3, "spaces", "insensitive"), T3.spaces.insensitive.before = j3, j3 = ""), H3 && ((0, w3.ensureObject)(T3, "raws", "spaces", "insensitive"), T3.raws.spaces.insensitive.before = H3, H3 = "")) : (T3.value || T3.value === "") && (V4 = "value", T3.value += Q3, T3.raws.value && (T3.raws.value += Q3));
              }
              K3 = false;
              break;
            case d2.str:
              if (!T3.attribute || !T3.operator)
                return this.error("Expected an attribute followed by an operator preceding the string.", {
                  index: X3[n2.FIELDS.START_POS]
                });
              var ee3 = (0, r2.unescapeValue)(Q3), se3 = ee3.unescaped, ue = ee3.quoteMark;
              T3.value = se3, T3.quoteMark = ue, V4 = "value", (0, w3.ensureObject)(T3, "raws"), T3.raws.value = Q3, K3 = false;
              break;
            case d2.equals:
              if (!T3.attribute)
                return this.expected("attribute", X3[n2.FIELDS.START_POS], Q3);
              if (T3.value)
                return this.error('Unexpected "=" found; an operator was already defined.', {
                  index: X3[n2.FIELDS.START_POS]
                });
              T3.operator = T3.operator ? T3.operator + Q3 : Q3, V4 = "operator", K3 = false;
              break;
            case d2.comment:
              if (V4)
                if (K3 || ne3 && ne3[n2.FIELDS.TYPE] === d2.space || V4 === "insensitive") {
                  var xe3 = (0, w3.getProp)(T3, "spaces", V4, "after") || "", ce3 = (0, w3.getProp)(T3, "raws", "spaces", V4, "after") || xe3;
                  (0, w3.ensureObject)(T3, "raws", "spaces", V4), T3.raws.spaces[V4].after = ce3 + Q3;
                } else {
                  var Te3 = T3[V4] || "", ve3 = (0, w3.getProp)(T3, "raws", V4) || Te3;
                  (0, w3.ensureObject)(T3, "raws"), T3.raws[V4] = ve3 + Q3;
                }
              else
                H3 = H3 + Q3;
              break;
            default:
              return this.error('Unexpected "' + Q3 + '" found.', {
                index: X3[n2.FIELDS.START_POS]
              });
          }
          U2++;
        }
        R3(T3, "attribute"), R3(T3, "namespace"), this.newNode(new r2.default(T3)), this.position++;
      }, F.parseWhitespaceEquivalentTokens = function(I3) {
        I3 < 0 && (I3 = this.tokens.length);
        var N3 = this.position, J3 = [], T3 = "", U2 = undefined;
        do
          if (k3[this.currToken[n2.FIELDS.TYPE]])
            this.options.lossy || (T3 += this.content());
          else if (this.currToken[n2.FIELDS.TYPE] === d2.comment) {
            var j3 = {};
            T3 && (j3.before = T3, T3 = ""), U2 = new f.default({
              value: this.content(),
              source: P3(this.currToken),
              sourceIndex: this.currToken[n2.FIELDS.START_POS],
              spaces: j3
            }), J3.push(U2);
          }
        while (++this.position < I3);
        if (T3) {
          if (U2)
            U2.spaces.after = T3;
          else if (!this.options.lossy) {
            var H3 = this.tokens[N3], V4 = this.tokens[this.position - 1];
            J3.push(new t8.default({
              value: "",
              source: S3(H3[n2.FIELDS.START_LINE], H3[n2.FIELDS.START_COL], V4[n2.FIELDS.END_LINE], V4[n2.FIELDS.END_COL]),
              sourceIndex: H3[n2.FIELDS.START_POS],
              spaces: {
                before: T3,
                after: ""
              }
            }));
          }
        }
        return J3;
      }, F.convertWhitespaceNodesToSpace = function(I3, N3) {
        var J3 = this;
        N3 === undefined && (N3 = false);
        var T3 = "", U2 = "";
        I3.forEach(function(H3) {
          var V4 = J3.lossySpace(H3.spaces.before, N3), K3 = J3.lossySpace(H3.rawSpaceBefore, N3);
          T3 += V4 + J3.lossySpace(H3.spaces.after, N3 && V4.length === 0), U2 += V4 + H3.value + J3.lossySpace(H3.rawSpaceAfter, N3 && K3.length === 0);
        }), U2 === T3 && (U2 = undefined);
        var j3 = {
          space: T3,
          rawSpace: U2
        };
        return j3;
      }, F.isNamedCombinator = function(I3) {
        return I3 === undefined && (I3 = this.position), this.tokens[I3 + 0] && this.tokens[I3 + 0][n2.FIELDS.TYPE] === d2.slash && this.tokens[I3 + 1] && this.tokens[I3 + 1][n2.FIELDS.TYPE] === d2.word && this.tokens[I3 + 2] && this.tokens[I3 + 2][n2.FIELDS.TYPE] === d2.slash;
      }, F.namedCombinator = function() {
        if (this.isNamedCombinator()) {
          var I3 = this.content(this.tokens[this.position + 1]), N3 = (0, w3.unesc)(I3).toLowerCase(), J3 = {};
          N3 !== I3 && (J3.value = "/" + I3 + "/");
          var T3 = new o2.default({
            value: "/" + N3 + "/",
            source: S3(this.currToken[n2.FIELDS.START_LINE], this.currToken[n2.FIELDS.START_COL], this.tokens[this.position + 2][n2.FIELDS.END_LINE], this.tokens[this.position + 2][n2.FIELDS.END_COL]),
            sourceIndex: this.currToken[n2.FIELDS.START_POS],
            raws: J3
          });
          return this.position = this.position + 3, T3;
        } else
          this.unexpected();
      }, F.combinator = function() {
        var I3 = this;
        if (this.content() === "|")
          return this.namespace();
        var N3 = this.locateNextMeaningfulToken(this.position);
        if (N3 < 0 || this.tokens[N3][n2.FIELDS.TYPE] === d2.comma || this.tokens[N3][n2.FIELDS.TYPE] === d2.closeParenthesis) {
          var J3 = this.parseWhitespaceEquivalentTokens(N3);
          if (J3.length > 0) {
            var T3 = this.current.last;
            if (T3) {
              var U2 = this.convertWhitespaceNodesToSpace(J3), j3 = U2.space, H3 = U2.rawSpace;
              H3 !== undefined && (T3.rawSpaceAfter += H3), T3.spaces.after += j3;
            } else
              J3.forEach(function(G3) {
                return I3.newNode(G3);
              });
          }
          return;
        }
        var V4 = this.currToken, K3 = undefined;
        N3 > this.position && (K3 = this.parseWhitespaceEquivalentTokens(N3));
        var X3;
        if (this.isNamedCombinator() ? X3 = this.namedCombinator() : this.currToken[n2.FIELDS.TYPE] === d2.combinator ? (X3 = new o2.default({
          value: this.content(),
          source: P3(this.currToken),
          sourceIndex: this.currToken[n2.FIELDS.START_POS]
        }), this.position++) : k3[this.currToken[n2.FIELDS.TYPE]] || K3 || this.unexpected(), X3) {
          if (K3) {
            var Q3 = this.convertWhitespaceNodesToSpace(K3), ne3 = Q3.space, de3 = Q3.rawSpace;
            X3.spaces.before = ne3, X3.rawSpaceBefore = de3;
          }
        } else {
          var _e3 = this.convertWhitespaceNodesToSpace(K3, true), be3 = _e3.space, ie3 = _e3.rawSpace;
          ie3 || (ie3 = be3);
          var ke3 = {}, Y3 = {
            spaces: {}
          };
          be3.endsWith(" ") && ie3.endsWith(" ") ? (ke3.before = be3.slice(0, be3.length - 1), Y3.spaces.before = ie3.slice(0, ie3.length - 1)) : be3.startsWith(" ") && ie3.startsWith(" ") ? (ke3.after = be3.slice(1), Y3.spaces.after = ie3.slice(1)) : Y3.value = ie3, X3 = new o2.default({
            value: " ",
            source: C(V4, this.tokens[this.position - 1]),
            sourceIndex: V4[n2.FIELDS.START_POS],
            spaces: ke3,
            raws: Y3
          });
        }
        return this.currToken && this.currToken[n2.FIELDS.TYPE] === d2.space && (X3.spaces.after = this.optionalSpace(this.content()), this.position++), this.newNode(X3);
      }, F.comma = function() {
        if (this.position === this.tokens.length - 1) {
          this.root.trailingComma = true, this.position++;
          return;
        }
        this.current._inferEndPosition();
        var I3 = new p.default({
          source: {
            start: M2(this.tokens[this.position + 1])
          },
          sourceIndex: this.tokens[this.position + 1][n2.FIELDS.START_POS]
        });
        this.current.parent.append(I3), this.current = I3, this.position++;
      }, F.comment = function() {
        var I3 = this.currToken;
        this.newNode(new f.default({
          value: this.content(),
          source: P3(I3),
          sourceIndex: I3[n2.FIELDS.START_POS]
        })), this.position++;
      }, F.error = function(I3, N3) {
        throw this.root.error(I3, N3);
      }, F.missingBackslash = function() {
        return this.error("Expected a backslash preceding the semicolon.", {
          index: this.currToken[n2.FIELDS.START_POS]
        });
      }, F.missingParenthesis = function() {
        return this.expected("opening parenthesis", this.currToken[n2.FIELDS.START_POS]);
      }, F.missingSquareBracket = function() {
        return this.expected("opening square bracket", this.currToken[n2.FIELDS.START_POS]);
      }, F.unexpected = function() {
        return this.error("Unexpected '" + this.content() + "'. Escaping special characters with \\ may help.", this.currToken[n2.FIELDS.START_POS]);
      }, F.unexpectedPipe = function() {
        return this.error("Unexpected '|'.", this.currToken[n2.FIELDS.START_POS]);
      }, F.namespace = function() {
        var I3 = this.prevToken && this.content(this.prevToken) || true;
        if (this.nextToken[n2.FIELDS.TYPE] === d2.word)
          return this.position++, this.word(I3);
        if (this.nextToken[n2.FIELDS.TYPE] === d2.asterisk)
          return this.position++, this.universal(I3);
        this.unexpectedPipe();
      }, F.nesting = function() {
        if (this.nextToken) {
          var I3 = this.content(this.nextToken);
          if (I3 === "|") {
            this.position++;
            return;
          }
        }
        var N3 = this.currToken;
        this.newNode(new v3.default({
          value: this.content(),
          source: P3(N3),
          sourceIndex: N3[n2.FIELDS.START_POS]
        })), this.position++;
      }, F.parentheses = function() {
        var I3 = this.current.last, N3 = 1;
        if (this.position++, I3 && I3.type === _3.PSEUDO) {
          var J3 = new p.default({
            source: {
              start: M2(this.tokens[this.position])
            },
            sourceIndex: this.tokens[this.position][n2.FIELDS.START_POS]
          }), T3 = this.current;
          for (I3.append(J3), this.current = J3;this.position < this.tokens.length && N3; )
            this.currToken[n2.FIELDS.TYPE] === d2.openParenthesis && N3++, this.currToken[n2.FIELDS.TYPE] === d2.closeParenthesis && N3--, N3 ? this.parse() : (this.current.source.end = W3(this.currToken), this.current.parent.source.end = W3(this.currToken), this.position++);
          this.current = T3;
        } else {
          for (var U2 = this.currToken, j3 = "(", H3;this.position < this.tokens.length && N3; )
            this.currToken[n2.FIELDS.TYPE] === d2.openParenthesis && N3++, this.currToken[n2.FIELDS.TYPE] === d2.closeParenthesis && N3--, H3 = this.currToken, j3 += this.parseParenthesisToken(this.currToken), this.position++;
          I3 ? I3.appendToPropertyAndEscape("value", j3, j3) : this.newNode(new t8.default({
            value: j3,
            source: S3(U2[n2.FIELDS.START_LINE], U2[n2.FIELDS.START_COL], H3[n2.FIELDS.END_LINE], H3[n2.FIELDS.END_COL]),
            sourceIndex: U2[n2.FIELDS.START_POS]
          }));
        }
        if (N3)
          return this.expected("closing parenthesis", this.currToken[n2.FIELDS.START_POS]);
      }, F.pseudo = function() {
        for (var I3 = this, N3 = "", J3 = this.currToken;this.currToken && this.currToken[n2.FIELDS.TYPE] === d2.colon; )
          N3 += this.content(), this.position++;
        if (!this.currToken)
          return this.expected(["pseudo-class", "pseudo-element"], this.position - 1);
        if (this.currToken[n2.FIELDS.TYPE] === d2.word)
          this.splitWord(false, function(T3, U2) {
            N3 += T3, I3.newNode(new e2.default({
              value: N3,
              source: C(J3, I3.currToken),
              sourceIndex: J3[n2.FIELDS.START_POS]
            })), U2 > 1 && I3.nextToken && I3.nextToken[n2.FIELDS.TYPE] === d2.openParenthesis && I3.error("Misplaced parenthesis.", {
              index: I3.nextToken[n2.FIELDS.START_POS]
            });
          });
        else
          return this.expected(["pseudo-class", "pseudo-element"], this.currToken[n2.FIELDS.START_POS]);
      }, F.space = function() {
        var I3 = this.content();
        this.position === 0 || this.prevToken[n2.FIELDS.TYPE] === d2.comma || this.prevToken[n2.FIELDS.TYPE] === d2.openParenthesis || this.current.nodes.every(function(N3) {
          return N3.type === "comment";
        }) ? (this.spaces = this.optionalSpace(I3), this.position++) : this.position === this.tokens.length - 1 || this.nextToken[n2.FIELDS.TYPE] === d2.comma || this.nextToken[n2.FIELDS.TYPE] === d2.closeParenthesis ? (this.current.last.spaces.after = this.optionalSpace(I3), this.position++) : this.combinator();
      }, F.string = function() {
        var I3 = this.currToken;
        this.newNode(new t8.default({
          value: this.content(),
          source: P3(I3),
          sourceIndex: I3[n2.FIELDS.START_POS]
        })), this.position++;
      }, F.universal = function(I3) {
        var N3 = this.nextToken;
        if (N3 && this.content(N3) === "|")
          return this.position++, this.namespace();
        var J3 = this.currToken;
        this.newNode(new i.default({
          value: this.content(),
          source: P3(J3),
          sourceIndex: J3[n2.FIELDS.START_POS]
        }), I3), this.position++;
      }, F.splitWord = function(I3, N3) {
        for (var J3 = this, T3 = this.nextToken, U2 = this.content();T3 && ~[d2.dollar, d2.caret, d2.equals, d2.word].indexOf(T3[n2.FIELDS.TYPE]); ) {
          this.position++;
          var j3 = this.content();
          if (U2 += j3, j3.lastIndexOf("\\") === j3.length - 1) {
            var H3 = this.nextToken;
            H3 && H3[n2.FIELDS.TYPE] === d2.space && (U2 += this.requiredSpace(this.content(H3)), this.position++);
          }
          T3 = this.nextToken;
        }
        var V4 = $2(U2, ".").filter(function(ne3) {
          var de3 = U2[ne3 - 1] === "\\", _e3 = /^\d+\.\d+%$/.test(U2);
          return !de3 && !_e3;
        }), K3 = $2(U2, "#").filter(function(ne3) {
          return U2[ne3 - 1] !== "\\";
        }), X3 = $2(U2, "#{");
        X3.length && (K3 = K3.filter(function(ne3) {
          return !~X3.indexOf(ne3);
        }));
        var Q3 = (0, m.default)(B3([0].concat(V4, K3)));
        Q3.forEach(function(ne3, de3) {
          var _e3 = Q3[de3 + 1] || U2.length, be3 = U2.slice(ne3, _e3);
          if (de3 === 0 && N3)
            return N3.call(J3, be3, Q3.length);
          var ie3, ke3 = J3.currToken, Y3 = ke3[n2.FIELDS.START_POS] + Q3[de3], G3 = S3(ke3[1], ke3[2] + ne3, ke3[3], ke3[2] + (_e3 - 1));
          if (~V4.indexOf(ne3)) {
            var te2 = {
              value: be3.slice(1),
              source: G3,
              sourceIndex: Y3
            };
            ie3 = new l2.default(R3(te2, "value"));
          } else if (~K3.indexOf(ne3)) {
            var Z3 = {
              value: be3.slice(1),
              source: G3,
              sourceIndex: Y3
            };
            ie3 = new s2.default(R3(Z3, "value"));
          } else {
            var ee3 = {
              value: be3,
              source: G3,
              sourceIndex: Y3
            };
            R3(ee3, "value"), ie3 = new c2.default(ee3);
          }
          J3.newNode(ie3, I3), I3 = null;
        }), this.position++;
      }, F.word = function(I3) {
        var N3 = this.nextToken;
        return N3 && this.content(N3) === "|" ? (this.position++, this.namespace()) : this.splitWord(I3);
      }, F.loop = function() {
        for (;this.position < this.tokens.length; )
          this.parse(true);
        return this.current._inferEndPosition(), this.root;
      }, F.parse = function(I3) {
        switch (this.currToken[n2.FIELDS.TYPE]) {
          case d2.space:
            this.space();
            break;
          case d2.comment:
            this.comment();
            break;
          case d2.openParenthesis:
            this.parentheses();
            break;
          case d2.closeParenthesis:
            I3 && this.missingParenthesis();
            break;
          case d2.openSquare:
            this.attribute();
            break;
          case d2.dollar:
          case d2.caret:
          case d2.equals:
          case d2.word:
            this.word();
            break;
          case d2.colon:
            this.pseudo();
            break;
          case d2.comma:
            this.comma();
            break;
          case d2.asterisk:
            this.universal();
            break;
          case d2.ampersand:
            this.nesting();
            break;
          case d2.slash:
          case d2.combinator:
            this.combinator();
            break;
          case d2.str:
            this.string();
            break;
          case d2.closeSquare:
            this.missingSquareBracket();
          case d2.semicolon:
            this.missingBackslash();
          default:
            this.unexpected();
        }
      }, F.expected = function(I3, N3, J3) {
        if (Array.isArray(I3)) {
          var T3 = I3.pop();
          I3 = I3.join(", ") + " or " + T3;
        }
        var U2 = /^[aeiou]/.test(I3[0]) ? "an" : "a";
        return J3 ? this.error("Expected " + U2 + " " + I3 + ', found "' + J3 + '" instead.', {
          index: N3
        }) : this.error("Expected " + U2 + " " + I3 + ".", {
          index: N3
        });
      }, F.requiredSpace = function(I3) {
        return this.options.lossy ? " " : I3;
      }, F.optionalSpace = function(I3) {
        return this.options.lossy ? "" : I3;
      }, F.lossySpace = function(I3, N3) {
        return this.options.lossy ? N3 ? " " : "" : I3;
      }, F.parseParenthesisToken = function(I3) {
        var N3 = this.content(I3);
        return I3[n2.FIELDS.TYPE] === d2.space ? this.requiredSpace(N3) : N3;
      }, F.newNode = function(I3, N3) {
        return N3 && (/^ +$/.test(N3) && (this.options.lossy || (this.spaces = (this.spaces || "") + N3), N3 = true), I3.namespace = N3, R3(I3, "namespace")), this.spaces && (I3.spaces.before = this.spaces, this.spaces = ""), this.current.append(I3);
      }, F.content = function(I3) {
        return I3 === undefined && (I3 = this.currToken), this.css.slice(I3[n2.FIELDS.START_POS], I3[n2.FIELDS.END_POS]);
      }, F.locateNextMeaningfulToken = function(I3) {
        I3 === undefined && (I3 = this.position + 1);
        for (var N3 = I3;N3 < this.tokens.length; )
          if (q2[this.tokens[N3][n2.FIELDS.TYPE]]) {
            N3++;
            continue;
          } else
            return N3;
        return -1;
      }, b3(L3, [{
        key: "currToken",
        get: function() {
          return this.tokens[this.position];
        }
      }, {
        key: "nextToken",
        get: function() {
          return this.tokens[this.position + 1];
        }
      }, {
        key: "prevToken",
        get: function() {
          return this.tokens[this.position - 1];
        }
      }]), L3;
    }();
    a.default = z3, u.exports = a.default;
  }(mt3, mt3.exports)), mt3.exports;
}
var as2;
function Du2() {
  return as2 || (as2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = p(Mu2());
    function p(f) {
      return f && f.__esModule ? f : { default: f };
    }
    var l2 = /* @__PURE__ */ function() {
      function f(c2, t8) {
        this.func = c2 || function() {}, this.funcRes = null, this.options = t8;
      }
      var s2 = f.prototype;
      return s2._shouldUpdateSelector = function(t8, e2) {
        e2 === undefined && (e2 = {});
        var r2 = Object.assign({}, this.options, e2);
        return r2.updateSelector === false ? false : typeof t8 != "string";
      }, s2._isLossy = function(t8) {
        t8 === undefined && (t8 = {});
        var e2 = Object.assign({}, this.options, t8);
        return e2.lossless === false;
      }, s2._root = function(t8, e2) {
        e2 === undefined && (e2 = {});
        var r2 = new h2.default(t8, this._parseOptions(e2));
        return r2.root;
      }, s2._parseOptions = function(t8) {
        return {
          lossy: this._isLossy(t8)
        };
      }, s2._run = function(t8, e2) {
        var r2 = this;
        return e2 === undefined && (e2 = {}), new Promise(function(i, o2) {
          try {
            var v3 = r2._root(t8, e2);
            Promise.resolve(r2.func(v3)).then(function(m) {
              var n2 = undefined;
              return r2._shouldUpdateSelector(t8, e2) && (n2 = v3.toString(), t8.selector = n2), {
                transform: m,
                root: v3,
                string: n2
              };
            }).then(i, o2);
          } catch (m) {
            o2(m);
            return;
          }
        });
      }, s2._runSync = function(t8, e2) {
        e2 === undefined && (e2 = {});
        var r2 = this._root(t8, e2), i = this.func(r2);
        if (i && typeof i.then == "function")
          throw new Error("Selector processor returned a promise to a synchronous call.");
        var o2 = undefined;
        return e2.updateSelector && typeof t8 != "string" && (o2 = r2.toString(), t8.selector = o2), {
          transform: i,
          root: r2,
          string: o2
        };
      }, s2.ast = function(t8, e2) {
        return this._run(t8, e2).then(function(r2) {
          return r2.root;
        });
      }, s2.astSync = function(t8, e2) {
        return this._runSync(t8, e2).root;
      }, s2.transform = function(t8, e2) {
        return this._run(t8, e2).then(function(r2) {
          return r2.transform;
        });
      }, s2.transformSync = function(t8, e2) {
        return this._runSync(t8, e2).transform;
      }, s2.process = function(t8, e2) {
        return this._run(t8, e2).then(function(r2) {
          return r2.string || r2.root.toString();
        });
      }, s2.processSync = function(t8, e2) {
        var r2 = this._runSync(t8, e2);
        return r2.string || r2.root.toString();
      }, f;
    }();
    a.default = l2, u.exports = a.default;
  }(gt3, gt3.exports)), gt3.exports;
}
var rn3 = {};
var Ie3 = {};
var ss2;
function qu2() {
  if (ss2)
    return Ie3;
  ss2 = 1, Ie3.__esModule = true, Ie3.universal = Ie3.tag = Ie3.string = Ie3.selector = Ie3.root = Ie3.pseudo = Ie3.nesting = Ie3.id = Ie3.comment = Ie3.combinator = Ie3.className = Ie3.attribute = undefined;
  var u = o2(Il()), a = o2(kl()), h2 = o2(Dl()), p = o2(Pl()), l2 = o2(El()), f = o2(ql()), s2 = o2(Cl()), c2 = o2(xl()), t8 = o2(Ol()), e2 = o2(Al()), r2 = o2(Tl()), i = o2(Ml());
  function o2(b3) {
    return b3 && b3.__esModule ? b3 : { default: b3 };
  }
  var v3 = function(k3) {
    return new u.default(k3);
  };
  Ie3.attribute = v3;
  var m = function(k3) {
    return new a.default(k3);
  };
  Ie3.className = m;
  var n2 = function(k3) {
    return new h2.default(k3);
  };
  Ie3.combinator = n2;
  var d2 = function(k3) {
    return new p.default(k3);
  };
  Ie3.comment = d2;
  var _3 = function(k3) {
    return new l2.default(k3);
  };
  Ie3.id = _3;
  var w3 = function(k3) {
    return new f.default(k3);
  };
  Ie3.nesting = w3;
  var y2 = function(k3) {
    return new s2.default(k3);
  };
  Ie3.pseudo = y2;
  var x = function(k3) {
    return new c2.default(k3);
  };
  Ie3.root = x;
  var g2 = function(k3) {
    return new t8.default(k3);
  };
  Ie3.selector = g2;
  var O3 = function(k3) {
    return new e2.default(k3);
  };
  Ie3.string = O3;
  var A = function(k3) {
    return new r2.default(k3);
  };
  Ie3.tag = A;
  var E2 = function(k3) {
    return new i.default(k3);
  };
  return Ie3.universal = E2, Ie3;
}
var Pe3 = {};
var os2;
function Lu2() {
  if (os2)
    return Pe3;
  os2 = 1, Pe3.__esModule = true, Pe3.isComment = Pe3.isCombinator = Pe3.isClassName = Pe3.isAttribute = undefined, Pe3.isContainer = y2, Pe3.isIdentifier = undefined, Pe3.isNamespace = x, Pe3.isNesting = undefined, Pe3.isNode = p, Pe3.isPseudo = undefined, Pe3.isPseudoClass = w3, Pe3.isPseudoElement = _3, Pe3.isUniversal = Pe3.isTag = Pe3.isString = Pe3.isSelector = Pe3.isRoot = undefined;
  var u = Fe3(), a, h2 = (a = {}, a[u.ATTRIBUTE] = true, a[u.CLASS] = true, a[u.COMBINATOR] = true, a[u.COMMENT] = true, a[u.ID] = true, a[u.NESTING] = true, a[u.PSEUDO] = true, a[u.ROOT] = true, a[u.SELECTOR] = true, a[u.STRING] = true, a[u.TAG] = true, a[u.UNIVERSAL] = true, a);
  function p(g2) {
    return typeof g2 == "object" && h2[g2.type];
  }
  function l2(g2, O3) {
    return p(O3) && O3.type === g2;
  }
  var f = l2.bind(null, u.ATTRIBUTE);
  Pe3.isAttribute = f;
  var s2 = l2.bind(null, u.CLASS);
  Pe3.isClassName = s2;
  var c2 = l2.bind(null, u.COMBINATOR);
  Pe3.isCombinator = c2;
  var t8 = l2.bind(null, u.COMMENT);
  Pe3.isComment = t8;
  var e2 = l2.bind(null, u.ID);
  Pe3.isIdentifier = e2;
  var r2 = l2.bind(null, u.NESTING);
  Pe3.isNesting = r2;
  var i = l2.bind(null, u.PSEUDO);
  Pe3.isPseudo = i;
  var o2 = l2.bind(null, u.ROOT);
  Pe3.isRoot = o2;
  var v3 = l2.bind(null, u.SELECTOR);
  Pe3.isSelector = v3;
  var m = l2.bind(null, u.STRING);
  Pe3.isString = m;
  var n2 = l2.bind(null, u.TAG);
  Pe3.isTag = n2;
  var d2 = l2.bind(null, u.UNIVERSAL);
  Pe3.isUniversal = d2;
  function _3(g2) {
    return i(g2) && g2.value && (g2.value.startsWith("::") || g2.value.toLowerCase() === ":before" || g2.value.toLowerCase() === ":after" || g2.value.toLowerCase() === ":first-letter" || g2.value.toLowerCase() === ":first-line");
  }
  function w3(g2) {
    return i(g2) && !_3(g2);
  }
  function y2(g2) {
    return !!(p(g2) && g2.walk);
  }
  function x(g2) {
    return f(g2) || n2(g2);
  }
  return Pe3;
}
var ls2;
function Nu2() {
  return ls2 || (ls2 = 1, function(u) {
    u.__esModule = true;
    var a = Fe3();
    Object.keys(a).forEach(function(l2) {
      l2 === "default" || l2 === "__esModule" || l2 in u && u[l2] === a[l2] || (u[l2] = a[l2]);
    });
    var h2 = qu2();
    Object.keys(h2).forEach(function(l2) {
      l2 === "default" || l2 === "__esModule" || l2 in u && u[l2] === h2[l2] || (u[l2] = h2[l2]);
    });
    var p = Lu2();
    Object.keys(p).forEach(function(l2) {
      l2 === "default" || l2 === "__esModule" || l2 in u && u[l2] === p[l2] || (u[l2] = p[l2]);
    });
  }(rn3)), rn3;
}
var us2;
function Fu2() {
  return us2 || (us2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = s2(Du2()), p = f(Nu2());
    function l2(e2) {
      if (typeof WeakMap != "function")
        return null;
      var r2 = /* @__PURE__ */ new WeakMap, i = /* @__PURE__ */ new WeakMap;
      return (l2 = function(v3) {
        return v3 ? i : r2;
      })(e2);
    }
    function f(e2, r2) {
      if (e2 && e2.__esModule)
        return e2;
      if (e2 === null || typeof e2 != "object" && typeof e2 != "function")
        return { default: e2 };
      var i = l2(r2);
      if (i && i.has(e2))
        return i.get(e2);
      var o2 = {}, v3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var m in e2)
        if (m !== "default" && Object.prototype.hasOwnProperty.call(e2, m)) {
          var n2 = v3 ? Object.getOwnPropertyDescriptor(e2, m) : null;
          n2 && (n2.get || n2.set) ? Object.defineProperty(o2, m, n2) : o2[m] = e2[m];
        }
      return o2.default = e2, i && i.set(e2, o2), o2;
    }
    function s2(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    var c2 = function(r2) {
      return new h2.default(r2);
    };
    Object.assign(c2, p), delete c2.__esModule;
    var t8 = c2;
    a.default = t8, u.exports = a.default;
  }(vt3, vt3.exports)), vt3.exports;
}
var $u2 = Fu2();
var $i2 = /* @__PURE__ */ He3($u2);
var fs2 = (u) => u.replace(/-(\w|$)/g, (a, h2) => h2.toUpperCase());
var Uu2 = (u) => {
  const a = u.toLowerCase();
  return a.startsWith("--") ? a : a.startsWith("-ms-") ? fs2(a.slice(1)) : fs2(a);
};
function zu2(u) {
  return u.replaceAll(/\\[0-9]|\\/g, "");
}
var Wu2 = (u, a) => {
  u.walkRules((h2) => {
    var p;
    ((p = h2.parent) == null ? undefined : p.type) !== "atrule" && $i2((l2) => {
      let f = false;
      l2.walkPseudos(() => {
        f = true;
      }), f || a(h2);
    }).processSync(h2.selector);
  });
};
function Vu2(u, a) {
  let p = [...u.split(" ")];
  const l2 = {};
  return Wu2(a, (f) => {
    const s2 = [];
    $i2((c2) => {
      c2.walkClasses((t8) => {
        s2.push(zu2(t8.value));
      });
    }).processSync(f.selector), p = p.filter((c2) => !s2.includes(c2)), f.walkDecls((c2) => {
      l2[Uu2(c2.prop)] = c2.value + (c2.important ? "!important" : "");
    });
  }), {
    styles: l2,
    residualClassName: p.join(" ")
  };
}
var ju2 = (u) => {
  u.walkDecls((a) => {
    const h2 = /rgb\(\s*(\d+)\s*(\d+)\s*(\d+)(?:\s*\/\s*([\d%.]+))?\s*\)/g;
    a.value = a.value.replaceAll(h2, (p, l2, f, s2, c2) => {
      const t8 = c2 === "1" || typeof c2 > "u" ? "" : `,${c2}`;
      return `rgb(${l2},${f},${s2}${t8})`;
    });
  });
};
var Bu2 = (u) => {
  const a = [], h2 = [], p = $i2();
  return u.walkAtRules((l2) => {
    const f = l2.clone();
    f.walkRules((c2) => {
      const t8 = p.astSync(c2.selector);
      t8.walkClasses((r2) => {
        h2.push(r2.value), cs2(r2);
      });
      const e2 = c2.clone({ selector: t8.toString() });
      e2.walkDecls((r2) => {
        r2.important = true;
      }), c2.replaceWith(e2);
    });
    const s2 = a.find((c2) => c2 instanceof wl && c2.params === f.params);
    s2 ? s2.append(f.nodes) : a.push(f);
  }), u.walkRules((l2) => {
    if (l2.parent && l2.parent.type !== "root")
      return;
    const f = p.astSync(l2.selector);
    let s2 = false;
    if (f.walkPseudos(() => {
      s2 = true;
    }), !!s2 && (f.walkClasses((c2) => {
      h2.push(c2.value), cs2(c2);
    }), s2)) {
      const c2 = l2.clone({ selector: f.toString() });
      c2.walkDecls((t8) => {
        t8.important = true;
      }), a.push(c2);
    }
  }), {
    nonInlinableClasses: h2,
    sanitizedRules: a
  };
};
var cs2 = (u) => {
  u.replaceWith(u.clone({
    value: _l(u.value)
  }));
};
var Gu2 = (u, a) => {
  const h2 = {};
  let p = [], l2 = [];
  if (u.props.className) {
    const s2 = a.generateRootForClasses(u.props.className.split(" "));
    ju2(s2), {
      sanitizedRules: l2,
      nonInlinableClasses: p
    } = Bu2(s2);
    const { styles: c2, residualClassName: t8 } = Vu2(u.props.className, s2);
    if (h2.style = {
      ...c2,
      ...u.props.style
    }, !bl(u))
      if (t8.trim().length > 0) {
        h2.className = t8;
        for (const e2 of p)
          h2.className = h2.className.replace(e2, _l(e2));
      } else
        h2.className = undefined;
  }
  const f = {
    ...u.props,
    ...h2
  };
  return {
    elementWithInlinedStyles: ot3.cloneElement(u, f, f.children),
    nonInlinableClasses: p,
    nonInlineStyleNodes: l2
  };
};
var nn2 = {};
var ds2;
function Yu2() {
  return ds2 || (ds2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return p;
      }
    });
    let a = {
      atrule: [
        "name",
        "params"
      ],
      rule: [
        "selector"
      ]
    }, h2 = new Set(Object.keys(a));
    function p() {
      function l2(f) {
        let s2 = null;
        f.each((c2) => {
          if (!h2.has(c2.type)) {
            s2 = null;
            return;
          }
          if (s2 === null) {
            s2 = c2;
            return;
          }
          let t8 = a[c2.type];
          var e2, r2;
          c2.type === "atrule" && c2.name === "font-face" ? s2 = c2 : t8.every((i) => ((e2 = c2[i]) !== null && e2 !== undefined ? e2 : "").replace(/\s+/g, " ") === ((r2 = s2[i]) !== null && r2 !== undefined ? r2 : "").replace(/\s+/g, " ")) ? (c2.nodes && s2.append(c2.nodes), c2.remove()) : s2 = c2;
        }), f.each((c2) => {
          c2.type === "atrule" && l2(c2);
        });
      }
      return (f) => {
        l2(f);
      };
    }
  }(nn2)), nn2;
}
var Qu2 = Yu2();
var Hu2 = /* @__PURE__ */ He3(Qu2);
var an2 = {};
var ps2;
function Ju2() {
  return ps2 || (ps2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a() {
      return (l2) => {
        l2.walkRules((f) => {
          let s2 = /* @__PURE__ */ new Map, c2 = /* @__PURE__ */ new Set([]), t8 = /* @__PURE__ */ new Map;
          f.walkDecls((e2) => {
            if (e2.parent === f) {
              if (s2.has(e2.prop)) {
                if (s2.get(e2.prop).value === e2.value) {
                  c2.add(s2.get(e2.prop)), s2.set(e2.prop, e2);
                  return;
                }
                t8.has(e2.prop) || t8.set(e2.prop, /* @__PURE__ */ new Set), t8.get(e2.prop).add(s2.get(e2.prop)), t8.get(e2.prop).add(e2);
              }
              s2.set(e2.prop, e2);
            }
          });
          for (let e2 of c2)
            e2.remove();
          for (let e2 of t8.values()) {
            let r2 = /* @__PURE__ */ new Map;
            for (let i of e2) {
              let o2 = p(i.value);
              o2 !== null && (r2.has(o2) || r2.set(o2, /* @__PURE__ */ new Set), r2.get(o2).add(i));
            }
            for (let i of r2.values()) {
              let o2 = Array.from(i).slice(0, -1);
              for (let v3 of o2)
                v3.remove();
            }
          }
        });
      };
    }
    let h2 = Symbol("unitless-number");
    function p(l2) {
      let f = /^-?\d*.?\d+([\w%]+)?$/g.exec(l2);
      if (f) {
        var s2;
        return (s2 = f[1]) !== null && s2 !== undefined ? s2 : h2;
      }
      return null;
    }
  }(an2)), an2;
}
var Ku2 = Ju2();
var Xu2 = /* @__PURE__ */ He3(Ku2);
var sn2 = {};
var on3 = { exports: {} };
var hs2;
function Nl() {
  return hs2 || (hs2 = 1, function(u, a) {
    (function(h2, p) {
      u.exports = function(l2, f, s2, c2, t8) {
        for (f = f.split ? f.split(".") : f, c2 = 0;c2 < f.length; c2++)
          l2 = l2 ? l2[f[c2]] : t8;
        return l2 === t8 ? s2 : l2;
      };
    })();
  }(on3)), on3.exports;
}
var ln3 = { exports: {} };
var vs2;
function Zu2() {
  return vs2 || (vs2 = 1, function(u) {
    (function() {
      function a(l2, f, s2) {
        if (!l2)
          return null;
        a.caseSensitive || (l2 = l2.toLowerCase());
        var c2 = a.threshold === null ? null : a.threshold * l2.length, t8 = a.thresholdAbsolute, e2;
        c2 !== null && t8 !== null ? e2 = Math.min(c2, t8) : c2 !== null ? e2 = c2 : t8 !== null ? e2 = t8 : e2 = null;
        var r2, i, o2, v3, m, n2 = f.length;
        for (m = 0;m < n2; m++)
          if (i = f[m], s2 && (i = i[s2]), !!i && (a.caseSensitive ? o2 = i : o2 = i.toLowerCase(), v3 = p(l2, o2, e2), (e2 === null || v3 < e2) && (e2 = v3, s2 && a.returnWinningObject ? r2 = f[m] : r2 = i, a.returnFirstMatch)))
            return r2;
        return r2 || a.nullResultValue;
      }
      a.threshold = 0.4, a.thresholdAbsolute = 20, a.caseSensitive = false, a.nullResultValue = null, a.returnWinningObject = null, a.returnFirstMatch = false, u.exports ? u.exports = a : window.didYouMean = a;
      var h2 = Math.pow(2, 32) - 1;
      function p(l2, f, s2) {
        s2 = s2 || s2 === 0 ? s2 : h2;
        var c2 = l2.length, t8 = f.length;
        if (c2 === 0)
          return Math.min(s2 + 1, t8);
        if (t8 === 0)
          return Math.min(s2 + 1, c2);
        if (Math.abs(c2 - t8) > s2)
          return s2 + 1;
        var e2 = [], r2, i, o2, v3, m;
        for (r2 = 0;r2 <= t8; r2++)
          e2[r2] = [r2];
        for (i = 0;i <= c2; i++)
          e2[0][i] = i;
        for (r2 = 1;r2 <= t8; r2++) {
          for (o2 = h2, v3 = 1, r2 > s2 && (v3 = r2 - s2), m = t8 + 1, m > s2 + r2 && (m = s2 + r2), i = 1;i <= c2; i++)
            i < v3 || i > m ? e2[r2][i] = s2 + 1 : f.charAt(r2 - 1) === l2.charAt(i - 1) ? e2[r2][i] = e2[r2 - 1][i - 1] : e2[r2][i] = Math.min(e2[r2 - 1][i - 1] + 1, Math.min(e2[r2][i - 1] + 1, e2[r2 - 1][i] + 1)), e2[r2][i] < o2 && (o2 = e2[r2][i]);
          if (o2 > s2)
            return s2 + 1;
        }
        return e2[t8][c2];
      }
    })();
  }(ln3)), ln3.exports;
}
var un3 = {};
var fn3 = {};
var gs2;
function ut3() {
  return gs2 || (gs2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2) {
      if (Object.prototype.toString.call(h2) !== "[object Object]")
        return false;
      const p = Object.getPrototypeOf(h2);
      return p === null || Object.getPrototypeOf(p) === null;
    }
  }(fn3)), fn3;
}
var ms2;
function pr3() {
  return ms2 || (ms2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return l2;
      }
    });
    const a = /* @__PURE__ */ p(Be2()), h2 = /* @__PURE__ */ p(ut3());
    function p(f) {
      return f && f.__esModule ? f : {
        default: f
      };
    }
    function l2(f) {
      return [
        "fontSize",
        "outline"
      ].includes(f) ? (s2) => (typeof s2 == "function" && (s2 = s2({})), Array.isArray(s2) && (s2 = s2[0]), s2) : f === "fontFamily" ? (s2) => {
        typeof s2 == "function" && (s2 = s2({}));
        let c2 = Array.isArray(s2) && (0, h2.default)(s2[1]) ? s2[0] : s2;
        return Array.isArray(c2) ? c2.join(", ") : c2;
      } : [
        "boxShadow",
        "transitionProperty",
        "transitionDuration",
        "transitionDelay",
        "transitionTimingFunction",
        "backgroundImage",
        "backgroundSize",
        "backgroundColor",
        "cursor",
        "animation"
      ].includes(f) ? (s2) => (typeof s2 == "function" && (s2 = s2({})), Array.isArray(s2) && (s2 = s2.join(", ")), s2) : [
        "gridTemplateColumns",
        "gridTemplateRows",
        "objectPosition"
      ].includes(f) ? (s2) => (typeof s2 == "function" && (s2 = s2({})), typeof s2 == "string" && (s2 = a.default.list.comma(s2).join(" ")), s2) : (s2, c2 = {}) => (typeof s2 == "function" && (s2 = s2(c2)), s2);
    }
  }(un3)), un3;
}
var cn3;
var ys2;
function ef() {
  if (ys2)
    return cn3;
  ys2 = 1;
  var u = 40, a = 41, h2 = 39, p = 34, l2 = 92, f = 47, s2 = 44, c2 = 58, t8 = 42, e2 = 117, r2 = 85, i = 43, o2 = /^[a-f0-9?-]+$/i;
  return cn3 = function(v3) {
    for (var m = [], n2 = v3, d2, _3, w3, y2, x, g2, O3, A, E2 = 0, b3 = n2.charCodeAt(E2), k3 = n2.length, q2 = [
      {
        nodes: m
      }
    ], M2 = 0, W3, S3 = "", P3 = "", C = "";E2 < k3; )
      if (b3 <= 32) {
        d2 = E2;
        do
          d2 += 1, b3 = n2.charCodeAt(d2);
        while (b3 <= 32);
        y2 = n2.slice(E2, d2), w3 = m[m.length - 1], b3 === a && M2 ? C = y2 : w3 && w3.type === "div" ? (w3.after = y2, w3.sourceEndIndex += y2.length) : b3 === s2 || b3 === c2 || b3 === f && n2.charCodeAt(d2 + 1) !== t8 && (!W3 || W3 && W3.type === "function" && false) ? P3 = y2 : m.push({
          type: "space",
          sourceIndex: E2,
          sourceEndIndex: d2,
          value: y2
        }), E2 = d2;
      } else if (b3 === h2 || b3 === p) {
        d2 = E2, _3 = b3 === h2 ? "'" : '"', y2 = {
          type: "string",
          sourceIndex: E2,
          quote: _3
        };
        do
          if (x = false, d2 = n2.indexOf(_3, d2 + 1), ~d2)
            for (g2 = d2;n2.charCodeAt(g2 - 1) === l2; )
              g2 -= 1, x = !x;
          else
            n2 += _3, d2 = n2.length - 1, y2.unclosed = true;
        while (x);
        y2.value = n2.slice(E2 + 1, d2), y2.sourceEndIndex = y2.unclosed ? d2 : d2 + 1, m.push(y2), E2 = d2 + 1, b3 = n2.charCodeAt(E2);
      } else if (b3 === f && n2.charCodeAt(E2 + 1) === t8)
        d2 = n2.indexOf("*/", E2), y2 = {
          type: "comment",
          sourceIndex: E2,
          sourceEndIndex: d2 + 2
        }, d2 === -1 && (y2.unclosed = true, d2 = n2.length, y2.sourceEndIndex = d2), y2.value = n2.slice(E2 + 2, d2), m.push(y2), E2 = d2 + 2, b3 = n2.charCodeAt(E2);
      else if ((b3 === f || b3 === t8) && W3 && W3.type === "function")
        y2 = n2[E2], m.push({
          type: "word",
          sourceIndex: E2 - P3.length,
          sourceEndIndex: E2 + y2.length,
          value: y2
        }), E2 += 1, b3 = n2.charCodeAt(E2);
      else if (b3 === f || b3 === s2 || b3 === c2)
        y2 = n2[E2], m.push({
          type: "div",
          sourceIndex: E2 - P3.length,
          sourceEndIndex: E2 + y2.length,
          value: y2,
          before: P3,
          after: ""
        }), P3 = "", E2 += 1, b3 = n2.charCodeAt(E2);
      else if (u === b3) {
        d2 = E2;
        do
          d2 += 1, b3 = n2.charCodeAt(d2);
        while (b3 <= 32);
        if (A = E2, y2 = {
          type: "function",
          sourceIndex: E2 - S3.length,
          value: S3,
          before: n2.slice(A + 1, d2)
        }, E2 = d2, S3 === "url" && b3 !== h2 && b3 !== p) {
          d2 -= 1;
          do
            if (x = false, d2 = n2.indexOf(")", d2 + 1), ~d2)
              for (g2 = d2;n2.charCodeAt(g2 - 1) === l2; )
                g2 -= 1, x = !x;
            else
              n2 += ")", d2 = n2.length - 1, y2.unclosed = true;
          while (x);
          O3 = d2;
          do
            O3 -= 1, b3 = n2.charCodeAt(O3);
          while (b3 <= 32);
          A < O3 ? (E2 !== O3 + 1 ? y2.nodes = [
            {
              type: "word",
              sourceIndex: E2,
              sourceEndIndex: O3 + 1,
              value: n2.slice(E2, O3 + 1)
            }
          ] : y2.nodes = [], y2.unclosed && O3 + 1 !== d2 ? (y2.after = "", y2.nodes.push({
            type: "space",
            sourceIndex: O3 + 1,
            sourceEndIndex: d2,
            value: n2.slice(O3 + 1, d2)
          })) : (y2.after = n2.slice(O3 + 1, d2), y2.sourceEndIndex = d2)) : (y2.after = "", y2.nodes = []), E2 = d2 + 1, y2.sourceEndIndex = y2.unclosed ? d2 : E2, b3 = n2.charCodeAt(E2), m.push(y2);
        } else
          M2 += 1, y2.after = "", y2.sourceEndIndex = E2 + 1, m.push(y2), q2.push(y2), m = y2.nodes = [], W3 = y2;
        S3 = "";
      } else if (a === b3 && M2)
        E2 += 1, b3 = n2.charCodeAt(E2), W3.after = C, W3.sourceEndIndex += C.length, C = "", M2 -= 1, q2[q2.length - 1].sourceEndIndex = E2, q2.pop(), W3 = q2[M2], m = W3.nodes;
      else {
        d2 = E2;
        do
          b3 === l2 && (d2 += 1), d2 += 1, b3 = n2.charCodeAt(d2);
        while (d2 < k3 && !(b3 <= 32 || b3 === h2 || b3 === p || b3 === s2 || b3 === c2 || b3 === f || b3 === u || b3 === t8 && W3 && W3.type === "function" || b3 === f && W3.type === "function" || b3 === a && M2));
        y2 = n2.slice(E2, d2), u === b3 ? S3 = y2 : (e2 === y2.charCodeAt(0) || r2 === y2.charCodeAt(0)) && i === y2.charCodeAt(1) && o2.test(y2.slice(2)) ? m.push({
          type: "unicode-range",
          sourceIndex: E2,
          sourceEndIndex: d2,
          value: y2
        }) : m.push({
          type: "word",
          sourceIndex: E2,
          sourceEndIndex: d2,
          value: y2
        }), E2 = d2;
      }
    for (E2 = q2.length - 1;E2; E2 -= 1)
      q2[E2].unclosed = true, q2[E2].sourceEndIndex = n2.length;
    return q2[0].nodes;
  }, cn3;
}
var dn3;
var ws3;
function tf() {
  return ws3 || (ws3 = 1, dn3 = function u(a, h2, p) {
    var l2, f, s2, c2;
    for (l2 = 0, f = a.length;l2 < f; l2 += 1)
      s2 = a[l2], p || (c2 = h2(s2, l2, a)), c2 !== false && s2.type === "function" && Array.isArray(s2.nodes) && u(s2.nodes, h2, p), p && h2(s2, l2, a);
  }), dn3;
}
var pn3;
var bs2;
function rf() {
  if (bs2)
    return pn3;
  bs2 = 1;
  function u(h2, p) {
    var { type: l2, value: f } = h2, s2, c2;
    return p && (c2 = p(h2)) !== undefined ? c2 : l2 === "word" || l2 === "space" ? f : l2 === "string" ? (s2 = h2.quote || "", s2 + f + (h2.unclosed ? "" : s2)) : l2 === "comment" ? "/*" + f + (h2.unclosed ? "" : "*/") : l2 === "div" ? (h2.before || "") + f + (h2.after || "") : Array.isArray(h2.nodes) ? (s2 = a(h2.nodes, p), l2 !== "function" ? s2 : f + "(" + (h2.before || "") + s2 + (h2.after || "") + (h2.unclosed ? "" : ")")) : f;
  }
  function a(h2, p) {
    var l2, f;
    if (Array.isArray(h2)) {
      for (l2 = "", f = h2.length - 1;~f; f -= 1)
        l2 = u(h2[f], p) + l2;
      return l2;
    }
    return u(h2, p);
  }
  return pn3 = a, pn3;
}
var hn3;
var _s2;
function nf() {
  if (_s2)
    return hn3;
  _s2 = 1;
  var u = 45, a = 43, h2 = 46, p = 101, l2 = 69;
  function f(s2) {
    var c2 = s2.charCodeAt(0), t8;
    if (c2 === a || c2 === u) {
      if (t8 = s2.charCodeAt(1), t8 >= 48 && t8 <= 57)
        return true;
      var e2 = s2.charCodeAt(2);
      return t8 === h2 && e2 >= 48 && e2 <= 57;
    }
    return c2 === h2 ? (t8 = s2.charCodeAt(1), t8 >= 48 && t8 <= 57) : c2 >= 48 && c2 <= 57;
  }
  return hn3 = function(s2) {
    var c2 = 0, t8 = s2.length, e2, r2, i;
    if (t8 === 0 || !f(s2))
      return false;
    for (e2 = s2.charCodeAt(c2), (e2 === a || e2 === u) && c2++;c2 < t8 && (e2 = s2.charCodeAt(c2), !(e2 < 48 || e2 > 57)); )
      c2 += 1;
    if (e2 = s2.charCodeAt(c2), r2 = s2.charCodeAt(c2 + 1), e2 === h2 && r2 >= 48 && r2 <= 57)
      for (c2 += 2;c2 < t8 && (e2 = s2.charCodeAt(c2), !(e2 < 48 || e2 > 57)); )
        c2 += 1;
    if (e2 = s2.charCodeAt(c2), r2 = s2.charCodeAt(c2 + 1), i = s2.charCodeAt(c2 + 2), (e2 === p || e2 === l2) && (r2 >= 48 && r2 <= 57 || (r2 === a || r2 === u) && i >= 48 && i <= 57))
      for (c2 += r2 === a || r2 === u ? 3 : 2;c2 < t8 && (e2 = s2.charCodeAt(c2), !(e2 < 48 || e2 > 57)); )
        c2 += 1;
    return {
      number: s2.slice(0, c2),
      unit: s2.slice(c2)
    };
  }, hn3;
}
var vn3;
var Ss2;
function af() {
  if (Ss2)
    return vn3;
  Ss2 = 1;
  var u = ef(), a = tf(), h2 = rf();
  function p(l2) {
    return this instanceof p ? (this.nodes = u(l2), this) : new p(l2);
  }
  return p.prototype.toString = function() {
    return Array.isArray(this.nodes) ? h2(this.nodes) : "";
  }, p.prototype.walk = function(l2, f) {
    return a(this.nodes, l2, f), this;
  }, p.unit = nf(), p.walk = a, p.stringify = h2, vn3 = p, vn3;
}
var gn3 = {};
var xs2;
function Ui2() {
  return xs2 || (xs2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(c2, t8) {
      for (var e2 in t8)
        Object.defineProperty(c2, e2, {
          enumerable: true,
          get: t8[e2]
        });
    }
    a(u, {
      normalizeScreens: function() {
        return h2;
      },
      isScreenSortable: function() {
        return p;
      },
      compareScreens: function() {
        return l2;
      },
      toScreen: function() {
        return f;
      }
    });
    function h2(c2, t8 = true) {
      return Array.isArray(c2) ? c2.map((e2) => {
        if (t8 && Array.isArray(e2))
          throw new Error("The tuple syntax is not supported for `screens`.");
        if (typeof e2 == "string")
          return {
            name: e2.toString(),
            not: false,
            values: [
              {
                min: e2,
                max: undefined
              }
            ]
          };
        let [r2, i] = e2;
        return r2 = r2.toString(), typeof i == "string" ? {
          name: r2,
          not: false,
          values: [
            {
              min: i,
              max: undefined
            }
          ]
        } : Array.isArray(i) ? {
          name: r2,
          not: false,
          values: i.map((o2) => s2(o2))
        } : {
          name: r2,
          not: false,
          values: [
            s2(i)
          ]
        };
      }) : h2(Object.entries(c2 ?? {}), false);
    }
    function p(c2) {
      return c2.values.length !== 1 ? {
        result: false,
        reason: "multiple-values"
      } : c2.values[0].raw !== undefined ? {
        result: false,
        reason: "raw-values"
      } : c2.values[0].min !== undefined && c2.values[0].max !== undefined ? {
        result: false,
        reason: "min-and-max"
      } : {
        result: true,
        reason: null
      };
    }
    function l2(c2, t8, e2) {
      let r2 = f(t8, c2), i = f(e2, c2), o2 = p(r2), v3 = p(i);
      if (o2.reason === "multiple-values" || v3.reason === "multiple-values")
        throw new Error("Attempted to sort a screen with multiple values. This should never happen. Please open a bug report.");
      if (o2.reason === "raw-values" || v3.reason === "raw-values")
        throw new Error("Attempted to sort a screen with raw values. This should never happen. Please open a bug report.");
      if (o2.reason === "min-and-max" || v3.reason === "min-and-max")
        throw new Error("Attempted to sort a screen with both min and max values. This should never happen. Please open a bug report.");
      let { min: m, max: n2 } = r2.values[0], { min: d2, max: _3 } = i.values[0];
      t8.not && ([m, n2] = [
        n2,
        m
      ]), e2.not && ([d2, _3] = [
        _3,
        d2
      ]), m = m === undefined ? m : parseFloat(m), n2 = n2 === undefined ? n2 : parseFloat(n2), d2 = d2 === undefined ? d2 : parseFloat(d2), _3 = _3 === undefined ? _3 : parseFloat(_3);
      let [w3, y2] = c2 === "min" ? [
        m,
        d2
      ] : [
        _3,
        n2
      ];
      return w3 - y2;
    }
    function f(c2, t8) {
      return typeof c2 == "object" ? c2 : {
        name: "arbitrary-screen",
        values: [
          {
            [t8]: c2
          }
        ]
      };
    }
    function s2({ "min-width": c2, min: t8 = c2, max: e2, raw: r2 } = {}) {
      return {
        min: t8,
        max: e2,
        raw: r2
      };
    }
  }(gn3)), gn3;
}
var mn3 = {};
var Os2;
function zi2() {
  return Os2 || (Os2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2) {
      return h2 = Array.isArray(h2) ? h2 : [
        h2
      ], h2.map((p) => {
        let l2 = p.values.map((f) => f.raw !== undefined ? f.raw : [
          f.min && `(min-width: ${f.min})`,
          f.max && `(max-width: ${f.max})`
        ].filter(Boolean).join(" and "));
        return p.not ? `not all and ${l2}` : l2;
      }).join(", ");
    }
  }(mn3)), mn3;
}
var yn3 = {};
var ks2;
function Wi2() {
  return ks2 || (ks2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "toPath", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2) {
      if (Array.isArray(h2))
        return h2;
      let p = h2.split("[").length - 1, l2 = h2.split("]").length - 1;
      if (p !== l2)
        throw new Error(`Path is invalid. Has unbalanced brackets: ${h2}`);
      return h2.split(/\.(?![^\[]*\])|[\[\]]/g).filter(Boolean);
    }
  }(yn3)), yn3;
}
var wn3 = {};
var bn3 = {};
var _n3 = {};
var Ps2;
function sf() {
  return Ps2 || (Ps2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    const a = {
      aliceblue: [
        240,
        248,
        255
      ],
      antiquewhite: [
        250,
        235,
        215
      ],
      aqua: [
        0,
        255,
        255
      ],
      aquamarine: [
        127,
        255,
        212
      ],
      azure: [
        240,
        255,
        255
      ],
      beige: [
        245,
        245,
        220
      ],
      bisque: [
        255,
        228,
        196
      ],
      black: [
        0,
        0,
        0
      ],
      blanchedalmond: [
        255,
        235,
        205
      ],
      blue: [
        0,
        0,
        255
      ],
      blueviolet: [
        138,
        43,
        226
      ],
      brown: [
        165,
        42,
        42
      ],
      burlywood: [
        222,
        184,
        135
      ],
      cadetblue: [
        95,
        158,
        160
      ],
      chartreuse: [
        127,
        255,
        0
      ],
      chocolate: [
        210,
        105,
        30
      ],
      coral: [
        255,
        127,
        80
      ],
      cornflowerblue: [
        100,
        149,
        237
      ],
      cornsilk: [
        255,
        248,
        220
      ],
      crimson: [
        220,
        20,
        60
      ],
      cyan: [
        0,
        255,
        255
      ],
      darkblue: [
        0,
        0,
        139
      ],
      darkcyan: [
        0,
        139,
        139
      ],
      darkgoldenrod: [
        184,
        134,
        11
      ],
      darkgray: [
        169,
        169,
        169
      ],
      darkgreen: [
        0,
        100,
        0
      ],
      darkgrey: [
        169,
        169,
        169
      ],
      darkkhaki: [
        189,
        183,
        107
      ],
      darkmagenta: [
        139,
        0,
        139
      ],
      darkolivegreen: [
        85,
        107,
        47
      ],
      darkorange: [
        255,
        140,
        0
      ],
      darkorchid: [
        153,
        50,
        204
      ],
      darkred: [
        139,
        0,
        0
      ],
      darksalmon: [
        233,
        150,
        122
      ],
      darkseagreen: [
        143,
        188,
        143
      ],
      darkslateblue: [
        72,
        61,
        139
      ],
      darkslategray: [
        47,
        79,
        79
      ],
      darkslategrey: [
        47,
        79,
        79
      ],
      darkturquoise: [
        0,
        206,
        209
      ],
      darkviolet: [
        148,
        0,
        211
      ],
      deeppink: [
        255,
        20,
        147
      ],
      deepskyblue: [
        0,
        191,
        255
      ],
      dimgray: [
        105,
        105,
        105
      ],
      dimgrey: [
        105,
        105,
        105
      ],
      dodgerblue: [
        30,
        144,
        255
      ],
      firebrick: [
        178,
        34,
        34
      ],
      floralwhite: [
        255,
        250,
        240
      ],
      forestgreen: [
        34,
        139,
        34
      ],
      fuchsia: [
        255,
        0,
        255
      ],
      gainsboro: [
        220,
        220,
        220
      ],
      ghostwhite: [
        248,
        248,
        255
      ],
      gold: [
        255,
        215,
        0
      ],
      goldenrod: [
        218,
        165,
        32
      ],
      gray: [
        128,
        128,
        128
      ],
      green: [
        0,
        128,
        0
      ],
      greenyellow: [
        173,
        255,
        47
      ],
      grey: [
        128,
        128,
        128
      ],
      honeydew: [
        240,
        255,
        240
      ],
      hotpink: [
        255,
        105,
        180
      ],
      indianred: [
        205,
        92,
        92
      ],
      indigo: [
        75,
        0,
        130
      ],
      ivory: [
        255,
        255,
        240
      ],
      khaki: [
        240,
        230,
        140
      ],
      lavender: [
        230,
        230,
        250
      ],
      lavenderblush: [
        255,
        240,
        245
      ],
      lawngreen: [
        124,
        252,
        0
      ],
      lemonchiffon: [
        255,
        250,
        205
      ],
      lightblue: [
        173,
        216,
        230
      ],
      lightcoral: [
        240,
        128,
        128
      ],
      lightcyan: [
        224,
        255,
        255
      ],
      lightgoldenrodyellow: [
        250,
        250,
        210
      ],
      lightgray: [
        211,
        211,
        211
      ],
      lightgreen: [
        144,
        238,
        144
      ],
      lightgrey: [
        211,
        211,
        211
      ],
      lightpink: [
        255,
        182,
        193
      ],
      lightsalmon: [
        255,
        160,
        122
      ],
      lightseagreen: [
        32,
        178,
        170
      ],
      lightskyblue: [
        135,
        206,
        250
      ],
      lightslategray: [
        119,
        136,
        153
      ],
      lightslategrey: [
        119,
        136,
        153
      ],
      lightsteelblue: [
        176,
        196,
        222
      ],
      lightyellow: [
        255,
        255,
        224
      ],
      lime: [
        0,
        255,
        0
      ],
      limegreen: [
        50,
        205,
        50
      ],
      linen: [
        250,
        240,
        230
      ],
      magenta: [
        255,
        0,
        255
      ],
      maroon: [
        128,
        0,
        0
      ],
      mediumaquamarine: [
        102,
        205,
        170
      ],
      mediumblue: [
        0,
        0,
        205
      ],
      mediumorchid: [
        186,
        85,
        211
      ],
      mediumpurple: [
        147,
        112,
        219
      ],
      mediumseagreen: [
        60,
        179,
        113
      ],
      mediumslateblue: [
        123,
        104,
        238
      ],
      mediumspringgreen: [
        0,
        250,
        154
      ],
      mediumturquoise: [
        72,
        209,
        204
      ],
      mediumvioletred: [
        199,
        21,
        133
      ],
      midnightblue: [
        25,
        25,
        112
      ],
      mintcream: [
        245,
        255,
        250
      ],
      mistyrose: [
        255,
        228,
        225
      ],
      moccasin: [
        255,
        228,
        181
      ],
      navajowhite: [
        255,
        222,
        173
      ],
      navy: [
        0,
        0,
        128
      ],
      oldlace: [
        253,
        245,
        230
      ],
      olive: [
        128,
        128,
        0
      ],
      olivedrab: [
        107,
        142,
        35
      ],
      orange: [
        255,
        165,
        0
      ],
      orangered: [
        255,
        69,
        0
      ],
      orchid: [
        218,
        112,
        214
      ],
      palegoldenrod: [
        238,
        232,
        170
      ],
      palegreen: [
        152,
        251,
        152
      ],
      paleturquoise: [
        175,
        238,
        238
      ],
      palevioletred: [
        219,
        112,
        147
      ],
      papayawhip: [
        255,
        239,
        213
      ],
      peachpuff: [
        255,
        218,
        185
      ],
      peru: [
        205,
        133,
        63
      ],
      pink: [
        255,
        192,
        203
      ],
      plum: [
        221,
        160,
        221
      ],
      powderblue: [
        176,
        224,
        230
      ],
      purple: [
        128,
        0,
        128
      ],
      rebeccapurple: [
        102,
        51,
        153
      ],
      red: [
        255,
        0,
        0
      ],
      rosybrown: [
        188,
        143,
        143
      ],
      royalblue: [
        65,
        105,
        225
      ],
      saddlebrown: [
        139,
        69,
        19
      ],
      salmon: [
        250,
        128,
        114
      ],
      sandybrown: [
        244,
        164,
        96
      ],
      seagreen: [
        46,
        139,
        87
      ],
      seashell: [
        255,
        245,
        238
      ],
      sienna: [
        160,
        82,
        45
      ],
      silver: [
        192,
        192,
        192
      ],
      skyblue: [
        135,
        206,
        235
      ],
      slateblue: [
        106,
        90,
        205
      ],
      slategray: [
        112,
        128,
        144
      ],
      slategrey: [
        112,
        128,
        144
      ],
      snow: [
        255,
        250,
        250
      ],
      springgreen: [
        0,
        255,
        127
      ],
      steelblue: [
        70,
        130,
        180
      ],
      tan: [
        210,
        180,
        140
      ],
      teal: [
        0,
        128,
        128
      ],
      thistle: [
        216,
        191,
        216
      ],
      tomato: [
        255,
        99,
        71
      ],
      turquoise: [
        64,
        224,
        208
      ],
      violet: [
        238,
        130,
        238
      ],
      wheat: [
        245,
        222,
        179
      ],
      white: [
        255,
        255,
        255
      ],
      whitesmoke: [
        245,
        245,
        245
      ],
      yellow: [
        255,
        255,
        0
      ],
      yellowgreen: [
        154,
        205,
        50
      ]
    };
  }(_n3)), _n3;
}
var Es2;
function Fl() {
  return Es2 || (Es2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(m, n2) {
      for (var d2 in n2)
        Object.defineProperty(m, d2, {
          enumerable: true,
          get: n2[d2]
        });
    }
    a(u, {
      parseColor: function() {
        return o2;
      },
      formatColor: function() {
        return v3;
      }
    });
    const h2 = /* @__PURE__ */ p(sf());
    function p(m) {
      return m && m.__esModule ? m : {
        default: m
      };
    }
    let l2 = /^#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i, f = /^#([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i, s2 = /(?:\d+|\d*\.\d+)%?/, c2 = /(?:\s*,\s*|\s+)/, t8 = /\s*[,/]\s*/, e2 = /var\(--(?:[^ )]*?)(?:,(?:[^ )]*?|var\(--[^ )]*?\)))?\)/, r2 = new RegExp(`^(rgba?)\\(\\s*(${s2.source}|${e2.source})(?:${c2.source}(${s2.source}|${e2.source}))?(?:${c2.source}(${s2.source}|${e2.source}))?(?:${t8.source}(${s2.source}|${e2.source}))?\\s*\\)$`), i = new RegExp(`^(hsla?)\\(\\s*((?:${s2.source})(?:deg|rad|grad|turn)?|${e2.source})(?:${c2.source}(${s2.source}|${e2.source}))?(?:${c2.source}(${s2.source}|${e2.source}))?(?:${t8.source}(${s2.source}|${e2.source}))?\\s*\\)$`);
    function o2(m, { loose: n2 = false } = {}) {
      var d2, _3;
      if (typeof m != "string")
        return null;
      if (m = m.trim(), m === "transparent")
        return {
          mode: "rgb",
          color: [
            "0",
            "0",
            "0"
          ],
          alpha: "0"
        };
      if (m in h2.default)
        return {
          mode: "rgb",
          color: h2.default[m].map((O3) => O3.toString())
        };
      let w3 = m.replace(f, (O3, A, E2, b3, k3) => [
        "#",
        A,
        A,
        E2,
        E2,
        b3,
        b3,
        k3 ? k3 + k3 : ""
      ].join("")).match(l2);
      if (w3 !== null)
        return {
          mode: "rgb",
          color: [
            parseInt(w3[1], 16),
            parseInt(w3[2], 16),
            parseInt(w3[3], 16)
          ].map((O3) => O3.toString()),
          alpha: w3[4] ? (parseInt(w3[4], 16) / 255).toString() : undefined
        };
      var y2;
      let x = (y2 = m.match(r2)) !== null && y2 !== undefined ? y2 : m.match(i);
      if (x === null)
        return null;
      let g2 = [
        x[2],
        x[3],
        x[4]
      ].filter(Boolean).map((O3) => O3.toString());
      return g2.length === 2 && g2[0].startsWith("var(") ? {
        mode: x[1],
        color: [
          g2[0]
        ],
        alpha: g2[1]
      } : !n2 && g2.length !== 3 || g2.length < 3 && !g2.some((O3) => /^var\(.*?\)$/.test(O3)) ? null : {
        mode: x[1],
        color: g2,
        alpha: (d2 = x[5]) === null || d2 === undefined || (_3 = d2.toString) === null || _3 === undefined ? undefined : _3.call(d2)
      };
    }
    function v3({ mode: m, color: n2, alpha: d2 }) {
      let _3 = d2 !== undefined;
      return m === "rgba" || m === "hsla" ? `${m}(${n2.join(", ")}${_3 ? `, ${d2}` : ""})` : `${m}(${n2.join(" ")}${_3 ? ` / ${d2}` : ""})`;
    }
  }(bn3)), bn3;
}
var Ts2;
function hr3() {
  return Ts2 || (Ts2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(f, s2) {
      for (var c2 in s2)
        Object.defineProperty(f, c2, {
          enumerable: true,
          get: s2[c2]
        });
    }
    a(u, {
      withAlphaValue: function() {
        return p;
      },
      default: function() {
        return l2;
      }
    });
    const h2 = Fl();
    function p(f, s2, c2) {
      if (typeof f == "function")
        return f({
          opacityValue: s2
        });
      let t8 = (0, h2.parseColor)(f, {
        loose: true
      });
      return t8 === null ? c2 : (0, h2.formatColor)({
        ...t8,
        alpha: s2
      });
    }
    function l2({ color: f, property: s2, variable: c2 }) {
      let t8 = [].concat(s2);
      if (typeof f == "function")
        return {
          [c2]: "1",
          ...Object.fromEntries(t8.map((r2) => [
            r2,
            f({
              opacityVariable: c2,
              opacityValue: `var(${c2})`
            })
          ]))
        };
      const e2 = (0, h2.parseColor)(f);
      return e2 === null ? Object.fromEntries(t8.map((r2) => [
        r2,
        f
      ])) : e2.alpha !== undefined ? Object.fromEntries(t8.map((r2) => [
        r2,
        f
      ])) : {
        [c2]: "1",
        ...Object.fromEntries(t8.map((r2) => [
          r2,
          (0, h2.formatColor)({
            ...e2,
            alpha: `var(${c2})`
          })
        ]))
      };
    }
  }(wn3)), wn3;
}
var Sn3 = {};
var xn3 = {};
var As2;
function Vi2() {
  return As2 || (As2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2) {
      return h2.replace(/\\,/g, "\\2c ");
    }
  }(xn3)), xn3;
}
var On2 = {};
var kn3 = {};
var Pn3 = {};
var Cs2;
function st3() {
  return Cs2 || (Cs2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "splitAtTopLevelOnly", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2, p) {
      let l2 = [], f = [], s2 = 0, c2 = false;
      for (let t8 = 0;t8 < h2.length; t8++) {
        let e2 = h2[t8];
        l2.length === 0 && e2 === p[0] && !c2 && (p.length === 1 || h2.slice(t8, t8 + p.length) === p) && (f.push(h2.slice(s2, t8)), s2 = t8 + p.length), c2 = c2 ? false : e2 === "\\", e2 === "(" || e2 === "[" || e2 === "{" ? l2.push(e2) : (e2 === ")" && l2[l2.length - 1] === "(" || e2 === "]" && l2[l2.length - 1] === "[" || e2 === "}" && l2[l2.length - 1] === "{") && l2.pop();
      }
      return f.push(h2.slice(s2)), f;
    }
  }(Pn3)), Pn3;
}
var Rs2;
function $l() {
  return Rs2 || (Rs2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(t8, e2) {
      for (var r2 in e2)
        Object.defineProperty(t8, r2, {
          enumerable: true,
          get: e2[r2]
        });
    }
    a(u, {
      parseBoxShadowValue: function() {
        return s2;
      },
      formatBoxShadowValue: function() {
        return c2;
      }
    });
    const h2 = st3();
    let p = /* @__PURE__ */ new Set([
      "inset",
      "inherit",
      "initial",
      "revert",
      "unset"
    ]), l2 = /\ +(?![^(]*\))/g, f = /^-?(\d+|\.\d+)(.*?)$/g;
    function s2(t8) {
      return (0, h2.splitAtTopLevelOnly)(t8, ",").map((r2) => {
        let i = r2.trim(), o2 = {
          raw: i
        }, v3 = i.split(l2), m = /* @__PURE__ */ new Set;
        for (let n2 of v3)
          f.lastIndex = 0, !m.has("KEYWORD") && p.has(n2) ? (o2.keyword = n2, m.add("KEYWORD")) : f.test(n2) ? m.has("X") ? m.has("Y") ? m.has("BLUR") ? m.has("SPREAD") || (o2.spread = n2, m.add("SPREAD")) : (o2.blur = n2, m.add("BLUR")) : (o2.y = n2, m.add("Y")) : (o2.x = n2, m.add("X")) : o2.color ? (o2.unknown || (o2.unknown = []), o2.unknown.push(n2)) : o2.color = n2;
        return o2.valid = o2.x !== undefined && o2.y !== undefined, o2;
      });
    }
    function c2(t8) {
      return t8.map((e2) => e2.valid ? [
        e2.keyword,
        e2.x,
        e2.y,
        e2.blur,
        e2.spread,
        e2.color
      ].filter(Boolean).join(" ") : e2.raw).join(", ");
    }
  }(kn3)), kn3;
}
var Is2;
function vr3() {
  return Is2 || (Is2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(R3, $2) {
      for (var B3 in $2)
        Object.defineProperty(R3, B3, {
          enumerable: true,
          get: $2[B3]
        });
    }
    a(u, {
      normalize: function() {
        return t8;
      },
      normalizeAttributeSelectors: function() {
        return e2;
      },
      url: function() {
        return i;
      },
      number: function() {
        return o2;
      },
      percentage: function() {
        return v3;
      },
      length: function() {
        return d2;
      },
      lineWidth: function() {
        return w3;
      },
      shadow: function() {
        return y2;
      },
      color: function() {
        return x;
      },
      image: function() {
        return g2;
      },
      gradient: function() {
        return A;
      },
      position: function() {
        return b3;
      },
      familyName: function() {
        return k3;
      },
      genericName: function() {
        return M2;
      },
      absoluteSize: function() {
        return S3;
      },
      relativeSize: function() {
        return C;
      }
    });
    const h2 = Fl(), p = $l(), l2 = st3();
    let f = [
      "min",
      "max",
      "clamp",
      "calc"
    ];
    function s2(R3) {
      return f.some(($2) => new RegExp(`^${$2}\\(.*\\)`).test(R3));
    }
    const c2 = /* @__PURE__ */ new Set([
      "scroll-timeline-name",
      "timeline-scope",
      "view-timeline-name",
      "font-palette",
      "anchor-name",
      "anchor-scope",
      "position-anchor",
      "position-try-options",
      "scroll-timeline",
      "animation-timeline",
      "view-timeline",
      "position-try"
    ]);
    function t8(R3, $2 = null, B3 = true) {
      let z3 = $2 && c2.has($2.property);
      return R3.startsWith("--") && !z3 ? `var(${R3})` : R3.includes("url(") ? R3.split(/(url\(.*?\))/g).filter(Boolean).map((L3) => /^url\(.*?\)$/.test(L3) ? L3 : t8(L3, $2, false)).join("") : (R3 = R3.replace(/([^\\])_+/g, (L3, F) => F + " ".repeat(L3.length - 1)).replace(/^_/g, " ").replace(/\\_/g, "_"), B3 && (R3 = R3.trim()), R3 = r2(R3), R3);
    }
    function e2(R3) {
      return R3.includes("=") && (R3 = R3.replace(/(=.*)/g, ($2, B3) => {
        if (B3[1] === "'" || B3[1] === '"')
          return B3;
        if (B3.length > 2) {
          let z3 = B3[B3.length - 1];
          if (B3[B3.length - 2] === " " && (z3 === "i" || z3 === "I" || z3 === "s" || z3 === "S"))
            return `="${B3.slice(1, -2)}" ${B3[B3.length - 1]}`;
        }
        return `="${B3.slice(1)}"`;
      })), R3;
    }
    function r2(R3) {
      let $2 = [
        "theme"
      ], B3 = [
        "min-content",
        "max-content",
        "fit-content",
        "safe-area-inset-top",
        "safe-area-inset-right",
        "safe-area-inset-bottom",
        "safe-area-inset-left",
        "titlebar-area-x",
        "titlebar-area-y",
        "titlebar-area-width",
        "titlebar-area-height",
        "keyboard-inset-top",
        "keyboard-inset-right",
        "keyboard-inset-bottom",
        "keyboard-inset-left",
        "keyboard-inset-width",
        "keyboard-inset-height",
        "radial-gradient",
        "linear-gradient",
        "conic-gradient",
        "repeating-radial-gradient",
        "repeating-linear-gradient",
        "repeating-conic-gradient"
      ];
      return R3.replace(/(calc|min|max|clamp)\(.+\)/g, (z3) => {
        let L3 = "";
        function F() {
          let D = L3.trimEnd();
          return D[D.length - 1];
        }
        for (let D = 0;D < z3.length; D++) {
          let I3 = function(T3) {
            return T3.split("").every((U2, j3) => z3[D + j3] === U2);
          }, N3 = function(T3) {
            let U2 = 1 / 0;
            for (let H3 of T3) {
              let V4 = z3.indexOf(H3, D);
              V4 !== -1 && V4 < U2 && (U2 = V4);
            }
            let j3 = z3.slice(D, U2);
            return D += j3.length - 1, j3;
          }, J3 = z3[D];
          if (I3("var"))
            L3 += N3([
              ")",
              ","
            ]);
          else if (B3.some((T3) => I3(T3))) {
            let T3 = B3.find((U2) => I3(U2));
            L3 += T3, D += T3.length - 1;
          } else
            $2.some((T3) => I3(T3)) ? L3 += N3([
              ")"
            ]) : I3("[") ? L3 += N3([
              "]"
            ]) : [
              "+",
              "-",
              "*",
              "/"
            ].includes(J3) && ![
              "(",
              "+",
              "-",
              "*",
              "/",
              ","
            ].includes(F()) ? L3 += ` ${J3} ` : L3 += J3;
        }
        return L3.replace(/\s+/g, " ");
      });
    }
    function i(R3) {
      return R3.startsWith("url(");
    }
    function o2(R3) {
      return !isNaN(Number(R3)) || s2(R3);
    }
    function v3(R3) {
      return R3.endsWith("%") && o2(R3.slice(0, -1)) || s2(R3);
    }
    let n2 = `(?:${[
      "cm",
      "mm",
      "Q",
      "in",
      "pc",
      "pt",
      "px",
      "em",
      "ex",
      "ch",
      "rem",
      "lh",
      "rlh",
      "vw",
      "vh",
      "vmin",
      "vmax",
      "vb",
      "vi",
      "svw",
      "svh",
      "lvw",
      "lvh",
      "dvw",
      "dvh",
      "cqw",
      "cqh",
      "cqi",
      "cqb",
      "cqmin",
      "cqmax"
    ].join("|")})`;
    function d2(R3) {
      return R3 === "0" || new RegExp(`^[+-]?[0-9]*.?[0-9]+(?:[eE][+-]?[0-9]+)?${n2}$`).test(R3) || s2(R3);
    }
    let _3 = /* @__PURE__ */ new Set([
      "thin",
      "medium",
      "thick"
    ]);
    function w3(R3) {
      return _3.has(R3);
    }
    function y2(R3) {
      let $2 = (0, p.parseBoxShadowValue)(t8(R3));
      for (let B3 of $2)
        if (!B3.valid)
          return false;
      return true;
    }
    function x(R3) {
      let $2 = 0;
      return (0, l2.splitAtTopLevelOnly)(R3, "_").every((z3) => (z3 = t8(z3), z3.startsWith("var(") ? true : (0, h2.parseColor)(z3, {
        loose: true
      }) !== null ? ($2++, true) : false)) ? $2 > 0 : false;
    }
    function g2(R3) {
      let $2 = 0;
      return (0, l2.splitAtTopLevelOnly)(R3, ",").every((z3) => (z3 = t8(z3), z3.startsWith("var(") ? true : i(z3) || A(z3) || [
        "element(",
        "image(",
        "cross-fade(",
        "image-set("
      ].some((L3) => z3.startsWith(L3)) ? ($2++, true) : false)) ? $2 > 0 : false;
    }
    let O3 = /* @__PURE__ */ new Set([
      "conic-gradient",
      "linear-gradient",
      "radial-gradient",
      "repeating-conic-gradient",
      "repeating-linear-gradient",
      "repeating-radial-gradient"
    ]);
    function A(R3) {
      R3 = t8(R3);
      for (let $2 of O3)
        if (R3.startsWith(`${$2}(`))
          return true;
      return false;
    }
    let E2 = /* @__PURE__ */ new Set([
      "center",
      "top",
      "right",
      "bottom",
      "left"
    ]);
    function b3(R3) {
      let $2 = 0;
      return (0, l2.splitAtTopLevelOnly)(R3, "_").every((z3) => (z3 = t8(z3), z3.startsWith("var(") ? true : E2.has(z3) || d2(z3) || v3(z3) ? ($2++, true) : false)) ? $2 > 0 : false;
    }
    function k3(R3) {
      let $2 = 0;
      return (0, l2.splitAtTopLevelOnly)(R3, ",").every((z3) => (z3 = t8(z3), z3.startsWith("var(") ? true : z3.includes(" ") && !/(['"])([^"']+)\1/g.test(z3) || /^\d/g.test(z3) ? false : ($2++, true))) ? $2 > 0 : false;
    }
    let q2 = /* @__PURE__ */ new Set([
      "serif",
      "sans-serif",
      "monospace",
      "cursive",
      "fantasy",
      "system-ui",
      "ui-serif",
      "ui-sans-serif",
      "ui-monospace",
      "ui-rounded",
      "math",
      "emoji",
      "fangsong"
    ]);
    function M2(R3) {
      return q2.has(R3);
    }
    let W3 = /* @__PURE__ */ new Set([
      "xx-small",
      "x-small",
      "small",
      "medium",
      "large",
      "x-large",
      "xx-large",
      "xxx-large"
    ]);
    function S3(R3) {
      return W3.has(R3);
    }
    let P3 = /* @__PURE__ */ new Set([
      "larger",
      "smaller"
    ]);
    function C(R3) {
      return P3.has(R3);
    }
  }(On2)), On2;
}
var En3 = {};
var Ms2;
function ji2() {
  return Ms2 || (Ms2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2) {
      if (h2 = `${h2}`, h2 === "0")
        return "0";
      if (/^[+-]?(\d+|\d*\.\d+)(e[+-]?\d+)?(%|\w+)?$/.test(h2))
        return h2.replace(/^[+-]?/, (l2) => l2 === "-" ? "" : "-");
      let p = [
        "var",
        "calc",
        "min",
        "max",
        "clamp"
      ];
      for (const l2 of p)
        if (h2.includes(`${l2}(`))
          return `calc(${h2} * -1)`;
    }
  }(En3)), En3;
}
var Tn3 = {};
var Ds2;
function of() {
  return Ds2 || (Ds2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "backgroundSize", {
      enumerable: true,
      get: function() {
        return p;
      }
    });
    const a = vr3(), h2 = st3();
    function p(l2) {
      let f = [
        "cover",
        "contain"
      ];
      return (0, h2.splitAtTopLevelOnly)(l2, ",").every((s2) => {
        let c2 = (0, h2.splitAtTopLevelOnly)(s2, "_").filter(Boolean);
        return c2.length === 1 && f.includes(c2[0]) ? true : c2.length !== 1 && c2.length !== 2 ? false : c2.every((t8) => (0, a.length)(t8) || (0, a.percentage)(t8) || t8 === "auto");
      });
    }
  }(Tn3)), Tn3;
}
var An3 = {};
var Cn3 = {};
var qs2;
function tt3() {
  return qs2 || (qs2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(t8, e2) {
      for (var r2 in e2)
        Object.defineProperty(t8, r2, {
          enumerable: true,
          get: e2[r2]
        });
    }
    a(u, {
      dim: function() {
        return s2;
      },
      default: function() {
        return c2;
      }
    });
    const h2 = /* @__PURE__ */ p(/* @__PURE__ */ Ti());
    function p(t8) {
      return t8 && t8.__esModule ? t8 : {
        default: t8
      };
    }
    let l2 = /* @__PURE__ */ new Set;
    function f(t8, e2, r2) {
      typeof process < "u" && process.env.JEST_WORKER_ID || r2 && l2.has(r2) || (r2 && l2.add(r2), console.warn(""), e2.forEach((i) => console.warn(t8, "-", i)));
    }
    function s2(t8) {
      return h2.default.dim(t8);
    }
    const c2 = {
      info(t8, e2) {
        f(h2.default.bold(h2.default.cyan("info")), ...Array.isArray(t8) ? [
          t8
        ] : [
          e2,
          t8
        ]);
      },
      warn(t8, e2) {
        f(h2.default.bold(h2.default.yellow("warn")), ...Array.isArray(t8) ? [
          t8
        ] : [
          e2,
          t8
        ]);
      },
      risk(t8, e2) {
        f(h2.default.bold(h2.default.magenta("risk")), ...Array.isArray(t8) ? [
          t8
        ] : [
          e2,
          t8
        ]);
      }
    };
  }(Cn3)), Cn3;
}
var Ls2;
function it3() {
  return Ls2 || (Ls2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(i, o2) {
      for (var v3 in o2)
        Object.defineProperty(i, v3, {
          enumerable: true,
          get: o2[v3]
        });
    }
    a(u, {
      flagEnabled: function() {
        return c2;
      },
      issueFlagNotices: function() {
        return e2;
      },
      default: function() {
        return r2;
      }
    });
    const h2 = /* @__PURE__ */ l2(/* @__PURE__ */ Ti()), p = /* @__PURE__ */ l2(tt3());
    function l2(i) {
      return i && i.__esModule ? i : {
        default: i
      };
    }
    let f = {
      optimizeUniversalDefaults: false,
      generalizedModifiers: true,
      disableColorOpacityUtilitiesByDefault: false,
      relativeContentPathsByDefault: false
    }, s2 = {
      future: [
        "hoverOnlyWhenSupported",
        "respectDefaultRingColorOpacity",
        "disableColorOpacityUtilitiesByDefault",
        "relativeContentPathsByDefault"
      ],
      experimental: [
        "optimizeUniversalDefaults",
        "generalizedModifiers"
      ]
    };
    function c2(i, o2) {
      if (s2.future.includes(o2)) {
        var v3, m, n2;
        return i.future === "all" || ((n2 = (m = i == null || (v3 = i.future) === null || v3 === undefined ? undefined : v3[o2]) !== null && m !== undefined ? m : f[o2]) !== null && n2 !== undefined ? n2 : false);
      }
      if (s2.experimental.includes(o2)) {
        var d2, _3, w3;
        return i.experimental === "all" || ((w3 = (_3 = i == null || (d2 = i.experimental) === null || d2 === undefined ? undefined : d2[o2]) !== null && _3 !== undefined ? _3 : f[o2]) !== null && w3 !== undefined ? w3 : false);
      }
      return false;
    }
    function t8(i) {
      if (i.experimental === "all")
        return s2.experimental;
      var o2;
      return Object.keys((o2 = i == null ? undefined : i.experimental) !== null && o2 !== undefined ? o2 : {}).filter((v3) => s2.experimental.includes(v3) && i.experimental[v3]);
    }
    function e2(i) {
      if (process.env.JEST_WORKER_ID === undefined && t8(i).length > 0) {
        let o2 = t8(i).map((v3) => h2.default.yellow(v3)).join(", ");
        p.default.warn("experimental-flags-enabled", [
          `You have enabled experimental features: ${o2}`,
          "Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time."
        ]);
      }
    }
    const r2 = s2;
  }(An3)), An3;
}
var Ns2;
function gr3() {
  return Ns2 || (Ns2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(b3, k3) {
      for (var q2 in k3)
        Object.defineProperty(b3, q2, {
          enumerable: true,
          get: k3[q2]
        });
    }
    a(u, {
      updateAllClasses: function() {
        return e2;
      },
      asValue: function() {
        return o2;
      },
      parseColorFormat: function() {
        return n2;
      },
      asColor: function() {
        return _3;
      },
      asLookupValue: function() {
        return w3;
      },
      typeMap: function() {
        return x;
      },
      coerceValue: function() {
        return A;
      },
      getMatchingTypes: function() {
        return E2;
      }
    });
    const h2 = /* @__PURE__ */ t8(Vi2()), p = hr3(), l2 = vr3(), f = /* @__PURE__ */ t8(ji2()), s2 = of(), c2 = it3();
    function t8(b3) {
      return b3 && b3.__esModule ? b3 : {
        default: b3
      };
    }
    function e2(b3, k3) {
      b3.walkClasses((q2) => {
        q2.value = k3(q2.value), q2.raws && q2.raws.value && (q2.raws.value = (0, h2.default)(q2.raws.value));
      });
    }
    function r2(b3, k3) {
      if (!v3(b3))
        return;
      let q2 = b3.slice(1, -1);
      if (k3(q2))
        return (0, l2.normalize)(q2);
    }
    function i(b3, k3 = {}, q2) {
      let M2 = k3[b3];
      if (M2 !== undefined)
        return (0, f.default)(M2);
      if (v3(b3)) {
        let W3 = r2(b3, q2);
        return W3 === undefined ? undefined : (0, f.default)(W3);
      }
    }
    function o2(b3, k3 = {}, { validate: q2 = () => true } = {}) {
      var M2;
      let W3 = (M2 = k3.values) === null || M2 === undefined ? undefined : M2[b3];
      return W3 !== undefined ? W3 : k3.supportsNegativeValues && b3.startsWith("-") ? i(b3.slice(1), k3.values, q2) : r2(b3, q2);
    }
    function v3(b3) {
      return b3.startsWith("[") && b3.endsWith("]");
    }
    function m(b3) {
      let k3 = b3.lastIndexOf("/"), q2 = b3.lastIndexOf("[", k3), M2 = b3.indexOf("]", k3);
      return b3[k3 - 1] === "]" || b3[k3 + 1] === "[" || q2 !== -1 && M2 !== -1 && q2 < k3 && k3 < M2 && (k3 = b3.lastIndexOf("/", q2)), k3 === -1 || k3 === b3.length - 1 ? [
        b3,
        undefined
      ] : v3(b3) && !b3.includes("]/[") ? [
        b3,
        undefined
      ] : [
        b3.slice(0, k3),
        b3.slice(k3 + 1)
      ];
    }
    function n2(b3) {
      if (typeof b3 == "string" && b3.includes("<alpha-value>")) {
        let k3 = b3;
        return ({ opacityValue: q2 = 1 }) => k3.replace(/<alpha-value>/g, q2);
      }
      return b3;
    }
    function d2(b3) {
      return (0, l2.normalize)(b3.slice(1, -1));
    }
    function _3(b3, k3 = {}, { tailwindConfig: q2 = {} } = {}) {
      var M2;
      if (((M2 = k3.values) === null || M2 === undefined ? undefined : M2[b3]) !== undefined) {
        var W3;
        return n2((W3 = k3.values) === null || W3 === undefined ? undefined : W3[b3]);
      }
      let [S3, P3] = m(b3);
      if (P3 !== undefined) {
        var C, R3, $2, B3;
        let z3 = (B3 = (C = k3.values) === null || C === undefined ? undefined : C[S3]) !== null && B3 !== undefined ? B3 : v3(S3) ? S3.slice(1, -1) : undefined;
        return z3 === undefined ? undefined : (z3 = n2(z3), v3(P3) ? (0, p.withAlphaValue)(z3, d2(P3)) : ((R3 = q2.theme) === null || R3 === undefined || ($2 = R3.opacity) === null || $2 === undefined ? undefined : $2[P3]) === undefined ? undefined : (0, p.withAlphaValue)(z3, q2.theme.opacity[P3]));
      }
      return o2(b3, k3, {
        validate: l2.color
      });
    }
    function w3(b3, k3 = {}) {
      var q2;
      return (q2 = k3.values) === null || q2 === undefined ? undefined : q2[b3];
    }
    function y2(b3) {
      return (k3, q2) => o2(k3, q2, {
        validate: b3
      });
    }
    let x = {
      any: o2,
      color: _3,
      url: y2(l2.url),
      image: y2(l2.image),
      length: y2(l2.length),
      percentage: y2(l2.percentage),
      position: y2(l2.position),
      lookup: w3,
      "generic-name": y2(l2.genericName),
      "family-name": y2(l2.familyName),
      number: y2(l2.number),
      "line-width": y2(l2.lineWidth),
      "absolute-size": y2(l2.absoluteSize),
      "relative-size": y2(l2.relativeSize),
      shadow: y2(l2.shadow),
      size: y2(s2.backgroundSize)
    }, g2 = Object.keys(x);
    function O3(b3, k3) {
      let q2 = b3.indexOf(k3);
      return q2 === -1 ? [
        undefined,
        b3
      ] : [
        b3.slice(0, q2),
        b3.slice(q2 + 1)
      ];
    }
    function A(b3, k3, q2, M2) {
      if (q2.values && k3 in q2.values)
        for (let { type: S3 } of b3 ?? []) {
          let P3 = x[S3](k3, q2, {
            tailwindConfig: M2
          });
          if (P3 !== undefined)
            return [
              P3,
              S3,
              null
            ];
        }
      if (v3(k3)) {
        let S3 = k3.slice(1, -1), [P3, C] = O3(S3, ":");
        if (!/^[\w-_]+$/g.test(P3))
          C = S3;
        else if (P3 !== undefined && !g2.includes(P3))
          return [];
        if (C.length > 0 && g2.includes(P3))
          return [
            o2(`[${C}]`, q2),
            P3,
            null
          ];
      }
      let W3 = E2(b3, k3, q2, M2);
      for (let S3 of W3)
        return S3;
      return [];
    }
    function* E2(b3, k3, q2, M2) {
      let W3 = (0, c2.flagEnabled)(M2, "generalizedModifiers"), [S3, P3] = m(k3);
      if (W3 && q2.modifiers != null && (q2.modifiers === "any" || typeof q2.modifiers == "object" && (P3 && v3(P3) || (P3 in q2.modifiers))) || (S3 = k3, P3 = undefined), P3 !== undefined && S3 === "" && (S3 = "DEFAULT"), P3 !== undefined && typeof q2.modifiers == "object") {
        var R3, $2;
        let B3 = ($2 = (R3 = q2.modifiers) === null || R3 === undefined ? undefined : R3[P3]) !== null && $2 !== undefined ? $2 : null;
        B3 !== null ? P3 = B3 : v3(P3) && (P3 = d2(P3));
      }
      for (let { type: B3 } of b3 ?? []) {
        let z3 = x[B3](S3, q2, {
          tailwindConfig: M2
        });
        z3 !== undefined && (yield [
          z3,
          B3,
          P3 ?? null
        ]);
      }
    }
  }(Sn3)), Sn3;
}
var Fs2;
function lf() {
  return Fs2 || (Fs2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return E2;
      }
    });
    const a = /* @__PURE__ */ i(Nl()), h2 = /* @__PURE__ */ i(Zu2()), p = /* @__PURE__ */ i(pr3()), l2 = /* @__PURE__ */ i(af()), f = Ui2(), s2 = /* @__PURE__ */ i(zi2()), c2 = Wi2(), t8 = hr3(), e2 = gr3(), r2 = /* @__PURE__ */ i(tt3());
    function i(b3) {
      return b3 && b3.__esModule ? b3 : {
        default: b3
      };
    }
    function o2(b3) {
      return typeof b3 == "object" && b3 !== null;
    }
    function v3(b3, k3) {
      let q2 = (0, c2.toPath)(k3);
      do
        if (q2.pop(), (0, a.default)(b3, q2) !== undefined)
          break;
      while (q2.length);
      return q2.length ? q2 : undefined;
    }
    function m(b3) {
      return typeof b3 == "string" ? b3 : b3.reduce((k3, q2, M2) => q2.includes(".") ? `${k3}[${q2}]` : M2 === 0 ? q2 : `${k3}.${q2}`, "");
    }
    function n2(b3) {
      return b3.map((k3) => `'${k3}'`).join(", ");
    }
    function d2(b3) {
      return n2(Object.keys(b3));
    }
    function _3(b3, k3, q2, M2 = {}) {
      const W3 = Array.isArray(k3) ? m(k3) : k3.replace(/^['"]+|['"]+$/g, ""), S3 = Array.isArray(k3) ? k3 : (0, c2.toPath)(W3), P3 = (0, a.default)(b3.theme, S3, q2);
      if (P3 === undefined) {
        let R3 = `'${W3}' does not exist in your theme config.`;
        const $2 = S3.slice(0, -1), B3 = (0, a.default)(b3.theme, $2);
        if (o2(B3)) {
          const z3 = Object.keys(B3).filter((F) => _3(b3, [
            ...$2,
            F
          ]).isValid), L3 = (0, h2.default)(S3[S3.length - 1], z3);
          L3 ? R3 += ` Did you mean '${m([
            ...$2,
            L3
          ])}'?` : z3.length > 0 && (R3 += ` '${m($2)}' has the following valid keys: ${n2(z3)}`);
        } else {
          const z3 = v3(b3.theme, W3);
          if (z3) {
            const L3 = (0, a.default)(b3.theme, z3);
            o2(L3) ? R3 += ` '${m(z3)}' has the following keys: ${d2(L3)}` : R3 += ` '${m(z3)}' is not an object.`;
          } else
            R3 += ` Your theme has the following top-level keys: ${d2(b3.theme)}`;
        }
        return {
          isValid: false,
          error: R3
        };
      }
      if (!(typeof P3 == "string" || typeof P3 == "number" || typeof P3 == "function" || P3 instanceof String || P3 instanceof Number || Array.isArray(P3))) {
        let R3 = `'${W3}' was found but does not resolve to a string.`;
        if (o2(P3)) {
          let $2 = Object.keys(P3).filter((B3) => _3(b3, [
            ...S3,
            B3
          ]).isValid);
          $2.length && (R3 += ` Did you mean something like '${m([
            ...S3,
            $2[0]
          ])}'?`);
        }
        return {
          isValid: false,
          error: R3
        };
      }
      const [C] = S3;
      return {
        isValid: true,
        value: (0, p.default)(C)(P3, M2)
      };
    }
    function w3(b3, k3, q2) {
      k3 = k3.map((W3) => y2(b3, W3, q2));
      let M2 = [
        ""
      ];
      for (let W3 of k3)
        W3.type === "div" && W3.value === "," ? M2.push("") : M2[M2.length - 1] += l2.default.stringify(W3);
      return M2;
    }
    function y2(b3, k3, q2) {
      if (k3.type === "function" && q2[k3.value] !== undefined) {
        let M2 = w3(b3, k3.nodes, q2);
        k3.type = "word", k3.value = q2[k3.value](b3, ...M2);
      }
      return k3;
    }
    function x(b3, k3, q2) {
      return Object.keys(q2).some((W3) => k3.includes(`${W3}(`)) ? (0, l2.default)(k3).walk((W3) => {
        y2(b3, W3, q2);
      }).toString() : k3;
    }
    let g2 = {
      atrule: "params",
      decl: "value"
    };
    function* O3(b3) {
      b3 = b3.replace(/^['"]+|['"]+$/g, "");
      let k3 = b3.match(/^([^\s]+)(?![^\[]*\])(?:\s*\/\s*([^\/\s]+))$/), q2;
      yield [
        b3,
        undefined
      ], k3 && (b3 = k3[1], q2 = k3[2], yield [
        b3,
        q2
      ]);
    }
    function A(b3, k3, q2) {
      const M2 = Array.from(O3(k3)).map(([S3, P3]) => Object.assign(_3(b3, S3, q2, {
        opacityValue: P3
      }), {
        resolvedPath: S3,
        alpha: P3
      }));
      var W3;
      return (W3 = M2.find((S3) => S3.isValid)) !== null && W3 !== undefined ? W3 : M2[0];
    }
    function E2(b3) {
      let k3 = b3.tailwindConfig, q2 = {
        theme: (M2, W3, ...S3) => {
          let { isValid: P3, value: C, error: R3, alpha: $2 } = A(k3, W3, S3.length ? S3 : undefined);
          if (!P3) {
            var B3;
            let F = M2.parent, D = (B3 = F == null ? undefined : F.raws.tailwind) === null || B3 === undefined ? undefined : B3.candidate;
            if (F && D !== undefined) {
              b3.markInvalidUtilityNode(F), F.remove(), r2.default.warn("invalid-theme-key-in-class", [
                `The utility \`${D}\` contains an invalid theme value and was not generated.`
              ]);
              return;
            }
            throw M2.error(R3);
          }
          let z3 = (0, e2.parseColorFormat)(C);
          return ($2 !== undefined || z3 !== undefined && typeof z3 == "function") && ($2 === undefined && ($2 = 1), C = (0, t8.withAlphaValue)(z3, $2, z3)), C;
        },
        screen: (M2, W3) => {
          W3 = W3.replace(/^['"]+/g, "").replace(/['"]+$/g, "");
          let P3 = (0, f.normalizeScreens)(k3.theme.screens).find(({ name: C }) => C === W3);
          if (!P3)
            throw M2.error(`The '${W3}' screen does not exist in your theme.`);
          return (0, s2.default)(P3);
        }
      };
      return (M2) => {
        M2.walk((W3) => {
          let S3 = g2[W3.type];
          S3 !== undefined && (W3[S3] = x(W3, W3[S3], q2));
        });
      };
    }
  }(sn2)), sn2;
}
var uf = lf();
var ff = /* @__PURE__ */ He3(uf);
var Rn3 = {};
var Nt3 = { exports: {} };
var Ft2 = { exports: {} };
var $t3 = { exports: {} };
var Ut3 = { exports: {} };
var zt3 = { exports: {} };
var Wt3 = { exports: {} };
var Qe3 = {};
var Vt3 = { exports: {} };
var $s;
function Bi2() {
  return $s || ($s = 1, function(u, a) {
    a.__esModule = true, a.default = l2;
    function h2(f) {
      for (var s2 = f.toLowerCase(), c2 = "", t8 = false, e2 = 0;e2 < 6 && s2[e2] !== undefined; e2++) {
        var r2 = s2.charCodeAt(e2), i = r2 >= 97 && r2 <= 102 || r2 >= 48 && r2 <= 57;
        if (t8 = r2 === 32, !i)
          break;
        c2 += s2[e2];
      }
      if (c2.length !== 0) {
        var o2 = parseInt(c2, 16), v3 = o2 >= 55296 && o2 <= 57343;
        return v3 || o2 === 0 || o2 > 1114111 ? ["�", c2.length + (t8 ? 1 : 0)] : [String.fromCodePoint(o2), c2.length + (t8 ? 1 : 0)];
      }
    }
    var p = /\\/;
    function l2(f) {
      var s2 = p.test(f);
      if (!s2)
        return f;
      for (var c2 = "", t8 = 0;t8 < f.length; t8++) {
        if (f[t8] === "\\") {
          var e2 = h2(f.slice(t8 + 1, t8 + 7));
          if (e2 !== undefined) {
            c2 += e2[0], t8 += e2[1];
            continue;
          }
          if (f[t8 + 1] === "\\") {
            c2 += "\\", t8++;
            continue;
          }
          f.length === t8 + 1 && (c2 += f[t8]);
          continue;
        }
        c2 += f[t8];
      }
      return c2;
    }
    u.exports = a.default;
  }(Vt3, Vt3.exports)), Vt3.exports;
}
var jt3 = { exports: {} };
var Us2;
function cf() {
  return Us2 || (Us2 = 1, function(u, a) {
    a.__esModule = true, a.default = h2;
    function h2(p) {
      for (var l2 = arguments.length, f = new Array(l2 > 1 ? l2 - 1 : 0), s2 = 1;s2 < l2; s2++)
        f[s2 - 1] = arguments[s2];
      for (;f.length > 0; ) {
        var c2 = f.shift();
        if (!p[c2])
          return;
        p = p[c2];
      }
      return p;
    }
    u.exports = a.default;
  }(jt3, jt3.exports)), jt3.exports;
}
var Bt3 = { exports: {} };
var zs2;
function df() {
  return zs2 || (zs2 = 1, function(u, a) {
    a.__esModule = true, a.default = h2;
    function h2(p) {
      for (var l2 = arguments.length, f = new Array(l2 > 1 ? l2 - 1 : 0), s2 = 1;s2 < l2; s2++)
        f[s2 - 1] = arguments[s2];
      for (;f.length > 0; ) {
        var c2 = f.shift();
        p[c2] || (p[c2] = {}), p = p[c2];
      }
    }
    u.exports = a.default;
  }(Bt3, Bt3.exports)), Bt3.exports;
}
var Gt3 = { exports: {} };
var Ws2;
function pf() {
  return Ws2 || (Ws2 = 1, function(u, a) {
    a.__esModule = true, a.default = h2;
    function h2(p) {
      for (var l2 = "", f = p.indexOf("/*"), s2 = 0;f >= 0; ) {
        l2 = l2 + p.slice(s2, f);
        var c2 = p.indexOf("*/", f + 2);
        if (c2 < 0)
          return l2;
        s2 = c2 + 2, f = p.indexOf("/*", s2);
      }
      return l2 = l2 + p.slice(s2), l2;
    }
    u.exports = a.default;
  }(Gt3, Gt3.exports)), Gt3.exports;
}
var Vs2;
function mr3() {
  if (Vs2)
    return Qe3;
  Vs2 = 1, Qe3.__esModule = true, Qe3.unesc = Qe3.stripComments = Qe3.getProp = Qe3.ensureObject = undefined;
  var u = l2(Bi2());
  Qe3.unesc = u.default;
  var a = l2(cf());
  Qe3.getProp = a.default;
  var h2 = l2(df());
  Qe3.ensureObject = h2.default;
  var p = l2(pf());
  Qe3.stripComments = p.default;
  function l2(f) {
    return f && f.__esModule ? f : { default: f };
  }
  return Qe3;
}
var js2;
function rt3() {
  return js2 || (js2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = mr3();
    function p(c2, t8) {
      for (var e2 = 0;e2 < t8.length; e2++) {
        var r2 = t8[e2];
        r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(c2, r2.key, r2);
      }
    }
    function l2(c2, t8, e2) {
      return t8 && p(c2.prototype, t8), Object.defineProperty(c2, "prototype", { writable: false }), c2;
    }
    var f = function c(t8, e2) {
      if (typeof t8 != "object" || t8 === null)
        return t8;
      var r2 = new t8.constructor;
      for (var i in t8)
        if (t8.hasOwnProperty(i)) {
          var o2 = t8[i], v3 = typeof o2;
          i === "parent" && v3 === "object" ? e2 && (r2[i] = e2) : o2 instanceof Array ? r2[i] = o2.map(function(m) {
            return c(m, r2);
          }) : r2[i] = c(o2, r2);
        }
      return r2;
    }, s2 = /* @__PURE__ */ function() {
      function c2(e2) {
        e2 === undefined && (e2 = {}), Object.assign(this, e2), this.spaces = this.spaces || {}, this.spaces.before = this.spaces.before || "", this.spaces.after = this.spaces.after || "";
      }
      var t8 = c2.prototype;
      return t8.remove = function() {
        return this.parent && this.parent.removeChild(this), this.parent = undefined, this;
      }, t8.replaceWith = function() {
        if (this.parent) {
          for (var r2 in arguments)
            this.parent.insertBefore(this, arguments[r2]);
          this.remove();
        }
        return this;
      }, t8.next = function() {
        return this.parent.at(this.parent.index(this) + 1);
      }, t8.prev = function() {
        return this.parent.at(this.parent.index(this) - 1);
      }, t8.clone = function(r2) {
        r2 === undefined && (r2 = {});
        var i = f(this);
        for (var o2 in r2)
          i[o2] = r2[o2];
        return i;
      }, t8.appendToPropertyAndEscape = function(r2, i, o2) {
        this.raws || (this.raws = {});
        var v3 = this[r2], m = this.raws[r2];
        this[r2] = v3 + i, m || o2 !== i ? this.raws[r2] = (m || v3) + o2 : delete this.raws[r2];
      }, t8.setPropertyAndEscape = function(r2, i, o2) {
        this.raws || (this.raws = {}), this[r2] = i, this.raws[r2] = o2;
      }, t8.setPropertyWithoutEscape = function(r2, i) {
        this[r2] = i, this.raws && delete this.raws[r2];
      }, t8.isAtPosition = function(r2, i) {
        if (this.source && this.source.start && this.source.end)
          return !(this.source.start.line > r2 || this.source.end.line < r2 || this.source.start.line === r2 && this.source.start.column > i || this.source.end.line === r2 && this.source.end.column < i);
      }, t8.stringifyProperty = function(r2) {
        return this.raws && this.raws[r2] || this[r2];
      }, t8.valueToString = function() {
        return String(this.stringifyProperty("value"));
      }, t8.toString = function() {
        return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join("");
      }, l2(c2, [{
        key: "rawSpaceBefore",
        get: function() {
          var r2 = this.raws && this.raws.spaces && this.raws.spaces.before;
          return r2 === undefined && (r2 = this.spaces && this.spaces.before), r2 || "";
        },
        set: function(r2) {
          (0, h2.ensureObject)(this, "raws", "spaces"), this.raws.spaces.before = r2;
        }
      }, {
        key: "rawSpaceAfter",
        get: function() {
          var r2 = this.raws && this.raws.spaces && this.raws.spaces.after;
          return r2 === undefined && (r2 = this.spaces.after), r2 || "";
        },
        set: function(r2) {
          (0, h2.ensureObject)(this, "raws", "spaces"), this.raws.spaces.after = r2;
        }
      }]), c2;
    }();
    a.default = s2, u.exports = a.default;
  }(Wt3, Wt3.exports)), Wt3.exports;
}
var Me3 = {};
var Bs2;
function $e2() {
  if (Bs2)
    return Me3;
  Bs2 = 1, Me3.__esModule = true, Me3.UNIVERSAL = Me3.TAG = Me3.STRING = Me3.SELECTOR = Me3.ROOT = Me3.PSEUDO = Me3.NESTING = Me3.ID = Me3.COMMENT = Me3.COMBINATOR = Me3.CLASS = Me3.ATTRIBUTE = undefined;
  var u = "tag";
  Me3.TAG = u;
  var a = "string";
  Me3.STRING = a;
  var h2 = "selector";
  Me3.SELECTOR = h2;
  var p = "root";
  Me3.ROOT = p;
  var l2 = "pseudo";
  Me3.PSEUDO = l2;
  var f = "nesting";
  Me3.NESTING = f;
  var s2 = "id";
  Me3.ID = s2;
  var c2 = "comment";
  Me3.COMMENT = c2;
  var t8 = "combinator";
  Me3.COMBINATOR = t8;
  var e2 = "class";
  Me3.CLASS = e2;
  var r2 = "attribute";
  Me3.ATTRIBUTE = r2;
  var i = "universal";
  return Me3.UNIVERSAL = i, Me3;
}
var Gs2;
function Gi2() {
  return Gs2 || (Gs2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = s2(rt3()), p = f($e2());
    function l2(n2) {
      if (typeof WeakMap != "function")
        return null;
      var d2 = /* @__PURE__ */ new WeakMap, _3 = /* @__PURE__ */ new WeakMap;
      return (l2 = function(y2) {
        return y2 ? _3 : d2;
      })(n2);
    }
    function f(n2, d2) {
      if (n2 && n2.__esModule)
        return n2;
      if (n2 === null || typeof n2 != "object" && typeof n2 != "function")
        return { default: n2 };
      var _3 = l2(d2);
      if (_3 && _3.has(n2))
        return _3.get(n2);
      var w3 = {}, y2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var x in n2)
        if (x !== "default" && Object.prototype.hasOwnProperty.call(n2, x)) {
          var g2 = y2 ? Object.getOwnPropertyDescriptor(n2, x) : null;
          g2 && (g2.get || g2.set) ? Object.defineProperty(w3, x, g2) : w3[x] = n2[x];
        }
      return w3.default = n2, _3 && _3.set(n2, w3), w3;
    }
    function s2(n2) {
      return n2 && n2.__esModule ? n2 : { default: n2 };
    }
    function c2(n2, d2) {
      var _3 = typeof Symbol < "u" && n2[Symbol.iterator] || n2["@@iterator"];
      if (_3)
        return (_3 = _3.call(n2)).next.bind(_3);
      if (Array.isArray(n2) || (_3 = t8(n2)) || d2) {
        _3 && (n2 = _3);
        var w3 = 0;
        return function() {
          return w3 >= n2.length ? { done: true } : { done: false, value: n2[w3++] };
        };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function t8(n2, d2) {
      if (n2) {
        if (typeof n2 == "string")
          return e2(n2, d2);
        var _3 = Object.prototype.toString.call(n2).slice(8, -1);
        if (_3 === "Object" && n2.constructor && (_3 = n2.constructor.name), _3 === "Map" || _3 === "Set")
          return Array.from(n2);
        if (_3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_3))
          return e2(n2, d2);
      }
    }
    function e2(n2, d2) {
      (d2 == null || d2 > n2.length) && (d2 = n2.length);
      for (var _3 = 0, w3 = new Array(d2);_3 < d2; _3++)
        w3[_3] = n2[_3];
      return w3;
    }
    function r2(n2, d2) {
      for (var _3 = 0;_3 < d2.length; _3++) {
        var w3 = d2[_3];
        w3.enumerable = w3.enumerable || false, w3.configurable = true, "value" in w3 && (w3.writable = true), Object.defineProperty(n2, w3.key, w3);
      }
    }
    function i(n2, d2, _3) {
      return d2 && r2(n2.prototype, d2), Object.defineProperty(n2, "prototype", { writable: false }), n2;
    }
    function o2(n2, d2) {
      n2.prototype = Object.create(d2.prototype), n2.prototype.constructor = n2, v3(n2, d2);
    }
    function v3(n2, d2) {
      return v3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(w3, y2) {
        return w3.__proto__ = y2, w3;
      }, v3(n2, d2);
    }
    var m = /* @__PURE__ */ function(n2) {
      o2(d2, n2);
      function d2(w3) {
        var y2;
        return y2 = n2.call(this, w3) || this, y2.nodes || (y2.nodes = []), y2;
      }
      var _3 = d2.prototype;
      return _3.append = function(y2) {
        return y2.parent = this, this.nodes.push(y2), this;
      }, _3.prepend = function(y2) {
        return y2.parent = this, this.nodes.unshift(y2), this;
      }, _3.at = function(y2) {
        return this.nodes[y2];
      }, _3.index = function(y2) {
        return typeof y2 == "number" ? y2 : this.nodes.indexOf(y2);
      }, _3.removeChild = function(y2) {
        y2 = this.index(y2), this.at(y2).parent = undefined, this.nodes.splice(y2, 1);
        var x;
        for (var g2 in this.indexes)
          x = this.indexes[g2], x >= y2 && (this.indexes[g2] = x - 1);
        return this;
      }, _3.removeAll = function() {
        for (var y2 = c2(this.nodes), x;!(x = y2()).done; ) {
          var g2 = x.value;
          g2.parent = undefined;
        }
        return this.nodes = [], this;
      }, _3.empty = function() {
        return this.removeAll();
      }, _3.insertAfter = function(y2, x) {
        x.parent = this;
        var g2 = this.index(y2);
        this.nodes.splice(g2 + 1, 0, x), x.parent = this;
        var O3;
        for (var A in this.indexes)
          O3 = this.indexes[A], g2 <= O3 && (this.indexes[A] = O3 + 1);
        return this;
      }, _3.insertBefore = function(y2, x) {
        x.parent = this;
        var g2 = this.index(y2);
        this.nodes.splice(g2, 0, x), x.parent = this;
        var O3;
        for (var A in this.indexes)
          O3 = this.indexes[A], O3 <= g2 && (this.indexes[A] = O3 + 1);
        return this;
      }, _3._findChildAtPosition = function(y2, x) {
        var g2 = undefined;
        return this.each(function(O3) {
          if (O3.atPosition) {
            var A = O3.atPosition(y2, x);
            if (A)
              return g2 = A, false;
          } else if (O3.isAtPosition(y2, x))
            return g2 = O3, false;
        }), g2;
      }, _3.atPosition = function(y2, x) {
        if (this.isAtPosition(y2, x))
          return this._findChildAtPosition(y2, x) || this;
      }, _3._inferEndPosition = function() {
        this.last && this.last.source && this.last.source.end && (this.source = this.source || {}, this.source.end = this.source.end || {}, Object.assign(this.source.end, this.last.source.end));
      }, _3.each = function(y2) {
        this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach++;
        var x = this.lastEach;
        if (this.indexes[x] = 0, !!this.length) {
          for (var g2, O3;this.indexes[x] < this.length && (g2 = this.indexes[x], O3 = y2(this.at(g2), g2), O3 !== false); )
            this.indexes[x] += 1;
          if (delete this.indexes[x], O3 === false)
            return false;
        }
      }, _3.walk = function(y2) {
        return this.each(function(x, g2) {
          var O3 = y2(x, g2);
          if (O3 !== false && x.length && (O3 = x.walk(y2)), O3 === false)
            return false;
        });
      }, _3.walkAttributes = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.ATTRIBUTE)
            return y2.call(x, g2);
        });
      }, _3.walkClasses = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.CLASS)
            return y2.call(x, g2);
        });
      }, _3.walkCombinators = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.COMBINATOR)
            return y2.call(x, g2);
        });
      }, _3.walkComments = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.COMMENT)
            return y2.call(x, g2);
        });
      }, _3.walkIds = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.ID)
            return y2.call(x, g2);
        });
      }, _3.walkNesting = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.NESTING)
            return y2.call(x, g2);
        });
      }, _3.walkPseudos = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.PSEUDO)
            return y2.call(x, g2);
        });
      }, _3.walkTags = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.TAG)
            return y2.call(x, g2);
        });
      }, _3.walkUniversals = function(y2) {
        var x = this;
        return this.walk(function(g2) {
          if (g2.type === p.UNIVERSAL)
            return y2.call(x, g2);
        });
      }, _3.split = function(y2) {
        var x = this, g2 = [];
        return this.reduce(function(O3, A, E2) {
          var b3 = y2.call(x, A);
          return g2.push(A), b3 ? (O3.push(g2), g2 = []) : E2 === x.length - 1 && O3.push(g2), O3;
        }, []);
      }, _3.map = function(y2) {
        return this.nodes.map(y2);
      }, _3.reduce = function(y2, x) {
        return this.nodes.reduce(y2, x);
      }, _3.every = function(y2) {
        return this.nodes.every(y2);
      }, _3.some = function(y2) {
        return this.nodes.some(y2);
      }, _3.filter = function(y2) {
        return this.nodes.filter(y2);
      }, _3.sort = function(y2) {
        return this.nodes.sort(y2);
      }, _3.toString = function() {
        return this.map(String).join("");
      }, i(d2, [{
        key: "first",
        get: function() {
          return this.at(0);
        }
      }, {
        key: "last",
        get: function() {
          return this.at(this.length - 1);
        }
      }, {
        key: "length",
        get: function() {
          return this.nodes.length;
        }
      }]), d2;
    }(h2.default);
    a.default = m, u.exports = a.default;
  }(zt3, zt3.exports)), zt3.exports;
}
var Ys2;
function Ul() {
  return Ys2 || (Ys2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Gi2()), p = $e2();
    function l2(r2) {
      return r2 && r2.__esModule ? r2 : { default: r2 };
    }
    function f(r2, i) {
      for (var o2 = 0;o2 < i.length; o2++) {
        var v3 = i[o2];
        v3.enumerable = v3.enumerable || false, v3.configurable = true, "value" in v3 && (v3.writable = true), Object.defineProperty(r2, v3.key, v3);
      }
    }
    function s2(r2, i, o2) {
      return i && f(r2.prototype, i), Object.defineProperty(r2, "prototype", { writable: false }), r2;
    }
    function c2(r2, i) {
      r2.prototype = Object.create(i.prototype), r2.prototype.constructor = r2, t8(r2, i);
    }
    function t8(r2, i) {
      return t8 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(v3, m) {
        return v3.__proto__ = m, v3;
      }, t8(r2, i);
    }
    var e2 = /* @__PURE__ */ function(r2) {
      c2(i, r2);
      function i(v3) {
        var m;
        return m = r2.call(this, v3) || this, m.type = p.ROOT, m;
      }
      var o2 = i.prototype;
      return o2.toString = function() {
        var m = this.reduce(function(n2, d2) {
          return n2.push(String(d2)), n2;
        }, []).join(",");
        return this.trailingComma ? m + "," : m;
      }, o2.error = function(m, n2) {
        return this._error ? this._error(m, n2) : new Error(m);
      }, s2(i, [{
        key: "errorGenerator",
        set: function(m) {
          this._error = m;
        }
      }]), i;
    }(h2.default);
    a.default = e2, u.exports = a.default;
  }(Ut3, Ut3.exports)), Ut3.exports;
}
var Yt3 = { exports: {} };
var Qs;
function zl() {
  return Qs || (Qs = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Gi2()), p = $e2();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.SELECTOR, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Yt3, Yt3.exports)), Yt3.exports;
}
var Qt3 = { exports: {} };
var Hs2;
function Wl() {
  return Hs2 || (Hs2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = s2(at3()), p = mr3(), l2 = s2(rt3()), f = $e2();
    function s2(o2) {
      return o2 && o2.__esModule ? o2 : { default: o2 };
    }
    function c2(o2, v3) {
      for (var m = 0;m < v3.length; m++) {
        var n2 = v3[m];
        n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(o2, n2.key, n2);
      }
    }
    function t8(o2, v3, m) {
      return v3 && c2(o2.prototype, v3), Object.defineProperty(o2, "prototype", { writable: false }), o2;
    }
    function e2(o2, v3) {
      o2.prototype = Object.create(v3.prototype), o2.prototype.constructor = o2, r2(o2, v3);
    }
    function r2(o2, v3) {
      return r2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n2, d2) {
        return n2.__proto__ = d2, n2;
      }, r2(o2, v3);
    }
    var i = /* @__PURE__ */ function(o2) {
      e2(v3, o2);
      function v3(n2) {
        var d2;
        return d2 = o2.call(this, n2) || this, d2.type = f.CLASS, d2._constructed = true, d2;
      }
      var m = v3.prototype;
      return m.valueToString = function() {
        return "." + o2.prototype.valueToString.call(this);
      }, t8(v3, [{
        key: "value",
        get: function() {
          return this._value;
        },
        set: function(d2) {
          if (this._constructed) {
            var _3 = (0, h2.default)(d2, {
              isIdentifier: true
            });
            _3 !== d2 ? ((0, p.ensureObject)(this, "raws"), this.raws.value = _3) : this.raws && delete this.raws.value;
          }
          this._value = d2;
        }
      }]), v3;
    }(l2.default);
    a.default = i, u.exports = a.default;
  }(Qt3, Qt3.exports)), Qt3.exports;
}
var Ht3 = { exports: {} };
var Js;
function Vl() {
  return Js || (Js = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(rt3()), p = $e2();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.COMMENT, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Ht3, Ht3.exports)), Ht3.exports;
}
var Jt2 = { exports: {} };
var Ks2;
function jl() {
  return Ks2 || (Ks2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(rt3()), p = $e2();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(i) {
        var o2;
        return o2 = t8.call(this, i) || this, o2.type = p.ID, o2;
      }
      var r2 = e2.prototype;
      return r2.valueToString = function() {
        return "#" + t8.prototype.valueToString.call(this);
      }, e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Jt2, Jt2.exports)), Jt2.exports;
}
var Kt3 = { exports: {} };
var Xt3 = { exports: {} };
var Xs2;
function Yi2() {
  return Xs2 || (Xs2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = f(at3()), p = mr3(), l2 = f(rt3());
    function f(i) {
      return i && i.__esModule ? i : { default: i };
    }
    function s2(i, o2) {
      for (var v3 = 0;v3 < o2.length; v3++) {
        var m = o2[v3];
        m.enumerable = m.enumerable || false, m.configurable = true, "value" in m && (m.writable = true), Object.defineProperty(i, m.key, m);
      }
    }
    function c2(i, o2, v3) {
      return o2 && s2(i.prototype, o2), Object.defineProperty(i, "prototype", { writable: false }), i;
    }
    function t8(i, o2) {
      i.prototype = Object.create(o2.prototype), i.prototype.constructor = i, e2(i, o2);
    }
    function e2(i, o2) {
      return e2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(m, n2) {
        return m.__proto__ = n2, m;
      }, e2(i, o2);
    }
    var r2 = /* @__PURE__ */ function(i) {
      t8(o2, i);
      function o2() {
        return i.apply(this, arguments) || this;
      }
      var v3 = o2.prototype;
      return v3.qualifiedName = function(n2) {
        return this.namespace ? this.namespaceString + "|" + n2 : n2;
      }, v3.valueToString = function() {
        return this.qualifiedName(i.prototype.valueToString.call(this));
      }, c2(o2, [{
        key: "namespace",
        get: function() {
          return this._namespace;
        },
        set: function(n2) {
          if (n2 === true || n2 === "*" || n2 === "&") {
            this._namespace = n2, this.raws && delete this.raws.namespace;
            return;
          }
          var d2 = (0, h2.default)(n2, {
            isIdentifier: true
          });
          this._namespace = n2, d2 !== n2 ? ((0, p.ensureObject)(this, "raws"), this.raws.namespace = d2) : this.raws && delete this.raws.namespace;
        }
      }, {
        key: "ns",
        get: function() {
          return this._namespace;
        },
        set: function(n2) {
          this.namespace = n2;
        }
      }, {
        key: "namespaceString",
        get: function() {
          if (this.namespace) {
            var n2 = this.stringifyProperty("namespace");
            return n2 === true ? "" : n2;
          } else
            return "";
        }
      }]), o2;
    }(l2.default);
    a.default = r2, u.exports = a.default;
  }(Xt3, Xt3.exports)), Xt3.exports;
}
var Zs;
function Bl() {
  return Zs || (Zs = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Yi2()), p = $e2();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.TAG, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Kt3, Kt3.exports)), Kt3.exports;
}
var Zt2 = { exports: {} };
var eo3;
function Gl() {
  return eo3 || (eo3 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(rt3()), p = $e2();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.STRING, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(Zt2, Zt2.exports)), Zt2.exports;
}
var er2 = { exports: {} };
var to3;
function Yl() {
  return to3 || (to3 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Gi2()), p = $e2();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(i) {
        var o2;
        return o2 = t8.call(this, i) || this, o2.type = p.PSEUDO, o2;
      }
      var r2 = e2.prototype;
      return r2.toString = function() {
        var o2 = this.length ? "(" + this.map(String).join(",") + ")" : "";
        return [this.rawSpaceBefore, this.stringifyProperty("value"), o2, this.rawSpaceAfter].join("");
      }, e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(er2, er2.exports)), er2.exports;
}
var In3 = {};
var ro3;
function Ql() {
  return ro3 || (ro3 = 1, function(u) {
    u.__esModule = true, u.default = undefined, u.unescapeValue = d2;
    var a = s2(at3()), h2 = s2(Bi2()), p = s2(Yi2()), l2 = $e2(), f;
    function s2(g2) {
      return g2 && g2.__esModule ? g2 : { default: g2 };
    }
    function c2(g2, O3) {
      for (var A = 0;A < O3.length; A++) {
        var E2 = O3[A];
        E2.enumerable = E2.enumerable || false, E2.configurable = true, "value" in E2 && (E2.writable = true), Object.defineProperty(g2, E2.key, E2);
      }
    }
    function t8(g2, O3, A) {
      return O3 && c2(g2.prototype, O3), Object.defineProperty(g2, "prototype", { writable: false }), g2;
    }
    function e2(g2, O3) {
      g2.prototype = Object.create(O3.prototype), g2.prototype.constructor = g2, r2(g2, O3);
    }
    function r2(g2, O3) {
      return r2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(E2, b3) {
        return E2.__proto__ = b3, E2;
      }, r2(g2, O3);
    }
    var i = Rl(), o2 = /^('|")([^]*)\1$/, v3 = i(function() {}, "Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead."), m = i(function() {}, "Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead."), n2 = i(function() {}, "Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.");
    function d2(g2) {
      var O3 = false, A = null, E2 = g2, b3 = E2.match(o2);
      return b3 && (A = b3[1], E2 = b3[2]), E2 = (0, h2.default)(E2), E2 !== g2 && (O3 = true), {
        deprecatedUsage: O3,
        unescaped: E2,
        quoteMark: A
      };
    }
    function _3(g2) {
      if (g2.quoteMark !== undefined || g2.value === undefined)
        return g2;
      n2();
      var O3 = d2(g2.value), A = O3.quoteMark, E2 = O3.unescaped;
      return g2.raws || (g2.raws = {}), g2.raws.value === undefined && (g2.raws.value = g2.value), g2.value = E2, g2.quoteMark = A, g2;
    }
    var w3 = /* @__PURE__ */ function(g2) {
      e2(O3, g2);
      function O3(E2) {
        var b3;
        return E2 === undefined && (E2 = {}), b3 = g2.call(this, _3(E2)) || this, b3.type = l2.ATTRIBUTE, b3.raws = b3.raws || {}, Object.defineProperty(b3.raws, "unquoted", {
          get: i(function() {
            return b3.value;
          }, "attr.raws.unquoted is deprecated. Call attr.value instead."),
          set: i(function() {
            return b3.value;
          }, "Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.")
        }), b3._constructed = true, b3;
      }
      var A = O3.prototype;
      return A.getQuotedValue = function(b3) {
        b3 === undefined && (b3 = {});
        var k3 = this._determineQuoteMark(b3), q2 = y2[k3], M2 = (0, a.default)(this._value, q2);
        return M2;
      }, A._determineQuoteMark = function(b3) {
        return b3.smart ? this.smartQuoteMark(b3) : this.preferredQuoteMark(b3);
      }, A.setValue = function(b3, k3) {
        k3 === undefined && (k3 = {}), this._value = b3, this._quoteMark = this._determineQuoteMark(k3), this._syncRawValue();
      }, A.smartQuoteMark = function(b3) {
        var k3 = this.value, q2 = k3.replace(/[^']/g, "").length, M2 = k3.replace(/[^"]/g, "").length;
        if (q2 + M2 === 0) {
          var W3 = (0, a.default)(k3, {
            isIdentifier: true
          });
          if (W3 === k3)
            return O3.NO_QUOTE;
          var S3 = this.preferredQuoteMark(b3);
          if (S3 === O3.NO_QUOTE) {
            var P3 = this.quoteMark || b3.quoteMark || O3.DOUBLE_QUOTE, C = y2[P3], R3 = (0, a.default)(k3, C);
            if (R3.length < W3.length)
              return P3;
          }
          return S3;
        } else
          return M2 === q2 ? this.preferredQuoteMark(b3) : M2 < q2 ? O3.DOUBLE_QUOTE : O3.SINGLE_QUOTE;
      }, A.preferredQuoteMark = function(b3) {
        var k3 = b3.preferCurrentQuoteMark ? this.quoteMark : b3.quoteMark;
        return k3 === undefined && (k3 = b3.preferCurrentQuoteMark ? b3.quoteMark : this.quoteMark), k3 === undefined && (k3 = O3.DOUBLE_QUOTE), k3;
      }, A._syncRawValue = function() {
        var b3 = (0, a.default)(this._value, y2[this.quoteMark]);
        b3 === this._value ? this.raws && delete this.raws.value : this.raws.value = b3;
      }, A._handleEscapes = function(b3, k3) {
        if (this._constructed) {
          var q2 = (0, a.default)(k3, {
            isIdentifier: true
          });
          q2 !== k3 ? this.raws[b3] = q2 : delete this.raws[b3];
        }
      }, A._spacesFor = function(b3) {
        var k3 = {
          before: "",
          after: ""
        }, q2 = this.spaces[b3] || {}, M2 = this.raws.spaces && this.raws.spaces[b3] || {};
        return Object.assign(k3, q2, M2);
      }, A._stringFor = function(b3, k3, q2) {
        k3 === undefined && (k3 = b3), q2 === undefined && (q2 = x);
        var M2 = this._spacesFor(k3);
        return q2(this.stringifyProperty(b3), M2);
      }, A.offsetOf = function(b3) {
        var k3 = 1, q2 = this._spacesFor("attribute");
        if (k3 += q2.before.length, b3 === "namespace" || b3 === "ns")
          return this.namespace ? k3 : -1;
        if (b3 === "attributeNS" || (k3 += this.namespaceString.length, this.namespace && (k3 += 1), b3 === "attribute"))
          return k3;
        k3 += this.stringifyProperty("attribute").length, k3 += q2.after.length;
        var M2 = this._spacesFor("operator");
        k3 += M2.before.length;
        var W3 = this.stringifyProperty("operator");
        if (b3 === "operator")
          return W3 ? k3 : -1;
        k3 += W3.length, k3 += M2.after.length;
        var S3 = this._spacesFor("value");
        k3 += S3.before.length;
        var P3 = this.stringifyProperty("value");
        if (b3 === "value")
          return P3 ? k3 : -1;
        k3 += P3.length, k3 += S3.after.length;
        var C = this._spacesFor("insensitive");
        return k3 += C.before.length, b3 === "insensitive" && this.insensitive ? k3 : -1;
      }, A.toString = function() {
        var b3 = this, k3 = [this.rawSpaceBefore, "["];
        return k3.push(this._stringFor("qualifiedAttribute", "attribute")), this.operator && (this.value || this.value === "") && (k3.push(this._stringFor("operator")), k3.push(this._stringFor("value")), k3.push(this._stringFor("insensitiveFlag", "insensitive", function(q2, M2) {
          return q2.length > 0 && !b3.quoted && M2.before.length === 0 && !(b3.spaces.value && b3.spaces.value.after) && (M2.before = " "), x(q2, M2);
        }))), k3.push("]"), k3.push(this.rawSpaceAfter), k3.join("");
      }, t8(O3, [{
        key: "quoted",
        get: function() {
          var b3 = this.quoteMark;
          return b3 === "'" || b3 === '"';
        },
        set: function(b3) {
          m();
        }
      }, {
        key: "quoteMark",
        get: function() {
          return this._quoteMark;
        },
        set: function(b3) {
          if (!this._constructed) {
            this._quoteMark = b3;
            return;
          }
          this._quoteMark !== b3 && (this._quoteMark = b3, this._syncRawValue());
        }
      }, {
        key: "qualifiedAttribute",
        get: function() {
          return this.qualifiedName(this.raws.attribute || this.attribute);
        }
      }, {
        key: "insensitiveFlag",
        get: function() {
          return this.insensitive ? "i" : "";
        }
      }, {
        key: "value",
        get: function() {
          return this._value;
        },
        set: function(b3) {
          if (this._constructed) {
            var k3 = d2(b3), q2 = k3.deprecatedUsage, M2 = k3.unescaped, W3 = k3.quoteMark;
            if (q2 && v3(), M2 === this._value && W3 === this._quoteMark)
              return;
            this._value = M2, this._quoteMark = W3, this._syncRawValue();
          } else
            this._value = b3;
        }
      }, {
        key: "insensitive",
        get: function() {
          return this._insensitive;
        },
        set: function(b3) {
          b3 || (this._insensitive = false, this.raws && (this.raws.insensitiveFlag === "I" || this.raws.insensitiveFlag === "i") && (this.raws.insensitiveFlag = undefined)), this._insensitive = b3;
        }
      }, {
        key: "attribute",
        get: function() {
          return this._attribute;
        },
        set: function(b3) {
          this._handleEscapes("attribute", b3), this._attribute = b3;
        }
      }]), O3;
    }(p.default);
    u.default = w3, w3.NO_QUOTE = null, w3.SINGLE_QUOTE = "'", w3.DOUBLE_QUOTE = '"';
    var y2 = (f = {
      "'": {
        quotes: "single",
        wrap: true
      },
      '"': {
        quotes: "double",
        wrap: true
      }
    }, f[null] = {
      isIdentifier: true
    }, f);
    function x(g2, O3) {
      return "" + O3.before + g2 + O3.after;
    }
  }(In3)), In3;
}
var tr2 = { exports: {} };
var no3;
function Hl() {
  return no3 || (no3 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(Yi2()), p = $e2();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.UNIVERSAL, i.value = "*", i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(tr2, tr2.exports)), tr2.exports;
}
var rr3 = { exports: {} };
var io3;
function Jl() {
  return io3 || (io3 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(rt3()), p = $e2();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.COMBINATOR, i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(rr3, rr3.exports)), rr3.exports;
}
var nr3 = { exports: {} };
var ao3;
function Kl() {
  return ao3 || (ao3 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = l2(rt3()), p = $e2();
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : { default: t8 };
    }
    function f(t8, e2) {
      t8.prototype = Object.create(e2.prototype), t8.prototype.constructor = t8, s2(t8, e2);
    }
    function s2(t8, e2) {
      return s2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, o2) {
        return i.__proto__ = o2, i;
      }, s2(t8, e2);
    }
    var c2 = /* @__PURE__ */ function(t8) {
      f(e2, t8);
      function e2(r2) {
        var i;
        return i = t8.call(this, r2) || this, i.type = p.NESTING, i.value = "&", i;
      }
      return e2;
    }(h2.default);
    a.default = c2, u.exports = a.default;
  }(nr3, nr3.exports)), nr3.exports;
}
var ir3 = { exports: {} };
var so3;
function hf() {
  return so3 || (so3 = 1, function(u, a) {
    a.__esModule = true, a.default = h2;
    function h2(p) {
      return p.sort(function(l2, f) {
        return l2 - f;
      });
    }
    u.exports = a.default;
  }(ir3, ir3.exports)), ir3.exports;
}
var Mn3 = {};
var le3 = {};
var oo3;
function Xl() {
  if (oo3)
    return le3;
  oo3 = 1, le3.__esModule = true, le3.word = le3.tilde = le3.tab = le3.str = le3.space = le3.slash = le3.singleQuote = le3.semicolon = le3.plus = le3.pipe = le3.openSquare = le3.openParenthesis = le3.newline = le3.greaterThan = le3.feed = le3.equals = le3.doubleQuote = le3.dollar = le3.cr = le3.comment = le3.comma = le3.combinator = le3.colon = le3.closeSquare = le3.closeParenthesis = le3.caret = le3.bang = le3.backslash = le3.at = le3.asterisk = le3.ampersand = undefined;
  var u = 38;
  le3.ampersand = u;
  var a = 42;
  le3.asterisk = a;
  var h2 = 64;
  le3.at = h2;
  var p = 44;
  le3.comma = p;
  var l2 = 58;
  le3.colon = l2;
  var f = 59;
  le3.semicolon = f;
  var s2 = 40;
  le3.openParenthesis = s2;
  var c2 = 41;
  le3.closeParenthesis = c2;
  var t8 = 91;
  le3.openSquare = t8;
  var e2 = 93;
  le3.closeSquare = e2;
  var r2 = 36;
  le3.dollar = r2;
  var i = 126;
  le3.tilde = i;
  var o2 = 94;
  le3.caret = o2;
  var v3 = 43;
  le3.plus = v3;
  var m = 61;
  le3.equals = m;
  var n2 = 124;
  le3.pipe = n2;
  var d2 = 62;
  le3.greaterThan = d2;
  var _3 = 32;
  le3.space = _3;
  var w3 = 39;
  le3.singleQuote = w3;
  var y2 = 34;
  le3.doubleQuote = y2;
  var x = 47;
  le3.slash = x;
  var g2 = 33;
  le3.bang = g2;
  var O3 = 92;
  le3.backslash = O3;
  var A = 13;
  le3.cr = A;
  var E2 = 12;
  le3.feed = E2;
  var b3 = 10;
  le3.newline = b3;
  var k3 = 9;
  le3.tab = k3;
  var q2 = w3;
  le3.str = q2;
  var M2 = -1;
  le3.comment = M2;
  var W3 = -2;
  le3.word = W3;
  var S3 = -3;
  return le3.combinator = S3, le3;
}
var lo3;
function vf() {
  return lo3 || (lo3 = 1, function(u) {
    u.__esModule = true, u.FIELDS = undefined, u.default = m;
    var a = f(Xl()), h2, p;
    function l2(n2) {
      if (typeof WeakMap != "function")
        return null;
      var d2 = /* @__PURE__ */ new WeakMap, _3 = /* @__PURE__ */ new WeakMap;
      return (l2 = function(y2) {
        return y2 ? _3 : d2;
      })(n2);
    }
    function f(n2, d2) {
      if (n2 && n2.__esModule)
        return n2;
      if (n2 === null || typeof n2 != "object" && typeof n2 != "function")
        return { default: n2 };
      var _3 = l2(d2);
      if (_3 && _3.has(n2))
        return _3.get(n2);
      var w3 = {}, y2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var x in n2)
        if (x !== "default" && Object.prototype.hasOwnProperty.call(n2, x)) {
          var g2 = y2 ? Object.getOwnPropertyDescriptor(n2, x) : null;
          g2 && (g2.get || g2.set) ? Object.defineProperty(w3, x, g2) : w3[x] = n2[x];
        }
      return w3.default = n2, _3 && _3.set(n2, w3), w3;
    }
    for (var s2 = (h2 = {}, h2[a.tab] = true, h2[a.newline] = true, h2[a.cr] = true, h2[a.feed] = true, h2), c2 = (p = {}, p[a.space] = true, p[a.tab] = true, p[a.newline] = true, p[a.cr] = true, p[a.feed] = true, p[a.ampersand] = true, p[a.asterisk] = true, p[a.bang] = true, p[a.comma] = true, p[a.colon] = true, p[a.semicolon] = true, p[a.openParenthesis] = true, p[a.closeParenthesis] = true, p[a.openSquare] = true, p[a.closeSquare] = true, p[a.singleQuote] = true, p[a.doubleQuote] = true, p[a.plus] = true, p[a.pipe] = true, p[a.tilde] = true, p[a.greaterThan] = true, p[a.equals] = true, p[a.dollar] = true, p[a.caret] = true, p[a.slash] = true, p), t8 = {}, e2 = "0123456789abcdefABCDEF", r2 = 0;r2 < e2.length; r2++)
      t8[e2.charCodeAt(r2)] = true;
    function i(n2, d2) {
      var _3 = d2, w3;
      do {
        if (w3 = n2.charCodeAt(_3), c2[w3])
          return _3 - 1;
        w3 === a.backslash ? _3 = o2(n2, _3) + 1 : _3++;
      } while (_3 < n2.length);
      return _3 - 1;
    }
    function o2(n2, d2) {
      var _3 = d2, w3 = n2.charCodeAt(_3 + 1);
      if (!s2[w3])
        if (t8[w3]) {
          var y2 = 0;
          do
            _3++, y2++, w3 = n2.charCodeAt(_3 + 1);
          while (t8[w3] && y2 < 6);
          y2 < 6 && w3 === a.space && _3++;
        } else
          _3++;
      return _3;
    }
    var v3 = {
      TYPE: 0,
      START_LINE: 1,
      START_COL: 2,
      END_LINE: 3,
      END_COL: 4,
      START_POS: 5,
      END_POS: 6
    };
    u.FIELDS = v3;
    function m(n2) {
      var d2 = [], _3 = n2.css.valueOf(), w3 = _3, y2 = w3.length, x = -1, g2 = 1, O3 = 0, A = 0, E2, b3, k3, q2, M2, W3, S3, P3, C, R3, $2, B3, z3;
      function L3(F, D) {
        if (n2.safe)
          _3 += D, C = _3.length - 1;
        else
          throw n2.error("Unclosed " + F, g2, O3 - x, O3);
      }
      for (;O3 < y2; ) {
        switch (E2 = _3.charCodeAt(O3), E2 === a.newline && (x = O3, g2 += 1), E2) {
          case a.space:
          case a.tab:
          case a.newline:
          case a.cr:
          case a.feed:
            C = O3;
            do
              C += 1, E2 = _3.charCodeAt(C), E2 === a.newline && (x = C, g2 += 1);
            while (E2 === a.space || E2 === a.newline || E2 === a.tab || E2 === a.cr || E2 === a.feed);
            z3 = a.space, q2 = g2, k3 = C - x - 1, A = C;
            break;
          case a.plus:
          case a.greaterThan:
          case a.tilde:
          case a.pipe:
            C = O3;
            do
              C += 1, E2 = _3.charCodeAt(C);
            while (E2 === a.plus || E2 === a.greaterThan || E2 === a.tilde || E2 === a.pipe);
            z3 = a.combinator, q2 = g2, k3 = O3 - x, A = C;
            break;
          case a.asterisk:
          case a.ampersand:
          case a.bang:
          case a.comma:
          case a.equals:
          case a.dollar:
          case a.caret:
          case a.openSquare:
          case a.closeSquare:
          case a.colon:
          case a.semicolon:
          case a.openParenthesis:
          case a.closeParenthesis:
            C = O3, z3 = E2, q2 = g2, k3 = O3 - x, A = C + 1;
            break;
          case a.singleQuote:
          case a.doubleQuote:
            B3 = E2 === a.singleQuote ? "'" : '"', C = O3;
            do
              for (M2 = false, C = _3.indexOf(B3, C + 1), C === -1 && L3("quote", B3), W3 = C;_3.charCodeAt(W3 - 1) === a.backslash; )
                W3 -= 1, M2 = !M2;
            while (M2);
            z3 = a.str, q2 = g2, k3 = O3 - x, A = C + 1;
            break;
          default:
            E2 === a.slash && _3.charCodeAt(O3 + 1) === a.asterisk ? (C = _3.indexOf("*/", O3 + 2) + 1, C === 0 && L3("comment", "*/"), b3 = _3.slice(O3, C + 1), P3 = b3.split(`
`), S3 = P3.length - 1, S3 > 0 ? (R3 = g2 + S3, $2 = C - P3[S3].length) : (R3 = g2, $2 = x), z3 = a.comment, g2 = R3, q2 = R3, k3 = C - $2) : E2 === a.slash ? (C = O3, z3 = E2, q2 = g2, k3 = O3 - x, A = C + 1) : (C = i(_3, O3), z3 = a.word, q2 = g2, k3 = C - x), A = C + 1;
            break;
        }
        d2.push([
          z3,
          g2,
          O3 - x,
          q2,
          k3,
          O3,
          A
        ]), $2 && (x = $2, $2 = null), O3 = A;
      }
      return d2;
    }
  }(Mn3)), Mn3;
}
var uo3;
function gf() {
  return uo3 || (uo3 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = A(Ul()), p = A(zl()), l2 = A(Wl()), f = A(Vl()), s2 = A(jl()), c2 = A(Bl()), t8 = A(Gl()), e2 = A(Yl()), r2 = O3(Ql()), i = A(Hl()), o2 = A(Jl()), v3 = A(Kl()), m = A(hf()), n2 = O3(vf()), d2 = O3(Xl()), _3 = O3($e2()), w3 = mr3(), y2, x;
    function g2(L3) {
      if (typeof WeakMap != "function")
        return null;
      var F = /* @__PURE__ */ new WeakMap, D = /* @__PURE__ */ new WeakMap;
      return (g2 = function(N3) {
        return N3 ? D : F;
      })(L3);
    }
    function O3(L3, F) {
      if (L3 && L3.__esModule)
        return L3;
      if (L3 === null || typeof L3 != "object" && typeof L3 != "function")
        return { default: L3 };
      var D = g2(F);
      if (D && D.has(L3))
        return D.get(L3);
      var I3 = {}, N3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var J3 in L3)
        if (J3 !== "default" && Object.prototype.hasOwnProperty.call(L3, J3)) {
          var T3 = N3 ? Object.getOwnPropertyDescriptor(L3, J3) : null;
          T3 && (T3.get || T3.set) ? Object.defineProperty(I3, J3, T3) : I3[J3] = L3[J3];
        }
      return I3.default = L3, D && D.set(L3, I3), I3;
    }
    function A(L3) {
      return L3 && L3.__esModule ? L3 : { default: L3 };
    }
    function E2(L3, F) {
      for (var D = 0;D < F.length; D++) {
        var I3 = F[D];
        I3.enumerable = I3.enumerable || false, I3.configurable = true, "value" in I3 && (I3.writable = true), Object.defineProperty(L3, I3.key, I3);
      }
    }
    function b3(L3, F, D) {
      return F && E2(L3.prototype, F), Object.defineProperty(L3, "prototype", { writable: false }), L3;
    }
    var k3 = (y2 = {}, y2[d2.space] = true, y2[d2.cr] = true, y2[d2.feed] = true, y2[d2.newline] = true, y2[d2.tab] = true, y2), q2 = Object.assign({}, k3, (x = {}, x[d2.comment] = true, x));
    function M2(L3) {
      return {
        line: L3[n2.FIELDS.START_LINE],
        column: L3[n2.FIELDS.START_COL]
      };
    }
    function W3(L3) {
      return {
        line: L3[n2.FIELDS.END_LINE],
        column: L3[n2.FIELDS.END_COL]
      };
    }
    function S3(L3, F, D, I3) {
      return {
        start: {
          line: L3,
          column: F
        },
        end: {
          line: D,
          column: I3
        }
      };
    }
    function P3(L3) {
      return S3(L3[n2.FIELDS.START_LINE], L3[n2.FIELDS.START_COL], L3[n2.FIELDS.END_LINE], L3[n2.FIELDS.END_COL]);
    }
    function C(L3, F) {
      if (L3)
        return S3(L3[n2.FIELDS.START_LINE], L3[n2.FIELDS.START_COL], F[n2.FIELDS.END_LINE], F[n2.FIELDS.END_COL]);
    }
    function R3(L3, F) {
      var D = L3[F];
      if (typeof D == "string")
        return D.indexOf("\\") !== -1 && ((0, w3.ensureObject)(L3, "raws"), L3[F] = (0, w3.unesc)(D), L3.raws[F] === undefined && (L3.raws[F] = D)), L3;
    }
    function $2(L3, F) {
      for (var D = -1, I3 = [];(D = L3.indexOf(F, D + 1)) !== -1; )
        I3.push(D);
      return I3;
    }
    function B3() {
      var L3 = Array.prototype.concat.apply([], arguments);
      return L3.filter(function(F, D) {
        return D === L3.indexOf(F);
      });
    }
    var z3 = /* @__PURE__ */ function() {
      function L3(D, I3) {
        I3 === undefined && (I3 = {}), this.rule = D, this.options = Object.assign({
          lossy: false,
          safe: false
        }, I3), this.position = 0, this.css = typeof this.rule == "string" ? this.rule : this.rule.selector, this.tokens = (0, n2.default)({
          css: this.css,
          error: this._errorGenerator(),
          safe: this.options.safe
        });
        var N3 = C(this.tokens[0], this.tokens[this.tokens.length - 1]);
        this.root = new h2.default({
          source: N3
        }), this.root.errorGenerator = this._errorGenerator();
        var J3 = new p.default({
          source: {
            start: {
              line: 1,
              column: 1
            }
          },
          sourceIndex: 0
        });
        this.root.append(J3), this.current = J3, this.loop();
      }
      var F = L3.prototype;
      return F._errorGenerator = function() {
        var I3 = this;
        return function(N3, J3) {
          return typeof I3.rule == "string" ? new Error(N3) : I3.rule.error(N3, J3);
        };
      }, F.attribute = function() {
        var I3 = [], N3 = this.currToken;
        for (this.position++;this.position < this.tokens.length && this.currToken[n2.FIELDS.TYPE] !== d2.closeSquare; )
          I3.push(this.currToken), this.position++;
        if (this.currToken[n2.FIELDS.TYPE] !== d2.closeSquare)
          return this.expected("closing square bracket", this.currToken[n2.FIELDS.START_POS]);
        var J3 = I3.length, T3 = {
          source: S3(N3[1], N3[2], this.currToken[3], this.currToken[4]),
          sourceIndex: N3[n2.FIELDS.START_POS]
        };
        if (J3 === 1 && !~[d2.word].indexOf(I3[0][n2.FIELDS.TYPE]))
          return this.expected("attribute", I3[0][n2.FIELDS.START_POS]);
        for (var U2 = 0, j3 = "", H3 = "", V4 = null, K3 = false;U2 < J3; ) {
          var X3 = I3[U2], Q3 = this.content(X3), ne3 = I3[U2 + 1];
          switch (X3[n2.FIELDS.TYPE]) {
            case d2.space:
              if (K3 = true, this.options.lossy)
                break;
              if (V4) {
                (0, w3.ensureObject)(T3, "spaces", V4);
                var de3 = T3.spaces[V4].after || "";
                T3.spaces[V4].after = de3 + Q3;
                var _e3 = (0, w3.getProp)(T3, "raws", "spaces", V4, "after") || null;
                _e3 && (T3.raws.spaces[V4].after = _e3 + Q3);
              } else
                j3 = j3 + Q3, H3 = H3 + Q3;
              break;
            case d2.asterisk:
              if (ne3[n2.FIELDS.TYPE] === d2.equals)
                T3.operator = Q3, V4 = "operator";
              else if ((!T3.namespace || V4 === "namespace" && !K3) && ne3) {
                j3 && ((0, w3.ensureObject)(T3, "spaces", "attribute"), T3.spaces.attribute.before = j3, j3 = ""), H3 && ((0, w3.ensureObject)(T3, "raws", "spaces", "attribute"), T3.raws.spaces.attribute.before = j3, H3 = ""), T3.namespace = (T3.namespace || "") + Q3;
                var be3 = (0, w3.getProp)(T3, "raws", "namespace") || null;
                be3 && (T3.raws.namespace += Q3), V4 = "namespace";
              }
              K3 = false;
              break;
            case d2.dollar:
              if (V4 === "value") {
                var ie3 = (0, w3.getProp)(T3, "raws", "value");
                T3.value += "$", ie3 && (T3.raws.value = ie3 + "$");
                break;
              }
            case d2.caret:
              ne3[n2.FIELDS.TYPE] === d2.equals && (T3.operator = Q3, V4 = "operator"), K3 = false;
              break;
            case d2.combinator:
              if (Q3 === "~" && ne3[n2.FIELDS.TYPE] === d2.equals && (T3.operator = Q3, V4 = "operator"), Q3 !== "|") {
                K3 = false;
                break;
              }
              ne3[n2.FIELDS.TYPE] === d2.equals ? (T3.operator = Q3, V4 = "operator") : !T3.namespace && !T3.attribute && (T3.namespace = true), K3 = false;
              break;
            case d2.word:
              if (ne3 && this.content(ne3) === "|" && I3[U2 + 2] && I3[U2 + 2][n2.FIELDS.TYPE] !== d2.equals && !T3.operator && !T3.namespace)
                T3.namespace = Q3, V4 = "namespace";
              else if (!T3.attribute || V4 === "attribute" && !K3) {
                j3 && ((0, w3.ensureObject)(T3, "spaces", "attribute"), T3.spaces.attribute.before = j3, j3 = ""), H3 && ((0, w3.ensureObject)(T3, "raws", "spaces", "attribute"), T3.raws.spaces.attribute.before = H3, H3 = ""), T3.attribute = (T3.attribute || "") + Q3;
                var ke3 = (0, w3.getProp)(T3, "raws", "attribute") || null;
                ke3 && (T3.raws.attribute += Q3), V4 = "attribute";
              } else if (!T3.value && T3.value !== "" || V4 === "value" && !(K3 || T3.quoteMark)) {
                var Y3 = (0, w3.unesc)(Q3), G3 = (0, w3.getProp)(T3, "raws", "value") || "", te2 = T3.value || "";
                T3.value = te2 + Y3, T3.quoteMark = null, (Y3 !== Q3 || G3) && ((0, w3.ensureObject)(T3, "raws"), T3.raws.value = (G3 || te2) + Q3), V4 = "value";
              } else {
                var Z3 = Q3 === "i" || Q3 === "I";
                (T3.value || T3.value === "") && (T3.quoteMark || K3) ? (T3.insensitive = Z3, (!Z3 || Q3 === "I") && ((0, w3.ensureObject)(T3, "raws"), T3.raws.insensitiveFlag = Q3), V4 = "insensitive", j3 && ((0, w3.ensureObject)(T3, "spaces", "insensitive"), T3.spaces.insensitive.before = j3, j3 = ""), H3 && ((0, w3.ensureObject)(T3, "raws", "spaces", "insensitive"), T3.raws.spaces.insensitive.before = H3, H3 = "")) : (T3.value || T3.value === "") && (V4 = "value", T3.value += Q3, T3.raws.value && (T3.raws.value += Q3));
              }
              K3 = false;
              break;
            case d2.str:
              if (!T3.attribute || !T3.operator)
                return this.error("Expected an attribute followed by an operator preceding the string.", {
                  index: X3[n2.FIELDS.START_POS]
                });
              var ee3 = (0, r2.unescapeValue)(Q3), se3 = ee3.unescaped, ue = ee3.quoteMark;
              T3.value = se3, T3.quoteMark = ue, V4 = "value", (0, w3.ensureObject)(T3, "raws"), T3.raws.value = Q3, K3 = false;
              break;
            case d2.equals:
              if (!T3.attribute)
                return this.expected("attribute", X3[n2.FIELDS.START_POS], Q3);
              if (T3.value)
                return this.error('Unexpected "=" found; an operator was already defined.', {
                  index: X3[n2.FIELDS.START_POS]
                });
              T3.operator = T3.operator ? T3.operator + Q3 : Q3, V4 = "operator", K3 = false;
              break;
            case d2.comment:
              if (V4)
                if (K3 || ne3 && ne3[n2.FIELDS.TYPE] === d2.space || V4 === "insensitive") {
                  var xe3 = (0, w3.getProp)(T3, "spaces", V4, "after") || "", ce3 = (0, w3.getProp)(T3, "raws", "spaces", V4, "after") || xe3;
                  (0, w3.ensureObject)(T3, "raws", "spaces", V4), T3.raws.spaces[V4].after = ce3 + Q3;
                } else {
                  var Te3 = T3[V4] || "", ve3 = (0, w3.getProp)(T3, "raws", V4) || Te3;
                  (0, w3.ensureObject)(T3, "raws"), T3.raws[V4] = ve3 + Q3;
                }
              else
                H3 = H3 + Q3;
              break;
            default:
              return this.error('Unexpected "' + Q3 + '" found.', {
                index: X3[n2.FIELDS.START_POS]
              });
          }
          U2++;
        }
        R3(T3, "attribute"), R3(T3, "namespace"), this.newNode(new r2.default(T3)), this.position++;
      }, F.parseWhitespaceEquivalentTokens = function(I3) {
        I3 < 0 && (I3 = this.tokens.length);
        var N3 = this.position, J3 = [], T3 = "", U2 = undefined;
        do
          if (k3[this.currToken[n2.FIELDS.TYPE]])
            this.options.lossy || (T3 += this.content());
          else if (this.currToken[n2.FIELDS.TYPE] === d2.comment) {
            var j3 = {};
            T3 && (j3.before = T3, T3 = ""), U2 = new f.default({
              value: this.content(),
              source: P3(this.currToken),
              sourceIndex: this.currToken[n2.FIELDS.START_POS],
              spaces: j3
            }), J3.push(U2);
          }
        while (++this.position < I3);
        if (T3) {
          if (U2)
            U2.spaces.after = T3;
          else if (!this.options.lossy) {
            var H3 = this.tokens[N3], V4 = this.tokens[this.position - 1];
            J3.push(new t8.default({
              value: "",
              source: S3(H3[n2.FIELDS.START_LINE], H3[n2.FIELDS.START_COL], V4[n2.FIELDS.END_LINE], V4[n2.FIELDS.END_COL]),
              sourceIndex: H3[n2.FIELDS.START_POS],
              spaces: {
                before: T3,
                after: ""
              }
            }));
          }
        }
        return J3;
      }, F.convertWhitespaceNodesToSpace = function(I3, N3) {
        var J3 = this;
        N3 === undefined && (N3 = false);
        var T3 = "", U2 = "";
        I3.forEach(function(H3) {
          var V4 = J3.lossySpace(H3.spaces.before, N3), K3 = J3.lossySpace(H3.rawSpaceBefore, N3);
          T3 += V4 + J3.lossySpace(H3.spaces.after, N3 && V4.length === 0), U2 += V4 + H3.value + J3.lossySpace(H3.rawSpaceAfter, N3 && K3.length === 0);
        }), U2 === T3 && (U2 = undefined);
        var j3 = {
          space: T3,
          rawSpace: U2
        };
        return j3;
      }, F.isNamedCombinator = function(I3) {
        return I3 === undefined && (I3 = this.position), this.tokens[I3 + 0] && this.tokens[I3 + 0][n2.FIELDS.TYPE] === d2.slash && this.tokens[I3 + 1] && this.tokens[I3 + 1][n2.FIELDS.TYPE] === d2.word && this.tokens[I3 + 2] && this.tokens[I3 + 2][n2.FIELDS.TYPE] === d2.slash;
      }, F.namedCombinator = function() {
        if (this.isNamedCombinator()) {
          var I3 = this.content(this.tokens[this.position + 1]), N3 = (0, w3.unesc)(I3).toLowerCase(), J3 = {};
          N3 !== I3 && (J3.value = "/" + I3 + "/");
          var T3 = new o2.default({
            value: "/" + N3 + "/",
            source: S3(this.currToken[n2.FIELDS.START_LINE], this.currToken[n2.FIELDS.START_COL], this.tokens[this.position + 2][n2.FIELDS.END_LINE], this.tokens[this.position + 2][n2.FIELDS.END_COL]),
            sourceIndex: this.currToken[n2.FIELDS.START_POS],
            raws: J3
          });
          return this.position = this.position + 3, T3;
        } else
          this.unexpected();
      }, F.combinator = function() {
        var I3 = this;
        if (this.content() === "|")
          return this.namespace();
        var N3 = this.locateNextMeaningfulToken(this.position);
        if (N3 < 0 || this.tokens[N3][n2.FIELDS.TYPE] === d2.comma || this.tokens[N3][n2.FIELDS.TYPE] === d2.closeParenthesis) {
          var J3 = this.parseWhitespaceEquivalentTokens(N3);
          if (J3.length > 0) {
            var T3 = this.current.last;
            if (T3) {
              var U2 = this.convertWhitespaceNodesToSpace(J3), j3 = U2.space, H3 = U2.rawSpace;
              H3 !== undefined && (T3.rawSpaceAfter += H3), T3.spaces.after += j3;
            } else
              J3.forEach(function(G3) {
                return I3.newNode(G3);
              });
          }
          return;
        }
        var V4 = this.currToken, K3 = undefined;
        N3 > this.position && (K3 = this.parseWhitespaceEquivalentTokens(N3));
        var X3;
        if (this.isNamedCombinator() ? X3 = this.namedCombinator() : this.currToken[n2.FIELDS.TYPE] === d2.combinator ? (X3 = new o2.default({
          value: this.content(),
          source: P3(this.currToken),
          sourceIndex: this.currToken[n2.FIELDS.START_POS]
        }), this.position++) : k3[this.currToken[n2.FIELDS.TYPE]] || K3 || this.unexpected(), X3) {
          if (K3) {
            var Q3 = this.convertWhitespaceNodesToSpace(K3), ne3 = Q3.space, de3 = Q3.rawSpace;
            X3.spaces.before = ne3, X3.rawSpaceBefore = de3;
          }
        } else {
          var _e3 = this.convertWhitespaceNodesToSpace(K3, true), be3 = _e3.space, ie3 = _e3.rawSpace;
          ie3 || (ie3 = be3);
          var ke3 = {}, Y3 = {
            spaces: {}
          };
          be3.endsWith(" ") && ie3.endsWith(" ") ? (ke3.before = be3.slice(0, be3.length - 1), Y3.spaces.before = ie3.slice(0, ie3.length - 1)) : be3.startsWith(" ") && ie3.startsWith(" ") ? (ke3.after = be3.slice(1), Y3.spaces.after = ie3.slice(1)) : Y3.value = ie3, X3 = new o2.default({
            value: " ",
            source: C(V4, this.tokens[this.position - 1]),
            sourceIndex: V4[n2.FIELDS.START_POS],
            spaces: ke3,
            raws: Y3
          });
        }
        return this.currToken && this.currToken[n2.FIELDS.TYPE] === d2.space && (X3.spaces.after = this.optionalSpace(this.content()), this.position++), this.newNode(X3);
      }, F.comma = function() {
        if (this.position === this.tokens.length - 1) {
          this.root.trailingComma = true, this.position++;
          return;
        }
        this.current._inferEndPosition();
        var I3 = new p.default({
          source: {
            start: M2(this.tokens[this.position + 1])
          },
          sourceIndex: this.tokens[this.position + 1][n2.FIELDS.START_POS]
        });
        this.current.parent.append(I3), this.current = I3, this.position++;
      }, F.comment = function() {
        var I3 = this.currToken;
        this.newNode(new f.default({
          value: this.content(),
          source: P3(I3),
          sourceIndex: I3[n2.FIELDS.START_POS]
        })), this.position++;
      }, F.error = function(I3, N3) {
        throw this.root.error(I3, N3);
      }, F.missingBackslash = function() {
        return this.error("Expected a backslash preceding the semicolon.", {
          index: this.currToken[n2.FIELDS.START_POS]
        });
      }, F.missingParenthesis = function() {
        return this.expected("opening parenthesis", this.currToken[n2.FIELDS.START_POS]);
      }, F.missingSquareBracket = function() {
        return this.expected("opening square bracket", this.currToken[n2.FIELDS.START_POS]);
      }, F.unexpected = function() {
        return this.error("Unexpected '" + this.content() + "'. Escaping special characters with \\ may help.", this.currToken[n2.FIELDS.START_POS]);
      }, F.unexpectedPipe = function() {
        return this.error("Unexpected '|'.", this.currToken[n2.FIELDS.START_POS]);
      }, F.namespace = function() {
        var I3 = this.prevToken && this.content(this.prevToken) || true;
        if (this.nextToken[n2.FIELDS.TYPE] === d2.word)
          return this.position++, this.word(I3);
        if (this.nextToken[n2.FIELDS.TYPE] === d2.asterisk)
          return this.position++, this.universal(I3);
        this.unexpectedPipe();
      }, F.nesting = function() {
        if (this.nextToken) {
          var I3 = this.content(this.nextToken);
          if (I3 === "|") {
            this.position++;
            return;
          }
        }
        var N3 = this.currToken;
        this.newNode(new v3.default({
          value: this.content(),
          source: P3(N3),
          sourceIndex: N3[n2.FIELDS.START_POS]
        })), this.position++;
      }, F.parentheses = function() {
        var I3 = this.current.last, N3 = 1;
        if (this.position++, I3 && I3.type === _3.PSEUDO) {
          var J3 = new p.default({
            source: {
              start: M2(this.tokens[this.position])
            },
            sourceIndex: this.tokens[this.position][n2.FIELDS.START_POS]
          }), T3 = this.current;
          for (I3.append(J3), this.current = J3;this.position < this.tokens.length && N3; )
            this.currToken[n2.FIELDS.TYPE] === d2.openParenthesis && N3++, this.currToken[n2.FIELDS.TYPE] === d2.closeParenthesis && N3--, N3 ? this.parse() : (this.current.source.end = W3(this.currToken), this.current.parent.source.end = W3(this.currToken), this.position++);
          this.current = T3;
        } else {
          for (var U2 = this.currToken, j3 = "(", H3;this.position < this.tokens.length && N3; )
            this.currToken[n2.FIELDS.TYPE] === d2.openParenthesis && N3++, this.currToken[n2.FIELDS.TYPE] === d2.closeParenthesis && N3--, H3 = this.currToken, j3 += this.parseParenthesisToken(this.currToken), this.position++;
          I3 ? I3.appendToPropertyAndEscape("value", j3, j3) : this.newNode(new t8.default({
            value: j3,
            source: S3(U2[n2.FIELDS.START_LINE], U2[n2.FIELDS.START_COL], H3[n2.FIELDS.END_LINE], H3[n2.FIELDS.END_COL]),
            sourceIndex: U2[n2.FIELDS.START_POS]
          }));
        }
        if (N3)
          return this.expected("closing parenthesis", this.currToken[n2.FIELDS.START_POS]);
      }, F.pseudo = function() {
        for (var I3 = this, N3 = "", J3 = this.currToken;this.currToken && this.currToken[n2.FIELDS.TYPE] === d2.colon; )
          N3 += this.content(), this.position++;
        if (!this.currToken)
          return this.expected(["pseudo-class", "pseudo-element"], this.position - 1);
        if (this.currToken[n2.FIELDS.TYPE] === d2.word)
          this.splitWord(false, function(T3, U2) {
            N3 += T3, I3.newNode(new e2.default({
              value: N3,
              source: C(J3, I3.currToken),
              sourceIndex: J3[n2.FIELDS.START_POS]
            })), U2 > 1 && I3.nextToken && I3.nextToken[n2.FIELDS.TYPE] === d2.openParenthesis && I3.error("Misplaced parenthesis.", {
              index: I3.nextToken[n2.FIELDS.START_POS]
            });
          });
        else
          return this.expected(["pseudo-class", "pseudo-element"], this.currToken[n2.FIELDS.START_POS]);
      }, F.space = function() {
        var I3 = this.content();
        this.position === 0 || this.prevToken[n2.FIELDS.TYPE] === d2.comma || this.prevToken[n2.FIELDS.TYPE] === d2.openParenthesis || this.current.nodes.every(function(N3) {
          return N3.type === "comment";
        }) ? (this.spaces = this.optionalSpace(I3), this.position++) : this.position === this.tokens.length - 1 || this.nextToken[n2.FIELDS.TYPE] === d2.comma || this.nextToken[n2.FIELDS.TYPE] === d2.closeParenthesis ? (this.current.last.spaces.after = this.optionalSpace(I3), this.position++) : this.combinator();
      }, F.string = function() {
        var I3 = this.currToken;
        this.newNode(new t8.default({
          value: this.content(),
          source: P3(I3),
          sourceIndex: I3[n2.FIELDS.START_POS]
        })), this.position++;
      }, F.universal = function(I3) {
        var N3 = this.nextToken;
        if (N3 && this.content(N3) === "|")
          return this.position++, this.namespace();
        var J3 = this.currToken;
        this.newNode(new i.default({
          value: this.content(),
          source: P3(J3),
          sourceIndex: J3[n2.FIELDS.START_POS]
        }), I3), this.position++;
      }, F.splitWord = function(I3, N3) {
        for (var J3 = this, T3 = this.nextToken, U2 = this.content();T3 && ~[d2.dollar, d2.caret, d2.equals, d2.word].indexOf(T3[n2.FIELDS.TYPE]); ) {
          this.position++;
          var j3 = this.content();
          if (U2 += j3, j3.lastIndexOf("\\") === j3.length - 1) {
            var H3 = this.nextToken;
            H3 && H3[n2.FIELDS.TYPE] === d2.space && (U2 += this.requiredSpace(this.content(H3)), this.position++);
          }
          T3 = this.nextToken;
        }
        var V4 = $2(U2, ".").filter(function(ne3) {
          var de3 = U2[ne3 - 1] === "\\", _e3 = /^\d+\.\d+%$/.test(U2);
          return !de3 && !_e3;
        }), K3 = $2(U2, "#").filter(function(ne3) {
          return U2[ne3 - 1] !== "\\";
        }), X3 = $2(U2, "#{");
        X3.length && (K3 = K3.filter(function(ne3) {
          return !~X3.indexOf(ne3);
        }));
        var Q3 = (0, m.default)(B3([0].concat(V4, K3)));
        Q3.forEach(function(ne3, de3) {
          var _e3 = Q3[de3 + 1] || U2.length, be3 = U2.slice(ne3, _e3);
          if (de3 === 0 && N3)
            return N3.call(J3, be3, Q3.length);
          var ie3, ke3 = J3.currToken, Y3 = ke3[n2.FIELDS.START_POS] + Q3[de3], G3 = S3(ke3[1], ke3[2] + ne3, ke3[3], ke3[2] + (_e3 - 1));
          if (~V4.indexOf(ne3)) {
            var te2 = {
              value: be3.slice(1),
              source: G3,
              sourceIndex: Y3
            };
            ie3 = new l2.default(R3(te2, "value"));
          } else if (~K3.indexOf(ne3)) {
            var Z3 = {
              value: be3.slice(1),
              source: G3,
              sourceIndex: Y3
            };
            ie3 = new s2.default(R3(Z3, "value"));
          } else {
            var ee3 = {
              value: be3,
              source: G3,
              sourceIndex: Y3
            };
            R3(ee3, "value"), ie3 = new c2.default(ee3);
          }
          J3.newNode(ie3, I3), I3 = null;
        }), this.position++;
      }, F.word = function(I3) {
        var N3 = this.nextToken;
        return N3 && this.content(N3) === "|" ? (this.position++, this.namespace()) : this.splitWord(I3);
      }, F.loop = function() {
        for (;this.position < this.tokens.length; )
          this.parse(true);
        return this.current._inferEndPosition(), this.root;
      }, F.parse = function(I3) {
        switch (this.currToken[n2.FIELDS.TYPE]) {
          case d2.space:
            this.space();
            break;
          case d2.comment:
            this.comment();
            break;
          case d2.openParenthesis:
            this.parentheses();
            break;
          case d2.closeParenthesis:
            I3 && this.missingParenthesis();
            break;
          case d2.openSquare:
            this.attribute();
            break;
          case d2.dollar:
          case d2.caret:
          case d2.equals:
          case d2.word:
            this.word();
            break;
          case d2.colon:
            this.pseudo();
            break;
          case d2.comma:
            this.comma();
            break;
          case d2.asterisk:
            this.universal();
            break;
          case d2.ampersand:
            this.nesting();
            break;
          case d2.slash:
          case d2.combinator:
            this.combinator();
            break;
          case d2.str:
            this.string();
            break;
          case d2.closeSquare:
            this.missingSquareBracket();
          case d2.semicolon:
            this.missingBackslash();
          default:
            this.unexpected();
        }
      }, F.expected = function(I3, N3, J3) {
        if (Array.isArray(I3)) {
          var T3 = I3.pop();
          I3 = I3.join(", ") + " or " + T3;
        }
        var U2 = /^[aeiou]/.test(I3[0]) ? "an" : "a";
        return J3 ? this.error("Expected " + U2 + " " + I3 + ', found "' + J3 + '" instead.', {
          index: N3
        }) : this.error("Expected " + U2 + " " + I3 + ".", {
          index: N3
        });
      }, F.requiredSpace = function(I3) {
        return this.options.lossy ? " " : I3;
      }, F.optionalSpace = function(I3) {
        return this.options.lossy ? "" : I3;
      }, F.lossySpace = function(I3, N3) {
        return this.options.lossy ? N3 ? " " : "" : I3;
      }, F.parseParenthesisToken = function(I3) {
        var N3 = this.content(I3);
        return I3[n2.FIELDS.TYPE] === d2.space ? this.requiredSpace(N3) : N3;
      }, F.newNode = function(I3, N3) {
        return N3 && (/^ +$/.test(N3) && (this.options.lossy || (this.spaces = (this.spaces || "") + N3), N3 = true), I3.namespace = N3, R3(I3, "namespace")), this.spaces && (I3.spaces.before = this.spaces, this.spaces = ""), this.current.append(I3);
      }, F.content = function(I3) {
        return I3 === undefined && (I3 = this.currToken), this.css.slice(I3[n2.FIELDS.START_POS], I3[n2.FIELDS.END_POS]);
      }, F.locateNextMeaningfulToken = function(I3) {
        I3 === undefined && (I3 = this.position + 1);
        for (var N3 = I3;N3 < this.tokens.length; )
          if (q2[this.tokens[N3][n2.FIELDS.TYPE]]) {
            N3++;
            continue;
          } else
            return N3;
        return -1;
      }, b3(L3, [{
        key: "currToken",
        get: function() {
          return this.tokens[this.position];
        }
      }, {
        key: "nextToken",
        get: function() {
          return this.tokens[this.position + 1];
        }
      }, {
        key: "prevToken",
        get: function() {
          return this.tokens[this.position - 1];
        }
      }]), L3;
    }();
    a.default = z3, u.exports = a.default;
  }($t3, $t3.exports)), $t3.exports;
}
var fo2;
function mf() {
  return fo2 || (fo2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = p(gf());
    function p(f) {
      return f && f.__esModule ? f : { default: f };
    }
    var l2 = /* @__PURE__ */ function() {
      function f(c2, t8) {
        this.func = c2 || function() {}, this.funcRes = null, this.options = t8;
      }
      var s2 = f.prototype;
      return s2._shouldUpdateSelector = function(t8, e2) {
        e2 === undefined && (e2 = {});
        var r2 = Object.assign({}, this.options, e2);
        return r2.updateSelector === false ? false : typeof t8 != "string";
      }, s2._isLossy = function(t8) {
        t8 === undefined && (t8 = {});
        var e2 = Object.assign({}, this.options, t8);
        return e2.lossless === false;
      }, s2._root = function(t8, e2) {
        e2 === undefined && (e2 = {});
        var r2 = new h2.default(t8, this._parseOptions(e2));
        return r2.root;
      }, s2._parseOptions = function(t8) {
        return {
          lossy: this._isLossy(t8)
        };
      }, s2._run = function(t8, e2) {
        var r2 = this;
        return e2 === undefined && (e2 = {}), new Promise(function(i, o2) {
          try {
            var v3 = r2._root(t8, e2);
            Promise.resolve(r2.func(v3)).then(function(m) {
              var n2 = undefined;
              return r2._shouldUpdateSelector(t8, e2) && (n2 = v3.toString(), t8.selector = n2), {
                transform: m,
                root: v3,
                string: n2
              };
            }).then(i, o2);
          } catch (m) {
            o2(m);
            return;
          }
        });
      }, s2._runSync = function(t8, e2) {
        e2 === undefined && (e2 = {});
        var r2 = this._root(t8, e2), i = this.func(r2);
        if (i && typeof i.then == "function")
          throw new Error("Selector processor returned a promise to a synchronous call.");
        var o2 = undefined;
        return e2.updateSelector && typeof t8 != "string" && (o2 = r2.toString(), t8.selector = o2), {
          transform: i,
          root: r2,
          string: o2
        };
      }, s2.ast = function(t8, e2) {
        return this._run(t8, e2).then(function(r2) {
          return r2.root;
        });
      }, s2.astSync = function(t8, e2) {
        return this._runSync(t8, e2).root;
      }, s2.transform = function(t8, e2) {
        return this._run(t8, e2).then(function(r2) {
          return r2.transform;
        });
      }, s2.transformSync = function(t8, e2) {
        return this._runSync(t8, e2).transform;
      }, s2.process = function(t8, e2) {
        return this._run(t8, e2).then(function(r2) {
          return r2.string || r2.root.toString();
        });
      }, s2.processSync = function(t8, e2) {
        var r2 = this._runSync(t8, e2);
        return r2.string || r2.root.toString();
      }, f;
    }();
    a.default = l2, u.exports = a.default;
  }(Ft2, Ft2.exports)), Ft2.exports;
}
var Dn3 = {};
var De3 = {};
var co3;
function yf() {
  if (co3)
    return De3;
  co3 = 1, De3.__esModule = true, De3.universal = De3.tag = De3.string = De3.selector = De3.root = De3.pseudo = De3.nesting = De3.id = De3.comment = De3.combinator = De3.className = De3.attribute = undefined;
  var u = o2(Ql()), a = o2(Wl()), h2 = o2(Jl()), p = o2(Vl()), l2 = o2(jl()), f = o2(Kl()), s2 = o2(Yl()), c2 = o2(Ul()), t8 = o2(zl()), e2 = o2(Gl()), r2 = o2(Bl()), i = o2(Hl());
  function o2(b3) {
    return b3 && b3.__esModule ? b3 : { default: b3 };
  }
  var v3 = function(k3) {
    return new u.default(k3);
  };
  De3.attribute = v3;
  var m = function(k3) {
    return new a.default(k3);
  };
  De3.className = m;
  var n2 = function(k3) {
    return new h2.default(k3);
  };
  De3.combinator = n2;
  var d2 = function(k3) {
    return new p.default(k3);
  };
  De3.comment = d2;
  var _3 = function(k3) {
    return new l2.default(k3);
  };
  De3.id = _3;
  var w3 = function(k3) {
    return new f.default(k3);
  };
  De3.nesting = w3;
  var y2 = function(k3) {
    return new s2.default(k3);
  };
  De3.pseudo = y2;
  var x = function(k3) {
    return new c2.default(k3);
  };
  De3.root = x;
  var g2 = function(k3) {
    return new t8.default(k3);
  };
  De3.selector = g2;
  var O3 = function(k3) {
    return new e2.default(k3);
  };
  De3.string = O3;
  var A = function(k3) {
    return new r2.default(k3);
  };
  De3.tag = A;
  var E2 = function(k3) {
    return new i.default(k3);
  };
  return De3.universal = E2, De3;
}
var Ee3 = {};
var po3;
function wf() {
  if (po3)
    return Ee3;
  po3 = 1, Ee3.__esModule = true, Ee3.isComment = Ee3.isCombinator = Ee3.isClassName = Ee3.isAttribute = undefined, Ee3.isContainer = y2, Ee3.isIdentifier = undefined, Ee3.isNamespace = x, Ee3.isNesting = undefined, Ee3.isNode = p, Ee3.isPseudo = undefined, Ee3.isPseudoClass = w3, Ee3.isPseudoElement = _3, Ee3.isUniversal = Ee3.isTag = Ee3.isString = Ee3.isSelector = Ee3.isRoot = undefined;
  var u = $e2(), a, h2 = (a = {}, a[u.ATTRIBUTE] = true, a[u.CLASS] = true, a[u.COMBINATOR] = true, a[u.COMMENT] = true, a[u.ID] = true, a[u.NESTING] = true, a[u.PSEUDO] = true, a[u.ROOT] = true, a[u.SELECTOR] = true, a[u.STRING] = true, a[u.TAG] = true, a[u.UNIVERSAL] = true, a);
  function p(g2) {
    return typeof g2 == "object" && h2[g2.type];
  }
  function l2(g2, O3) {
    return p(O3) && O3.type === g2;
  }
  var f = l2.bind(null, u.ATTRIBUTE);
  Ee3.isAttribute = f;
  var s2 = l2.bind(null, u.CLASS);
  Ee3.isClassName = s2;
  var c2 = l2.bind(null, u.COMBINATOR);
  Ee3.isCombinator = c2;
  var t8 = l2.bind(null, u.COMMENT);
  Ee3.isComment = t8;
  var e2 = l2.bind(null, u.ID);
  Ee3.isIdentifier = e2;
  var r2 = l2.bind(null, u.NESTING);
  Ee3.isNesting = r2;
  var i = l2.bind(null, u.PSEUDO);
  Ee3.isPseudo = i;
  var o2 = l2.bind(null, u.ROOT);
  Ee3.isRoot = o2;
  var v3 = l2.bind(null, u.SELECTOR);
  Ee3.isSelector = v3;
  var m = l2.bind(null, u.STRING);
  Ee3.isString = m;
  var n2 = l2.bind(null, u.TAG);
  Ee3.isTag = n2;
  var d2 = l2.bind(null, u.UNIVERSAL);
  Ee3.isUniversal = d2;
  function _3(g2) {
    return i(g2) && g2.value && (g2.value.startsWith("::") || g2.value.toLowerCase() === ":before" || g2.value.toLowerCase() === ":after" || g2.value.toLowerCase() === ":first-letter" || g2.value.toLowerCase() === ":first-line");
  }
  function w3(g2) {
    return i(g2) && !_3(g2);
  }
  function y2(g2) {
    return !!(p(g2) && g2.walk);
  }
  function x(g2) {
    return f(g2) || n2(g2);
  }
  return Ee3;
}
var ho2;
function bf() {
  return ho2 || (ho2 = 1, function(u) {
    u.__esModule = true;
    var a = $e2();
    Object.keys(a).forEach(function(l2) {
      l2 === "default" || l2 === "__esModule" || l2 in u && u[l2] === a[l2] || (u[l2] = a[l2]);
    });
    var h2 = yf();
    Object.keys(h2).forEach(function(l2) {
      l2 === "default" || l2 === "__esModule" || l2 in u && u[l2] === h2[l2] || (u[l2] = h2[l2]);
    });
    var p = wf();
    Object.keys(p).forEach(function(l2) {
      l2 === "default" || l2 === "__esModule" || l2 in u && u[l2] === p[l2] || (u[l2] = p[l2]);
    });
  }(Dn3)), Dn3;
}
var vo2;
function Ke3() {
  return vo2 || (vo2 = 1, function(u, a) {
    a.__esModule = true, a.default = undefined;
    var h2 = s2(mf()), p = f(bf());
    function l2(e2) {
      if (typeof WeakMap != "function")
        return null;
      var r2 = /* @__PURE__ */ new WeakMap, i = /* @__PURE__ */ new WeakMap;
      return (l2 = function(v3) {
        return v3 ? i : r2;
      })(e2);
    }
    function f(e2, r2) {
      if (e2 && e2.__esModule)
        return e2;
      if (e2 === null || typeof e2 != "object" && typeof e2 != "function")
        return { default: e2 };
      var i = l2(r2);
      if (i && i.has(e2))
        return i.get(e2);
      var o2 = {}, v3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var m in e2)
        if (m !== "default" && Object.prototype.hasOwnProperty.call(e2, m)) {
          var n2 = v3 ? Object.getOwnPropertyDescriptor(e2, m) : null;
          n2 && (n2.get || n2.set) ? Object.defineProperty(o2, m, n2) : o2[m] = e2[m];
        }
      return o2.default = e2, i && i.set(e2, o2), o2;
    }
    function s2(e2) {
      return e2 && e2.__esModule ? e2 : { default: e2 };
    }
    var c2 = function(r2) {
      return new h2.default(r2);
    };
    Object.assign(c2, p), delete c2.__esModule;
    var t8 = c2;
    a.default = t8, u.exports = a.default;
  }(Nt3, Nt3.exports)), Nt3.exports;
}
var qn3 = {};
var Ln3 = {};
var ar3 = { exports: {} };
var go2;
function _f() {
  if (go2)
    return ar3.exports;
  go2 = 1;
  const { AtRule: u, Rule: a } = Be2();
  let h2 = Ke3();
  function p(_3, w3) {
    let y2;
    try {
      h2((x) => {
        y2 = x;
      }).processSync(_3);
    } catch (x) {
      throw _3.includes(":") ? w3 ? w3.error("Missed semicolon") : x : w3 ? w3.error(x.message) : x;
    }
    return y2.at(0);
  }
  function l2(_3, w3) {
    let y2 = false;
    return _3.each((x) => {
      if (x.type === "nesting") {
        let g2 = w3.clone({});
        x.value !== "&" ? x.replaceWith(p(x.value.replace("&", g2.toString()))) : x.replaceWith(g2), y2 = true;
      } else
        "nodes" in x && x.nodes && l2(x, w3) && (y2 = true);
    }), y2;
  }
  function f(_3, w3) {
    let y2 = [];
    return _3.selectors.forEach((x) => {
      let g2 = p(x, _3);
      w3.selectors.forEach((O3) => {
        if (!O3)
          return;
        let A = p(O3, w3);
        l2(A, g2) || (A.prepend(h2.combinator({ value: " " })), A.prepend(g2.clone({}))), y2.push(A.toString());
      });
    }), y2;
  }
  function s2(_3, w3) {
    let y2 = _3.prev();
    for (w3.after(_3);y2 && y2.type === "comment"; ) {
      let x = y2.prev();
      w3.after(y2), y2 = x;
    }
    return _3;
  }
  function c2(_3) {
    return function w(y2, x, g2, O3 = g2) {
      let A = [];
      if (x.each((E2) => {
        E2.type === "rule" && g2 ? O3 && (E2.selectors = f(y2, E2)) : E2.type === "atrule" && E2.nodes ? _3[E2.name] ? w(y2, E2, O3) : x[v3] !== false && A.push(E2) : A.push(E2);
      }), g2 && A.length) {
        let E2 = y2.clone({ nodes: [] });
        for (let b3 of A)
          E2.append(b3);
        x.prepend(E2);
      }
    };
  }
  function t8(_3, w3, y2) {
    let x = new a({
      nodes: [],
      selector: _3
    });
    return x.append(w3), y2.after(x), x;
  }
  function e2(_3, w3) {
    let y2 = {};
    for (let x of _3)
      y2[x] = true;
    if (w3)
      for (let x of w3)
        y2[x.replace(/^@/, "")] = true;
    return y2;
  }
  function r2(_3) {
    _3 = _3.trim();
    let w3 = _3.match(/^\((.*)\)$/);
    if (!w3)
      return { selector: _3, type: "basic" };
    let y2 = w3[1].match(/^(with(?:out)?):(.+)$/);
    if (y2) {
      let x = y2[1] === "with", g2 = Object.fromEntries(y2[2].trim().split(/\s+/).map((A) => [A, true]));
      if (x && g2.all)
        return { type: "noop" };
      let O3 = (A) => !!g2[A];
      return g2.all ? O3 = () => true : x && (O3 = (A) => A === "all" ? false : !g2[A]), {
        escapes: O3,
        type: "withrules"
      };
    }
    return { type: "unknown" };
  }
  function i(_3) {
    let w3 = [], y2 = _3.parent;
    for (;y2 && y2 instanceof u; )
      w3.push(y2), y2 = y2.parent;
    return w3;
  }
  function o2(_3) {
    let w3 = _3[m];
    if (!w3)
      _3.after(_3.nodes);
    else {
      let y2 = _3.nodes, x, g2 = -1, O3, A, E2, b3 = i(_3);
      if (b3.forEach((k3, q2) => {
        if (w3(k3.name))
          x = k3, g2 = q2, A = E2;
        else {
          let M2 = E2;
          E2 = k3.clone({ nodes: [] }), M2 && E2.append(M2), O3 = O3 || E2;
        }
      }), x ? A ? (O3.append(y2), x.after(A)) : x.after(y2) : _3.after(y2), _3.next() && x) {
        let k3;
        b3.slice(0, g2 + 1).forEach((q2, M2, W3) => {
          let S3 = k3;
          k3 = q2.clone({ nodes: [] }), S3 && k3.append(S3);
          let P3 = [], R3 = (W3[M2 - 1] || _3).next();
          for (;R3; )
            P3.push(R3), R3 = R3.next();
          k3.append(P3);
        }), k3 && (A || y2[y2.length - 1]).after(k3);
      }
    }
    _3.remove();
  }
  const v3 = Symbol("rootRuleMergeSel"), m = Symbol("rootRuleEscapes");
  function n2(_3) {
    let { params: w3 } = _3, { escapes: y2, selector: x, type: g2 } = r2(w3);
    if (g2 === "unknown")
      throw _3.error(`Unknown @${_3.name} parameter ${JSON.stringify(w3)}`);
    if (g2 === "basic" && x) {
      let O3 = new a({ nodes: _3.nodes, selector: x });
      _3.removeAll(), _3.append(O3);
    }
    _3[m] = y2, _3[v3] = y2 ? !y2("all") : g2 === "noop";
  }
  const d2 = Symbol("hasRootRule");
  return ar3.exports = (_3 = {}) => {
    let w3 = e2(["media", "supports", "layer", "container", "starting-style"], _3.bubble), y2 = c2(w3), x = e2([
      "document",
      "font-face",
      "keyframes",
      "-webkit-keyframes",
      "-moz-keyframes"
    ], _3.unwrap), g2 = (_3.rootRuleName || "at-root").replace(/^@/, ""), O3 = _3.preserveEmpty;
    return {
      Once(A) {
        A.walkAtRules(g2, (E2) => {
          n2(E2), A[d2] = true;
        });
      },
      postcssPlugin: "postcss-nested",
      RootExit(A) {
        A[d2] && (A.walkAtRules(g2, o2), A[d2] = false);
      },
      Rule(A) {
        let E2 = false, b3 = A, k3 = false, q2 = [];
        A.each((M2) => {
          M2.type === "rule" ? (q2.length && (b3 = t8(A.selector, q2, b3), q2 = []), k3 = true, E2 = true, M2.selectors = f(A, M2), b3 = s2(M2, b3)) : M2.type === "atrule" ? (q2.length && (b3 = t8(A.selector, q2, b3), q2 = []), M2.name === g2 ? (E2 = true, y2(A, M2, true, M2[v3]), b3 = s2(M2, b3)) : w3[M2.name] ? (k3 = true, E2 = true, y2(A, M2, true), b3 = s2(M2, b3)) : x[M2.name] ? (k3 = true, E2 = true, y2(A, M2, false), b3 = s2(M2, b3)) : k3 && q2.push(M2)) : M2.type === "decl" && k3 && q2.push(M2);
        }), q2.length && (b3 = t8(A.selector, q2, b3)), E2 && O3 !== true && (A.raws.semicolon = true, A.nodes.length === 0 && A.remove());
      }
    };
  }, ar3.exports.postcss = true, ar3.exports;
}
var Nn3;
var mo2;
function Sf() {
  if (mo2)
    return Nn3;
  mo2 = 1;
  var u = /-(\w|$)/g, a = function(l2, f) {
    return f.toUpperCase();
  }, h2 = function(l2) {
    return l2 = l2.toLowerCase(), l2 === "float" ? "cssFloat" : l2.charCodeAt(0) === 45 && l2.charCodeAt(1) === 109 && l2.charCodeAt(2) === 115 && l2.charCodeAt(3) === 45 ? l2.substr(1).replace(u, a) : l2.replace(u, a);
  };
  return Nn3 = h2, Nn3;
}
var Fn3;
var yo2;
function Zl() {
  if (yo2)
    return Fn3;
  yo2 = 1;
  let u = Sf(), a = {
    boxFlex: true,
    boxFlexGroup: true,
    columnCount: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,
    fillOpacity: true,
    strokeDashoffset: true,
    strokeOpacity: true,
    strokeWidth: true
  };
  function h2(l2) {
    return typeof l2.nodes > "u" ? true : p(l2);
  }
  function p(l2) {
    let f, s2 = {};
    return l2.each((c2) => {
      if (c2.type === "atrule")
        f = "@" + c2.name, c2.params && (f += " " + c2.params), typeof s2[f] > "u" ? s2[f] = h2(c2) : Array.isArray(s2[f]) ? s2[f].push(h2(c2)) : s2[f] = [s2[f], h2(c2)];
      else if (c2.type === "rule") {
        let t8 = p(c2);
        if (s2[c2.selector])
          for (let e2 in t8)
            s2[c2.selector][e2] = t8[e2];
        else
          s2[c2.selector] = t8;
      } else if (c2.type === "decl") {
        c2.prop[0] === "-" && c2.prop[1] === "-" || c2.parent && c2.parent.selector === ":export" ? f = c2.prop : f = u(c2.prop);
        let t8 = c2.value;
        !isNaN(c2.value) && a[f] && (t8 = parseFloat(c2.value)), c2.important && (t8 += " !important"), typeof s2[f] > "u" ? s2[f] = t8 : Array.isArray(s2[f]) ? s2[f].push(t8) : s2[f] = [s2[f], t8];
      }
    }), s2;
  }
  return Fn3 = p, Fn3;
}
var $n3;
var wo2;
function Qi2() {
  if (wo2)
    return $n3;
  wo2 = 1;
  let u = Be2(), a = /\s*!important\s*$/i, h2 = {
    "box-flex": true,
    "box-flex-group": true,
    "column-count": true,
    flex: true,
    "flex-grow": true,
    "flex-positive": true,
    "flex-shrink": true,
    "flex-negative": true,
    "font-weight": true,
    "line-clamp": true,
    "line-height": true,
    opacity: true,
    order: true,
    orphans: true,
    "tab-size": true,
    widows: true,
    "z-index": true,
    zoom: true,
    "fill-opacity": true,
    "stroke-dashoffset": true,
    "stroke-opacity": true,
    "stroke-width": true
  };
  function p(c2) {
    return c2.replace(/([A-Z])/g, "-$1").replace(/^ms-/, "-ms-").toLowerCase();
  }
  function l2(c2, t8, e2) {
    e2 === false || e2 === null || (t8.startsWith("--") || (t8 = p(t8)), typeof e2 == "number" && (e2 === 0 || h2[t8] ? e2 = e2.toString() : e2 += "px"), t8 === "css-float" && (t8 = "float"), a.test(e2) ? (e2 = e2.replace(a, ""), c2.push(u.decl({ prop: t8, value: e2, important: true }))) : c2.push(u.decl({ prop: t8, value: e2 })));
  }
  function f(c2, t8, e2) {
    let r2 = u.atRule({ name: t8[1], params: t8[3] || "" });
    typeof e2 == "object" && (r2.nodes = [], s2(e2, r2)), c2.push(r2);
  }
  function s2(c2, t8) {
    let e2, r2, i;
    for (e2 in c2)
      if (r2 = c2[e2], !(r2 === null || typeof r2 > "u"))
        if (e2[0] === "@") {
          let o2 = e2.match(/@(\S+)(\s+([\W\w]*)\s*)?/);
          if (Array.isArray(r2))
            for (let v3 of r2)
              f(t8, o2, v3);
          else
            f(t8, o2, r2);
        } else if (Array.isArray(r2))
          for (let o2 of r2)
            l2(t8, e2, o2);
        else
          typeof r2 == "object" ? (i = u.rule({ selector: e2 }), s2(r2, i), t8.push(i)) : l2(t8, e2, r2);
  }
  return $n3 = function(c2) {
    let t8 = u.root();
    return s2(c2, t8), t8;
  }, $n3;
}
var Un3;
var bo2;
function eu3() {
  if (bo2)
    return Un3;
  bo2 = 1;
  let u = Zl();
  return Un3 = function(h2) {
    return console && console.warn && h2.warnings().forEach((p) => {
      let l2 = p.plugin || "PostCSS";
      console.warn(l2 + ": " + p.text);
    }), u(h2.root);
  }, Un3;
}
var zn3;
var _o2;
function xf() {
  if (_o2)
    return zn3;
  _o2 = 1;
  let u = Be2(), a = eu3(), h2 = Qi2();
  return zn3 = function(l2) {
    let f = u(l2);
    return async (s2) => {
      let c2 = await f.process(s2, {
        parser: h2,
        from: undefined
      });
      return a(c2);
    };
  }, zn3;
}
var Wn3;
var So2;
function Of() {
  if (So2)
    return Wn3;
  So2 = 1;
  let u = Be2(), a = eu3(), h2 = Qi2();
  return Wn3 = function(p) {
    let l2 = u(p);
    return (f) => {
      let s2 = l2.process(f, { parser: h2, from: undefined });
      return a(s2);
    };
  }, Wn3;
}
var Vn3;
var xo2;
function kf() {
  if (xo2)
    return Vn3;
  xo2 = 1;
  let u = Zl(), a = Qi2(), h2 = xf(), p = Of();
  return Vn3 = {
    objectify: u,
    parse: a,
    async: h2,
    sync: p
  }, Vn3;
}
var Oo3;
function tu3() {
  return Oo3 || (Oo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return f;
      }
    });
    const a = /* @__PURE__ */ l2(Be2()), h2 = /* @__PURE__ */ l2(_f()), p = /* @__PURE__ */ l2(kf());
    function l2(s2) {
      return s2 && s2.__esModule ? s2 : {
        default: s2
      };
    }
    function f(s2) {
      return Array.isArray(s2) ? s2.flatMap((c2) => (0, a.default)([
        (0, h2.default)({
          bubble: [
            "screen"
          ]
        })
      ]).process(c2, {
        parser: p.default
      }).root.nodes) : f([
        s2
      ]);
    }
  }(Ln3)), Ln3;
}
var jn3 = {};
var ko2;
function Hi2() {
  return ko2 || (ko2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return p;
      }
    });
    const a = /* @__PURE__ */ h2(Ke3());
    function h2(l2) {
      return l2 && l2.__esModule ? l2 : {
        default: l2
      };
    }
    function p(l2, f, s2 = false) {
      if (l2 === "")
        return f;
      let c2 = typeof f == "string" ? (0, a.default)().astSync(f) : f;
      return c2.walkClasses((t8) => {
        let e2 = t8.value, r2 = s2 && e2.startsWith("-");
        t8.value = r2 ? `-${l2}${e2.slice(1)}` : `${l2}${e2}`;
      }), typeof f == "string" ? c2.toString() : c2;
    }
  }(jn3)), jn3;
}
var Bn3 = {};
var Po2;
function yr3() {
  return Po2 || (Po2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(r2, i) {
      for (var o2 in i)
        Object.defineProperty(r2, o2, {
          enumerable: true,
          get: i[o2]
        });
    }
    a(u, {
      env: function() {
        return h2;
      },
      contextMap: function() {
        return p;
      },
      configContextMap: function() {
        return l2;
      },
      contextSourcesMap: function() {
        return f;
      },
      sourceHashMap: function() {
        return s2;
      },
      NOT_ON_DEMAND: function() {
        return c2;
      },
      NONE: function() {
        return t8;
      },
      resolveDebug: function() {
        return e2;
      }
    });
    const h2 = typeof process < "u" ? {
      NODE_ENV: "production",
      DEBUG: e2(process.env.DEBUG)
    } : {
      NODE_ENV: "production",
      DEBUG: false
    }, p = /* @__PURE__ */ new Map, l2 = /* @__PURE__ */ new Map, f = /* @__PURE__ */ new Map, s2 = /* @__PURE__ */ new Map, c2 = new String("*"), t8 = Symbol("__NONE__");
    function e2(r2) {
      if (r2 === undefined)
        return false;
      if (r2 === "true" || r2 === "1")
        return true;
      if (r2 === "false" || r2 === "0")
        return false;
      if (r2 === "*")
        return true;
      let i = r2.split(",").map((o2) => o2.split(":")[0]);
      return i.includes("-tailwindcss") ? false : !!i.includes("tailwindcss");
    }
  }(Bn3)), Bn3;
}
var Gn3 = {};
var Yn3 = {};
var Eo2;
function ft3() {
  return Eo2 || (Eo2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return l2;
      }
    });
    const a = /* @__PURE__ */ p(Ke3()), h2 = /* @__PURE__ */ p(Vi2());
    function p(f) {
      return f && f.__esModule ? f : {
        default: f
      };
    }
    function l2(f) {
      var s2;
      let c2 = a.default.className();
      c2.value = f;
      var t8;
      return (0, h2.default)((t8 = c2 == null || (s2 = c2.raws) === null || s2 === undefined ? undefined : s2.value) !== null && t8 !== undefined ? t8 : c2.value);
    }
  }(Yn3)), Yn3;
}
var Qn3 = {};
var To2;
function Ji2() {
  return To2 || (To2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "movePseudos", {
      enumerable: true,
      get: function() {
        return h2;
      }
    });
    let a = {
      "::after": [
        "terminal",
        "jumpable"
      ],
      "::backdrop": [
        "terminal",
        "jumpable"
      ],
      "::before": [
        "terminal",
        "jumpable"
      ],
      "::cue": [
        "terminal"
      ],
      "::cue-region": [
        "terminal"
      ],
      "::first-letter": [
        "terminal",
        "jumpable"
      ],
      "::first-line": [
        "terminal",
        "jumpable"
      ],
      "::grammar-error": [
        "terminal"
      ],
      "::marker": [
        "terminal",
        "jumpable"
      ],
      "::part": [
        "terminal",
        "actionable"
      ],
      "::placeholder": [
        "terminal",
        "jumpable"
      ],
      "::selection": [
        "terminal",
        "jumpable"
      ],
      "::slotted": [
        "terminal"
      ],
      "::spelling-error": [
        "terminal"
      ],
      "::target-text": [
        "terminal"
      ],
      "::file-selector-button": [
        "terminal",
        "actionable"
      ],
      "::deep": [
        "actionable"
      ],
      "::v-deep": [
        "actionable"
      ],
      "::ng-deep": [
        "actionable"
      ],
      ":after": [
        "terminal",
        "jumpable"
      ],
      ":before": [
        "terminal",
        "jumpable"
      ],
      ":first-letter": [
        "terminal",
        "jumpable"
      ],
      ":first-line": [
        "terminal",
        "jumpable"
      ],
      ":where": [],
      ":is": [],
      ":has": [],
      __default__: [
        "terminal",
        "actionable"
      ]
    };
    function h2(t8) {
      let [e2] = p(t8);
      return e2.forEach(([r2, i]) => r2.removeChild(i)), t8.nodes.push(...e2.map(([, r2]) => r2)), t8;
    }
    function p(t8) {
      let e2 = [], r2 = null;
      for (let o2 of t8.nodes)
        if (o2.type === "combinator")
          e2 = e2.filter(([, v3]) => c2(v3).includes("jumpable")), r2 = null;
        else if (o2.type === "pseudo") {
          f(o2) ? (r2 = o2, e2.push([
            t8,
            o2,
            null
          ])) : r2 && s2(o2, r2) ? e2.push([
            t8,
            o2,
            r2
          ]) : r2 = null;
          var i;
          for (let v3 of (i = o2.nodes) !== null && i !== undefined ? i : []) {
            let [m, n2] = p(v3);
            r2 = n2 || r2, e2.push(...m);
          }
        }
      return [
        e2,
        r2
      ];
    }
    function l2(t8) {
      return t8.value.startsWith("::") || a[t8.value] !== undefined;
    }
    function f(t8) {
      return l2(t8) && c2(t8).includes("terminal");
    }
    function s2(t8, e2) {
      return t8.type !== "pseudo" || l2(t8) ? false : c2(e2).includes("actionable");
    }
    function c2(t8) {
      var e2;
      return (e2 = a[t8.value]) !== null && e2 !== undefined ? e2 : a.__default__;
    }
  }(Qn3)), Qn3;
}
var Ao2;
function ru3() {
  return Ao2 || (Ao2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(d2, _3) {
      for (var w3 in _3)
        Object.defineProperty(d2, w3, {
          enumerable: true,
          get: _3[w3]
        });
    }
    a(u, {
      formatVariantSelector: function() {
        return r2;
      },
      eliminateIrrelevantSelectors: function() {
        return v3;
      },
      finalizeSelector: function() {
        return m;
      },
      handleMergePseudo: function() {
        return n2;
      }
    });
    const h2 = /* @__PURE__ */ t8(Ke3()), p = /* @__PURE__ */ t8(Bi2()), l2 = /* @__PURE__ */ t8(ft3()), f = /* @__PURE__ */ t8(Hi2()), s2 = Ji2(), c2 = st3();
    function t8(d2) {
      return d2 && d2.__esModule ? d2 : {
        default: d2
      };
    }
    let e2 = ":merge";
    function r2(d2, { context: _3, candidate: w3 }) {
      var y2;
      let x = (y2 = _3 == null ? undefined : _3.tailwindConfig.prefix) !== null && y2 !== undefined ? y2 : "", g2 = d2.map((A) => {
        let E2 = (0, h2.default)().astSync(A.format);
        return {
          ...A,
          ast: A.respectPrefix ? (0, f.default)(x, E2) : E2
        };
      }), O3 = h2.default.root({
        nodes: [
          h2.default.selector({
            nodes: [
              h2.default.className({
                value: (0, l2.default)(w3)
              })
            ]
          })
        ]
      });
      for (let { ast: A } of g2)
        [O3, A] = n2(O3, A), A.walkNesting((E2) => E2.replaceWith(...O3.nodes[0].nodes)), O3 = A;
      return O3;
    }
    function i(d2) {
      let _3 = [];
      for (;d2.prev() && d2.prev().type !== "combinator"; )
        d2 = d2.prev();
      for (;d2 && d2.type !== "combinator"; )
        _3.push(d2), d2 = d2.next();
      return _3;
    }
    function o2(d2) {
      return d2.sort((_3, w3) => _3.type === "tag" && w3.type === "class" ? -1 : _3.type === "class" && w3.type === "tag" ? 1 : _3.type === "class" && w3.type === "pseudo" && w3.value.startsWith("::") ? -1 : _3.type === "pseudo" && _3.value.startsWith("::") && w3.type === "class" ? 1 : d2.index(_3) - d2.index(w3)), d2;
    }
    function v3(d2, _3) {
      let w3 = false;
      d2.walk((y2) => {
        if (y2.type === "class" && y2.value === _3)
          return w3 = true, false;
      }), w3 || d2.remove();
    }
    function m(d2, _3, { context: w3, candidate: y2, base: x }) {
      var g2, O3;
      let A = (O3 = w3 == null || (g2 = w3.tailwindConfig) === null || g2 === undefined ? undefined : g2.separator) !== null && O3 !== undefined ? O3 : ":";
      x = x ?? (0, c2.splitAtTopLevelOnly)(y2, A).pop();
      let E2 = (0, h2.default)().astSync(d2);
      if (E2.walkClasses((M2) => {
        M2.raws && M2.value.includes(x) && (M2.raws.value = (0, l2.default)((0, p.default)(M2.raws.value)));
      }), E2.each((M2) => v3(M2, x)), E2.length === 0)
        return null;
      let b3 = Array.isArray(_3) ? r2(_3, {
        context: w3,
        candidate: y2
      }) : _3;
      if (b3 === null)
        return E2.toString();
      let k3 = h2.default.comment({
        value: "/*__simple__*/"
      }), q2 = h2.default.comment({
        value: "/*__simple__*/"
      });
      return E2.walkClasses((M2) => {
        if (M2.value !== x)
          return;
        let W3 = M2.parent, S3 = b3.nodes[0].nodes;
        if (W3.nodes.length === 1) {
          M2.replaceWith(...S3);
          return;
        }
        let P3 = i(M2);
        W3.insertBefore(P3[0], k3), W3.insertAfter(P3[P3.length - 1], q2);
        for (let R3 of S3)
          W3.insertBefore(P3[0], R3.clone());
        M2.remove(), P3 = i(k3);
        let C = W3.index(k3);
        W3.nodes.splice(C, P3.length, ...o2(h2.default.selector({
          nodes: P3
        })).nodes), k3.remove(), q2.remove();
      }), E2.walkPseudos((M2) => {
        M2.value === e2 && M2.replaceWith(M2.nodes);
      }), E2.each((M2) => (0, s2.movePseudos)(M2)), E2.toString();
    }
    function n2(d2, _3) {
      let w3 = [];
      return d2.walkPseudos((y2) => {
        y2.value === e2 && w3.push({
          pseudo: y2,
          value: y2.nodes[0].toString()
        });
      }), _3.walkPseudos((y2) => {
        if (y2.value !== e2)
          return;
        let x = y2.nodes[0].toString(), g2 = w3.find((b3) => b3.value === x);
        if (!g2)
          return;
        let O3 = [], A = y2.next();
        for (;A && A.type !== "combinator"; )
          O3.push(A), A = A.next();
        let E2 = A;
        g2.pseudo.parent.insertAfter(g2.pseudo, h2.default.selector({
          nodes: O3.map((b3) => b3.clone())
        })), y2.remove(), O3.forEach((b3) => b3.remove()), E2 && E2.type === "combinator" && E2.remove();
      }), [
        d2,
        _3
      ];
    }
  }(Gn3)), Gn3;
}
var Hn3 = {};
var Co;
function nu3() {
  return Co || (Co = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(t8, e2) {
      for (var r2 in e2)
        Object.defineProperty(t8, r2, {
          enumerable: true,
          get: e2[r2]
        });
    }
    a(u, {
      asClass: function() {
        return f;
      },
      default: function() {
        return s2;
      },
      formatClass: function() {
        return c2;
      }
    });
    const h2 = /* @__PURE__ */ l2(ft3()), p = /* @__PURE__ */ l2(Vi2());
    function l2(t8) {
      return t8 && t8.__esModule ? t8 : {
        default: t8
      };
    }
    function f(t8) {
      return (0, p.default)(`.${(0, h2.default)(t8)}`);
    }
    function s2(t8, e2) {
      return f(c2(t8, e2));
    }
    function c2(t8, e2) {
      return e2 === "DEFAULT" ? t8 : e2 === "-" || e2 === "-DEFAULT" ? `-${t8}` : e2.startsWith("-") ? `-${t8}${e2}` : e2.startsWith("/") ? `${t8}${e2}` : `${t8}-${e2}`;
    }
  }(Hn3)), Hn3;
}
var Jn3 = {};
var Kn3 = {};
var Xn3 = {};
var Ro3;
function Pf() {
  return Ro3 || (Ro3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return p;
      }
    });
    const a = /* @__PURE__ */ h2(pr3());
    function h2(l2) {
      return l2 && l2.__esModule ? l2 : {
        default: l2
      };
    }
    function p(l2, f = [
      [
        l2,
        [
          l2
        ]
      ]
    ], { filterDefault: s2 = false, ...c2 } = {}) {
      let t8 = (0, a.default)(l2);
      return function({ matchUtilities: e2, theme: r2 }) {
        for (let o2 of f) {
          let v3 = Array.isArray(o2[0]) ? o2 : [
            o2
          ];
          var i;
          e2(v3.reduce((m, [n2, d2]) => Object.assign(m, {
            [n2]: (_3) => d2.reduce((w3, y2) => Array.isArray(y2) ? Object.assign(w3, {
              [y2[0]]: y2[1]
            }) : Object.assign(w3, {
              [y2]: t8(_3)
            }), {})
          }), {}), {
            ...c2,
            values: s2 ? Object.fromEntries(Object.entries((i = r2(l2)) !== null && i !== undefined ? i : {}).filter(([m]) => m !== "DEFAULT")) : r2(l2)
          });
        }
      };
    }
  }(Xn3)), Xn3;
}
var Zn3 = {};
var Io3;
function Ef() {
  return Io3 || (Io3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return i;
      }
    });
    const a = /* @__PURE__ */ new Set([
      "normal",
      "reverse",
      "alternate",
      "alternate-reverse"
    ]), h2 = /* @__PURE__ */ new Set([
      "running",
      "paused"
    ]), p = /* @__PURE__ */ new Set([
      "none",
      "forwards",
      "backwards",
      "both"
    ]), l2 = /* @__PURE__ */ new Set([
      "infinite"
    ]), f = /* @__PURE__ */ new Set([
      "linear",
      "ease",
      "ease-in",
      "ease-out",
      "ease-in-out",
      "step-start",
      "step-end"
    ]), s2 = [
      "cubic-bezier",
      "steps"
    ], c2 = /\,(?![^(]*\))/g, t8 = /\ +(?![^(]*\))/g, e2 = /^(-?[\d.]+m?s)$/, r2 = /^(\d+)$/;
    function i(o2) {
      return o2.split(c2).map((m) => {
        let n2 = m.trim(), d2 = {
          value: n2
        }, _3 = n2.split(t8), w3 = /* @__PURE__ */ new Set;
        for (let y2 of _3)
          !w3.has("DIRECTIONS") && a.has(y2) ? (d2.direction = y2, w3.add("DIRECTIONS")) : !w3.has("PLAY_STATES") && h2.has(y2) ? (d2.playState = y2, w3.add("PLAY_STATES")) : !w3.has("FILL_MODES") && p.has(y2) ? (d2.fillMode = y2, w3.add("FILL_MODES")) : !w3.has("ITERATION_COUNTS") && (l2.has(y2) || r2.test(y2)) ? (d2.iterationCount = y2, w3.add("ITERATION_COUNTS")) : !w3.has("TIMING_FUNCTION") && f.has(y2) || !w3.has("TIMING_FUNCTION") && s2.some((x) => y2.startsWith(`${x}(`)) ? (d2.timingFunction = y2, w3.add("TIMING_FUNCTION")) : !w3.has("DURATION") && e2.test(y2) ? (d2.duration = y2, w3.add("DURATION")) : !w3.has("DELAY") && e2.test(y2) ? (d2.delay = y2, w3.add("DELAY")) : w3.has("NAME") ? (d2.unknown || (d2.unknown = []), d2.unknown.push(y2)) : (d2.name = y2, w3.add("NAME"));
        return d2;
      });
    }
  }(Zn3)), Zn3;
}
var ei2 = {};
var Mo3;
function Tf() {
  return Mo3 || (Mo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return h2;
      }
    });
    const a = (p) => Object.assign({}, ...Object.entries(p ?? {}).flatMap(([l2, f]) => typeof f == "object" ? Object.entries(a(f)).map(([s2, c2]) => ({
      [l2 + (s2 === "DEFAULT" ? "" : `-${s2}`)]: c2
    })) : [
      {
        [`${l2}`]: f
      }
    ])), h2 = a;
  }(ei2)), ei2;
}
var ti3 = {};
var Do2;
function iu3() {
  return Do2 || (Do2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2) {
      return typeof h2 == "function" ? h2({}) : h2;
    }
  }(ti3)), ti3;
}
var Af = "3.4.10";
var Cf = {
  version: Af
};
var ri3 = {};
var qo3;
function Rf() {
  return qo3 || (qo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "removeAlphaVariables", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2, p) {
      h2.walkDecls((l2) => {
        if (p.includes(l2.prop)) {
          l2.remove();
          return;
        }
        for (let f of p)
          l2.value.includes(`/ var(${f})`) && (l2.value = l2.value.replace(`/ var(${f})`, ""));
      });
    }
  }(ri3)), ri3;
}
var Lo;
function If() {
  return Lo || (Lo = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(S3, P3) {
      for (var C in P3)
        Object.defineProperty(S3, C, {
          enumerable: true,
          get: P3[C]
        });
    }
    a(u, {
      variantPlugins: function() {
        return b3;
      },
      corePlugins: function() {
        return W3;
      }
    });
    const h2 = /* @__PURE__ */ O3(Ne3), p = /* @__PURE__ */ E2(Ne3), l2 = /* @__PURE__ */ O3(Be2()), f = /* @__PURE__ */ O3(Pf()), s2 = /* @__PURE__ */ O3(zi2()), c2 = /* @__PURE__ */ O3(ft3()), t8 = /* @__PURE__ */ O3(Ef()), e2 = /* @__PURE__ */ O3(Tf()), r2 = /* @__PURE__ */ E2(hr3()), i = /* @__PURE__ */ O3(iu3()), o2 = /* @__PURE__ */ O3(ut3()), v3 = /* @__PURE__ */ O3(pr3()), m = Cf, n2 = /* @__PURE__ */ O3(tt3()), d2 = Ui2(), _3 = $l(), w3 = Rf(), y2 = it3(), x = vr3(), g2 = Ki2();
    function O3(S3) {
      return S3 && S3.__esModule ? S3 : {
        default: S3
      };
    }
    function A(S3) {
      if (typeof WeakMap != "function")
        return null;
      var P3 = /* @__PURE__ */ new WeakMap, C = /* @__PURE__ */ new WeakMap;
      return (A = function(R3) {
        return R3 ? C : P3;
      })(S3);
    }
    function E2(S3, P3) {
      if (S3 && S3.__esModule)
        return S3;
      if (S3 === null || typeof S3 != "object" && typeof S3 != "function")
        return {
          default: S3
        };
      var C = A(P3);
      if (C && C.has(S3))
        return C.get(S3);
      var R3 = {}, $2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var B3 in S3)
        if (B3 !== "default" && Object.prototype.hasOwnProperty.call(S3, B3)) {
          var z3 = $2 ? Object.getOwnPropertyDescriptor(S3, B3) : null;
          z3 && (z3.get || z3.set) ? Object.defineProperty(R3, B3, z3) : R3[B3] = S3[B3];
        }
      return R3.default = S3, C && C.set(S3, R3), R3;
    }
    let b3 = {
      childVariant: ({ addVariant: S3 }) => {
        S3("*", "& > *");
      },
      pseudoElementVariants: ({ addVariant: S3 }) => {
        S3("first-letter", "&::first-letter"), S3("first-line", "&::first-line"), S3("marker", [
          ({ container: P3 }) => ((0, w3.removeAlphaVariables)(P3, [
            "--tw-text-opacity"
          ]), "& *::marker"),
          ({ container: P3 }) => ((0, w3.removeAlphaVariables)(P3, [
            "--tw-text-opacity"
          ]), "&::marker")
        ]), S3("selection", [
          "& *::selection",
          "&::selection"
        ]), S3("file", "&::file-selector-button"), S3("placeholder", "&::placeholder"), S3("backdrop", "&::backdrop"), S3("before", ({ container: P3 }) => (P3.walkRules((C) => {
          let R3 = false;
          C.walkDecls("content", () => {
            R3 = true;
          }), R3 || C.prepend(l2.default.decl({
            prop: "content",
            value: "var(--tw-content)"
          }));
        }), "&::before")), S3("after", ({ container: P3 }) => (P3.walkRules((C) => {
          let R3 = false;
          C.walkDecls("content", () => {
            R3 = true;
          }), R3 || C.prepend(l2.default.decl({
            prop: "content",
            value: "var(--tw-content)"
          }));
        }), "&::after"));
      },
      pseudoClassVariants: ({ addVariant: S3, matchVariant: P3, config: C, prefix: R3 }) => {
        let $2 = [
          [
            "first",
            "&:first-child"
          ],
          [
            "last",
            "&:last-child"
          ],
          [
            "only",
            "&:only-child"
          ],
          [
            "odd",
            "&:nth-child(odd)"
          ],
          [
            "even",
            "&:nth-child(even)"
          ],
          "first-of-type",
          "last-of-type",
          "only-of-type",
          [
            "visited",
            ({ container: z3 }) => ((0, w3.removeAlphaVariables)(z3, [
              "--tw-text-opacity",
              "--tw-border-opacity",
              "--tw-bg-opacity"
            ]), "&:visited")
          ],
          "target",
          [
            "open",
            "&[open]"
          ],
          "default",
          "checked",
          "indeterminate",
          "placeholder-shown",
          "autofill",
          "optional",
          "required",
          "valid",
          "invalid",
          "in-range",
          "out-of-range",
          "read-only",
          "empty",
          "focus-within",
          [
            "hover",
            (0, y2.flagEnabled)(C(), "hoverOnlyWhenSupported") ? "@media (hover: hover) and (pointer: fine) { &:hover }" : "&:hover"
          ],
          "focus",
          "focus-visible",
          "active",
          "enabled",
          "disabled"
        ].map((z3) => Array.isArray(z3) ? z3 : [
          z3,
          `&:${z3}`
        ]);
        for (let [z3, L3] of $2)
          S3(z3, (F) => typeof L3 == "function" ? L3(F) : L3);
        let B3 = {
          group: (z3, { modifier: L3 }) => L3 ? [
            `:merge(${R3(".group")}\\/${(0, c2.default)(L3)})`,
            " &"
          ] : [
            `:merge(${R3(".group")})`,
            " &"
          ],
          peer: (z3, { modifier: L3 }) => L3 ? [
            `:merge(${R3(".peer")}\\/${(0, c2.default)(L3)})`,
            " ~ &"
          ] : [
            `:merge(${R3(".peer")})`,
            " ~ &"
          ]
        };
        for (let [z3, L3] of Object.entries(B3))
          P3(z3, (F = "", D) => {
            let I3 = (0, x.normalize)(typeof F == "function" ? F(D) : F);
            I3.includes("&") || (I3 = "&" + I3);
            let [N3, J3] = L3("", D), T3 = null, U2 = null, j3 = 0;
            for (let H3 = 0;H3 < I3.length; ++H3) {
              let V4 = I3[H3];
              V4 === "&" ? T3 = H3 : V4 === "'" || V4 === '"' ? j3 += 1 : T3 !== null && V4 === " " && !j3 && (U2 = H3);
            }
            return T3 !== null && U2 === null && (U2 = I3.length), I3.slice(0, T3) + N3 + I3.slice(T3 + 1, U2) + J3 + I3.slice(U2);
          }, {
            values: Object.fromEntries($2),
            [g2.INTERNAL_FEATURES]: {
              respectPrefix: false
            }
          });
      },
      directionVariants: ({ addVariant: S3 }) => {
        S3("ltr", '&:where([dir="ltr"], [dir="ltr"] *)'), S3("rtl", '&:where([dir="rtl"], [dir="rtl"] *)');
      },
      reducedMotionVariants: ({ addVariant: S3 }) => {
        S3("motion-safe", "@media (prefers-reduced-motion: no-preference)"), S3("motion-reduce", "@media (prefers-reduced-motion: reduce)");
      },
      darkVariants: ({ config: S3, addVariant: P3 }) => {
        let [C, R3 = ".dark"] = [].concat(S3("darkMode", "media"));
        if (C === false && (C = "media", n2.default.warn("darkmode-false", [
          "The `darkMode` option in your Tailwind CSS configuration is set to `false`, which now behaves the same as `media`.",
          "Change `darkMode` to `media` or remove it entirely.",
          "https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration"
        ])), C === "variant") {
          let $2;
          if (Array.isArray(R3) || typeof R3 == "function" ? $2 = R3 : typeof R3 == "string" && ($2 = [
            R3
          ]), Array.isArray($2))
            for (let B3 of $2)
              B3 === ".dark" ? (C = false, n2.default.warn("darkmode-variant-without-selector", [
                "When using `variant` for `darkMode`, you must provide a selector.",
                'Example: `darkMode: ["variant", ".your-selector &"]`'
              ])) : B3.includes("&") || (C = false, n2.default.warn("darkmode-variant-without-ampersand", [
                "When using `variant` for `darkMode`, your selector must contain `&`.",
                'Example `darkMode: ["variant", ".your-selector &"]`'
              ]));
          R3 = $2;
        }
        C === "selector" ? P3("dark", `&:where(${R3}, ${R3} *)`) : C === "media" ? P3("dark", "@media (prefers-color-scheme: dark)") : C === "variant" ? P3("dark", R3) : C === "class" && P3("dark", `&:is(${R3} *)`);
      },
      printVariant: ({ addVariant: S3 }) => {
        S3("print", "@media print");
      },
      screenVariants: ({ theme: S3, addVariant: P3, matchVariant: C }) => {
        var R3;
        let $2 = (R3 = S3("screens")) !== null && R3 !== undefined ? R3 : {}, B3 = Object.values($2).every((K3) => typeof K3 == "string"), z3 = (0, d2.normalizeScreens)(S3("screens")), L3 = /* @__PURE__ */ new Set([]);
        function F(K3) {
          var X3, Q3;
          return (Q3 = (X3 = K3.match(/(\D+)$/)) === null || X3 === undefined ? undefined : X3[1]) !== null && Q3 !== undefined ? Q3 : "(none)";
        }
        function D(K3) {
          K3 !== undefined && L3.add(F(K3));
        }
        function I3(K3) {
          return D(K3), L3.size === 1;
        }
        for (const K3 of z3)
          for (const X3 of K3.values)
            D(X3.min), D(X3.max);
        let N3 = L3.size <= 1;
        function J3(K3) {
          return Object.fromEntries(z3.filter((X3) => (0, d2.isScreenSortable)(X3).result).map((X3) => {
            let { min: Q3, max: ne3 } = X3.values[0];
            if (ne3 !== undefined)
              return X3;
            if (Q3 !== undefined)
              return {
                ...X3,
                not: !X3.not
              };
          }).map((X3) => [
            X3.name,
            X3
          ]));
        }
        function T3(K3) {
          return (X3, Q3) => (0, d2.compareScreens)(K3, X3.value, Q3.value);
        }
        let U2 = T3("max"), j3 = T3("min");
        function H3(K3) {
          return (X3) => {
            if (B3)
              if (N3) {
                if (typeof X3 == "string" && !I3(X3))
                  return n2.default.warn("minmax-have-mixed-units", [
                    "The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units."
                  ]), [];
              } else
                return n2.default.warn("mixed-screen-units", [
                  "The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units."
                ]), [];
            else
              return n2.default.warn("complex-screen-config", [
                "The `min-*` and `max-*` variants are not supported with a `screens` configuration containing objects."
              ]), [];
            return [
              `@media ${(0, s2.default)((0, d2.toScreen)(X3, K3))}`
            ];
          };
        }
        C("max", H3("max"), {
          sort: U2,
          values: B3 ? J3() : {}
        });
        let V4 = "min-screens";
        for (let K3 of z3)
          P3(K3.name, `@media ${(0, s2.default)(K3)}`, {
            id: V4,
            sort: B3 && N3 ? j3 : undefined,
            value: K3
          });
        C("min", H3("min"), {
          id: V4,
          sort: j3
        });
      },
      supportsVariants: ({ matchVariant: S3, theme: P3 }) => {
        var C;
        S3("supports", (R3 = "") => {
          let $2 = (0, x.normalize)(R3), B3 = /^\w*\s*\(/.test($2);
          return $2 = B3 ? $2.replace(/\b(and|or|not)\b/g, " $1 ") : $2, B3 ? `@supports ${$2}` : ($2.includes(":") || ($2 = `${$2}: var(--tw)`), $2.startsWith("(") && $2.endsWith(")") || ($2 = `(${$2})`), `@supports ${$2}`);
        }, {
          values: (C = P3("supports")) !== null && C !== undefined ? C : {}
        });
      },
      hasVariants: ({ matchVariant: S3, prefix: P3 }) => {
        S3("has", (C) => `&:has(${(0, x.normalize)(C)})`, {
          values: {},
          [g2.INTERNAL_FEATURES]: {
            respectPrefix: false
          }
        }), S3("group-has", (C, { modifier: R3 }) => R3 ? `:merge(${P3(".group")}\\/${R3}):has(${(0, x.normalize)(C)}) &` : `:merge(${P3(".group")}):has(${(0, x.normalize)(C)}) &`, {
          values: {},
          [g2.INTERNAL_FEATURES]: {
            respectPrefix: false
          }
        }), S3("peer-has", (C, { modifier: R3 }) => R3 ? `:merge(${P3(".peer")}\\/${R3}):has(${(0, x.normalize)(C)}) ~ &` : `:merge(${P3(".peer")}):has(${(0, x.normalize)(C)}) ~ &`, {
          values: {},
          [g2.INTERNAL_FEATURES]: {
            respectPrefix: false
          }
        });
      },
      ariaVariants: ({ matchVariant: S3, theme: P3 }) => {
        var C;
        S3("aria", (B3) => `&[aria-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}]`, {
          values: (C = P3("aria")) !== null && C !== undefined ? C : {}
        });
        var R3;
        S3("group-aria", (B3, { modifier: z3 }) => z3 ? `:merge(.group\\/${z3})[aria-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}] &` : `:merge(.group)[aria-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}] &`, {
          values: (R3 = P3("aria")) !== null && R3 !== undefined ? R3 : {}
        });
        var $2;
        S3("peer-aria", (B3, { modifier: z3 }) => z3 ? `:merge(.peer\\/${z3})[aria-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}] ~ &` : `:merge(.peer)[aria-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}] ~ &`, {
          values: ($2 = P3("aria")) !== null && $2 !== undefined ? $2 : {}
        });
      },
      dataVariants: ({ matchVariant: S3, theme: P3 }) => {
        var C;
        S3("data", (B3) => `&[data-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}]`, {
          values: (C = P3("data")) !== null && C !== undefined ? C : {}
        });
        var R3;
        S3("group-data", (B3, { modifier: z3 }) => z3 ? `:merge(.group\\/${z3})[data-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}] &` : `:merge(.group)[data-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}] &`, {
          values: (R3 = P3("data")) !== null && R3 !== undefined ? R3 : {}
        });
        var $2;
        S3("peer-data", (B3, { modifier: z3 }) => z3 ? `:merge(.peer\\/${z3})[data-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}] ~ &` : `:merge(.peer)[data-${(0, x.normalizeAttributeSelectors)((0, x.normalize)(B3))}] ~ &`, {
          values: ($2 = P3("data")) !== null && $2 !== undefined ? $2 : {}
        });
      },
      orientationVariants: ({ addVariant: S3 }) => {
        S3("portrait", "@media (orientation: portrait)"), S3("landscape", "@media (orientation: landscape)");
      },
      prefersContrastVariants: ({ addVariant: S3 }) => {
        S3("contrast-more", "@media (prefers-contrast: more)"), S3("contrast-less", "@media (prefers-contrast: less)");
      },
      forcedColorsVariants: ({ addVariant: S3 }) => {
        S3("forced-colors", "@media (forced-colors: active)");
      }
    }, k3 = [
      "translate(var(--tw-translate-x), var(--tw-translate-y))",
      "rotate(var(--tw-rotate))",
      "skewX(var(--tw-skew-x))",
      "skewY(var(--tw-skew-y))",
      "scaleX(var(--tw-scale-x))",
      "scaleY(var(--tw-scale-y))"
    ].join(" "), q2 = [
      "var(--tw-blur)",
      "var(--tw-brightness)",
      "var(--tw-contrast)",
      "var(--tw-grayscale)",
      "var(--tw-hue-rotate)",
      "var(--tw-invert)",
      "var(--tw-saturate)",
      "var(--tw-sepia)",
      "var(--tw-drop-shadow)"
    ].join(" "), M2 = [
      "var(--tw-backdrop-blur)",
      "var(--tw-backdrop-brightness)",
      "var(--tw-backdrop-contrast)",
      "var(--tw-backdrop-grayscale)",
      "var(--tw-backdrop-hue-rotate)",
      "var(--tw-backdrop-invert)",
      "var(--tw-backdrop-opacity)",
      "var(--tw-backdrop-saturate)",
      "var(--tw-backdrop-sepia)"
    ].join(" "), W3 = {
      preflight: ({ addBase: S3 }) => {
        let P3 = l2.default.parse(h2.default.readFileSync(p.join(__dirname, "./css/preflight.css"), "utf8"));
        S3([
          l2.default.comment({
            text: `! tailwindcss v${m.version} | MIT License | https://tailwindcss.com`
          }),
          ...P3.nodes
        ]);
      },
      container: /* @__PURE__ */ (() => {
        function S3(C = []) {
          return C.flatMap((R3) => R3.values.map(($2) => $2.min)).filter((R3) => R3 !== undefined);
        }
        function P3(C, R3, $2) {
          if (typeof $2 > "u")
            return [];
          if (!(typeof $2 == "object" && $2 !== null))
            return [
              {
                screen: "DEFAULT",
                minWidth: 0,
                padding: $2
              }
            ];
          let B3 = [];
          $2.DEFAULT && B3.push({
            screen: "DEFAULT",
            minWidth: 0,
            padding: $2.DEFAULT
          });
          for (let z3 of C)
            for (let L3 of R3)
              for (let { min: F } of L3.values)
                F === z3 && B3.push({
                  minWidth: z3,
                  padding: $2[L3.name]
                });
          return B3;
        }
        return function({ addComponents: C, theme: R3 }) {
          let $2 = (0, d2.normalizeScreens)(R3("container.screens", R3("screens"))), B3 = S3($2), z3 = P3(B3, $2, R3("container.padding")), L3 = (D) => {
            let I3 = z3.find((N3) => N3.minWidth === D);
            return I3 ? {
              paddingRight: I3.padding,
              paddingLeft: I3.padding
            } : {};
          }, F = Array.from(new Set(B3.slice().sort((D, I3) => parseInt(D) - parseInt(I3)))).map((D) => ({
            [`@media (min-width: ${D})`]: {
              ".container": {
                "max-width": D,
                ...L3(D)
              }
            }
          }));
          C([
            {
              ".container": Object.assign({
                width: "100%"
              }, R3("container.center", false) ? {
                marginRight: "auto",
                marginLeft: "auto"
              } : {}, L3(0))
            },
            ...F
          ]);
        };
      })(),
      accessibility: ({ addUtilities: S3 }) => {
        S3({
          ".sr-only": {
            position: "absolute",
            width: "1px",
            height: "1px",
            padding: "0",
            margin: "-1px",
            overflow: "hidden",
            clip: "rect(0, 0, 0, 0)",
            whiteSpace: "nowrap",
            borderWidth: "0"
          },
          ".not-sr-only": {
            position: "static",
            width: "auto",
            height: "auto",
            padding: "0",
            margin: "0",
            overflow: "visible",
            clip: "auto",
            whiteSpace: "normal"
          }
        });
      },
      pointerEvents: ({ addUtilities: S3 }) => {
        S3({
          ".pointer-events-none": {
            "pointer-events": "none"
          },
          ".pointer-events-auto": {
            "pointer-events": "auto"
          }
        });
      },
      visibility: ({ addUtilities: S3 }) => {
        S3({
          ".visible": {
            visibility: "visible"
          },
          ".invisible": {
            visibility: "hidden"
          },
          ".collapse": {
            visibility: "collapse"
          }
        });
      },
      position: ({ addUtilities: S3 }) => {
        S3({
          ".static": {
            position: "static"
          },
          ".fixed": {
            position: "fixed"
          },
          ".absolute": {
            position: "absolute"
          },
          ".relative": {
            position: "relative"
          },
          ".sticky": {
            position: "sticky"
          }
        });
      },
      inset: (0, f.default)("inset", [
        [
          "inset",
          [
            "inset"
          ]
        ],
        [
          [
            "inset-x",
            [
              "left",
              "right"
            ]
          ],
          [
            "inset-y",
            [
              "top",
              "bottom"
            ]
          ]
        ],
        [
          [
            "start",
            [
              "inset-inline-start"
            ]
          ],
          [
            "end",
            [
              "inset-inline-end"
            ]
          ],
          [
            "top",
            [
              "top"
            ]
          ],
          [
            "right",
            [
              "right"
            ]
          ],
          [
            "bottom",
            [
              "bottom"
            ]
          ],
          [
            "left",
            [
              "left"
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      isolation: ({ addUtilities: S3 }) => {
        S3({
          ".isolate": {
            isolation: "isolate"
          },
          ".isolation-auto": {
            isolation: "auto"
          }
        });
      },
      zIndex: (0, f.default)("zIndex", [
        [
          "z",
          [
            "zIndex"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      order: (0, f.default)("order", undefined, {
        supportsNegativeValues: true
      }),
      gridColumn: (0, f.default)("gridColumn", [
        [
          "col",
          [
            "gridColumn"
          ]
        ]
      ]),
      gridColumnStart: (0, f.default)("gridColumnStart", [
        [
          "col-start",
          [
            "gridColumnStart"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      gridColumnEnd: (0, f.default)("gridColumnEnd", [
        [
          "col-end",
          [
            "gridColumnEnd"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      gridRow: (0, f.default)("gridRow", [
        [
          "row",
          [
            "gridRow"
          ]
        ]
      ]),
      gridRowStart: (0, f.default)("gridRowStart", [
        [
          "row-start",
          [
            "gridRowStart"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      gridRowEnd: (0, f.default)("gridRowEnd", [
        [
          "row-end",
          [
            "gridRowEnd"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      float: ({ addUtilities: S3 }) => {
        S3({
          ".float-start": {
            float: "inline-start"
          },
          ".float-end": {
            float: "inline-end"
          },
          ".float-right": {
            float: "right"
          },
          ".float-left": {
            float: "left"
          },
          ".float-none": {
            float: "none"
          }
        });
      },
      clear: ({ addUtilities: S3 }) => {
        S3({
          ".clear-start": {
            clear: "inline-start"
          },
          ".clear-end": {
            clear: "inline-end"
          },
          ".clear-left": {
            clear: "left"
          },
          ".clear-right": {
            clear: "right"
          },
          ".clear-both": {
            clear: "both"
          },
          ".clear-none": {
            clear: "none"
          }
        });
      },
      margin: (0, f.default)("margin", [
        [
          "m",
          [
            "margin"
          ]
        ],
        [
          [
            "mx",
            [
              "margin-left",
              "margin-right"
            ]
          ],
          [
            "my",
            [
              "margin-top",
              "margin-bottom"
            ]
          ]
        ],
        [
          [
            "ms",
            [
              "margin-inline-start"
            ]
          ],
          [
            "me",
            [
              "margin-inline-end"
            ]
          ],
          [
            "mt",
            [
              "margin-top"
            ]
          ],
          [
            "mr",
            [
              "margin-right"
            ]
          ],
          [
            "mb",
            [
              "margin-bottom"
            ]
          ],
          [
            "ml",
            [
              "margin-left"
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      boxSizing: ({ addUtilities: S3 }) => {
        S3({
          ".box-border": {
            "box-sizing": "border-box"
          },
          ".box-content": {
            "box-sizing": "content-box"
          }
        });
      },
      lineClamp: ({ matchUtilities: S3, addUtilities: P3, theme: C }) => {
        S3({
          "line-clamp": (R3) => ({
            overflow: "hidden",
            display: "-webkit-box",
            "-webkit-box-orient": "vertical",
            "-webkit-line-clamp": `${R3}`
          })
        }, {
          values: C("lineClamp")
        }), P3({
          ".line-clamp-none": {
            overflow: "visible",
            display: "block",
            "-webkit-box-orient": "horizontal",
            "-webkit-line-clamp": "none"
          }
        });
      },
      display: ({ addUtilities: S3 }) => {
        S3({
          ".block": {
            display: "block"
          },
          ".inline-block": {
            display: "inline-block"
          },
          ".inline": {
            display: "inline"
          },
          ".flex": {
            display: "flex"
          },
          ".inline-flex": {
            display: "inline-flex"
          },
          ".table": {
            display: "table"
          },
          ".inline-table": {
            display: "inline-table"
          },
          ".table-caption": {
            display: "table-caption"
          },
          ".table-cell": {
            display: "table-cell"
          },
          ".table-column": {
            display: "table-column"
          },
          ".table-column-group": {
            display: "table-column-group"
          },
          ".table-footer-group": {
            display: "table-footer-group"
          },
          ".table-header-group": {
            display: "table-header-group"
          },
          ".table-row-group": {
            display: "table-row-group"
          },
          ".table-row": {
            display: "table-row"
          },
          ".flow-root": {
            display: "flow-root"
          },
          ".grid": {
            display: "grid"
          },
          ".inline-grid": {
            display: "inline-grid"
          },
          ".contents": {
            display: "contents"
          },
          ".list-item": {
            display: "list-item"
          },
          ".hidden": {
            display: "none"
          }
        });
      },
      aspectRatio: (0, f.default)("aspectRatio", [
        [
          "aspect",
          [
            "aspect-ratio"
          ]
        ]
      ]),
      size: (0, f.default)("size", [
        [
          "size",
          [
            "width",
            "height"
          ]
        ]
      ]),
      height: (0, f.default)("height", [
        [
          "h",
          [
            "height"
          ]
        ]
      ]),
      maxHeight: (0, f.default)("maxHeight", [
        [
          "max-h",
          [
            "maxHeight"
          ]
        ]
      ]),
      minHeight: (0, f.default)("minHeight", [
        [
          "min-h",
          [
            "minHeight"
          ]
        ]
      ]),
      width: (0, f.default)("width", [
        [
          "w",
          [
            "width"
          ]
        ]
      ]),
      minWidth: (0, f.default)("minWidth", [
        [
          "min-w",
          [
            "minWidth"
          ]
        ]
      ]),
      maxWidth: (0, f.default)("maxWidth", [
        [
          "max-w",
          [
            "maxWidth"
          ]
        ]
      ]),
      flex: (0, f.default)("flex"),
      flexShrink: (0, f.default)("flexShrink", [
        [
          "flex-shrink",
          [
            "flex-shrink"
          ]
        ],
        [
          "shrink",
          [
            "flex-shrink"
          ]
        ]
      ]),
      flexGrow: (0, f.default)("flexGrow", [
        [
          "flex-grow",
          [
            "flex-grow"
          ]
        ],
        [
          "grow",
          [
            "flex-grow"
          ]
        ]
      ]),
      flexBasis: (0, f.default)("flexBasis", [
        [
          "basis",
          [
            "flex-basis"
          ]
        ]
      ]),
      tableLayout: ({ addUtilities: S3 }) => {
        S3({
          ".table-auto": {
            "table-layout": "auto"
          },
          ".table-fixed": {
            "table-layout": "fixed"
          }
        });
      },
      captionSide: ({ addUtilities: S3 }) => {
        S3({
          ".caption-top": {
            "caption-side": "top"
          },
          ".caption-bottom": {
            "caption-side": "bottom"
          }
        });
      },
      borderCollapse: ({ addUtilities: S3 }) => {
        S3({
          ".border-collapse": {
            "border-collapse": "collapse"
          },
          ".border-separate": {
            "border-collapse": "separate"
          }
        });
      },
      borderSpacing: ({ addDefaults: S3, matchUtilities: P3, theme: C }) => {
        S3("border-spacing", {
          "--tw-border-spacing-x": 0,
          "--tw-border-spacing-y": 0
        }), P3({
          "border-spacing": (R3) => ({
            "--tw-border-spacing-x": R3,
            "--tw-border-spacing-y": R3,
            "@defaults border-spacing": {},
            "border-spacing": "var(--tw-border-spacing-x) var(--tw-border-spacing-y)"
          }),
          "border-spacing-x": (R3) => ({
            "--tw-border-spacing-x": R3,
            "@defaults border-spacing": {},
            "border-spacing": "var(--tw-border-spacing-x) var(--tw-border-spacing-y)"
          }),
          "border-spacing-y": (R3) => ({
            "--tw-border-spacing-y": R3,
            "@defaults border-spacing": {},
            "border-spacing": "var(--tw-border-spacing-x) var(--tw-border-spacing-y)"
          })
        }, {
          values: C("borderSpacing")
        });
      },
      transformOrigin: (0, f.default)("transformOrigin", [
        [
          "origin",
          [
            "transformOrigin"
          ]
        ]
      ]),
      translate: (0, f.default)("translate", [
        [
          [
            "translate-x",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-translate-x",
              [
                "transform",
                k3
              ]
            ]
          ],
          [
            "translate-y",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-translate-y",
              [
                "transform",
                k3
              ]
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      rotate: (0, f.default)("rotate", [
        [
          "rotate",
          [
            [
              "@defaults transform",
              {}
            ],
            "--tw-rotate",
            [
              "transform",
              k3
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      skew: (0, f.default)("skew", [
        [
          [
            "skew-x",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-skew-x",
              [
                "transform",
                k3
              ]
            ]
          ],
          [
            "skew-y",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-skew-y",
              [
                "transform",
                k3
              ]
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      scale: (0, f.default)("scale", [
        [
          "scale",
          [
            [
              "@defaults transform",
              {}
            ],
            "--tw-scale-x",
            "--tw-scale-y",
            [
              "transform",
              k3
            ]
          ]
        ],
        [
          [
            "scale-x",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-scale-x",
              [
                "transform",
                k3
              ]
            ]
          ],
          [
            "scale-y",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-scale-y",
              [
                "transform",
                k3
              ]
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      transform: ({ addDefaults: S3, addUtilities: P3 }) => {
        S3("transform", {
          "--tw-translate-x": "0",
          "--tw-translate-y": "0",
          "--tw-rotate": "0",
          "--tw-skew-x": "0",
          "--tw-skew-y": "0",
          "--tw-scale-x": "1",
          "--tw-scale-y": "1"
        }), P3({
          ".transform": {
            "@defaults transform": {},
            transform: k3
          },
          ".transform-cpu": {
            transform: k3
          },
          ".transform-gpu": {
            transform: k3.replace("translate(var(--tw-translate-x), var(--tw-translate-y))", "translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)")
          },
          ".transform-none": {
            transform: "none"
          }
        });
      },
      animation: ({ matchUtilities: S3, theme: P3, config: C }) => {
        let R3 = (z3) => (0, c2.default)(C("prefix") + z3);
        var $2;
        let B3 = Object.fromEntries(Object.entries(($2 = P3("keyframes")) !== null && $2 !== undefined ? $2 : {}).map(([z3, L3]) => [
          z3,
          {
            [`@keyframes ${R3(z3)}`]: L3
          }
        ]));
        S3({
          animate: (z3) => {
            let L3 = (0, t8.default)(z3);
            return [
              ...L3.flatMap((F) => B3[F.name]),
              {
                animation: L3.map(({ name: F, value: D }) => F === undefined || B3[F] === undefined ? D : D.replace(F, R3(F))).join(", ")
              }
            ];
          }
        }, {
          values: P3("animation")
        });
      },
      cursor: (0, f.default)("cursor"),
      touchAction: ({ addDefaults: S3, addUtilities: P3 }) => {
        S3("touch-action", {
          "--tw-pan-x": " ",
          "--tw-pan-y": " ",
          "--tw-pinch-zoom": " "
        });
        let C = "var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)";
        P3({
          ".touch-auto": {
            "touch-action": "auto"
          },
          ".touch-none": {
            "touch-action": "none"
          },
          ".touch-pan-x": {
            "@defaults touch-action": {},
            "--tw-pan-x": "pan-x",
            "touch-action": C
          },
          ".touch-pan-left": {
            "@defaults touch-action": {},
            "--tw-pan-x": "pan-left",
            "touch-action": C
          },
          ".touch-pan-right": {
            "@defaults touch-action": {},
            "--tw-pan-x": "pan-right",
            "touch-action": C
          },
          ".touch-pan-y": {
            "@defaults touch-action": {},
            "--tw-pan-y": "pan-y",
            "touch-action": C
          },
          ".touch-pan-up": {
            "@defaults touch-action": {},
            "--tw-pan-y": "pan-up",
            "touch-action": C
          },
          ".touch-pan-down": {
            "@defaults touch-action": {},
            "--tw-pan-y": "pan-down",
            "touch-action": C
          },
          ".touch-pinch-zoom": {
            "@defaults touch-action": {},
            "--tw-pinch-zoom": "pinch-zoom",
            "touch-action": C
          },
          ".touch-manipulation": {
            "touch-action": "manipulation"
          }
        });
      },
      userSelect: ({ addUtilities: S3 }) => {
        S3({
          ".select-none": {
            "user-select": "none"
          },
          ".select-text": {
            "user-select": "text"
          },
          ".select-all": {
            "user-select": "all"
          },
          ".select-auto": {
            "user-select": "auto"
          }
        });
      },
      resize: ({ addUtilities: S3 }) => {
        S3({
          ".resize-none": {
            resize: "none"
          },
          ".resize-y": {
            resize: "vertical"
          },
          ".resize-x": {
            resize: "horizontal"
          },
          ".resize": {
            resize: "both"
          }
        });
      },
      scrollSnapType: ({ addDefaults: S3, addUtilities: P3 }) => {
        S3("scroll-snap-type", {
          "--tw-scroll-snap-strictness": "proximity"
        }), P3({
          ".snap-none": {
            "scroll-snap-type": "none"
          },
          ".snap-x": {
            "@defaults scroll-snap-type": {},
            "scroll-snap-type": "x var(--tw-scroll-snap-strictness)"
          },
          ".snap-y": {
            "@defaults scroll-snap-type": {},
            "scroll-snap-type": "y var(--tw-scroll-snap-strictness)"
          },
          ".snap-both": {
            "@defaults scroll-snap-type": {},
            "scroll-snap-type": "both var(--tw-scroll-snap-strictness)"
          },
          ".snap-mandatory": {
            "--tw-scroll-snap-strictness": "mandatory"
          },
          ".snap-proximity": {
            "--tw-scroll-snap-strictness": "proximity"
          }
        });
      },
      scrollSnapAlign: ({ addUtilities: S3 }) => {
        S3({
          ".snap-start": {
            "scroll-snap-align": "start"
          },
          ".snap-end": {
            "scroll-snap-align": "end"
          },
          ".snap-center": {
            "scroll-snap-align": "center"
          },
          ".snap-align-none": {
            "scroll-snap-align": "none"
          }
        });
      },
      scrollSnapStop: ({ addUtilities: S3 }) => {
        S3({
          ".snap-normal": {
            "scroll-snap-stop": "normal"
          },
          ".snap-always": {
            "scroll-snap-stop": "always"
          }
        });
      },
      scrollMargin: (0, f.default)("scrollMargin", [
        [
          "scroll-m",
          [
            "scroll-margin"
          ]
        ],
        [
          [
            "scroll-mx",
            [
              "scroll-margin-left",
              "scroll-margin-right"
            ]
          ],
          [
            "scroll-my",
            [
              "scroll-margin-top",
              "scroll-margin-bottom"
            ]
          ]
        ],
        [
          [
            "scroll-ms",
            [
              "scroll-margin-inline-start"
            ]
          ],
          [
            "scroll-me",
            [
              "scroll-margin-inline-end"
            ]
          ],
          [
            "scroll-mt",
            [
              "scroll-margin-top"
            ]
          ],
          [
            "scroll-mr",
            [
              "scroll-margin-right"
            ]
          ],
          [
            "scroll-mb",
            [
              "scroll-margin-bottom"
            ]
          ],
          [
            "scroll-ml",
            [
              "scroll-margin-left"
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      scrollPadding: (0, f.default)("scrollPadding", [
        [
          "scroll-p",
          [
            "scroll-padding"
          ]
        ],
        [
          [
            "scroll-px",
            [
              "scroll-padding-left",
              "scroll-padding-right"
            ]
          ],
          [
            "scroll-py",
            [
              "scroll-padding-top",
              "scroll-padding-bottom"
            ]
          ]
        ],
        [
          [
            "scroll-ps",
            [
              "scroll-padding-inline-start"
            ]
          ],
          [
            "scroll-pe",
            [
              "scroll-padding-inline-end"
            ]
          ],
          [
            "scroll-pt",
            [
              "scroll-padding-top"
            ]
          ],
          [
            "scroll-pr",
            [
              "scroll-padding-right"
            ]
          ],
          [
            "scroll-pb",
            [
              "scroll-padding-bottom"
            ]
          ],
          [
            "scroll-pl",
            [
              "scroll-padding-left"
            ]
          ]
        ]
      ]),
      listStylePosition: ({ addUtilities: S3 }) => {
        S3({
          ".list-inside": {
            "list-style-position": "inside"
          },
          ".list-outside": {
            "list-style-position": "outside"
          }
        });
      },
      listStyleType: (0, f.default)("listStyleType", [
        [
          "list",
          [
            "listStyleType"
          ]
        ]
      ]),
      listStyleImage: (0, f.default)("listStyleImage", [
        [
          "list-image",
          [
            "listStyleImage"
          ]
        ]
      ]),
      appearance: ({ addUtilities: S3 }) => {
        S3({
          ".appearance-none": {
            appearance: "none"
          },
          ".appearance-auto": {
            appearance: "auto"
          }
        });
      },
      columns: (0, f.default)("columns", [
        [
          "columns",
          [
            "columns"
          ]
        ]
      ]),
      breakBefore: ({ addUtilities: S3 }) => {
        S3({
          ".break-before-auto": {
            "break-before": "auto"
          },
          ".break-before-avoid": {
            "break-before": "avoid"
          },
          ".break-before-all": {
            "break-before": "all"
          },
          ".break-before-avoid-page": {
            "break-before": "avoid-page"
          },
          ".break-before-page": {
            "break-before": "page"
          },
          ".break-before-left": {
            "break-before": "left"
          },
          ".break-before-right": {
            "break-before": "right"
          },
          ".break-before-column": {
            "break-before": "column"
          }
        });
      },
      breakInside: ({ addUtilities: S3 }) => {
        S3({
          ".break-inside-auto": {
            "break-inside": "auto"
          },
          ".break-inside-avoid": {
            "break-inside": "avoid"
          },
          ".break-inside-avoid-page": {
            "break-inside": "avoid-page"
          },
          ".break-inside-avoid-column": {
            "break-inside": "avoid-column"
          }
        });
      },
      breakAfter: ({ addUtilities: S3 }) => {
        S3({
          ".break-after-auto": {
            "break-after": "auto"
          },
          ".break-after-avoid": {
            "break-after": "avoid"
          },
          ".break-after-all": {
            "break-after": "all"
          },
          ".break-after-avoid-page": {
            "break-after": "avoid-page"
          },
          ".break-after-page": {
            "break-after": "page"
          },
          ".break-after-left": {
            "break-after": "left"
          },
          ".break-after-right": {
            "break-after": "right"
          },
          ".break-after-column": {
            "break-after": "column"
          }
        });
      },
      gridAutoColumns: (0, f.default)("gridAutoColumns", [
        [
          "auto-cols",
          [
            "gridAutoColumns"
          ]
        ]
      ]),
      gridAutoFlow: ({ addUtilities: S3 }) => {
        S3({
          ".grid-flow-row": {
            gridAutoFlow: "row"
          },
          ".grid-flow-col": {
            gridAutoFlow: "column"
          },
          ".grid-flow-dense": {
            gridAutoFlow: "dense"
          },
          ".grid-flow-row-dense": {
            gridAutoFlow: "row dense"
          },
          ".grid-flow-col-dense": {
            gridAutoFlow: "column dense"
          }
        });
      },
      gridAutoRows: (0, f.default)("gridAutoRows", [
        [
          "auto-rows",
          [
            "gridAutoRows"
          ]
        ]
      ]),
      gridTemplateColumns: (0, f.default)("gridTemplateColumns", [
        [
          "grid-cols",
          [
            "gridTemplateColumns"
          ]
        ]
      ]),
      gridTemplateRows: (0, f.default)("gridTemplateRows", [
        [
          "grid-rows",
          [
            "gridTemplateRows"
          ]
        ]
      ]),
      flexDirection: ({ addUtilities: S3 }) => {
        S3({
          ".flex-row": {
            "flex-direction": "row"
          },
          ".flex-row-reverse": {
            "flex-direction": "row-reverse"
          },
          ".flex-col": {
            "flex-direction": "column"
          },
          ".flex-col-reverse": {
            "flex-direction": "column-reverse"
          }
        });
      },
      flexWrap: ({ addUtilities: S3 }) => {
        S3({
          ".flex-wrap": {
            "flex-wrap": "wrap"
          },
          ".flex-wrap-reverse": {
            "flex-wrap": "wrap-reverse"
          },
          ".flex-nowrap": {
            "flex-wrap": "nowrap"
          }
        });
      },
      placeContent: ({ addUtilities: S3 }) => {
        S3({
          ".place-content-center": {
            "place-content": "center"
          },
          ".place-content-start": {
            "place-content": "start"
          },
          ".place-content-end": {
            "place-content": "end"
          },
          ".place-content-between": {
            "place-content": "space-between"
          },
          ".place-content-around": {
            "place-content": "space-around"
          },
          ".place-content-evenly": {
            "place-content": "space-evenly"
          },
          ".place-content-baseline": {
            "place-content": "baseline"
          },
          ".place-content-stretch": {
            "place-content": "stretch"
          }
        });
      },
      placeItems: ({ addUtilities: S3 }) => {
        S3({
          ".place-items-start": {
            "place-items": "start"
          },
          ".place-items-end": {
            "place-items": "end"
          },
          ".place-items-center": {
            "place-items": "center"
          },
          ".place-items-baseline": {
            "place-items": "baseline"
          },
          ".place-items-stretch": {
            "place-items": "stretch"
          }
        });
      },
      alignContent: ({ addUtilities: S3 }) => {
        S3({
          ".content-normal": {
            "align-content": "normal"
          },
          ".content-center": {
            "align-content": "center"
          },
          ".content-start": {
            "align-content": "flex-start"
          },
          ".content-end": {
            "align-content": "flex-end"
          },
          ".content-between": {
            "align-content": "space-between"
          },
          ".content-around": {
            "align-content": "space-around"
          },
          ".content-evenly": {
            "align-content": "space-evenly"
          },
          ".content-baseline": {
            "align-content": "baseline"
          },
          ".content-stretch": {
            "align-content": "stretch"
          }
        });
      },
      alignItems: ({ addUtilities: S3 }) => {
        S3({
          ".items-start": {
            "align-items": "flex-start"
          },
          ".items-end": {
            "align-items": "flex-end"
          },
          ".items-center": {
            "align-items": "center"
          },
          ".items-baseline": {
            "align-items": "baseline"
          },
          ".items-stretch": {
            "align-items": "stretch"
          }
        });
      },
      justifyContent: ({ addUtilities: S3 }) => {
        S3({
          ".justify-normal": {
            "justify-content": "normal"
          },
          ".justify-start": {
            "justify-content": "flex-start"
          },
          ".justify-end": {
            "justify-content": "flex-end"
          },
          ".justify-center": {
            "justify-content": "center"
          },
          ".justify-between": {
            "justify-content": "space-between"
          },
          ".justify-around": {
            "justify-content": "space-around"
          },
          ".justify-evenly": {
            "justify-content": "space-evenly"
          },
          ".justify-stretch": {
            "justify-content": "stretch"
          }
        });
      },
      justifyItems: ({ addUtilities: S3 }) => {
        S3({
          ".justify-items-start": {
            "justify-items": "start"
          },
          ".justify-items-end": {
            "justify-items": "end"
          },
          ".justify-items-center": {
            "justify-items": "center"
          },
          ".justify-items-stretch": {
            "justify-items": "stretch"
          }
        });
      },
      gap: (0, f.default)("gap", [
        [
          "gap",
          [
            "gap"
          ]
        ],
        [
          [
            "gap-x",
            [
              "columnGap"
            ]
          ],
          [
            "gap-y",
            [
              "rowGap"
            ]
          ]
        ]
      ]),
      space: ({ matchUtilities: S3, addUtilities: P3, theme: C }) => {
        S3({
          "space-x": (R3) => (R3 = R3 === "0" ? "0px" : R3, {
            "& > :not([hidden]) ~ :not([hidden])": {
              "--tw-space-x-reverse": "0",
              "margin-right": `calc(${R3} * var(--tw-space-x-reverse))`,
              "margin-left": `calc(${R3} * calc(1 - var(--tw-space-x-reverse)))`
            }
          }),
          "space-y": (R3) => (R3 = R3 === "0" ? "0px" : R3, {
            "& > :not([hidden]) ~ :not([hidden])": {
              "--tw-space-y-reverse": "0",
              "margin-top": `calc(${R3} * calc(1 - var(--tw-space-y-reverse)))`,
              "margin-bottom": `calc(${R3} * var(--tw-space-y-reverse))`
            }
          })
        }, {
          values: C("space"),
          supportsNegativeValues: true
        }), P3({
          ".space-y-reverse > :not([hidden]) ~ :not([hidden])": {
            "--tw-space-y-reverse": "1"
          },
          ".space-x-reverse > :not([hidden]) ~ :not([hidden])": {
            "--tw-space-x-reverse": "1"
          }
        });
      },
      divideWidth: ({ matchUtilities: S3, addUtilities: P3, theme: C }) => {
        S3({
          "divide-x": (R3) => (R3 = R3 === "0" ? "0px" : R3, {
            "& > :not([hidden]) ~ :not([hidden])": {
              "@defaults border-width": {},
              "--tw-divide-x-reverse": "0",
              "border-right-width": `calc(${R3} * var(--tw-divide-x-reverse))`,
              "border-left-width": `calc(${R3} * calc(1 - var(--tw-divide-x-reverse)))`
            }
          }),
          "divide-y": (R3) => (R3 = R3 === "0" ? "0px" : R3, {
            "& > :not([hidden]) ~ :not([hidden])": {
              "@defaults border-width": {},
              "--tw-divide-y-reverse": "0",
              "border-top-width": `calc(${R3} * calc(1 - var(--tw-divide-y-reverse)))`,
              "border-bottom-width": `calc(${R3} * var(--tw-divide-y-reverse))`
            }
          })
        }, {
          values: C("divideWidth"),
          type: [
            "line-width",
            "length",
            "any"
          ]
        }), P3({
          ".divide-y-reverse > :not([hidden]) ~ :not([hidden])": {
            "@defaults border-width": {},
            "--tw-divide-y-reverse": "1"
          },
          ".divide-x-reverse > :not([hidden]) ~ :not([hidden])": {
            "@defaults border-width": {},
            "--tw-divide-x-reverse": "1"
          }
        });
      },
      divideStyle: ({ addUtilities: S3 }) => {
        S3({
          ".divide-solid > :not([hidden]) ~ :not([hidden])": {
            "border-style": "solid"
          },
          ".divide-dashed > :not([hidden]) ~ :not([hidden])": {
            "border-style": "dashed"
          },
          ".divide-dotted > :not([hidden]) ~ :not([hidden])": {
            "border-style": "dotted"
          },
          ".divide-double > :not([hidden]) ~ :not([hidden])": {
            "border-style": "double"
          },
          ".divide-none > :not([hidden]) ~ :not([hidden])": {
            "border-style": "none"
          }
        });
      },
      divideColor: ({ matchUtilities: S3, theme: P3, corePlugins: C }) => {
        S3({
          divide: (R3) => C("divideOpacity") ? {
            "& > :not([hidden]) ~ :not([hidden])": (0, r2.default)({
              color: R3,
              property: "border-color",
              variable: "--tw-divide-opacity"
            })
          } : {
            "& > :not([hidden]) ~ :not([hidden])": {
              "border-color": (0, i.default)(R3)
            }
          }
        }, {
          values: (({ DEFAULT: R3, ...$2 }) => $2)((0, e2.default)(P3("divideColor"))),
          type: [
            "color",
            "any"
          ]
        });
      },
      divideOpacity: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "divide-opacity": (C) => ({
            "& > :not([hidden]) ~ :not([hidden])": {
              "--tw-divide-opacity": C
            }
          })
        }, {
          values: P3("divideOpacity")
        });
      },
      placeSelf: ({ addUtilities: S3 }) => {
        S3({
          ".place-self-auto": {
            "place-self": "auto"
          },
          ".place-self-start": {
            "place-self": "start"
          },
          ".place-self-end": {
            "place-self": "end"
          },
          ".place-self-center": {
            "place-self": "center"
          },
          ".place-self-stretch": {
            "place-self": "stretch"
          }
        });
      },
      alignSelf: ({ addUtilities: S3 }) => {
        S3({
          ".self-auto": {
            "align-self": "auto"
          },
          ".self-start": {
            "align-self": "flex-start"
          },
          ".self-end": {
            "align-self": "flex-end"
          },
          ".self-center": {
            "align-self": "center"
          },
          ".self-stretch": {
            "align-self": "stretch"
          },
          ".self-baseline": {
            "align-self": "baseline"
          }
        });
      },
      justifySelf: ({ addUtilities: S3 }) => {
        S3({
          ".justify-self-auto": {
            "justify-self": "auto"
          },
          ".justify-self-start": {
            "justify-self": "start"
          },
          ".justify-self-end": {
            "justify-self": "end"
          },
          ".justify-self-center": {
            "justify-self": "center"
          },
          ".justify-self-stretch": {
            "justify-self": "stretch"
          }
        });
      },
      overflow: ({ addUtilities: S3 }) => {
        S3({
          ".overflow-auto": {
            overflow: "auto"
          },
          ".overflow-hidden": {
            overflow: "hidden"
          },
          ".overflow-clip": {
            overflow: "clip"
          },
          ".overflow-visible": {
            overflow: "visible"
          },
          ".overflow-scroll": {
            overflow: "scroll"
          },
          ".overflow-x-auto": {
            "overflow-x": "auto"
          },
          ".overflow-y-auto": {
            "overflow-y": "auto"
          },
          ".overflow-x-hidden": {
            "overflow-x": "hidden"
          },
          ".overflow-y-hidden": {
            "overflow-y": "hidden"
          },
          ".overflow-x-clip": {
            "overflow-x": "clip"
          },
          ".overflow-y-clip": {
            "overflow-y": "clip"
          },
          ".overflow-x-visible": {
            "overflow-x": "visible"
          },
          ".overflow-y-visible": {
            "overflow-y": "visible"
          },
          ".overflow-x-scroll": {
            "overflow-x": "scroll"
          },
          ".overflow-y-scroll": {
            "overflow-y": "scroll"
          }
        });
      },
      overscrollBehavior: ({ addUtilities: S3 }) => {
        S3({
          ".overscroll-auto": {
            "overscroll-behavior": "auto"
          },
          ".overscroll-contain": {
            "overscroll-behavior": "contain"
          },
          ".overscroll-none": {
            "overscroll-behavior": "none"
          },
          ".overscroll-y-auto": {
            "overscroll-behavior-y": "auto"
          },
          ".overscroll-y-contain": {
            "overscroll-behavior-y": "contain"
          },
          ".overscroll-y-none": {
            "overscroll-behavior-y": "none"
          },
          ".overscroll-x-auto": {
            "overscroll-behavior-x": "auto"
          },
          ".overscroll-x-contain": {
            "overscroll-behavior-x": "contain"
          },
          ".overscroll-x-none": {
            "overscroll-behavior-x": "none"
          }
        });
      },
      scrollBehavior: ({ addUtilities: S3 }) => {
        S3({
          ".scroll-auto": {
            "scroll-behavior": "auto"
          },
          ".scroll-smooth": {
            "scroll-behavior": "smooth"
          }
        });
      },
      textOverflow: ({ addUtilities: S3 }) => {
        S3({
          ".truncate": {
            overflow: "hidden",
            "text-overflow": "ellipsis",
            "white-space": "nowrap"
          },
          ".overflow-ellipsis": {
            "text-overflow": "ellipsis"
          },
          ".text-ellipsis": {
            "text-overflow": "ellipsis"
          },
          ".text-clip": {
            "text-overflow": "clip"
          }
        });
      },
      hyphens: ({ addUtilities: S3 }) => {
        S3({
          ".hyphens-none": {
            hyphens: "none"
          },
          ".hyphens-manual": {
            hyphens: "manual"
          },
          ".hyphens-auto": {
            hyphens: "auto"
          }
        });
      },
      whitespace: ({ addUtilities: S3 }) => {
        S3({
          ".whitespace-normal": {
            "white-space": "normal"
          },
          ".whitespace-nowrap": {
            "white-space": "nowrap"
          },
          ".whitespace-pre": {
            "white-space": "pre"
          },
          ".whitespace-pre-line": {
            "white-space": "pre-line"
          },
          ".whitespace-pre-wrap": {
            "white-space": "pre-wrap"
          },
          ".whitespace-break-spaces": {
            "white-space": "break-spaces"
          }
        });
      },
      textWrap: ({ addUtilities: S3 }) => {
        S3({
          ".text-wrap": {
            "text-wrap": "wrap"
          },
          ".text-nowrap": {
            "text-wrap": "nowrap"
          },
          ".text-balance": {
            "text-wrap": "balance"
          },
          ".text-pretty": {
            "text-wrap": "pretty"
          }
        });
      },
      wordBreak: ({ addUtilities: S3 }) => {
        S3({
          ".break-normal": {
            "overflow-wrap": "normal",
            "word-break": "normal"
          },
          ".break-words": {
            "overflow-wrap": "break-word"
          },
          ".break-all": {
            "word-break": "break-all"
          },
          ".break-keep": {
            "word-break": "keep-all"
          }
        });
      },
      borderRadius: (0, f.default)("borderRadius", [
        [
          "rounded",
          [
            "border-radius"
          ]
        ],
        [
          [
            "rounded-s",
            [
              "border-start-start-radius",
              "border-end-start-radius"
            ]
          ],
          [
            "rounded-e",
            [
              "border-start-end-radius",
              "border-end-end-radius"
            ]
          ],
          [
            "rounded-t",
            [
              "border-top-left-radius",
              "border-top-right-radius"
            ]
          ],
          [
            "rounded-r",
            [
              "border-top-right-radius",
              "border-bottom-right-radius"
            ]
          ],
          [
            "rounded-b",
            [
              "border-bottom-right-radius",
              "border-bottom-left-radius"
            ]
          ],
          [
            "rounded-l",
            [
              "border-top-left-radius",
              "border-bottom-left-radius"
            ]
          ]
        ],
        [
          [
            "rounded-ss",
            [
              "border-start-start-radius"
            ]
          ],
          [
            "rounded-se",
            [
              "border-start-end-radius"
            ]
          ],
          [
            "rounded-ee",
            [
              "border-end-end-radius"
            ]
          ],
          [
            "rounded-es",
            [
              "border-end-start-radius"
            ]
          ],
          [
            "rounded-tl",
            [
              "border-top-left-radius"
            ]
          ],
          [
            "rounded-tr",
            [
              "border-top-right-radius"
            ]
          ],
          [
            "rounded-br",
            [
              "border-bottom-right-radius"
            ]
          ],
          [
            "rounded-bl",
            [
              "border-bottom-left-radius"
            ]
          ]
        ]
      ]),
      borderWidth: (0, f.default)("borderWidth", [
        [
          "border",
          [
            [
              "@defaults border-width",
              {}
            ],
            "border-width"
          ]
        ],
        [
          [
            "border-x",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-left-width",
              "border-right-width"
            ]
          ],
          [
            "border-y",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-top-width",
              "border-bottom-width"
            ]
          ]
        ],
        [
          [
            "border-s",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-inline-start-width"
            ]
          ],
          [
            "border-e",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-inline-end-width"
            ]
          ],
          [
            "border-t",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-top-width"
            ]
          ],
          [
            "border-r",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-right-width"
            ]
          ],
          [
            "border-b",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-bottom-width"
            ]
          ],
          [
            "border-l",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-left-width"
            ]
          ]
        ]
      ], {
        type: [
          "line-width",
          "length"
        ]
      }),
      borderStyle: ({ addUtilities: S3 }) => {
        S3({
          ".border-solid": {
            "border-style": "solid"
          },
          ".border-dashed": {
            "border-style": "dashed"
          },
          ".border-dotted": {
            "border-style": "dotted"
          },
          ".border-double": {
            "border-style": "double"
          },
          ".border-hidden": {
            "border-style": "hidden"
          },
          ".border-none": {
            "border-style": "none"
          }
        });
      },
      borderColor: ({ matchUtilities: S3, theme: P3, corePlugins: C }) => {
        S3({
          border: (R3) => C("borderOpacity") ? (0, r2.default)({
            color: R3,
            property: "border-color",
            variable: "--tw-border-opacity"
          }) : {
            "border-color": (0, i.default)(R3)
          }
        }, {
          values: (({ DEFAULT: R3, ...$2 }) => $2)((0, e2.default)(P3("borderColor"))),
          type: [
            "color",
            "any"
          ]
        }), S3({
          "border-x": (R3) => C("borderOpacity") ? (0, r2.default)({
            color: R3,
            property: [
              "border-left-color",
              "border-right-color"
            ],
            variable: "--tw-border-opacity"
          }) : {
            "border-left-color": (0, i.default)(R3),
            "border-right-color": (0, i.default)(R3)
          },
          "border-y": (R3) => C("borderOpacity") ? (0, r2.default)({
            color: R3,
            property: [
              "border-top-color",
              "border-bottom-color"
            ],
            variable: "--tw-border-opacity"
          }) : {
            "border-top-color": (0, i.default)(R3),
            "border-bottom-color": (0, i.default)(R3)
          }
        }, {
          values: (({ DEFAULT: R3, ...$2 }) => $2)((0, e2.default)(P3("borderColor"))),
          type: [
            "color",
            "any"
          ]
        }), S3({
          "border-s": (R3) => C("borderOpacity") ? (0, r2.default)({
            color: R3,
            property: "border-inline-start-color",
            variable: "--tw-border-opacity"
          }) : {
            "border-inline-start-color": (0, i.default)(R3)
          },
          "border-e": (R3) => C("borderOpacity") ? (0, r2.default)({
            color: R3,
            property: "border-inline-end-color",
            variable: "--tw-border-opacity"
          }) : {
            "border-inline-end-color": (0, i.default)(R3)
          },
          "border-t": (R3) => C("borderOpacity") ? (0, r2.default)({
            color: R3,
            property: "border-top-color",
            variable: "--tw-border-opacity"
          }) : {
            "border-top-color": (0, i.default)(R3)
          },
          "border-r": (R3) => C("borderOpacity") ? (0, r2.default)({
            color: R3,
            property: "border-right-color",
            variable: "--tw-border-opacity"
          }) : {
            "border-right-color": (0, i.default)(R3)
          },
          "border-b": (R3) => C("borderOpacity") ? (0, r2.default)({
            color: R3,
            property: "border-bottom-color",
            variable: "--tw-border-opacity"
          }) : {
            "border-bottom-color": (0, i.default)(R3)
          },
          "border-l": (R3) => C("borderOpacity") ? (0, r2.default)({
            color: R3,
            property: "border-left-color",
            variable: "--tw-border-opacity"
          }) : {
            "border-left-color": (0, i.default)(R3)
          }
        }, {
          values: (({ DEFAULT: R3, ...$2 }) => $2)((0, e2.default)(P3("borderColor"))),
          type: [
            "color",
            "any"
          ]
        });
      },
      borderOpacity: (0, f.default)("borderOpacity", [
        [
          "border-opacity",
          [
            "--tw-border-opacity"
          ]
        ]
      ]),
      backgroundColor: ({ matchUtilities: S3, theme: P3, corePlugins: C }) => {
        S3({
          bg: (R3) => C("backgroundOpacity") ? (0, r2.default)({
            color: R3,
            property: "background-color",
            variable: "--tw-bg-opacity"
          }) : {
            "background-color": (0, i.default)(R3)
          }
        }, {
          values: (0, e2.default)(P3("backgroundColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      backgroundOpacity: (0, f.default)("backgroundOpacity", [
        [
          "bg-opacity",
          [
            "--tw-bg-opacity"
          ]
        ]
      ]),
      backgroundImage: (0, f.default)("backgroundImage", [
        [
          "bg",
          [
            "background-image"
          ]
        ]
      ], {
        type: [
          "lookup",
          "image",
          "url"
        ]
      }),
      gradientColorStops: /* @__PURE__ */ (() => {
        function S3(P3) {
          return (0, r2.withAlphaValue)(P3, 0, "rgb(255 255 255 / 0)");
        }
        return function({ matchUtilities: P3, theme: C, addDefaults: R3 }) {
          R3("gradient-color-stops", {
            "--tw-gradient-from-position": " ",
            "--tw-gradient-via-position": " ",
            "--tw-gradient-to-position": " "
          });
          let $2 = {
            values: (0, e2.default)(C("gradientColorStops")),
            type: [
              "color",
              "any"
            ]
          }, B3 = {
            values: C("gradientColorStopPositions"),
            type: [
              "length",
              "percentage"
            ]
          };
          P3({
            from: (z3) => {
              let L3 = S3(z3);
              return {
                "@defaults gradient-color-stops": {},
                "--tw-gradient-from": `${(0, i.default)(z3)} var(--tw-gradient-from-position)`,
                "--tw-gradient-to": `${L3} var(--tw-gradient-to-position)`,
                "--tw-gradient-stops": "var(--tw-gradient-from), var(--tw-gradient-to)"
              };
            }
          }, $2), P3({
            from: (z3) => ({
              "--tw-gradient-from-position": z3
            })
          }, B3), P3({
            via: (z3) => {
              let L3 = S3(z3);
              return {
                "@defaults gradient-color-stops": {},
                "--tw-gradient-to": `${L3}  var(--tw-gradient-to-position)`,
                "--tw-gradient-stops": `var(--tw-gradient-from), ${(0, i.default)(z3)} var(--tw-gradient-via-position), var(--tw-gradient-to)`
              };
            }
          }, $2), P3({
            via: (z3) => ({
              "--tw-gradient-via-position": z3
            })
          }, B3), P3({
            to: (z3) => ({
              "@defaults gradient-color-stops": {},
              "--tw-gradient-to": `${(0, i.default)(z3)} var(--tw-gradient-to-position)`
            })
          }, $2), P3({
            to: (z3) => ({
              "--tw-gradient-to-position": z3
            })
          }, B3);
        };
      })(),
      boxDecorationBreak: ({ addUtilities: S3 }) => {
        S3({
          ".decoration-slice": {
            "box-decoration-break": "slice"
          },
          ".decoration-clone": {
            "box-decoration-break": "clone"
          },
          ".box-decoration-slice": {
            "box-decoration-break": "slice"
          },
          ".box-decoration-clone": {
            "box-decoration-break": "clone"
          }
        });
      },
      backgroundSize: (0, f.default)("backgroundSize", [
        [
          "bg",
          [
            "background-size"
          ]
        ]
      ], {
        type: [
          "lookup",
          "length",
          "percentage",
          "size"
        ]
      }),
      backgroundAttachment: ({ addUtilities: S3 }) => {
        S3({
          ".bg-fixed": {
            "background-attachment": "fixed"
          },
          ".bg-local": {
            "background-attachment": "local"
          },
          ".bg-scroll": {
            "background-attachment": "scroll"
          }
        });
      },
      backgroundClip: ({ addUtilities: S3 }) => {
        S3({
          ".bg-clip-border": {
            "background-clip": "border-box"
          },
          ".bg-clip-padding": {
            "background-clip": "padding-box"
          },
          ".bg-clip-content": {
            "background-clip": "content-box"
          },
          ".bg-clip-text": {
            "background-clip": "text"
          }
        });
      },
      backgroundPosition: (0, f.default)("backgroundPosition", [
        [
          "bg",
          [
            "background-position"
          ]
        ]
      ], {
        type: [
          "lookup",
          [
            "position",
            {
              preferOnConflict: true
            }
          ]
        ]
      }),
      backgroundRepeat: ({ addUtilities: S3 }) => {
        S3({
          ".bg-repeat": {
            "background-repeat": "repeat"
          },
          ".bg-no-repeat": {
            "background-repeat": "no-repeat"
          },
          ".bg-repeat-x": {
            "background-repeat": "repeat-x"
          },
          ".bg-repeat-y": {
            "background-repeat": "repeat-y"
          },
          ".bg-repeat-round": {
            "background-repeat": "round"
          },
          ".bg-repeat-space": {
            "background-repeat": "space"
          }
        });
      },
      backgroundOrigin: ({ addUtilities: S3 }) => {
        S3({
          ".bg-origin-border": {
            "background-origin": "border-box"
          },
          ".bg-origin-padding": {
            "background-origin": "padding-box"
          },
          ".bg-origin-content": {
            "background-origin": "content-box"
          }
        });
      },
      fill: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          fill: (C) => ({
            fill: (0, i.default)(C)
          })
        }, {
          values: (0, e2.default)(P3("fill")),
          type: [
            "color",
            "any"
          ]
        });
      },
      stroke: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          stroke: (C) => ({
            stroke: (0, i.default)(C)
          })
        }, {
          values: (0, e2.default)(P3("stroke")),
          type: [
            "color",
            "url",
            "any"
          ]
        });
      },
      strokeWidth: (0, f.default)("strokeWidth", [
        [
          "stroke",
          [
            "stroke-width"
          ]
        ]
      ], {
        type: [
          "length",
          "number",
          "percentage"
        ]
      }),
      objectFit: ({ addUtilities: S3 }) => {
        S3({
          ".object-contain": {
            "object-fit": "contain"
          },
          ".object-cover": {
            "object-fit": "cover"
          },
          ".object-fill": {
            "object-fit": "fill"
          },
          ".object-none": {
            "object-fit": "none"
          },
          ".object-scale-down": {
            "object-fit": "scale-down"
          }
        });
      },
      objectPosition: (0, f.default)("objectPosition", [
        [
          "object",
          [
            "object-position"
          ]
        ]
      ]),
      padding: (0, f.default)("padding", [
        [
          "p",
          [
            "padding"
          ]
        ],
        [
          [
            "px",
            [
              "padding-left",
              "padding-right"
            ]
          ],
          [
            "py",
            [
              "padding-top",
              "padding-bottom"
            ]
          ]
        ],
        [
          [
            "ps",
            [
              "padding-inline-start"
            ]
          ],
          [
            "pe",
            [
              "padding-inline-end"
            ]
          ],
          [
            "pt",
            [
              "padding-top"
            ]
          ],
          [
            "pr",
            [
              "padding-right"
            ]
          ],
          [
            "pb",
            [
              "padding-bottom"
            ]
          ],
          [
            "pl",
            [
              "padding-left"
            ]
          ]
        ]
      ]),
      textAlign: ({ addUtilities: S3 }) => {
        S3({
          ".text-left": {
            "text-align": "left"
          },
          ".text-center": {
            "text-align": "center"
          },
          ".text-right": {
            "text-align": "right"
          },
          ".text-justify": {
            "text-align": "justify"
          },
          ".text-start": {
            "text-align": "start"
          },
          ".text-end": {
            "text-align": "end"
          }
        });
      },
      textIndent: (0, f.default)("textIndent", [
        [
          "indent",
          [
            "text-indent"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      verticalAlign: ({ addUtilities: S3, matchUtilities: P3 }) => {
        S3({
          ".align-baseline": {
            "vertical-align": "baseline"
          },
          ".align-top": {
            "vertical-align": "top"
          },
          ".align-middle": {
            "vertical-align": "middle"
          },
          ".align-bottom": {
            "vertical-align": "bottom"
          },
          ".align-text-top": {
            "vertical-align": "text-top"
          },
          ".align-text-bottom": {
            "vertical-align": "text-bottom"
          },
          ".align-sub": {
            "vertical-align": "sub"
          },
          ".align-super": {
            "vertical-align": "super"
          }
        }), P3({
          align: (C) => ({
            "vertical-align": C
          })
        });
      },
      fontFamily: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          font: (C) => {
            let [R3, $2 = {}] = Array.isArray(C) && (0, o2.default)(C[1]) ? C : [
              C
            ], { fontFeatureSettings: B3, fontVariationSettings: z3 } = $2;
            return {
              "font-family": Array.isArray(R3) ? R3.join(", ") : R3,
              ...B3 === undefined ? {} : {
                "font-feature-settings": B3
              },
              ...z3 === undefined ? {} : {
                "font-variation-settings": z3
              }
            };
          }
        }, {
          values: P3("fontFamily"),
          type: [
            "lookup",
            "generic-name",
            "family-name"
          ]
        });
      },
      fontSize: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          text: (C, { modifier: R3 }) => {
            let [$2, B3] = Array.isArray(C) ? C : [
              C
            ];
            if (R3)
              return {
                "font-size": $2,
                "line-height": R3
              };
            let { lineHeight: z3, letterSpacing: L3, fontWeight: F } = (0, o2.default)(B3) ? B3 : {
              lineHeight: B3
            };
            return {
              "font-size": $2,
              ...z3 === undefined ? {} : {
                "line-height": z3
              },
              ...L3 === undefined ? {} : {
                "letter-spacing": L3
              },
              ...F === undefined ? {} : {
                "font-weight": F
              }
            };
          }
        }, {
          values: P3("fontSize"),
          modifiers: P3("lineHeight"),
          type: [
            "absolute-size",
            "relative-size",
            "length",
            "percentage"
          ]
        });
      },
      fontWeight: (0, f.default)("fontWeight", [
        [
          "font",
          [
            "fontWeight"
          ]
        ]
      ], {
        type: [
          "lookup",
          "number",
          "any"
        ]
      }),
      textTransform: ({ addUtilities: S3 }) => {
        S3({
          ".uppercase": {
            "text-transform": "uppercase"
          },
          ".lowercase": {
            "text-transform": "lowercase"
          },
          ".capitalize": {
            "text-transform": "capitalize"
          },
          ".normal-case": {
            "text-transform": "none"
          }
        });
      },
      fontStyle: ({ addUtilities: S3 }) => {
        S3({
          ".italic": {
            "font-style": "italic"
          },
          ".not-italic": {
            "font-style": "normal"
          }
        });
      },
      fontVariantNumeric: ({ addDefaults: S3, addUtilities: P3 }) => {
        let C = "var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)";
        S3("font-variant-numeric", {
          "--tw-ordinal": " ",
          "--tw-slashed-zero": " ",
          "--tw-numeric-figure": " ",
          "--tw-numeric-spacing": " ",
          "--tw-numeric-fraction": " "
        }), P3({
          ".normal-nums": {
            "font-variant-numeric": "normal"
          },
          ".ordinal": {
            "@defaults font-variant-numeric": {},
            "--tw-ordinal": "ordinal",
            "font-variant-numeric": C
          },
          ".slashed-zero": {
            "@defaults font-variant-numeric": {},
            "--tw-slashed-zero": "slashed-zero",
            "font-variant-numeric": C
          },
          ".lining-nums": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-figure": "lining-nums",
            "font-variant-numeric": C
          },
          ".oldstyle-nums": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-figure": "oldstyle-nums",
            "font-variant-numeric": C
          },
          ".proportional-nums": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-spacing": "proportional-nums",
            "font-variant-numeric": C
          },
          ".tabular-nums": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-spacing": "tabular-nums",
            "font-variant-numeric": C
          },
          ".diagonal-fractions": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-fraction": "diagonal-fractions",
            "font-variant-numeric": C
          },
          ".stacked-fractions": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-fraction": "stacked-fractions",
            "font-variant-numeric": C
          }
        });
      },
      lineHeight: (0, f.default)("lineHeight", [
        [
          "leading",
          [
            "lineHeight"
          ]
        ]
      ]),
      letterSpacing: (0, f.default)("letterSpacing", [
        [
          "tracking",
          [
            "letterSpacing"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      textColor: ({ matchUtilities: S3, theme: P3, corePlugins: C }) => {
        S3({
          text: (R3) => C("textOpacity") ? (0, r2.default)({
            color: R3,
            property: "color",
            variable: "--tw-text-opacity"
          }) : {
            color: (0, i.default)(R3)
          }
        }, {
          values: (0, e2.default)(P3("textColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      textOpacity: (0, f.default)("textOpacity", [
        [
          "text-opacity",
          [
            "--tw-text-opacity"
          ]
        ]
      ]),
      textDecoration: ({ addUtilities: S3 }) => {
        S3({
          ".underline": {
            "text-decoration-line": "underline"
          },
          ".overline": {
            "text-decoration-line": "overline"
          },
          ".line-through": {
            "text-decoration-line": "line-through"
          },
          ".no-underline": {
            "text-decoration-line": "none"
          }
        });
      },
      textDecorationColor: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          decoration: (C) => ({
            "text-decoration-color": (0, i.default)(C)
          })
        }, {
          values: (0, e2.default)(P3("textDecorationColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      textDecorationStyle: ({ addUtilities: S3 }) => {
        S3({
          ".decoration-solid": {
            "text-decoration-style": "solid"
          },
          ".decoration-double": {
            "text-decoration-style": "double"
          },
          ".decoration-dotted": {
            "text-decoration-style": "dotted"
          },
          ".decoration-dashed": {
            "text-decoration-style": "dashed"
          },
          ".decoration-wavy": {
            "text-decoration-style": "wavy"
          }
        });
      },
      textDecorationThickness: (0, f.default)("textDecorationThickness", [
        [
          "decoration",
          [
            "text-decoration-thickness"
          ]
        ]
      ], {
        type: [
          "length",
          "percentage"
        ]
      }),
      textUnderlineOffset: (0, f.default)("textUnderlineOffset", [
        [
          "underline-offset",
          [
            "text-underline-offset"
          ]
        ]
      ], {
        type: [
          "length",
          "percentage",
          "any"
        ]
      }),
      fontSmoothing: ({ addUtilities: S3 }) => {
        S3({
          ".antialiased": {
            "-webkit-font-smoothing": "antialiased",
            "-moz-osx-font-smoothing": "grayscale"
          },
          ".subpixel-antialiased": {
            "-webkit-font-smoothing": "auto",
            "-moz-osx-font-smoothing": "auto"
          }
        });
      },
      placeholderColor: ({ matchUtilities: S3, theme: P3, corePlugins: C }) => {
        S3({
          placeholder: (R3) => C("placeholderOpacity") ? {
            "&::placeholder": (0, r2.default)({
              color: R3,
              property: "color",
              variable: "--tw-placeholder-opacity"
            })
          } : {
            "&::placeholder": {
              color: (0, i.default)(R3)
            }
          }
        }, {
          values: (0, e2.default)(P3("placeholderColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      placeholderOpacity: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "placeholder-opacity": (C) => ({
            "&::placeholder": {
              "--tw-placeholder-opacity": C
            }
          })
        }, {
          values: P3("placeholderOpacity")
        });
      },
      caretColor: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          caret: (C) => ({
            "caret-color": (0, i.default)(C)
          })
        }, {
          values: (0, e2.default)(P3("caretColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      accentColor: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          accent: (C) => ({
            "accent-color": (0, i.default)(C)
          })
        }, {
          values: (0, e2.default)(P3("accentColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      opacity: (0, f.default)("opacity", [
        [
          "opacity",
          [
            "opacity"
          ]
        ]
      ]),
      backgroundBlendMode: ({ addUtilities: S3 }) => {
        S3({
          ".bg-blend-normal": {
            "background-blend-mode": "normal"
          },
          ".bg-blend-multiply": {
            "background-blend-mode": "multiply"
          },
          ".bg-blend-screen": {
            "background-blend-mode": "screen"
          },
          ".bg-blend-overlay": {
            "background-blend-mode": "overlay"
          },
          ".bg-blend-darken": {
            "background-blend-mode": "darken"
          },
          ".bg-blend-lighten": {
            "background-blend-mode": "lighten"
          },
          ".bg-blend-color-dodge": {
            "background-blend-mode": "color-dodge"
          },
          ".bg-blend-color-burn": {
            "background-blend-mode": "color-burn"
          },
          ".bg-blend-hard-light": {
            "background-blend-mode": "hard-light"
          },
          ".bg-blend-soft-light": {
            "background-blend-mode": "soft-light"
          },
          ".bg-blend-difference": {
            "background-blend-mode": "difference"
          },
          ".bg-blend-exclusion": {
            "background-blend-mode": "exclusion"
          },
          ".bg-blend-hue": {
            "background-blend-mode": "hue"
          },
          ".bg-blend-saturation": {
            "background-blend-mode": "saturation"
          },
          ".bg-blend-color": {
            "background-blend-mode": "color"
          },
          ".bg-blend-luminosity": {
            "background-blend-mode": "luminosity"
          }
        });
      },
      mixBlendMode: ({ addUtilities: S3 }) => {
        S3({
          ".mix-blend-normal": {
            "mix-blend-mode": "normal"
          },
          ".mix-blend-multiply": {
            "mix-blend-mode": "multiply"
          },
          ".mix-blend-screen": {
            "mix-blend-mode": "screen"
          },
          ".mix-blend-overlay": {
            "mix-blend-mode": "overlay"
          },
          ".mix-blend-darken": {
            "mix-blend-mode": "darken"
          },
          ".mix-blend-lighten": {
            "mix-blend-mode": "lighten"
          },
          ".mix-blend-color-dodge": {
            "mix-blend-mode": "color-dodge"
          },
          ".mix-blend-color-burn": {
            "mix-blend-mode": "color-burn"
          },
          ".mix-blend-hard-light": {
            "mix-blend-mode": "hard-light"
          },
          ".mix-blend-soft-light": {
            "mix-blend-mode": "soft-light"
          },
          ".mix-blend-difference": {
            "mix-blend-mode": "difference"
          },
          ".mix-blend-exclusion": {
            "mix-blend-mode": "exclusion"
          },
          ".mix-blend-hue": {
            "mix-blend-mode": "hue"
          },
          ".mix-blend-saturation": {
            "mix-blend-mode": "saturation"
          },
          ".mix-blend-color": {
            "mix-blend-mode": "color"
          },
          ".mix-blend-luminosity": {
            "mix-blend-mode": "luminosity"
          },
          ".mix-blend-plus-darker": {
            "mix-blend-mode": "plus-darker"
          },
          ".mix-blend-plus-lighter": {
            "mix-blend-mode": "plus-lighter"
          }
        });
      },
      boxShadow: (() => {
        let S3 = (0, v3.default)("boxShadow"), P3 = [
          "var(--tw-ring-offset-shadow, 0 0 #0000)",
          "var(--tw-ring-shadow, 0 0 #0000)",
          "var(--tw-shadow)"
        ].join(", ");
        return function({ matchUtilities: C, addDefaults: R3, theme: $2 }) {
          R3("box-shadow", {
            "--tw-ring-offset-shadow": "0 0 #0000",
            "--tw-ring-shadow": "0 0 #0000",
            "--tw-shadow": "0 0 #0000",
            "--tw-shadow-colored": "0 0 #0000"
          }), C({
            shadow: (B3) => {
              B3 = S3(B3);
              let z3 = (0, _3.parseBoxShadowValue)(B3);
              for (let L3 of z3)
                L3.valid && (L3.color = "var(--tw-shadow-color)");
              return {
                "@defaults box-shadow": {},
                "--tw-shadow": B3 === "none" ? "0 0 #0000" : B3,
                "--tw-shadow-colored": B3 === "none" ? "0 0 #0000" : (0, _3.formatBoxShadowValue)(z3),
                "box-shadow": P3
              };
            }
          }, {
            values: $2("boxShadow"),
            type: [
              "shadow"
            ]
          });
        };
      })(),
      boxShadowColor: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          shadow: (C) => ({
            "--tw-shadow-color": (0, i.default)(C),
            "--tw-shadow": "var(--tw-shadow-colored)"
          })
        }, {
          values: (0, e2.default)(P3("boxShadowColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      outlineStyle: ({ addUtilities: S3 }) => {
        S3({
          ".outline-none": {
            outline: "2px solid transparent",
            "outline-offset": "2px"
          },
          ".outline": {
            "outline-style": "solid"
          },
          ".outline-dashed": {
            "outline-style": "dashed"
          },
          ".outline-dotted": {
            "outline-style": "dotted"
          },
          ".outline-double": {
            "outline-style": "double"
          }
        });
      },
      outlineWidth: (0, f.default)("outlineWidth", [
        [
          "outline",
          [
            "outline-width"
          ]
        ]
      ], {
        type: [
          "length",
          "number",
          "percentage"
        ]
      }),
      outlineOffset: (0, f.default)("outlineOffset", [
        [
          "outline-offset",
          [
            "outline-offset"
          ]
        ]
      ], {
        type: [
          "length",
          "number",
          "percentage",
          "any"
        ],
        supportsNegativeValues: true
      }),
      outlineColor: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          outline: (C) => ({
            "outline-color": (0, i.default)(C)
          })
        }, {
          values: (0, e2.default)(P3("outlineColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      ringWidth: ({ matchUtilities: S3, addDefaults: P3, addUtilities: C, theme: R3, config: $2 }) => {
        let B3 = (() => {
          var z3, L3;
          if ((0, y2.flagEnabled)($2(), "respectDefaultRingColorOpacity"))
            return R3("ringColor.DEFAULT");
          let F = R3("ringOpacity.DEFAULT", "0.5");
          return !((z3 = R3("ringColor")) === null || z3 === undefined) && z3.DEFAULT ? (0, r2.withAlphaValue)((L3 = R3("ringColor")) === null || L3 === undefined ? undefined : L3.DEFAULT, F, `rgb(147 197 253 / ${F})`) : `rgb(147 197 253 / ${F})`;
        })();
        P3("ring-width", {
          "--tw-ring-inset": " ",
          "--tw-ring-offset-width": R3("ringOffsetWidth.DEFAULT", "0px"),
          "--tw-ring-offset-color": R3("ringOffsetColor.DEFAULT", "#fff"),
          "--tw-ring-color": B3,
          "--tw-ring-offset-shadow": "0 0 #0000",
          "--tw-ring-shadow": "0 0 #0000",
          "--tw-shadow": "0 0 #0000",
          "--tw-shadow-colored": "0 0 #0000"
        }), S3({
          ring: (z3) => ({
            "@defaults ring-width": {},
            "--tw-ring-offset-shadow": "var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)",
            "--tw-ring-shadow": `var(--tw-ring-inset) 0 0 0 calc(${z3} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,
            "box-shadow": [
              "var(--tw-ring-offset-shadow)",
              "var(--tw-ring-shadow)",
              "var(--tw-shadow, 0 0 #0000)"
            ].join(", ")
          })
        }, {
          values: R3("ringWidth"),
          type: "length"
        }), C({
          ".ring-inset": {
            "@defaults ring-width": {},
            "--tw-ring-inset": "inset"
          }
        });
      },
      ringColor: ({ matchUtilities: S3, theme: P3, corePlugins: C }) => {
        S3({
          ring: (R3) => C("ringOpacity") ? (0, r2.default)({
            color: R3,
            property: "--tw-ring-color",
            variable: "--tw-ring-opacity"
          }) : {
            "--tw-ring-color": (0, i.default)(R3)
          }
        }, {
          values: Object.fromEntries(Object.entries((0, e2.default)(P3("ringColor"))).filter(([R3]) => R3 !== "DEFAULT")),
          type: [
            "color",
            "any"
          ]
        });
      },
      ringOpacity: (S3) => {
        let { config: P3 } = S3;
        return (0, f.default)("ringOpacity", [
          [
            "ring-opacity",
            [
              "--tw-ring-opacity"
            ]
          ]
        ], {
          filterDefault: !(0, y2.flagEnabled)(P3(), "respectDefaultRingColorOpacity")
        })(S3);
      },
      ringOffsetWidth: (0, f.default)("ringOffsetWidth", [
        [
          "ring-offset",
          [
            "--tw-ring-offset-width"
          ]
        ]
      ], {
        type: "length"
      }),
      ringOffsetColor: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "ring-offset": (C) => ({
            "--tw-ring-offset-color": (0, i.default)(C)
          })
        }, {
          values: (0, e2.default)(P3("ringOffsetColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      blur: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          blur: (C) => ({
            "--tw-blur": C.trim() === "" ? " " : `blur(${C})`,
            "@defaults filter": {},
            filter: q2
          })
        }, {
          values: P3("blur")
        });
      },
      brightness: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          brightness: (C) => ({
            "--tw-brightness": `brightness(${C})`,
            "@defaults filter": {},
            filter: q2
          })
        }, {
          values: P3("brightness")
        });
      },
      contrast: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          contrast: (C) => ({
            "--tw-contrast": `contrast(${C})`,
            "@defaults filter": {},
            filter: q2
          })
        }, {
          values: P3("contrast")
        });
      },
      dropShadow: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "drop-shadow": (C) => ({
            "--tw-drop-shadow": Array.isArray(C) ? C.map((R3) => `drop-shadow(${R3})`).join(" ") : `drop-shadow(${C})`,
            "@defaults filter": {},
            filter: q2
          })
        }, {
          values: P3("dropShadow")
        });
      },
      grayscale: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          grayscale: (C) => ({
            "--tw-grayscale": `grayscale(${C})`,
            "@defaults filter": {},
            filter: q2
          })
        }, {
          values: P3("grayscale")
        });
      },
      hueRotate: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "hue-rotate": (C) => ({
            "--tw-hue-rotate": `hue-rotate(${C})`,
            "@defaults filter": {},
            filter: q2
          })
        }, {
          values: P3("hueRotate"),
          supportsNegativeValues: true
        });
      },
      invert: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          invert: (C) => ({
            "--tw-invert": `invert(${C})`,
            "@defaults filter": {},
            filter: q2
          })
        }, {
          values: P3("invert")
        });
      },
      saturate: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          saturate: (C) => ({
            "--tw-saturate": `saturate(${C})`,
            "@defaults filter": {},
            filter: q2
          })
        }, {
          values: P3("saturate")
        });
      },
      sepia: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          sepia: (C) => ({
            "--tw-sepia": `sepia(${C})`,
            "@defaults filter": {},
            filter: q2
          })
        }, {
          values: P3("sepia")
        });
      },
      filter: ({ addDefaults: S3, addUtilities: P3 }) => {
        S3("filter", {
          "--tw-blur": " ",
          "--tw-brightness": " ",
          "--tw-contrast": " ",
          "--tw-grayscale": " ",
          "--tw-hue-rotate": " ",
          "--tw-invert": " ",
          "--tw-saturate": " ",
          "--tw-sepia": " ",
          "--tw-drop-shadow": " "
        }), P3({
          ".filter": {
            "@defaults filter": {},
            filter: q2
          },
          ".filter-none": {
            filter: "none"
          }
        });
      },
      backdropBlur: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "backdrop-blur": (C) => ({
            "--tw-backdrop-blur": C.trim() === "" ? " " : `blur(${C})`,
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          })
        }, {
          values: P3("backdropBlur")
        });
      },
      backdropBrightness: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "backdrop-brightness": (C) => ({
            "--tw-backdrop-brightness": `brightness(${C})`,
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          })
        }, {
          values: P3("backdropBrightness")
        });
      },
      backdropContrast: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "backdrop-contrast": (C) => ({
            "--tw-backdrop-contrast": `contrast(${C})`,
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          })
        }, {
          values: P3("backdropContrast")
        });
      },
      backdropGrayscale: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "backdrop-grayscale": (C) => ({
            "--tw-backdrop-grayscale": `grayscale(${C})`,
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          })
        }, {
          values: P3("backdropGrayscale")
        });
      },
      backdropHueRotate: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "backdrop-hue-rotate": (C) => ({
            "--tw-backdrop-hue-rotate": `hue-rotate(${C})`,
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          })
        }, {
          values: P3("backdropHueRotate"),
          supportsNegativeValues: true
        });
      },
      backdropInvert: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "backdrop-invert": (C) => ({
            "--tw-backdrop-invert": `invert(${C})`,
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          })
        }, {
          values: P3("backdropInvert")
        });
      },
      backdropOpacity: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "backdrop-opacity": (C) => ({
            "--tw-backdrop-opacity": `opacity(${C})`,
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          })
        }, {
          values: P3("backdropOpacity")
        });
      },
      backdropSaturate: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "backdrop-saturate": (C) => ({
            "--tw-backdrop-saturate": `saturate(${C})`,
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          })
        }, {
          values: P3("backdropSaturate")
        });
      },
      backdropSepia: ({ matchUtilities: S3, theme: P3 }) => {
        S3({
          "backdrop-sepia": (C) => ({
            "--tw-backdrop-sepia": `sepia(${C})`,
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          })
        }, {
          values: P3("backdropSepia")
        });
      },
      backdropFilter: ({ addDefaults: S3, addUtilities: P3 }) => {
        S3("backdrop-filter", {
          "--tw-backdrop-blur": " ",
          "--tw-backdrop-brightness": " ",
          "--tw-backdrop-contrast": " ",
          "--tw-backdrop-grayscale": " ",
          "--tw-backdrop-hue-rotate": " ",
          "--tw-backdrop-invert": " ",
          "--tw-backdrop-opacity": " ",
          "--tw-backdrop-saturate": " ",
          "--tw-backdrop-sepia": " "
        }), P3({
          ".backdrop-filter": {
            "@defaults backdrop-filter": {},
            "-webkit-backdrop-filter": M2,
            "backdrop-filter": M2
          },
          ".backdrop-filter-none": {
            "-webkit-backdrop-filter": "none",
            "backdrop-filter": "none"
          }
        });
      },
      transitionProperty: ({ matchUtilities: S3, theme: P3 }) => {
        let C = P3("transitionTimingFunction.DEFAULT"), R3 = P3("transitionDuration.DEFAULT");
        S3({
          transition: ($2) => ({
            "transition-property": $2,
            ...$2 === "none" ? {} : {
              "transition-timing-function": C,
              "transition-duration": R3
            }
          })
        }, {
          values: P3("transitionProperty")
        });
      },
      transitionDelay: (0, f.default)("transitionDelay", [
        [
          "delay",
          [
            "transitionDelay"
          ]
        ]
      ]),
      transitionDuration: (0, f.default)("transitionDuration", [
        [
          "duration",
          [
            "transitionDuration"
          ]
        ]
      ], {
        filterDefault: true
      }),
      transitionTimingFunction: (0, f.default)("transitionTimingFunction", [
        [
          "ease",
          [
            "transitionTimingFunction"
          ]
        ]
      ], {
        filterDefault: true
      }),
      willChange: (0, f.default)("willChange", [
        [
          "will-change",
          [
            "will-change"
          ]
        ]
      ]),
      contain: ({ addDefaults: S3, addUtilities: P3 }) => {
        let C = "var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style)";
        S3("contain", {
          "--tw-contain-size": " ",
          "--tw-contain-layout": " ",
          "--tw-contain-paint": " ",
          "--tw-contain-style": " "
        }), P3({
          ".contain-none": {
            contain: "none"
          },
          ".contain-content": {
            contain: "content"
          },
          ".contain-strict": {
            contain: "strict"
          },
          ".contain-size": {
            "@defaults contain": {},
            "--tw-contain-size": "size",
            contain: C
          },
          ".contain-inline-size": {
            "@defaults contain": {},
            "--tw-contain-size": "inline-size",
            contain: C
          },
          ".contain-layout": {
            "@defaults contain": {},
            "--tw-contain-layout": "layout",
            contain: C
          },
          ".contain-paint": {
            "@defaults contain": {},
            "--tw-contain-paint": "paint",
            contain: C
          },
          ".contain-style": {
            "@defaults contain": {},
            "--tw-contain-style": "style",
            contain: C
          }
        });
      },
      content: (0, f.default)("content", [
        [
          "content",
          [
            "--tw-content",
            [
              "content",
              "var(--tw-content)"
            ]
          ]
        ]
      ]),
      forcedColorAdjust: ({ addUtilities: S3 }) => {
        S3({
          ".forced-color-adjust-auto": {
            "forced-color-adjust": "auto"
          },
          ".forced-color-adjust-none": {
            "forced-color-adjust": "none"
          }
        });
      }
    };
  }(Kn3)), Kn3;
}
var ni3 = {};
var No2;
function au3() {
  return No2 || (No2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return l2;
      }
    });
    let a = /* @__PURE__ */ new Map([
      [
        "{",
        "}"
      ],
      [
        "[",
        "]"
      ],
      [
        "(",
        ")"
      ]
    ]), h2 = new Map(Array.from(a.entries()).map(([f, s2]) => [
      s2,
      f
    ])), p = /* @__PURE__ */ new Set([
      '"',
      "'",
      "`"
    ]);
    function l2(f) {
      let s2 = [], c2 = false;
      for (let t8 = 0;t8 < f.length; t8++) {
        let e2 = f[t8];
        if (e2 === ":" && !c2 && s2.length === 0)
          return false;
        if (p.has(e2) && f[t8 - 1] !== "\\" && (c2 = !c2), !c2 && f[t8 - 1] !== "\\") {
          if (a.has(e2))
            s2.push(e2);
          else if (h2.has(e2)) {
            let r2 = h2.get(e2);
            if (s2.length <= 0 || s2.pop() !== r2)
              return false;
          }
        }
      }
      return !(s2.length > 0);
    }
  }(ni3)), ni3;
}
var ii2 = {};
var Fo2;
function Mf() {
  return Fo2 || (Fo2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "hasContentChanged", {
      enumerable: true,
      get: function() {
        return c2;
      }
    });
    const a = /* @__PURE__ */ p(Ne3), h2 = /* @__PURE__ */ f(yr3());
    function p(t8) {
      return t8 && t8.__esModule ? t8 : {
        default: t8
      };
    }
    function l2(t8) {
      if (typeof WeakMap != "function")
        return null;
      var e2 = /* @__PURE__ */ new WeakMap, r2 = /* @__PURE__ */ new WeakMap;
      return (l2 = function(i) {
        return i ? r2 : e2;
      })(t8);
    }
    function f(t8, e2) {
      if (t8 && t8.__esModule)
        return t8;
      if (t8 === null || typeof t8 != "object" && typeof t8 != "function")
        return {
          default: t8
        };
      var r2 = l2(e2);
      if (r2 && r2.has(t8))
        return r2.get(t8);
      var i = {}, o2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var v3 in t8)
        if (v3 !== "default" && Object.prototype.hasOwnProperty.call(t8, v3)) {
          var m = o2 ? Object.getOwnPropertyDescriptor(t8, v3) : null;
          m && (m.get || m.set) ? Object.defineProperty(i, v3, m) : i[v3] = t8[v3];
        }
      return i.default = t8, r2 && r2.set(t8, i), i;
    }
    function s2(t8) {
      try {
        return a.default.createHash("md5").update(t8, "utf-8").digest("binary");
      } catch {
        return "";
      }
    }
    function c2(t8, e2) {
      let r2 = e2.toString();
      if (!r2.includes("@tailwind"))
        return false;
      let i = h2.sourceHashMap.get(t8), o2 = s2(r2), v3 = i !== o2;
      return h2.sourceHashMap.set(t8, o2), v3;
    }
  }(ii2)), ii2;
}
var ai = {};
var si2 = {};
var $o3;
function Df() {
  return $o3 || ($o3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2) {
      return (h2 > 0n) - (h2 < 0n);
    }
  }(si2)), si2;
}
var oi = {};
var Uo3;
function qf() {
  return Uo3 || (Uo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "remapBitfield", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2, p) {
      let l2 = 0n, f = 0n;
      for (let [s2, c2] of p)
        h2 & s2 && (l2 = l2 | s2, f = f | c2);
      return h2 & ~l2 | f;
    }
  }(oi)), oi;
}
var zo3;
function Lf() {
  return zo3 || (zo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "Offsets", {
      enumerable: true,
      get: function() {
        return l2;
      }
    });
    const a = /* @__PURE__ */ p(Df()), h2 = qf();
    function p(c2) {
      return c2 && c2.__esModule ? c2 : {
        default: c2
      };
    }

    class l2 {
      constructor() {
        this.offsets = {
          defaults: 0n,
          base: 0n,
          components: 0n,
          utilities: 0n,
          variants: 0n,
          user: 0n
        }, this.layerPositions = {
          defaults: 0n,
          base: 1n,
          components: 2n,
          utilities: 3n,
          user: 4n,
          variants: 5n
        }, this.reservedVariantBits = 0n, this.variantOffsets = /* @__PURE__ */ new Map;
      }
      create(t8) {
        return {
          layer: t8,
          parentLayer: t8,
          arbitrary: 0n,
          variants: 0n,
          parallelIndex: 0n,
          index: this.offsets[t8]++,
          propertyOffset: 0n,
          property: "",
          options: []
        };
      }
      arbitraryProperty(t8) {
        return {
          ...this.create("utilities"),
          arbitrary: 1n,
          property: t8
        };
      }
      forVariant(t8, e2 = 0) {
        let r2 = this.variantOffsets.get(t8);
        if (r2 === undefined)
          throw new Error(`Cannot find offset for unknown variant ${t8}`);
        return {
          ...this.create("variants"),
          variants: r2 << BigInt(e2)
        };
      }
      applyVariantOffset(t8, e2, r2) {
        return r2.variant = e2.variants, {
          ...t8,
          layer: "variants",
          parentLayer: t8.layer === "variants" ? t8.parentLayer : t8.layer,
          variants: t8.variants | e2.variants,
          options: r2.sort ? [].concat(r2, t8.options) : t8.options,
          parallelIndex: f([
            t8.parallelIndex,
            e2.parallelIndex
          ])
        };
      }
      applyParallelOffset(t8, e2) {
        return {
          ...t8,
          parallelIndex: BigInt(e2)
        };
      }
      recordVariants(t8, e2) {
        for (let r2 of t8)
          this.recordVariant(r2, e2(r2));
      }
      recordVariant(t8, e2 = 1) {
        return this.variantOffsets.set(t8, 1n << this.reservedVariantBits), this.reservedVariantBits += BigInt(e2), {
          ...this.create("variants"),
          variants: this.variantOffsets.get(t8)
        };
      }
      compare(t8, e2) {
        if (t8.layer !== e2.layer)
          return this.layerPositions[t8.layer] - this.layerPositions[e2.layer];
        if (t8.parentLayer !== e2.parentLayer)
          return this.layerPositions[t8.parentLayer] - this.layerPositions[e2.parentLayer];
        for (let i of t8.options)
          for (let o2 of e2.options) {
            if (i.id !== o2.id || !i.sort || !o2.sort)
              continue;
            var r2;
            let v3 = (r2 = f([
              i.variant,
              o2.variant
            ])) !== null && r2 !== undefined ? r2 : 0n, m = ~(v3 | v3 - 1n), n2 = t8.variants & m, d2 = e2.variants & m;
            if (n2 !== d2)
              continue;
            let _3 = i.sort({
              value: i.value,
              modifier: i.modifier
            }, {
              value: o2.value,
              modifier: o2.modifier
            });
            if (_3 !== 0)
              return _3;
          }
        return t8.variants !== e2.variants ? t8.variants - e2.variants : t8.parallelIndex !== e2.parallelIndex ? t8.parallelIndex - e2.parallelIndex : t8.arbitrary !== e2.arbitrary ? t8.arbitrary - e2.arbitrary : t8.propertyOffset !== e2.propertyOffset ? t8.propertyOffset - e2.propertyOffset : t8.index - e2.index;
      }
      recalculateVariantOffsets() {
        let t8 = Array.from(this.variantOffsets.entries()).filter(([i]) => i.startsWith("[")).sort(([i], [o2]) => s2(i, o2)), e2 = t8.map(([, i]) => i).sort((i, o2) => (0, a.default)(i - o2));
        return t8.map(([, i], o2) => [
          i,
          e2[o2]
        ]).filter(([i, o2]) => i !== o2);
      }
      remapArbitraryVariantOffsets(t8) {
        let e2 = this.recalculateVariantOffsets();
        return e2.length === 0 ? t8 : t8.map((r2) => {
          let [i, o2] = r2;
          return i = {
            ...i,
            variants: (0, h2.remapBitfield)(i.variants, e2)
          }, [
            i,
            o2
          ];
        });
      }
      sortArbitraryProperties(t8) {
        let e2 = /* @__PURE__ */ new Set;
        for (let [v3] of t8)
          v3.arbitrary === 1n && e2.add(v3.property);
        if (e2.size === 0)
          return t8;
        let r2 = Array.from(e2).sort(), i = /* @__PURE__ */ new Map, o2 = 1n;
        for (let v3 of r2)
          i.set(v3, o2++);
        return t8.map((v3) => {
          let [m, n2] = v3;
          var d2;
          return m = {
            ...m,
            propertyOffset: (d2 = i.get(m.property)) !== null && d2 !== undefined ? d2 : 0n
          }, [
            m,
            n2
          ];
        });
      }
      sort(t8) {
        return t8 = this.remapArbitraryVariantOffsets(t8), t8 = this.sortArbitraryProperties(t8), t8.sort(([e2], [r2]) => (0, a.default)(this.compare(e2, r2)));
      }
    }
    function f(c2) {
      let t8 = null;
      for (const e2 of c2)
        t8 = t8 ?? e2, t8 = t8 > e2 ? t8 : e2;
      return t8;
    }
    function s2(c2, t8) {
      let e2 = c2.length, r2 = t8.length, i = e2 < r2 ? e2 : r2;
      for (let o2 = 0;o2 < i; o2++) {
        let v3 = c2.charCodeAt(o2) - t8.charCodeAt(o2);
        if (v3 !== 0)
          return v3;
      }
      return e2 - r2;
    }
  }(ai)), ai;
}
var Wo3;
function Ki2() {
  return Wo3 || (Wo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(Y3, G3) {
      for (var te2 in G3)
        Object.defineProperty(Y3, te2, {
          enumerable: true,
          get: G3[te2]
        });
    }
    a(u, {
      INTERNAL_FEATURES: function() {
        return M2;
      },
      isValidVariantFormatString: function() {
        return I3;
      },
      parseVariant: function() {
        return N3;
      },
      getFileModifiedMap: function() {
        return U2;
      },
      createContext: function() {
        return de3;
      },
      getContext: function() {
        return ke3;
      }
    });
    const h2 = /* @__PURE__ */ b3(Ne3), p = /* @__PURE__ */ b3(Ne3), l2 = /* @__PURE__ */ b3(Be2()), f = /* @__PURE__ */ b3(Nl()), s2 = /* @__PURE__ */ b3(Ke3()), c2 = /* @__PURE__ */ b3(pr3()), t8 = /* @__PURE__ */ b3(tu3()), e2 = /* @__PURE__ */ b3(Hi2()), r2 = /* @__PURE__ */ b3(ut3()), i = /* @__PURE__ */ b3(ft3()), o2 = /* @__PURE__ */ q2(nu3()), v3 = gr3(), m = If(), n2 = /* @__PURE__ */ q2(yr3()), d2 = Wi2(), _3 = /* @__PURE__ */ b3(tt3()), w3 = /* @__PURE__ */ b3(ji2()), y2 = /* @__PURE__ */ b3(au3()), x = wr3(), g2 = Mf(), O3 = Lf(), A = it3(), E2 = ru3();
    function b3(Y3) {
      return Y3 && Y3.__esModule ? Y3 : {
        default: Y3
      };
    }
    function k3(Y3) {
      if (typeof WeakMap != "function")
        return null;
      var G3 = /* @__PURE__ */ new WeakMap, te2 = /* @__PURE__ */ new WeakMap;
      return (k3 = function(Z3) {
        return Z3 ? te2 : G3;
      })(Y3);
    }
    function q2(Y3, G3) {
      if (Y3 && Y3.__esModule)
        return Y3;
      if (Y3 === null || typeof Y3 != "object" && typeof Y3 != "function")
        return {
          default: Y3
        };
      var te2 = k3(G3);
      if (te2 && te2.has(Y3))
        return te2.get(Y3);
      var Z3 = {}, ee3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var se3 in Y3)
        if (se3 !== "default" && Object.prototype.hasOwnProperty.call(Y3, se3)) {
          var ue = ee3 ? Object.getOwnPropertyDescriptor(Y3, se3) : null;
          ue && (ue.get || ue.set) ? Object.defineProperty(Z3, se3, ue) : Z3[se3] = Y3[se3];
        }
      return Z3.default = Y3, te2 && te2.set(Y3, Z3), Z3;
    }
    const M2 = Symbol(), W3 = {
      MatchVariant: Symbol.for("MATCH_VARIANT")
    }, S3 = {
      Base: 1,
      Dynamic: 2
    };
    function P3(Y3, G3) {
      let te2 = Y3.tailwindConfig.prefix;
      return typeof te2 == "function" ? te2(G3) : te2 + G3;
    }
    function C({ type: Y3 = "any", ...G3 }) {
      let te2 = [].concat(Y3);
      return {
        ...G3,
        types: te2.map((Z3) => Array.isArray(Z3) ? {
          type: Z3[0],
          ...Z3[1]
        } : {
          type: Z3,
          preferOnConflict: false
        })
      };
    }
    function R3(Y3) {
      let G3 = [], te2 = "", Z3 = 0;
      for (let ee3 = 0;ee3 < Y3.length; ee3++) {
        let se3 = Y3[ee3];
        if (se3 === "\\")
          te2 += "\\" + Y3[++ee3];
        else if (se3 === "{")
          ++Z3, G3.push(te2.trim()), te2 = "";
        else if (se3 === "}") {
          if (--Z3 < 0)
            throw new Error("Your { and } are unbalanced.");
          G3.push(te2.trim()), te2 = "";
        } else
          te2 += se3;
      }
      return te2.length > 0 && G3.push(te2.trim()), G3 = G3.filter((ee3) => ee3 !== ""), G3;
    }
    function $2(Y3, G3, { before: te2 = [] } = {}) {
      if (te2 = [].concat(te2), te2.length <= 0) {
        Y3.push(G3);
        return;
      }
      let Z3 = Y3.length - 1;
      for (let ee3 of te2) {
        let se3 = Y3.indexOf(ee3);
        se3 !== -1 && (Z3 = Math.min(Z3, se3));
      }
      Y3.splice(Z3, 0, G3);
    }
    function B3(Y3) {
      return Array.isArray(Y3) ? Y3.flatMap((G3) => !Array.isArray(G3) && !(0, r2.default)(G3) ? G3 : (0, t8.default)(G3)) : B3([
        Y3
      ]);
    }
    function z3(Y3, G3) {
      return (0, s2.default)((Z3) => {
        let ee3 = [];
        return G3 && G3(Z3), Z3.walkClasses((se3) => {
          ee3.push(se3.value);
        }), ee3;
      }).transformSync(Y3);
    }
    function L3(Y3) {
      Y3.walkPseudos((G3) => {
        G3.value === ":not" && G3.remove();
      });
    }
    function F(Y3, G3 = {
      containsNonOnDemandable: false
    }, te2 = 0) {
      let Z3 = [], ee3 = [];
      Y3.type === "rule" ? ee3.push(...Y3.selectors) : Y3.type === "atrule" && Y3.walkRules((se3) => ee3.push(...se3.selectors));
      for (let se3 of ee3) {
        let ue = z3(se3, L3);
        ue.length === 0 && (G3.containsNonOnDemandable = true);
        for (let xe3 of ue)
          Z3.push(xe3);
      }
      return te2 === 0 ? [
        G3.containsNonOnDemandable || Z3.length === 0,
        Z3
      ] : Z3;
    }
    function D(Y3) {
      return B3(Y3).flatMap((G3) => {
        let te2 = /* @__PURE__ */ new Map, [Z3, ee3] = F(G3);
        return Z3 && ee3.unshift(n2.NOT_ON_DEMAND), ee3.map((se3) => (te2.has(G3) || te2.set(G3, G3), [
          se3,
          te2.get(G3)
        ]));
      });
    }
    function I3(Y3) {
      return Y3.startsWith("@") || Y3.includes("&");
    }
    function N3(Y3) {
      Y3 = Y3.replace(/\n+/g, "").replace(/\s{1,}/g, " ").trim();
      let G3 = R3(Y3).map((te2) => {
        if (!te2.startsWith("@"))
          return ({ format: ue }) => ue(te2);
        let [, Z3, ee3] = /@(\S*)( .+|[({].*)?/g.exec(te2);
        var se3;
        return ({ wrap: ue }) => ue(l2.default.atRule({
          name: Z3,
          params: (se3 = ee3 == null ? undefined : ee3.trim()) !== null && se3 !== undefined ? se3 : ""
        }));
      }).reverse();
      return (te2) => {
        for (let Z3 of G3)
          Z3(te2);
      };
    }
    function J3(Y3, G3, { variantList: te2, variantMap: Z3, offsets: ee3, classList: se3 }) {
      function ue(ae3, re3) {
        return ae3 ? (0, f.default)(Y3, ae3, re3) : Y3;
      }
      function xe3(ae3) {
        return (0, e2.default)(Y3.prefix, ae3);
      }
      function ce3(ae3, re3) {
        return ae3 === n2.NOT_ON_DEMAND ? n2.NOT_ON_DEMAND : re3.respectPrefix ? G3.tailwindConfig.prefix + ae3 : ae3;
      }
      function Te3(ae3, re3, fe3 = {}) {
        let we3 = (0, d2.toPath)(ae3), ye2 = ue([
          "theme",
          ...we3
        ], re3);
        return (0, c2.default)(we3[0])(ye2, fe3);
      }
      let ve3 = 0, Ae3 = {
        postcss: l2.default,
        prefix: xe3,
        e: i.default,
        config: ue,
        theme: Te3,
        corePlugins: (ae3) => Array.isArray(Y3.corePlugins) ? Y3.corePlugins.includes(ae3) : ue([
          "corePlugins",
          ae3
        ], true),
        variants: () => [],
        addBase(ae3) {
          for (let [re3, fe3] of D(ae3)) {
            let we3 = ce3(re3, {}), ye2 = ee3.create("base");
            G3.candidateRuleMap.has(we3) || G3.candidateRuleMap.set(we3, []), G3.candidateRuleMap.get(we3).push([
              {
                sort: ye2,
                layer: "base"
              },
              fe3
            ]);
          }
        },
        addDefaults(ae3, re3) {
          const fe3 = {
            [`@defaults ${ae3}`]: re3
          };
          for (let [we3, ye2] of D(fe3)) {
            let he3 = ce3(we3, {});
            G3.candidateRuleMap.has(he3) || G3.candidateRuleMap.set(he3, []), G3.candidateRuleMap.get(he3).push([
              {
                sort: ee3.create("defaults"),
                layer: "defaults"
              },
              ye2
            ]);
          }
        },
        addComponents(ae3, re3) {
          re3 = Object.assign({}, {
            preserveSource: false,
            respectPrefix: true,
            respectImportant: false
          }, Array.isArray(re3) ? {} : re3);
          for (let [we3, ye2] of D(ae3)) {
            let he3 = ce3(we3, re3);
            se3.add(he3), G3.candidateRuleMap.has(he3) || G3.candidateRuleMap.set(he3, []), G3.candidateRuleMap.get(he3).push([
              {
                sort: ee3.create("components"),
                layer: "components",
                options: re3
              },
              ye2
            ]);
          }
        },
        addUtilities(ae3, re3) {
          re3 = Object.assign({}, {
            preserveSource: false,
            respectPrefix: true,
            respectImportant: true
          }, Array.isArray(re3) ? {} : re3);
          for (let [we3, ye2] of D(ae3)) {
            let he3 = ce3(we3, re3);
            se3.add(he3), G3.candidateRuleMap.has(he3) || G3.candidateRuleMap.set(he3, []), G3.candidateRuleMap.get(he3).push([
              {
                sort: ee3.create("utilities"),
                layer: "utilities",
                options: re3
              },
              ye2
            ]);
          }
        },
        matchUtilities: function(ae3, re3) {
          re3 = C({
            ...{
              respectPrefix: true,
              respectImportant: true,
              modifiers: false
            },
            ...re3
          });
          let we3 = ee3.create("utilities");
          for (let ye2 in ae3) {
            let qe3 = function(Se3, { isOnlyPlugin: me3 }) {
              let [pe3, Oe3, Ue3] = (0, v3.coerceValue)(re3.types, Se3, re3, Y3);
              if (pe3 === undefined)
                return [];
              if (!re3.types.some(({ type: We2 }) => We2 === Oe3))
                if (me3)
                  _3.default.warn([
                    `Unnecessary typehint \`${Oe3}\` in \`${ye2}-${Se3}\`.`,
                    `You can safely update it to \`${ye2}-${Se3.replace(Oe3 + ":", "")}\`.`
                  ]);
                else
                  return [];
              if (!(0, y2.default)(pe3))
                return [];
              let Xe3 = {
                get modifier() {
                  return re3.modifiers || _3.default.warn(`modifier-used-without-options-for-${ye2}`, [
                    "Your plugin must set `modifiers: true` in its options to support modifiers."
                  ]), Ue3;
                }
              }, ze3 = (0, A.flagEnabled)(Y3, "generalizedModifiers");
              return [].concat(ze3 ? Ce3(pe3, Xe3) : Ce3(pe3)).filter(Boolean).map((We2) => ({
                [(0, o2.default)(ye2, Se3)]: We2
              }));
            }, he3 = ce3(ye2, re3), Ce3 = ae3[ye2];
            se3.add([
              he3,
              re3
            ]);
            let ge3 = [
              {
                sort: we3,
                layer: "utilities",
                options: re3
              },
              qe3
            ];
            G3.candidateRuleMap.has(he3) || G3.candidateRuleMap.set(he3, []), G3.candidateRuleMap.get(he3).push(ge3);
          }
        },
        matchComponents: function(ae3, re3) {
          re3 = C({
            ...{
              respectPrefix: true,
              respectImportant: false,
              modifiers: false
            },
            ...re3
          });
          let we3 = ee3.create("components");
          for (let ye2 in ae3) {
            let qe3 = function(Se3, { isOnlyPlugin: me3 }) {
              let [pe3, Oe3, Ue3] = (0, v3.coerceValue)(re3.types, Se3, re3, Y3);
              if (pe3 === undefined)
                return [];
              if (!re3.types.some(({ type: We2 }) => We2 === Oe3))
                if (me3)
                  _3.default.warn([
                    `Unnecessary typehint \`${Oe3}\` in \`${ye2}-${Se3}\`.`,
                    `You can safely update it to \`${ye2}-${Se3.replace(Oe3 + ":", "")}\`.`
                  ]);
                else
                  return [];
              if (!(0, y2.default)(pe3))
                return [];
              let Xe3 = {
                get modifier() {
                  return re3.modifiers || _3.default.warn(`modifier-used-without-options-for-${ye2}`, [
                    "Your plugin must set `modifiers: true` in its options to support modifiers."
                  ]), Ue3;
                }
              }, ze3 = (0, A.flagEnabled)(Y3, "generalizedModifiers");
              return [].concat(ze3 ? Ce3(pe3, Xe3) : Ce3(pe3)).filter(Boolean).map((We2) => ({
                [(0, o2.default)(ye2, Se3)]: We2
              }));
            }, he3 = ce3(ye2, re3), Ce3 = ae3[ye2];
            se3.add([
              he3,
              re3
            ]);
            let ge3 = [
              {
                sort: we3,
                layer: "components",
                options: re3
              },
              qe3
            ];
            G3.candidateRuleMap.has(he3) || G3.candidateRuleMap.set(he3, []), G3.candidateRuleMap.get(he3).push(ge3);
          }
        },
        addVariant(ae3, re3, fe3 = {}) {
          re3 = [].concat(re3).map((we3) => {
            if (typeof we3 != "string")
              return (ye2 = {}) => {
                let { args: he3, modifySelectors: Ce3, container: qe3, separator: ge3, wrap: Se3, format: me3 } = ye2, pe3 = we3(Object.assign({
                  modifySelectors: Ce3,
                  container: qe3,
                  separator: ge3
                }, fe3.type === W3.MatchVariant && {
                  args: he3,
                  wrap: Se3,
                  format: me3
                }));
                if (typeof pe3 == "string" && !I3(pe3))
                  throw new Error(`Your custom variant \`${ae3}\` has an invalid format string. Make sure it's an at-rule or contains a \`&\` placeholder.`);
                return Array.isArray(pe3) ? pe3.filter((Oe3) => typeof Oe3 == "string").map((Oe3) => N3(Oe3)) : pe3 && typeof pe3 == "string" && N3(pe3)(ye2);
              };
            if (!I3(we3))
              throw new Error(`Your custom variant \`${ae3}\` has an invalid format string. Make sure it's an at-rule or contains a \`&\` placeholder.`);
            return N3(we3);
          }), $2(te2, ae3, fe3), Z3.set(ae3, re3), G3.variantOptions.set(ae3, fe3);
        },
        matchVariant(ae3, re3, fe3) {
          var we3;
          let ye2 = (we3 = fe3 == null ? undefined : fe3.id) !== null && we3 !== undefined ? we3 : ++ve3, he3 = ae3 === "@", Ce3 = (0, A.flagEnabled)(Y3, "generalizedModifiers");
          var qe3;
          for (let [me3, pe3] of Object.entries((qe3 = fe3 == null ? undefined : fe3.values) !== null && qe3 !== undefined ? qe3 : {}))
            me3 !== "DEFAULT" && Ae3.addVariant(he3 ? `${ae3}${me3}` : `${ae3}-${me3}`, ({ args: Oe3, container: Ue3 }) => re3(pe3, Ce3 ? {
              modifier: Oe3 == null ? undefined : Oe3.modifier,
              container: Ue3
            } : {
              container: Ue3
            }), {
              ...fe3,
              value: pe3,
              id: ye2,
              type: W3.MatchVariant,
              variantInfo: S3.Base
            });
          var ge3;
          let Se3 = "DEFAULT" in ((ge3 = fe3 == null ? undefined : fe3.values) !== null && ge3 !== undefined ? ge3 : {});
          Ae3.addVariant(ae3, ({ args: me3, container: pe3 }) => {
            if ((me3 == null ? undefined : me3.value) === n2.NONE && !Se3)
              return null;
            var Oe3;
            return re3((me3 == null ? undefined : me3.value) === n2.NONE ? fe3.values.DEFAULT : (Oe3 = me3 == null ? undefined : me3.value) !== null && Oe3 !== undefined ? Oe3 : typeof me3 == "string" ? me3 : "", Ce3 ? {
              modifier: me3 == null ? undefined : me3.modifier,
              container: pe3
            } : {
              container: pe3
            });
          }, {
            ...fe3,
            id: ye2,
            type: W3.MatchVariant,
            variantInfo: S3.Dynamic
          });
        }
      };
      return Ae3;
    }
    let T3 = /* @__PURE__ */ new WeakMap;
    function U2(Y3) {
      return T3.has(Y3) || T3.set(Y3, /* @__PURE__ */ new Map), T3.get(Y3);
    }
    function j3(Y3, G3) {
      let te2 = false, Z3 = /* @__PURE__ */ new Map;
      for (let se3 of Y3) {
        var ee3;
        if (!se3)
          continue;
        let ue = p.default.parse(se3), xe3 = ue.hash ? ue.href.replace(ue.hash, "") : ue.href;
        xe3 = ue.search ? xe3.replace(ue.search, "") : xe3;
        let ce3 = (ee3 = h2.default.statSync(decodeURIComponent(xe3), {
          throwIfNoEntry: false
        })) === null || ee3 === undefined ? undefined : ee3.mtimeMs;
        ce3 && ((!G3.has(se3) || ce3 > G3.get(se3)) && (te2 = true), Z3.set(se3, ce3));
      }
      return [
        te2,
        Z3
      ];
    }
    function H3(Y3) {
      Y3.walkAtRules((G3) => {
        [
          "responsive",
          "variants"
        ].includes(G3.name) && (H3(G3), G3.before(G3.nodes), G3.remove());
      });
    }
    function V4(Y3) {
      let G3 = [];
      return Y3.each((te2) => {
        te2.type === "atrule" && [
          "responsive",
          "variants"
        ].includes(te2.name) && (te2.name = "layer", te2.params = "utilities");
      }), Y3.walkAtRules("layer", (te2) => {
        if (H3(te2), te2.params === "base") {
          for (let Z3 of te2.nodes)
            G3.push(function({ addBase: ee3 }) {
              ee3(Z3, {
                respectPrefix: false
              });
            });
          te2.remove();
        } else if (te2.params === "components") {
          for (let Z3 of te2.nodes)
            G3.push(function({ addComponents: ee3 }) {
              ee3(Z3, {
                respectPrefix: false,
                preserveSource: true
              });
            });
          te2.remove();
        } else if (te2.params === "utilities") {
          for (let Z3 of te2.nodes)
            G3.push(function({ addUtilities: ee3 }) {
              ee3(Z3, {
                respectPrefix: false,
                preserveSource: true
              });
            });
          te2.remove();
        }
      }), G3;
    }
    function K3(Y3, G3) {
      let te2 = Object.entries({
        ...m.variantPlugins,
        ...m.corePlugins
      }).map(([ce3, Te3]) => Y3.tailwindConfig.corePlugins.includes(ce3) ? Te3 : null).filter(Boolean), Z3 = Y3.tailwindConfig.plugins.map((ce3) => (ce3.__isOptionsFunction && (ce3 = ce3()), typeof ce3 == "function" ? ce3 : ce3.handler)), ee3 = V4(G3), se3 = [
        m.variantPlugins.childVariant,
        m.variantPlugins.pseudoElementVariants,
        m.variantPlugins.pseudoClassVariants,
        m.variantPlugins.hasVariants,
        m.variantPlugins.ariaVariants,
        m.variantPlugins.dataVariants
      ], ue = [
        m.variantPlugins.supportsVariants,
        m.variantPlugins.reducedMotionVariants,
        m.variantPlugins.prefersContrastVariants,
        m.variantPlugins.screenVariants,
        m.variantPlugins.orientationVariants,
        m.variantPlugins.directionVariants,
        m.variantPlugins.darkVariants,
        m.variantPlugins.forcedColorsVariants,
        m.variantPlugins.printVariant
      ];
      return (Y3.tailwindConfig.darkMode === "class" || Array.isArray(Y3.tailwindConfig.darkMode) && Y3.tailwindConfig.darkMode[0] === "class") && (ue = [
        m.variantPlugins.supportsVariants,
        m.variantPlugins.reducedMotionVariants,
        m.variantPlugins.prefersContrastVariants,
        m.variantPlugins.darkVariants,
        m.variantPlugins.screenVariants,
        m.variantPlugins.orientationVariants,
        m.variantPlugins.directionVariants,
        m.variantPlugins.forcedColorsVariants,
        m.variantPlugins.printVariant
      ]), [
        ...te2,
        ...se3,
        ...Z3,
        ...ue,
        ...ee3
      ];
    }
    function X3(Y3, G3) {
      let te2 = [], Z3 = /* @__PURE__ */ new Map;
      G3.variantMap = Z3;
      let ee3 = new O3.Offsets;
      G3.offsets = ee3;
      let se3 = /* @__PURE__ */ new Set, ue = J3(G3.tailwindConfig, G3, {
        variantList: te2,
        variantMap: Z3,
        offsets: ee3,
        classList: se3
      });
      for (let re3 of Y3)
        if (Array.isArray(re3))
          for (let fe3 of re3)
            fe3(ue);
        else
          re3 == null || re3(ue);
      ee3.recordVariants(te2, (re3) => Z3.get(re3).length);
      for (let [re3, fe3] of Z3.entries())
        G3.variantMap.set(re3, fe3.map((we3, ye2) => [
          ee3.forVariant(re3, ye2),
          we3
        ]));
      var xe3;
      let ce3 = ((xe3 = G3.tailwindConfig.safelist) !== null && xe3 !== undefined ? xe3 : []).filter(Boolean);
      if (ce3.length > 0) {
        let re3 = [];
        for (let fe3 of ce3) {
          if (typeof fe3 == "string") {
            G3.changedContent.push({
              content: fe3,
              extension: "html"
            });
            continue;
          }
          if (fe3 instanceof RegExp) {
            _3.default.warn("root-regex", [
              "Regular expressions in `safelist` work differently in Tailwind CSS v3.0.",
              "Update your `safelist` configuration to eliminate this warning.",
              "https://tailwindcss.com/docs/content-configuration#safelisting-classes"
            ]);
            continue;
          }
          re3.push(fe3);
        }
        if (re3.length > 0) {
          let fe3 = /* @__PURE__ */ new Map, we3 = G3.tailwindConfig.prefix.length, ye2 = re3.some((he3) => he3.pattern.source.includes("!"));
          for (let he3 of se3) {
            let Ce3 = Array.isArray(he3) ? (() => {
              let [qe3, ge3] = he3;
              var Se3;
              let pe3 = Object.keys((Se3 = ge3 == null ? undefined : ge3.values) !== null && Se3 !== undefined ? Se3 : {}).map((Oe3) => (0, o2.formatClass)(qe3, Oe3));
              return ge3 != null && ge3.supportsNegativeValues && (pe3 = [
                ...pe3,
                ...pe3.map((Oe3) => "-" + Oe3)
              ], pe3 = [
                ...pe3,
                ...pe3.map((Oe3) => Oe3.slice(0, we3) + "-" + Oe3.slice(we3))
              ]), ge3.types.some(({ type: Oe3 }) => Oe3 === "color") && (pe3 = [
                ...pe3,
                ...pe3.flatMap((Oe3) => Object.keys(G3.tailwindConfig.theme.opacity).map((Ue3) => `${Oe3}/${Ue3}`))
              ]), ye2 && (ge3 != null && ge3.respectImportant) && (pe3 = [
                ...pe3,
                ...pe3.map((Oe3) => "!" + Oe3)
              ]), pe3;
            })() : [
              he3
            ];
            for (let qe3 of Ce3)
              for (let { pattern: ge3, variants: Se3 = [] } of re3)
                if (ge3.lastIndex = 0, fe3.has(ge3) || fe3.set(ge3, 0), !!ge3.test(qe3)) {
                  fe3.set(ge3, fe3.get(ge3) + 1), G3.changedContent.push({
                    content: qe3,
                    extension: "html"
                  });
                  for (let me3 of Se3)
                    G3.changedContent.push({
                      content: me3 + G3.tailwindConfig.separator + qe3,
                      extension: "html"
                    });
                }
          }
          for (let [he3, Ce3] of fe3.entries())
            Ce3 === 0 && _3.default.warn([
              `The safelist pattern \`${he3}\` doesn't match any Tailwind CSS classes.`,
              "Fix this pattern or remove it from your `safelist` configuration.",
              "https://tailwindcss.com/docs/content-configuration#safelisting-classes"
            ]);
        }
      }
      var Te3, ve3;
      let Ae3 = (ve3 = [].concat((Te3 = G3.tailwindConfig.darkMode) !== null && Te3 !== undefined ? Te3 : "media")[1]) !== null && ve3 !== undefined ? ve3 : "dark", ae3 = [
        P3(G3, Ae3),
        P3(G3, "group"),
        P3(G3, "peer")
      ];
      G3.getClassOrder = function(fe3) {
        let we3 = [
          ...fe3
        ].sort((ge3, Se3) => ge3 === Se3 ? 0 : ge3 < Se3 ? -1 : 1), ye2 = new Map(we3.map((ge3) => [
          ge3,
          null
        ])), he3 = (0, x.generateRules)(new Set(we3), G3, true);
        he3 = G3.offsets.sort(he3);
        let Ce3 = BigInt(ae3.length);
        for (const [, ge3] of he3) {
          let Se3 = ge3.raws.tailwind.candidate;
          var qe3;
          ye2.set(Se3, (qe3 = ye2.get(Se3)) !== null && qe3 !== undefined ? qe3 : Ce3++);
        }
        return fe3.map((ge3) => {
          var Se3;
          let me3 = (Se3 = ye2.get(ge3)) !== null && Se3 !== undefined ? Se3 : null, pe3 = ae3.indexOf(ge3);
          return me3 === null && pe3 !== -1 && (me3 = BigInt(pe3)), [
            ge3,
            me3
          ];
        });
      }, G3.getClassList = function(fe3 = {}) {
        let we3 = [];
        for (let ge3 of se3)
          if (Array.isArray(ge3)) {
            var ye2;
            let [Se3, me3] = ge3, pe3 = [];
            var he3;
            let Oe3 = Object.keys((he3 = me3 == null ? undefined : me3.modifiers) !== null && he3 !== undefined ? he3 : {});
            if (!(me3 == null || (ye2 = me3.types) === null || ye2 === undefined) && ye2.some(({ type: ze3 }) => ze3 === "color")) {
              var Ce3;
              Oe3.push(...Object.keys((Ce3 = G3.tailwindConfig.theme.opacity) !== null && Ce3 !== undefined ? Ce3 : {}));
            }
            let Ue3 = {
              modifiers: Oe3
            }, Xe3 = fe3.includeMetadata && Oe3.length > 0;
            var qe3;
            for (let [ze3, Ze3] of Object.entries((qe3 = me3 == null ? undefined : me3.values) !== null && qe3 !== undefined ? qe3 : {})) {
              if (Ze3 == null)
                continue;
              let We2 = (0, o2.formatClass)(Se3, ze3);
              if (we3.push(Xe3 ? [
                We2,
                Ue3
              ] : We2), me3 != null && me3.supportsNegativeValues && (0, w3.default)(Ze3)) {
                let Je3 = (0, o2.formatClass)(Se3, `-${ze3}`);
                pe3.push(Xe3 ? [
                  Je3,
                  Ue3
                ] : Je3);
              }
            }
            we3.push(...pe3);
          } else
            we3.push(ge3);
        return we3;
      }, G3.getVariants = function() {
        let fe3 = Math.random().toString(36).substring(7).toUpperCase(), we3 = [];
        for (let [he3, Ce3] of G3.variantOptions.entries())
          if (Ce3.variantInfo !== S3.Base) {
            var ye2;
            we3.push({
              name: he3,
              isArbitrary: Ce3.type === Symbol.for("MATCH_VARIANT"),
              values: Object.keys((ye2 = Ce3.values) !== null && ye2 !== undefined ? ye2 : {}),
              hasDash: he3 !== "@",
              selectors({ modifier: qe3, value: ge3 } = {}) {
                let Se3 = `TAILWINDPLACEHOLDER${fe3}`, me3 = l2.default.rule({
                  selector: `.${Se3}`
                }), pe3 = l2.default.root({
                  nodes: [
                    me3.clone()
                  ]
                }), Oe3 = pe3.toString();
                var Ue3;
                let Xe3 = ((Ue3 = G3.variantMap.get(he3)) !== null && Ue3 !== undefined ? Ue3 : []).flatMap(([Ve3, je3]) => je3), ze3 = [];
                for (let Ve3 of Xe3) {
                  var Ze3;
                  let je3 = [];
                  var We2;
                  let ct3 = {
                    args: {
                      modifier: qe3,
                      value: (We2 = (Ze3 = Ce3.values) === null || Ze3 === undefined ? undefined : Ze3[ge3]) !== null && We2 !== undefined ? We2 : ge3
                    },
                    separator: G3.tailwindConfig.separator,
                    modifySelectors(Ge4) {
                      return pe3.each((xr3) => {
                        xr3.type === "rule" && (xr3.selectors = xr3.selectors.map((ea2) => Ge4({
                          get className() {
                            return (0, x.getClassNameFromSelector)(ea2);
                          },
                          selector: ea2
                        })));
                      }), pe3;
                    },
                    format(Ge4) {
                      je3.push(Ge4);
                    },
                    wrap(Ge4) {
                      je3.push(`@${Ge4.name} ${Ge4.params} { & }`);
                    },
                    container: pe3
                  }, dt2 = Ve3(ct3);
                  if (je3.length > 0 && ze3.push(je3), Array.isArray(dt2))
                    for (let Ge4 of dt2)
                      je3 = [], Ge4(ct3), ze3.push(je3);
                }
                let Je3 = [], ou3 = pe3.toString();
                Oe3 !== ou3 && (pe3.walkRules((Ve3) => {
                  let je3 = Ve3.selector, ct3 = (0, s2.default)((dt2) => {
                    dt2.walkClasses((Ge4) => {
                      Ge4.value = `${he3}${G3.tailwindConfig.separator}${Ge4.value}`;
                    });
                  }).processSync(je3);
                  Je3.push(je3.replace(ct3, "&").replace(Se3, "&"));
                }), pe3.walkAtRules((Ve3) => {
                  Je3.push(`@${Ve3.name} (${Ve3.params}) { & }`);
                }));
                var br3;
                let lu = !(ge3 in ((br3 = Ce3.values) !== null && br3 !== undefined ? br3 : {}));
                var _r3;
                let uu3 = (_r3 = Ce3[M2]) !== null && _r3 !== undefined ? _r3 : {}, Xi2 = !(lu || uu3.respectPrefix === false);
                ze3 = ze3.map((Ve3) => Ve3.map((je3) => ({
                  format: je3,
                  respectPrefix: Xi2
                }))), Je3 = Je3.map((Ve3) => ({
                  format: Ve3,
                  respectPrefix: Xi2
                }));
                let Sr3 = {
                  candidate: Se3,
                  context: G3
                }, Zi2 = ze3.map((Ve3) => (0, E2.finalizeSelector)(`.${Se3}`, (0, E2.formatVariantSelector)(Ve3, Sr3), Sr3).replace(`.${Se3}`, "&").replace("{ & }", "").trim());
                return Je3.length > 0 && Zi2.push((0, E2.formatVariantSelector)(Je3, Sr3).toString().replace(`.${Se3}`, "&")), Zi2;
              }
            });
          }
        return we3;
      };
    }
    function Q3(Y3, G3) {
      Y3.classCache.has(G3) && (Y3.notClassCache.add(G3), Y3.classCache.delete(G3), Y3.applyClassCache.delete(G3), Y3.candidateRuleMap.delete(G3), Y3.candidateRuleCache.delete(G3), Y3.stylesheetCache = null);
    }
    function ne3(Y3, G3) {
      let te2 = G3.raws.tailwind.candidate;
      if (te2) {
        for (const Z3 of Y3.ruleCache)
          Z3[1].raws.tailwind.candidate === te2 && Y3.ruleCache.delete(Z3);
        Q3(Y3, te2);
      }
    }
    function de3(Y3, G3 = [], te2 = l2.default.root()) {
      var Z3;
      let ee3 = {
        disposables: [],
        ruleCache: /* @__PURE__ */ new Set,
        candidateRuleCache: /* @__PURE__ */ new Map,
        classCache: /* @__PURE__ */ new Map,
        applyClassCache: /* @__PURE__ */ new Map,
        notClassCache: new Set((Z3 = Y3.blocklist) !== null && Z3 !== undefined ? Z3 : []),
        postCssNodeCache: /* @__PURE__ */ new Map,
        candidateRuleMap: /* @__PURE__ */ new Map,
        tailwindConfig: Y3,
        changedContent: G3,
        variantMap: /* @__PURE__ */ new Map,
        stylesheetCache: null,
        variantOptions: /* @__PURE__ */ new Map,
        markInvalidUtilityCandidate: (ue) => Q3(ee3, ue),
        markInvalidUtilityNode: (ue) => ne3(ee3, ue)
      }, se3 = K3(ee3, te2);
      return X3(se3, ee3), ee3;
    }
    let { contextMap: _e3, configContextMap: be3, contextSourcesMap: ie3 } = n2;
    function ke3(Y3, G3, te2, Z3, ee3, se3) {
      let ue = G3.opts.from, xe3 = Z3 !== null;
      n2.env.DEBUG && console.log("Source path:", ue);
      let ce3;
      if (xe3 && _e3.has(ue))
        ce3 = _e3.get(ue);
      else if (be3.has(ee3)) {
        let ae3 = be3.get(ee3);
        ie3.get(ae3).add(ue), _e3.set(ue, ae3), ce3 = ae3;
      }
      let Te3 = (0, g2.hasContentChanged)(ue, Y3);
      if (ce3) {
        let [ae3, re3] = j3([
          ...se3
        ], U2(ce3));
        if (!ae3 && !Te3)
          return [
            ce3,
            false,
            re3
          ];
      }
      if (_e3.has(ue)) {
        let ae3 = _e3.get(ue);
        if (ie3.has(ae3) && (ie3.get(ae3).delete(ue), ie3.get(ae3).size === 0)) {
          ie3.delete(ae3);
          for (let [re3, fe3] of be3)
            fe3 === ae3 && be3.delete(re3);
          for (let re3 of ae3.disposables.splice(0))
            re3(ae3);
        }
      }
      n2.env.DEBUG && console.log("Setting up new context...");
      let ve3 = de3(te2, [], Y3);
      Object.assign(ve3, {
        userConfigPath: Z3
      });
      let [, Ae3] = j3([
        ...se3
      ], U2(ve3));
      return be3.set(ee3, ve3), _e3.set(ue, ve3), ie3.has(ve3) || ie3.set(ve3, /* @__PURE__ */ new Set), ie3.get(ve3).add(ue), [
        ve3,
        true,
        Ae3
      ];
    }
  }(Jn3)), Jn3;
}
var li2 = {};
var Vo3;
function su3() {
  return Vo3 || (Vo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "applyImportantSelector", {
      enumerable: true,
      get: function() {
        return l2;
      }
    });
    const a = /* @__PURE__ */ p(Ke3()), h2 = Ji2();
    function p(f) {
      return f && f.__esModule ? f : {
        default: f
      };
    }
    function l2(f, s2) {
      let c2 = (0, a.default)().astSync(f);
      return c2.each((t8) => {
        t8.nodes.some((r2) => r2.type === "combinator") && (t8.nodes = [
          a.default.pseudo({
            value: ":is",
            nodes: [
              t8.clone()
            ]
          })
        ]), (0, h2.movePseudos)(t8);
      }), `${s2} ${c2.toString()}`;
    }
  }(li2)), li2;
}
var jo3;
function wr3() {
  return jo3 || (jo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(T3, U2) {
      for (var j3 in U2)
        Object.defineProperty(T3, j3, {
          enumerable: true,
          get: U2[j3]
        });
    }
    a(u, {
      getClassNameFromSelector: function() {
        return O3;
      },
      resolveMatches: function() {
        return L3;
      },
      generateRules: function() {
        return N3;
      }
    });
    const h2 = /* @__PURE__ */ w3(Be2()), p = /* @__PURE__ */ w3(Ke3()), l2 = /* @__PURE__ */ w3(tu3()), f = /* @__PURE__ */ w3(ut3()), s2 = /* @__PURE__ */ w3(Hi2()), c2 = gr3(), t8 = /* @__PURE__ */ w3(tt3()), e2 = /* @__PURE__ */ x(yr3()), r2 = ru3(), i = nu3(), o2 = vr3(), v3 = Ki2(), m = /* @__PURE__ */ w3(au3()), n2 = st3(), d2 = it3(), _3 = su3();
    function w3(T3) {
      return T3 && T3.__esModule ? T3 : {
        default: T3
      };
    }
    function y2(T3) {
      if (typeof WeakMap != "function")
        return null;
      var U2 = /* @__PURE__ */ new WeakMap, j3 = /* @__PURE__ */ new WeakMap;
      return (y2 = function(H3) {
        return H3 ? j3 : U2;
      })(T3);
    }
    function x(T3, U2) {
      if (T3 && T3.__esModule)
        return T3;
      if (T3 === null || typeof T3 != "object" && typeof T3 != "function")
        return {
          default: T3
        };
      var j3 = y2(U2);
      if (j3 && j3.has(T3))
        return j3.get(T3);
      var H3 = {}, V4 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var K3 in T3)
        if (K3 !== "default" && Object.prototype.hasOwnProperty.call(T3, K3)) {
          var X3 = V4 ? Object.getOwnPropertyDescriptor(T3, K3) : null;
          X3 && (X3.get || X3.set) ? Object.defineProperty(H3, K3, X3) : H3[K3] = T3[K3];
        }
      return H3.default = T3, j3 && j3.set(T3, H3), H3;
    }
    let g2 = (0, p.default)((T3) => T3.first.filter(({ type: U2 }) => U2 === "class").pop().value);
    function O3(T3) {
      return g2.transformSync(T3);
    }
    function* A(T3) {
      let U2 = 1 / 0;
      for (;U2 >= 0; ) {
        let j3, H3 = false;
        if (U2 === 1 / 0 && T3.endsWith("]")) {
          let X3 = T3.indexOf("[");
          T3[X3 - 1] === "-" ? j3 = X3 - 1 : T3[X3 - 1] === "/" ? (j3 = X3 - 1, H3 = true) : j3 = -1;
        } else
          U2 === 1 / 0 && T3.includes("/") ? (j3 = T3.lastIndexOf("/"), H3 = true) : j3 = T3.lastIndexOf("-", U2);
        if (j3 < 0)
          break;
        let V4 = T3.slice(0, j3), K3 = T3.slice(H3 ? j3 : j3 + 1);
        U2 = j3 - 1, !(V4 === "" || K3 === "/") && (yield [
          V4,
          K3
        ]);
      }
    }
    function E2(T3, U2) {
      if (T3.length === 0 || U2.tailwindConfig.prefix === "")
        return T3;
      for (let j3 of T3) {
        let [H3] = j3;
        if (H3.options.respectPrefix) {
          let V4 = h2.default.root({
            nodes: [
              j3[1].clone()
            ]
          }), K3 = j3[1].raws.tailwind.classCandidate;
          V4.walkRules((X3) => {
            let Q3 = K3.startsWith("-");
            X3.selector = (0, s2.default)(U2.tailwindConfig.prefix, X3.selector, Q3);
          }), j3[1] = V4.nodes[0];
        }
      }
      return T3;
    }
    function b3(T3, U2) {
      if (T3.length === 0)
        return T3;
      let j3 = [];
      function H3(V4) {
        return V4.parent && V4.parent.type === "atrule" && V4.parent.name === "keyframes";
      }
      for (let [V4, K3] of T3) {
        let X3 = h2.default.root({
          nodes: [
            K3.clone()
          ]
        });
        X3.walkRules((Q3) => {
          if (H3(Q3))
            return;
          let ne3 = (0, p.default)().astSync(Q3.selector);
          ne3.each((de3) => (0, r2.eliminateIrrelevantSelectors)(de3, U2)), (0, c2.updateAllClasses)(ne3, (de3) => de3 === U2 ? `!${de3}` : de3), Q3.selector = ne3.toString(), Q3.walkDecls((de3) => de3.important = true);
        }), j3.push([
          {
            ...V4,
            important: true
          },
          X3.nodes[0]
        ]);
      }
      return j3;
    }
    function k3(T3, U2, j3) {
      if (U2.length === 0)
        return U2;
      let H3 = {
        modifier: null,
        value: e2.NONE
      };
      {
        let [Q3, ...ne3] = (0, n2.splitAtTopLevelOnly)(T3, "/");
        if (ne3.length > 1 && (Q3 = Q3 + "/" + ne3.slice(0, -1).join("/"), ne3 = ne3.slice(-1)), ne3.length && !j3.variantMap.has(T3) && (T3 = Q3, H3.modifier = ne3[0], !(0, d2.flagEnabled)(j3.tailwindConfig, "generalizedModifiers")))
          return [];
      }
      if (T3.endsWith("]") && !T3.startsWith("[")) {
        let Q3 = /(.)(-?)\[(.*)\]/g.exec(T3);
        if (Q3) {
          let [, ne3, de3, _e3] = Q3;
          if (ne3 === "@" && de3 === "-")
            return [];
          if (ne3 !== "@" && de3 === "")
            return [];
          T3 = T3.replace(`${de3}[${_e3}]`, ""), H3.value = _e3;
        }
      }
      if (J3(T3) && !j3.variantMap.has(T3)) {
        let Q3 = j3.offsets.recordVariant(T3), ne3 = (0, o2.normalize)(T3.slice(1, -1)), de3 = (0, n2.splitAtTopLevelOnly)(ne3, ",");
        if (de3.length > 1)
          return [];
        if (!de3.every(v3.isValidVariantFormatString))
          return [];
        let _e3 = de3.map((be3, ie3) => [
          j3.offsets.applyParallelOffset(Q3, ie3),
          (0, v3.parseVariant)(be3.trim())
        ]);
        j3.variantMap.set(T3, _e3);
      }
      if (j3.variantMap.has(T3)) {
        var V4;
        let Q3 = J3(T3);
        var K3;
        let ne3 = (K3 = (V4 = j3.variantOptions.get(T3)) === null || V4 === undefined ? undefined : V4[v3.INTERNAL_FEATURES]) !== null && K3 !== undefined ? K3 : {}, de3 = j3.variantMap.get(T3).slice(), _e3 = [], be3 = !(Q3 || ne3.respectPrefix === false);
        for (let [ie3, ke3] of U2) {
          if (ie3.layer === "user")
            continue;
          let Y3 = h2.default.root({
            nodes: [
              ke3.clone()
            ]
          });
          for (let [G3, te2, Z3] of de3) {
            let ue = function() {
              ee3.raws.neededBackup || (ee3.raws.neededBackup = true, ee3.walkRules((ve3) => ve3.raws.originalSelector = ve3.selector));
            }, xe3 = function(ve3) {
              return ue(), ee3.each((Ae3) => {
                Ae3.type === "rule" && (Ae3.selectors = Ae3.selectors.map((ae3) => ve3({
                  get className() {
                    return O3(ae3);
                  },
                  selector: ae3
                })));
              }), ee3;
            }, ee3 = (Z3 ?? Y3).clone(), se3 = [], ce3 = te2({
              get container() {
                return ue(), ee3;
              },
              separator: j3.tailwindConfig.separator,
              modifySelectors: xe3,
              wrap(ve3) {
                let Ae3 = ee3.nodes;
                ee3.removeAll(), ve3.append(Ae3), ee3.append(ve3);
              },
              format(ve3) {
                se3.push({
                  format: ve3,
                  respectPrefix: be3
                });
              },
              args: H3
            });
            if (Array.isArray(ce3)) {
              for (let [ve3, Ae3] of ce3.entries())
                de3.push([
                  j3.offsets.applyParallelOffset(G3, ve3),
                  Ae3,
                  ee3.clone()
                ]);
              continue;
            }
            if (typeof ce3 == "string" && se3.push({
              format: ce3,
              respectPrefix: be3
            }), ce3 === null)
              continue;
            ee3.raws.neededBackup && (delete ee3.raws.neededBackup, ee3.walkRules((ve3) => {
              let Ae3 = ve3.raws.originalSelector;
              if (!Ae3 || (delete ve3.raws.originalSelector, Ae3 === ve3.selector))
                return;
              let ae3 = ve3.selector, re3 = (0, p.default)((fe3) => {
                fe3.walkClasses((we3) => {
                  we3.value = `${T3}${j3.tailwindConfig.separator}${we3.value}`;
                });
              }).processSync(Ae3);
              se3.push({
                format: ae3.replace(re3, "&"),
                respectPrefix: be3
              }), ve3.selector = Ae3;
            })), ee3.nodes[0].raws.tailwind = {
              ...ee3.nodes[0].raws.tailwind,
              parentLayer: ie3.layer
            };
            var X3;
            let Te3 = [
              {
                ...ie3,
                sort: j3.offsets.applyVariantOffset(ie3.sort, G3, Object.assign(H3, j3.variantOptions.get(T3))),
                collectedFormats: ((X3 = ie3.collectedFormats) !== null && X3 !== undefined ? X3 : []).concat(se3)
              },
              ee3.nodes[0]
            ];
            _e3.push(Te3);
          }
        }
        return _e3;
      }
      return [];
    }
    function q2(T3, U2, j3 = {}) {
      return !(0, f.default)(T3) && !Array.isArray(T3) ? [
        [
          T3
        ],
        j3
      ] : Array.isArray(T3) ? q2(T3[0], U2, T3[1]) : (U2.has(T3) || U2.set(T3, (0, l2.default)(T3)), [
        U2.get(T3),
        j3
      ]);
    }
    const M2 = /^[a-z_-]/;
    function W3(T3) {
      return M2.test(T3);
    }
    function S3(T3) {
      if (!T3.includes("://"))
        return false;
      try {
        const U2 = new URL(T3);
        return U2.scheme !== "" && U2.host !== "";
      } catch {
        return false;
      }
    }
    function P3(T3) {
      let U2 = true;
      return T3.walkDecls((j3) => {
        if (!C(j3.prop, j3.value))
          return U2 = false, false;
      }), U2;
    }
    function C(T3, U2) {
      if (S3(`${T3}:${U2}`))
        return false;
      try {
        return h2.default.parse(`a{${T3}:${U2}}`).toResult(), true;
      } catch {
        return false;
      }
    }
    function R3(T3, U2) {
      var j3;
      let [, H3, V4] = (j3 = T3.match(/^\[([a-zA-Z0-9-_]+):(\S+)\]$/)) !== null && j3 !== undefined ? j3 : [];
      if (V4 === undefined || !W3(H3) || !(0, m.default)(V4))
        return null;
      let K3 = (0, o2.normalize)(V4, {
        property: H3
      });
      return C(H3, K3) ? [
        [
          {
            sort: U2.offsets.arbitraryProperty(T3),
            layer: "utilities",
            options: {
              respectImportant: true
            }
          },
          () => ({
            [(0, i.asClass)(T3)]: {
              [H3]: K3
            }
          })
        ]
      ] : null;
    }
    function* $2(T3, U2) {
      U2.candidateRuleMap.has(T3) && (yield [
        U2.candidateRuleMap.get(T3),
        "DEFAULT"
      ]), yield* function* (Q3) {
        Q3 !== null && (yield [
          Q3,
          "DEFAULT"
        ]);
      }(R3(T3, U2));
      let j3 = T3, H3 = false;
      const V4 = U2.tailwindConfig.prefix, K3 = V4.length, X3 = j3.startsWith(V4) || j3.startsWith(`-${V4}`);
      j3[K3] === "-" && X3 && (H3 = true, j3 = V4 + j3.slice(K3 + 1)), H3 && U2.candidateRuleMap.has(j3) && (yield [
        U2.candidateRuleMap.get(j3),
        "-DEFAULT"
      ]);
      for (let [Q3, ne3] of A(j3))
        U2.candidateRuleMap.has(Q3) && (yield [
          U2.candidateRuleMap.get(Q3),
          H3 ? `-${ne3}` : ne3
        ]);
    }
    function B3(T3, U2) {
      return T3 === e2.NOT_ON_DEMAND ? [
        e2.NOT_ON_DEMAND
      ] : (0, n2.splitAtTopLevelOnly)(T3, U2);
    }
    function* z3(T3, U2) {
      for (const V4 of T3) {
        var j3, H3;
        V4[1].raws.tailwind = {
          ...V4[1].raws.tailwind,
          classCandidate: U2,
          preserveSource: (H3 = (j3 = V4[0].options) === null || j3 === undefined ? undefined : j3.preserveSource) !== null && H3 !== undefined ? H3 : false
        }, yield V4;
      }
    }
    function* L3(T3, U2) {
      let j3 = U2.tailwindConfig.separator, [H3, ...V4] = B3(T3, j3).reverse(), K3 = false;
      H3.startsWith("!") && (K3 = true, H3 = H3.slice(1));
      for (let be3 of $2(H3, U2)) {
        let ie3 = [], ke3 = /* @__PURE__ */ new Map, [Y3, G3] = be3, te2 = Y3.length === 1;
        for (let [Z3, ee3] of Y3) {
          let se3 = [];
          if (typeof ee3 == "function")
            for (let ue of [].concat(ee3(G3, {
              isOnlyPlugin: te2
            }))) {
              let [xe3, ce3] = q2(ue, U2.postCssNodeCache);
              for (let Te3 of xe3)
                se3.push([
                  {
                    ...Z3,
                    options: {
                      ...Z3.options,
                      ...ce3
                    }
                  },
                  Te3
                ]);
            }
          else if (G3 === "DEFAULT" || G3 === "-DEFAULT") {
            let ue = ee3, [xe3, ce3] = q2(ue, U2.postCssNodeCache);
            for (let Te3 of xe3)
              se3.push([
                {
                  ...Z3,
                  options: {
                    ...Z3.options,
                    ...ce3
                  }
                },
                Te3
              ]);
          }
          if (se3.length > 0) {
            var X3, Q3, ne3;
            let ue = Array.from((0, c2.getMatchingTypes)((Q3 = (X3 = Z3.options) === null || X3 === undefined ? undefined : X3.types) !== null && Q3 !== undefined ? Q3 : [], G3, (ne3 = Z3.options) !== null && ne3 !== undefined ? ne3 : {}, U2.tailwindConfig)).map(([xe3, ce3]) => ce3);
            ue.length > 0 && ke3.set(se3, ue), ie3.push(se3);
          }
        }
        if (J3(G3)) {
          if (ie3.length > 1) {
            let se3 = function(xe3) {
              return xe3.length === 1 ? xe3[0] : xe3.find((ce3) => {
                let Te3 = ke3.get(ce3);
                return ce3.some(([{ options: ve3 }, Ae3]) => P3(Ae3) ? ve3.types.some(({ type: ae3, preferOnConflict: re3 }) => Te3.includes(ae3) && re3) : false);
              });
            }, [Z3, ee3] = ie3.reduce((xe3, ce3) => (ce3.some(([{ options: ve3 }]) => ve3.types.some(({ type: Ae3 }) => Ae3 === "any")) ? xe3[0].push(ce3) : xe3[1].push(ce3), xe3), [
              [],
              []
            ]);
            var de3;
            let ue = (de3 = se3(ee3)) !== null && de3 !== undefined ? de3 : se3(Z3);
            if (ue)
              ie3 = [
                ue
              ];
            else {
              var _e3;
              let xe3 = ie3.map((Te3) => /* @__PURE__ */ new Set([
                ...(_e3 = ke3.get(Te3)) !== null && _e3 !== undefined ? _e3 : []
              ]));
              for (let Te3 of xe3)
                for (let ve3 of Te3) {
                  let Ae3 = false;
                  for (let ae3 of xe3)
                    Te3 !== ae3 && ae3.has(ve3) && (ae3.delete(ve3), Ae3 = true);
                  Ae3 && Te3.delete(ve3);
                }
              let ce3 = [];
              for (let [Te3, ve3] of xe3.entries())
                for (let Ae3 of ve3) {
                  let ae3 = ie3[Te3].map(([, re3]) => re3).flat().map((re3) => re3.toString().split(`
`).slice(1, -1).map((fe3) => fe3.trim()).map((fe3) => `      ${fe3}`).join(`
`)).join(`

`);
                  ce3.push(`  Use \`${T3.replace("[", `[${Ae3}:`)}\` for \`${ae3.trim()}\``);
                  break;
                }
              t8.default.warn([
                `The class \`${T3}\` is ambiguous and matches multiple utilities.`,
                ...ce3,
                `If this is content and not a class, replace it with \`${T3.replace("[", "&lsqb;").replace("]", "&rsqb;")}\` to silence this warning.`
              ]);
              continue;
            }
          }
          ie3 = ie3.map((Z3) => Z3.filter((ee3) => P3(ee3[1])));
        }
        ie3 = ie3.flat(), ie3 = Array.from(z3(ie3, H3)), ie3 = E2(ie3, U2), K3 && (ie3 = b3(ie3, H3));
        for (let Z3 of V4)
          ie3 = k3(Z3, ie3, U2);
        for (let Z3 of ie3)
          Z3[1].raws.tailwind = {
            ...Z3[1].raws.tailwind,
            candidate: T3
          }, Z3 = F(Z3, {
            context: U2,
            candidate: T3
          }), Z3 !== null && (yield Z3);
      }
    }
    function F(T3, { context: U2, candidate: j3 }) {
      if (!T3[0].collectedFormats)
        return T3;
      let H3 = true, V4;
      try {
        V4 = (0, r2.formatVariantSelector)(T3[0].collectedFormats, {
          context: U2,
          candidate: j3
        });
      } catch {
        return null;
      }
      let K3 = h2.default.root({
        nodes: [
          T3[1].clone()
        ]
      });
      return K3.walkRules((X3) => {
        if (!D(X3))
          try {
            let Q3 = (0, r2.finalizeSelector)(X3.selector, V4, {
              candidate: j3,
              context: U2
            });
            if (Q3 === null) {
              X3.remove();
              return;
            }
            X3.selector = Q3;
          } catch {
            return H3 = false, false;
          }
      }), !H3 || K3.nodes.length === 0 ? null : (T3[1] = K3.nodes[0], T3);
    }
    function D(T3) {
      return T3.parent && T3.parent.type === "atrule" && T3.parent.name === "keyframes";
    }
    function I3(T3) {
      if (T3 === true)
        return (U2) => {
          D(U2) || U2.walkDecls((j3) => {
            j3.parent.type === "rule" && !D(j3.parent) && (j3.important = true);
          });
        };
      if (typeof T3 == "string")
        return (U2) => {
          D(U2) || (U2.selectors = U2.selectors.map((j3) => (0, _3.applyImportantSelector)(j3, T3)));
        };
    }
    function N3(T3, U2, j3 = false) {
      let H3 = [], V4 = I3(U2.tailwindConfig.important);
      for (let X3 of T3) {
        if (U2.notClassCache.has(X3))
          continue;
        if (U2.candidateRuleCache.has(X3)) {
          H3 = H3.concat(Array.from(U2.candidateRuleCache.get(X3)));
          continue;
        }
        let Q3 = Array.from(L3(X3, U2));
        if (Q3.length === 0) {
          U2.notClassCache.add(X3);
          continue;
        }
        U2.classCache.set(X3, Q3);
        var K3;
        let ne3 = (K3 = U2.candidateRuleCache.get(X3)) !== null && K3 !== undefined ? K3 : /* @__PURE__ */ new Set;
        U2.candidateRuleCache.set(X3, ne3);
        for (const de3 of Q3) {
          let [{ sort: _e3, options: be3 }, ie3] = de3;
          if (be3.respectImportant && V4) {
            let Y3 = h2.default.root({
              nodes: [
                ie3.clone()
              ]
            });
            Y3.walkRules(V4), ie3 = Y3.nodes[0];
          }
          let ke3 = [
            _e3,
            j3 ? ie3.clone() : ie3
          ];
          ne3.add(ke3), U2.ruleCache.add(ke3), H3.push(ke3);
        }
      }
      return H3;
    }
    function J3(T3) {
      return T3.startsWith("[") && T3.endsWith("]");
    }
  }(qn3)), qn3;
}
var Bo2;
function Nf() {
  return Bo2 || (Bo2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return O3;
      }
    });
    const a = /* @__PURE__ */ c2(Be2()), h2 = /* @__PURE__ */ c2(Ke3()), p = wr3(), l2 = /* @__PURE__ */ c2(ft3()), f = su3(), s2 = Ji2();
    function c2(A) {
      return A && A.__esModule ? A : {
        default: A
      };
    }
    function t8(A) {
      let E2 = /* @__PURE__ */ new Map;
      a.default.root({
        nodes: [
          A.clone()
        ]
      }).walkRules((M2) => {
        (0, h2.default)((W3) => {
          W3.walkClasses((S3) => {
            let P3 = S3.parent.toString(), C = E2.get(P3);
            C || E2.set(P3, C = /* @__PURE__ */ new Set), C.add(S3.value);
          });
        }).processSync(M2.selector);
      });
      let k3 = Array.from(E2.values(), (M2) => Array.from(M2)), q2 = k3.flat();
      return Object.assign(q2, {
        groups: k3
      });
    }
    let e2 = (0, h2.default)();
    function r2(A) {
      return e2.astSync(A);
    }
    function i(A, E2) {
      let b3 = /* @__PURE__ */ new Set;
      for (let k3 of A)
        b3.add(k3.split(E2).pop());
      return Array.from(b3);
    }
    function o2(A, E2) {
      let b3 = A.tailwindConfig.prefix;
      return typeof b3 == "function" ? b3(E2) : b3 + E2;
    }
    function* v3(A) {
      for (yield A;A.parent; )
        yield A.parent, A = A.parent;
    }
    function m(A, E2 = {}) {
      let b3 = A.nodes;
      A.nodes = [];
      let k3 = A.clone(E2);
      return A.nodes = b3, k3;
    }
    function n2(A) {
      for (let E2 of v3(A))
        if (A !== E2) {
          if (E2.type === "root")
            break;
          A = m(E2, {
            nodes: [
              A
            ]
          });
        }
      return A;
    }
    function d2(A, E2) {
      let b3 = /* @__PURE__ */ new Map;
      return A.walkRules((k3) => {
        for (let S3 of v3(k3)) {
          var q2;
          if (((q2 = S3.raws.tailwind) === null || q2 === undefined ? undefined : q2.layer) !== undefined)
            return;
        }
        let M2 = n2(k3), W3 = E2.offsets.create("user");
        for (let S3 of t8(k3)) {
          let P3 = b3.get(S3) || [];
          b3.set(S3, P3), P3.push([
            {
              layer: "user",
              sort: W3,
              important: false
            },
            M2
          ]);
        }
      }), b3;
    }
    function _3(A, E2) {
      for (let b3 of A) {
        if (E2.notClassCache.has(b3) || E2.applyClassCache.has(b3))
          continue;
        if (E2.classCache.has(b3)) {
          E2.applyClassCache.set(b3, E2.classCache.get(b3).map(([q2, M2]) => [
            q2,
            M2.clone()
          ]));
          continue;
        }
        let k3 = Array.from((0, p.resolveMatches)(b3, E2));
        if (k3.length === 0) {
          E2.notClassCache.add(b3);
          continue;
        }
        E2.applyClassCache.set(b3, k3);
      }
      return E2.applyClassCache;
    }
    function w3(A) {
      let E2 = null;
      return {
        get: (b3) => (E2 = E2 || A(), E2.get(b3)),
        has: (b3) => (E2 = E2 || A(), E2.has(b3))
      };
    }
    function y2(A) {
      return {
        get: (E2) => A.flatMap((b3) => b3.get(E2) || []),
        has: (E2) => A.some((b3) => b3.has(E2))
      };
    }
    function x(A) {
      let E2 = A.split(/[\s\t\n]+/g);
      return E2[E2.length - 1] === "!important" ? [
        E2.slice(0, -1),
        true
      ] : [
        E2,
        false
      ];
    }
    function g2(A, E2, b3) {
      let k3 = /* @__PURE__ */ new Set, q2 = [];
      if (A.walkAtRules("apply", (P3) => {
        let [C] = x(P3.params);
        for (let R3 of C)
          k3.add(R3);
        q2.push(P3);
      }), q2.length === 0)
        return;
      let M2 = y2([
        b3,
        _3(k3, E2)
      ]);
      function W3(P3, C, R3) {
        let $2 = r2(P3), B3 = r2(C), L3 = r2(`.${(0, l2.default)(R3)}`).nodes[0].nodes[0];
        return $2.each((F) => {
          let D = /* @__PURE__ */ new Set;
          B3.each((I3) => {
            let N3 = false;
            I3 = I3.clone(), I3.walkClasses((J3) => {
              J3.value === L3.value && (N3 || (J3.replaceWith(...F.nodes.map((T3) => T3.clone())), D.add(I3), N3 = true));
            });
          });
          for (let I3 of D) {
            let N3 = [
              []
            ];
            for (let J3 of I3.nodes)
              J3.type === "combinator" ? (N3.push(J3), N3.push([])) : N3[N3.length - 1].push(J3);
            I3.nodes = [];
            for (let J3 of N3)
              Array.isArray(J3) && J3.sort((T3, U2) => T3.type === "tag" && U2.type === "class" ? -1 : T3.type === "class" && U2.type === "tag" ? 1 : T3.type === "class" && U2.type === "pseudo" && U2.value.startsWith("::") ? -1 : T3.type === "pseudo" && T3.value.startsWith("::") && U2.type === "class" ? 1 : 0), I3.nodes = I3.nodes.concat(J3);
          }
          F.replaceWith(...D);
        }), $2.toString();
      }
      let S3 = /* @__PURE__ */ new Map;
      for (let P3 of q2) {
        let [C] = S3.get(P3.parent) || [
          [],
          P3.source
        ];
        S3.set(P3.parent, [
          C,
          P3.source
        ]);
        let [R3, $2] = x(P3.params);
        if (P3.parent.type === "atrule") {
          if (P3.parent.name === "screen") {
            let B3 = P3.parent.params;
            throw P3.error(`@apply is not supported within nested at-rules like @screen. We suggest you write this as @apply ${R3.map((z3) => `${B3}:${z3}`).join(" ")} instead.`);
          }
          throw P3.error(`@apply is not supported within nested at-rules like @${P3.parent.name}. You can fix this by un-nesting @${P3.parent.name}.`);
        }
        for (let B3 of R3) {
          if ([
            o2(E2, "group"),
            o2(E2, "peer")
          ].includes(B3))
            throw P3.error(`@apply should not be used with the '${B3}' utility`);
          if (!M2.has(B3))
            throw P3.error(`The \`${B3}\` class does not exist. If \`${B3}\` is a custom class, make sure it is defined within a \`@layer\` directive.`);
          let z3 = M2.get(B3);
          for (let [, L3] of z3)
            L3.type !== "atrule" && L3.walkRules(() => {
              throw P3.error([
                `The \`${B3}\` class cannot be used with \`@apply\` because \`@apply\` does not currently support nested CSS.`,
                "Rewrite the selector without nesting or configure the `tailwindcss/nesting` plugin:",
                "https://tailwindcss.com/docs/using-with-preprocessors#nesting"
              ].join(`
`));
            });
          C.push([
            B3,
            $2,
            z3
          ]);
        }
      }
      for (let [P3, [C, R3]] of S3) {
        let $2 = [];
        for (let [z3, L3, F] of C) {
          let D = [
            z3,
            ...i([
              z3
            ], E2.tailwindConfig.separator)
          ];
          for (let [I3, N3] of F) {
            let J3 = t8(P3), T3 = t8(N3);
            if (T3 = T3.groups.filter((V4) => V4.some((K3) => D.includes(K3))).flat(), T3 = T3.concat(i(T3, E2.tailwindConfig.separator)), J3.some((V4) => T3.includes(V4)))
              throw N3.error(`You cannot \`@apply\` the \`${z3}\` utility here because it creates a circular dependency.`);
            let j3 = a.default.root({
              nodes: [
                N3.clone()
              ]
            });
            j3.walk((V4) => {
              V4.source = R3;
            }), (N3.type !== "atrule" || N3.type === "atrule" && N3.name !== "keyframes") && j3.walkRules((V4) => {
              if (!t8(V4).some((de3) => de3 === z3)) {
                V4.remove();
                return;
              }
              let K3 = typeof E2.tailwindConfig.important == "string" ? E2.tailwindConfig.important : null, Q3 = P3.raws.tailwind !== undefined && K3 && P3.selector.indexOf(K3) === 0 ? P3.selector.slice(K3.length) : P3.selector;
              Q3 === "" && (Q3 = P3.selector), V4.selector = W3(Q3, V4.selector, z3), K3 && Q3 !== P3.selector && (V4.selector = (0, f.applyImportantSelector)(V4.selector, K3)), V4.walkDecls((de3) => {
                de3.important = I3.important || L3;
              });
              let ne3 = (0, h2.default)().astSync(V4.selector);
              ne3.each((de3) => (0, s2.movePseudos)(de3)), V4.selector = ne3.toString();
            }), j3.nodes[0] && $2.push([
              I3.sort,
              j3.nodes[0]
            ]);
          }
        }
        let B3 = E2.offsets.sort($2).map((z3) => z3[1]);
        P3.after(B3);
      }
      for (let P3 of q2)
        P3.parent.nodes.length > 1 ? P3.remove() : P3.parent.remove();
      g2(A, E2, b3);
    }
    function O3(A) {
      return (E2) => {
        let b3 = w3(() => d2(E2, A));
        g2(E2, A, b3);
      };
    }
  }(Rn3)), Rn3;
}
var Ff = Nf();
var $f = /* @__PURE__ */ He3(Ff);
var ui2 = {};
var fi2;
var Go3;
function Uf() {
  if (Go3)
    return fi2;
  Go3 = 1;

  class u {
    constructor(h2 = {}) {
      if (!(h2.maxSize && h2.maxSize > 0))
        throw new TypeError("`maxSize` must be a number greater than 0");
      if (typeof h2.maxAge == "number" && h2.maxAge === 0)
        throw new TypeError("`maxAge` must be a number greater than 0");
      this.maxSize = h2.maxSize, this.maxAge = h2.maxAge || 1 / 0, this.onEviction = h2.onEviction, this.cache = /* @__PURE__ */ new Map, this.oldCache = /* @__PURE__ */ new Map, this._size = 0;
    }
    _emitEvictions(h2) {
      if (typeof this.onEviction == "function")
        for (const [p, l2] of h2)
          this.onEviction(p, l2.value);
    }
    _deleteIfExpired(h2, p) {
      return typeof p.expiry == "number" && p.expiry <= Date.now() ? (typeof this.onEviction == "function" && this.onEviction(h2, p.value), this.delete(h2)) : false;
    }
    _getOrDeleteIfExpired(h2, p) {
      if (this._deleteIfExpired(h2, p) === false)
        return p.value;
    }
    _getItemValue(h2, p) {
      return p.expiry ? this._getOrDeleteIfExpired(h2, p) : p.value;
    }
    _peek(h2, p) {
      const l2 = p.get(h2);
      return this._getItemValue(h2, l2);
    }
    _set(h2, p) {
      this.cache.set(h2, p), this._size++, this._size >= this.maxSize && (this._size = 0, this._emitEvictions(this.oldCache), this.oldCache = this.cache, this.cache = /* @__PURE__ */ new Map);
    }
    _moveToRecent(h2, p) {
      this.oldCache.delete(h2), this._set(h2, p);
    }
    *_entriesAscending() {
      for (const h2 of this.oldCache) {
        const [p, l2] = h2;
        this.cache.has(p) || this._deleteIfExpired(p, l2) === false && (yield h2);
      }
      for (const h2 of this.cache) {
        const [p, l2] = h2;
        this._deleteIfExpired(p, l2) === false && (yield h2);
      }
    }
    get(h2) {
      if (this.cache.has(h2)) {
        const p = this.cache.get(h2);
        return this._getItemValue(h2, p);
      }
      if (this.oldCache.has(h2)) {
        const p = this.oldCache.get(h2);
        if (this._deleteIfExpired(h2, p) === false)
          return this._moveToRecent(h2, p), p.value;
      }
    }
    set(h2, p, { maxAge: l2 = this.maxAge === 1 / 0 ? undefined : Date.now() + this.maxAge } = {}) {
      this.cache.has(h2) ? this.cache.set(h2, {
        value: p,
        maxAge: l2
      }) : this._set(h2, { value: p, expiry: l2 });
    }
    has(h2) {
      return this.cache.has(h2) ? !this._deleteIfExpired(h2, this.cache.get(h2)) : this.oldCache.has(h2) ? !this._deleteIfExpired(h2, this.oldCache.get(h2)) : false;
    }
    peek(h2) {
      if (this.cache.has(h2))
        return this._peek(h2, this.cache);
      if (this.oldCache.has(h2))
        return this._peek(h2, this.oldCache);
    }
    delete(h2) {
      const p = this.cache.delete(h2);
      return p && this._size--, this.oldCache.delete(h2) || p;
    }
    clear() {
      this.cache.clear(), this.oldCache.clear(), this._size = 0;
    }
    resize(h2) {
      if (!(h2 && h2 > 0))
        throw new TypeError("`maxSize` must be a number greater than 0");
      const p = [...this._entriesAscending()], l2 = p.length - h2;
      l2 < 0 ? (this.cache = new Map(p), this.oldCache = /* @__PURE__ */ new Map, this._size = p.length) : (l2 > 0 && this._emitEvictions(p.slice(0, l2)), this.oldCache = new Map(p.slice(l2)), this.cache = /* @__PURE__ */ new Map, this._size = 0), this.maxSize = h2;
    }
    *keys() {
      for (const [h2] of this)
        yield h2;
    }
    *values() {
      for (const [, h2] of this)
        yield h2;
    }
    *[Symbol.iterator]() {
      for (const h2 of this.cache) {
        const [p, l2] = h2;
        this._deleteIfExpired(p, l2) === false && (yield [p, l2.value]);
      }
      for (const h2 of this.oldCache) {
        const [p, l2] = h2;
        this.cache.has(p) || this._deleteIfExpired(p, l2) === false && (yield [p, l2.value]);
      }
    }
    *entriesDescending() {
      let h2 = [...this.cache];
      for (let p = h2.length - 1;p >= 0; --p) {
        const l2 = h2[p], [f, s2] = l2;
        this._deleteIfExpired(f, s2) === false && (yield [f, s2.value]);
      }
      h2 = [...this.oldCache];
      for (let p = h2.length - 1;p >= 0; --p) {
        const l2 = h2[p], [f, s2] = l2;
        this.cache.has(f) || this._deleteIfExpired(f, s2) === false && (yield [f, s2.value]);
      }
    }
    *entriesAscending() {
      for (const [h2, p] of this._entriesAscending())
        yield [h2, p.value];
    }
    get size() {
      if (!this._size)
        return this.oldCache.size;
      let h2 = 0;
      for (const p of this.oldCache.keys())
        this.cache.has(p) || h2++;
      return Math.min(this._size + h2, this.maxSize);
    }
  }
  return fi2 = u, fi2;
}
var ci2 = {};
var Yo3;
function zf() {
  return Yo3 || (Yo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(p, l2 = undefined, f = undefined) {
      return p.map((s2) => {
        let c2 = s2.clone();
        return f !== undefined && (c2.raws.tailwind = {
          ...c2.raws.tailwind,
          ...f
        }), l2 !== undefined && h2(c2, (t8) => {
          var e2;
          if (((e2 = t8.raws.tailwind) === null || e2 === undefined ? undefined : e2.preserveSource) === true && t8.source)
            return false;
          t8.source = l2;
        }), c2;
      });
    }
    function h2(p, l2) {
      if (l2(p) !== false) {
        var f;
        (f = p.each) === null || f === undefined || f.call(p, (s2) => h2(s2, l2));
      }
    }
  }(ci2)), ci2;
}
var di2 = {};
var pi2 = {};
var Qo3;
function Wf() {
  return Qo3 || (Qo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(o2, v3) {
      for (var m in v3)
        Object.defineProperty(o2, m, {
          enumerable: true,
          get: v3[m]
        });
    }
    a(u, {
      pattern: function() {
        return f;
      },
      withoutCapturing: function() {
        return s2;
      },
      any: function() {
        return c2;
      },
      optional: function() {
        return t8;
      },
      zeroOrMore: function() {
        return e2;
      },
      nestedBrackets: function() {
        return r2;
      },
      escape: function() {
        return i;
      }
    });
    const h2 = /[\\^$.*+?()[\]{}|]/g, p = RegExp(h2.source);
    function l2(o2) {
      return o2 = Array.isArray(o2) ? o2 : [
        o2
      ], o2 = o2.map((v3) => v3 instanceof RegExp ? v3.source : v3), o2.join("");
    }
    function f(o2) {
      return new RegExp(l2(o2), "g");
    }
    function s2(o2) {
      return new RegExp(`(?:${l2(o2)})`, "g");
    }
    function c2(o2) {
      return `(?:${o2.map(l2).join("|")})`;
    }
    function t8(o2) {
      return `(?:${l2(o2)})?`;
    }
    function e2(o2) {
      return `(?:${l2(o2)})*`;
    }
    function r2(o2, v3, m = 1) {
      return s2([
        i(o2),
        /[^\s]*/,
        m === 1 ? `[^${i(o2)}${i(v3)}s]*` : c2([
          `[^${i(o2)}${i(v3)}s]*`,
          r2(o2, v3, m - 1)
        ]),
        /[^\s]*/,
        i(v3)
      ]);
    }
    function i(o2) {
      return o2 && p.test(o2) ? o2.replace(h2, "\\$&") : o2 || "";
    }
  }(pi2)), pi2;
}
var Ho3;
function Vf() {
  return Ho3 || (Ho3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "defaultExtractor", {
      enumerable: true,
      get: function() {
        return f;
      }
    });
    const a = /* @__PURE__ */ l2(Wf()), h2 = st3();
    function p(r2) {
      if (typeof WeakMap != "function")
        return null;
      var i = /* @__PURE__ */ new WeakMap, o2 = /* @__PURE__ */ new WeakMap;
      return (p = function(v3) {
        return v3 ? o2 : i;
      })(r2);
    }
    function l2(r2, i) {
      if (r2 && r2.__esModule)
        return r2;
      if (r2 === null || typeof r2 != "object" && typeof r2 != "function")
        return {
          default: r2
        };
      var o2 = p(i);
      if (o2 && o2.has(r2))
        return o2.get(r2);
      var v3 = {}, m = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var n2 in r2)
        if (n2 !== "default" && Object.prototype.hasOwnProperty.call(r2, n2)) {
          var d2 = m ? Object.getOwnPropertyDescriptor(r2, n2) : null;
          d2 && (d2.get || d2.set) ? Object.defineProperty(v3, n2, d2) : v3[n2] = r2[n2];
        }
      return v3.default = r2, o2 && o2.set(r2, v3), v3;
    }
    function f(r2) {
      let i = Array.from(s2(r2));
      return (o2) => {
        let v3 = [];
        for (let n2 of i) {
          var m;
          for (let d2 of (m = o2.match(n2)) !== null && m !== undefined ? m : [])
            v3.push(e2(d2));
        }
        for (let n2 of v3.slice()) {
          let d2 = (0, h2.splitAtTopLevelOnly)(n2, ".");
          for (let _3 = 0;_3 < d2.length; _3++) {
            let w3 = d2[_3];
            if (_3 >= d2.length - 1) {
              v3.push(w3);
              continue;
            }
            let y2 = Number(d2[_3 + 1]);
            isNaN(y2) ? v3.push(w3) : _3++;
          }
        }
        return v3;
      };
    }
    function* s2(r2) {
      let i = r2.tailwindConfig.separator, o2 = r2.tailwindConfig.prefix !== "" ? a.optional(a.pattern([
        /-?/,
        a.escape(r2.tailwindConfig.prefix)
      ])) : "", v3 = a.any([
        /\[[^\s:'"`]+:[^\s\[\]]+\]/,
        /\[[^\s:'"`\]]+:[^\s]+?\[[^\s]+\][^\s]+?\]/,
        a.pattern([
          a.any([
            /-?(?:\w+)/,
            /@(?:\w+)/
          ]),
          a.optional(a.any([
            a.pattern([
              a.any([
                /-(?:\w+-)*\['[^\s]+'\]/,
                /-(?:\w+-)*\["[^\s]+"\]/,
                /-(?:\w+-)*\[`[^\s]+`\]/,
                /-(?:\w+-)*\[(?:[^\s\[\]]+\[[^\s\[\]]+\])*[^\s:\[\]]+\]/
              ]),
              /(?![{([]])/,
              /(?:\/[^\s'"`\\><$]*)?/
            ]),
            a.pattern([
              a.any([
                /-(?:\w+-)*\['[^\s]+'\]/,
                /-(?:\w+-)*\["[^\s]+"\]/,
                /-(?:\w+-)*\[`[^\s]+`\]/,
                /-(?:\w+-)*\[(?:[^\s\[\]]+\[[^\s\[\]]+\])*[^\s\[\]]+\]/
              ]),
              /(?![{([]])/,
              /(?:\/[^\s'"`\\$]*)?/
            ]),
            /[-\/][^\s'"`\\$={><]*/
          ]))
        ])
      ]), m = [
        a.any([
          a.pattern([
            /@\[[^\s"'`]+\](\/[^\s"'`]+)?/,
            i
          ]),
          a.pattern([
            /([^\s"'`\[\\]+-)?\[[^\s"'`]+\]\/[\w_-]+/,
            i
          ]),
          a.pattern([
            /([^\s"'`\[\\]+-)?\[[^\s"'`]+\]/,
            i
          ]),
          a.pattern([
            /[^\s"'`\[\\]+/,
            i
          ])
        ]),
        a.any([
          a.pattern([
            /([^\s"'`\[\\]+-)?\[[^\s`]+\]\/[\w_-]+/,
            i
          ]),
          a.pattern([
            /([^\s"'`\[\\]+-)?\[[^\s`]+\]/,
            i
          ]),
          a.pattern([
            /[^\s`\[\\]+/,
            i
          ])
        ])
      ];
      for (const n2 of m)
        yield a.pattern([
          "((?=((",
          n2,
          ")+))\\2)?",
          /!?/,
          o2,
          v3
        ]);
      yield /[^<>"'`\s.(){}[\]#=%$][^<>"'`\s(){}[\]#=%$]*[^<>"'`\s.(){}[\]#=%:$]/g;
    }
    let c2 = /([\[\]'"`])([^\[\]'"`])?/g, t8 = /[^"'`\s<>\]]+/;
    function e2(r2) {
      if (!r2.includes("-["))
        return r2;
      let i = 0, o2 = [], v3 = r2.matchAll(c2);
      v3 = Array.from(v3).flatMap((m) => {
        const [, ...n2] = m;
        return n2.map((d2, _3) => Object.assign([], m, {
          index: m.index + _3,
          0: d2
        }));
      });
      for (let m of v3) {
        let n2 = m[0], d2 = o2[o2.length - 1];
        if (n2 === d2 ? o2.pop() : (n2 === "'" || n2 === '"' || n2 === "`") && o2.push(n2), !d2) {
          if (n2 === "[") {
            i++;
            continue;
          } else if (n2 === "]") {
            i--;
            continue;
          }
          if (i < 0)
            return r2.substring(0, m.index - 1);
          if (i === 0 && !t8.test(n2))
            return r2.substring(0, m.index);
        }
      }
      return r2;
    }
  }(di2)), di2;
}
var Jo3;
function jf() {
  return Jo3 || (Jo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return y2;
      }
    });
    const a = /* @__PURE__ */ t8(Ne3), h2 = /* @__PURE__ */ t8(Uf()), p = /* @__PURE__ */ r2(yr3()), l2 = wr3(), f = /* @__PURE__ */ t8(tt3()), s2 = /* @__PURE__ */ t8(zf()), c2 = Vf();
    function t8(x) {
      return x && x.__esModule ? x : {
        default: x
      };
    }
    function e2(x) {
      if (typeof WeakMap != "function")
        return null;
      var g2 = /* @__PURE__ */ new WeakMap, O3 = /* @__PURE__ */ new WeakMap;
      return (e2 = function(A) {
        return A ? O3 : g2;
      })(x);
    }
    function r2(x, g2) {
      if (x && x.__esModule)
        return x;
      if (x === null || typeof x != "object" && typeof x != "function")
        return {
          default: x
        };
      var O3 = e2(g2);
      if (O3 && O3.has(x))
        return O3.get(x);
      var A = {}, E2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var b3 in x)
        if (b3 !== "default" && Object.prototype.hasOwnProperty.call(x, b3)) {
          var k3 = E2 ? Object.getOwnPropertyDescriptor(x, b3) : null;
          k3 && (k3.get || k3.set) ? Object.defineProperty(A, b3, k3) : A[b3] = x[b3];
        }
      return A.default = x, O3 && O3.set(x, A), A;
    }
    let i = p.env;
    const o2 = {
      DEFAULT: c2.defaultExtractor
    }, v3 = {
      DEFAULT: (x) => x,
      svelte: (x) => x.replace(/(?:^|\s)class:/g, " ")
    };
    function m(x, g2) {
      let O3 = x.tailwindConfig.content.extract;
      return O3[g2] || O3.DEFAULT || o2[g2] || o2.DEFAULT(x);
    }
    function n2(x, g2) {
      let O3 = x.content.transform;
      return O3[g2] || O3.DEFAULT || v3[g2] || v3.DEFAULT;
    }
    let d2 = /* @__PURE__ */ new WeakMap;
    function _3(x, g2, O3, A) {
      d2.has(g2) || d2.set(g2, new h2.default({
        maxSize: 25000
      }));
      for (let E2 of x.split(`
`))
        if (E2 = E2.trim(), !A.has(E2))
          if (A.add(E2), d2.get(g2).has(E2))
            for (let b3 of d2.get(g2).get(E2))
              O3.add(b3);
          else {
            let b3 = g2(E2).filter((q2) => q2 !== "!*"), k3 = new Set(b3);
            for (let q2 of k3)
              O3.add(q2);
            d2.get(g2).set(E2, k3);
          }
    }
    function w3(x, g2) {
      let O3 = g2.offsets.sort(x), A = {
        base: /* @__PURE__ */ new Set,
        defaults: /* @__PURE__ */ new Set,
        components: /* @__PURE__ */ new Set,
        utilities: /* @__PURE__ */ new Set,
        variants: /* @__PURE__ */ new Set
      };
      for (let [E2, b3] of O3)
        A[E2.layer].add(b3);
      return A;
    }
    function y2(x) {
      return async (g2) => {
        let O3 = {
          base: null,
          components: null,
          utilities: null,
          variants: null
        };
        if (g2.walkAtRules((F) => {
          F.name === "tailwind" && Object.keys(O3).includes(F.params) && (O3[F.params] = F);
        }), Object.values(O3).every((F) => F === null))
          return g2;
        var A;
        let E2 = /* @__PURE__ */ new Set([
          ...(A = x.candidates) !== null && A !== undefined ? A : [],
          p.NOT_ON_DEMAND
        ]), b3 = /* @__PURE__ */ new Set;
        i.DEBUG && console.time("Reading changed files");
        let k3 = [];
        for (let F of x.changedContent) {
          let D = n2(x.tailwindConfig, F.extension), I3 = m(x, F.extension);
          k3.push([
            F,
            {
              transformer: D,
              extractor: I3
            }
          ]);
        }
        const q2 = 500;
        for (let F = 0;F < k3.length; F += q2) {
          let D = k3.slice(F, F + q2);
          await Promise.all(D.map(async ([{ file: I3, content: N3 }, { transformer: J3, extractor: T3 }]) => {
            N3 = I3 ? await a.default.promises.readFile(I3, "utf8") : N3, _3(J3(N3), T3, E2, b3);
          }));
        }
        i.DEBUG && console.timeEnd("Reading changed files");
        let M2 = x.classCache.size;
        i.DEBUG && console.time("Generate rules"), i.DEBUG && console.time("Sorting candidates");
        let W3 = new Set([
          ...E2
        ].sort((F, D) => F === D ? 0 : F < D ? -1 : 1));
        i.DEBUG && console.timeEnd("Sorting candidates"), (0, l2.generateRules)(W3, x), i.DEBUG && console.timeEnd("Generate rules"), i.DEBUG && console.time("Build stylesheet"), (x.stylesheetCache === null || x.classCache.size !== M2) && (x.stylesheetCache = w3([
          ...x.ruleCache
        ], x)), i.DEBUG && console.timeEnd("Build stylesheet");
        let { defaults: S3, base: P3, components: C, utilities: R3, variants: $2 } = x.stylesheetCache;
        O3.base && (O3.base.before((0, s2.default)([
          ...P3,
          ...S3
        ], O3.base.source, {
          layer: "base"
        })), O3.base.remove()), O3.components && (O3.components.before((0, s2.default)([
          ...C
        ], O3.components.source, {
          layer: "components"
        })), O3.components.remove()), O3.utilities && (O3.utilities.before((0, s2.default)([
          ...R3
        ], O3.utilities.source, {
          layer: "utilities"
        })), O3.utilities.remove());
        const B3 = Array.from($2).filter((F) => {
          var D;
          const I3 = (D = F.raws.tailwind) === null || D === undefined ? undefined : D.parentLayer;
          return I3 === "components" ? O3.components !== null : I3 === "utilities" ? O3.utilities !== null : true;
        });
        O3.variants ? (O3.variants.before((0, s2.default)(B3, O3.variants.source, {
          layer: "variants"
        })), O3.variants.remove()) : B3.length > 0 && g2.append((0, s2.default)(B3, g2.source, {
          layer: "variants"
        }));
        var z3;
        g2.source.end = (z3 = g2.source.end) !== null && z3 !== undefined ? z3 : g2.source.start;
        const L3 = B3.some((F) => {
          var D;
          return ((D = F.raws.tailwind) === null || D === undefined ? undefined : D.parentLayer) === "utilities";
        });
        O3.utilities && R3.size === 0 && !L3 && f.default.warn("content-problems", [
          "No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.",
          "https://tailwindcss.com/docs/content-configuration"
        ]), i.DEBUG && (console.log("Potential classes: ", E2.size), console.log("Active contexts: ", p.contextSourcesMap.size)), x.changedContent = [], g2.walkAtRules("layer", (F) => {
          Object.keys(O3).includes(F.params) && F.remove();
        });
      };
    }
  }(ui2)), ui2;
}
var Bf = jf();
var Gf = /* @__PURE__ */ He3(Bf);
var Yf = wr3();
var hi2 = {};
var Ko3;
function Qf() {
  return Ko3 || (Ko3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return h2;
      }
    });
    function a(p) {
      if (!p.walkAtRules)
        return;
      let l2 = /* @__PURE__ */ new Set;
      if (p.walkAtRules("apply", (f) => {
        l2.add(f.parent);
      }), l2.size !== 0)
        for (let f of l2) {
          let s2 = [], c2 = [];
          for (let t8 of f.nodes)
            t8.type === "atrule" && t8.name === "apply" ? (c2.length > 0 && (s2.push(c2), c2 = []), s2.push([
              t8
            ])) : c2.push(t8);
          if (c2.length > 0 && s2.push(c2), s2.length !== 1) {
            for (let t8 of [
              ...s2
            ].reverse()) {
              let e2 = f.clone({
                nodes: []
              });
              e2.append(t8), f.after(e2);
            }
            f.remove();
          }
        }
    }
    function h2() {
      return (p) => {
        a(p);
      };
    }
  }(hi2)), hi2;
}
var Hf = Qf();
var Xo3 = /* @__PURE__ */ He3(Hf);
var vi2 = {};
var Zo3;
function Jf() {
  return Zo3 || (Zo3 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    });
    function a(o2, v3) {
      for (var m in v3)
        Object.defineProperty(o2, m, {
          enumerable: true,
          get: v3[m]
        });
    }
    a(u, {
      elementSelectorParser: function() {
        return t8;
      },
      default: function() {
        return i;
      }
    });
    const h2 = /* @__PURE__ */ f(Be2()), p = /* @__PURE__ */ f(Ke3()), l2 = it3();
    function f(o2) {
      return o2 && o2.__esModule ? o2 : {
        default: o2
      };
    }
    let s2 = {
      id(o2) {
        return p.default.attribute({
          attribute: "id",
          operator: "=",
          value: o2.value,
          quoteMark: '"'
        });
      }
    };
    function c2(o2) {
      let v3 = o2.filter((y2) => y2.type !== "pseudo" || y2.nodes.length > 0 ? true : y2.value.startsWith("::") || [
        ":before",
        ":after",
        ":first-line",
        ":first-letter"
      ].includes(y2.value)).reverse(), m = /* @__PURE__ */ new Set([
        "tag",
        "class",
        "id",
        "attribute"
      ]), n2 = v3.findIndex((y2) => m.has(y2.type));
      if (n2 === -1)
        return v3.reverse().join("").trim();
      let d2 = v3[n2], _3 = s2[d2.type] ? s2[d2.type](d2) : d2;
      v3 = v3.slice(0, n2);
      let w3 = v3.findIndex((y2) => y2.type === "combinator" && y2.value === ">");
      return w3 !== -1 && (v3.splice(0, w3), v3.unshift(p.default.universal())), [
        _3,
        ...v3.reverse()
      ].join("").trim();
    }
    let t8 = (0, p.default)((o2) => o2.map((v3) => {
      let m = v3.split((n2) => n2.type === "combinator" && n2.value === " ").pop();
      return c2(m);
    })), e2 = /* @__PURE__ */ new Map;
    function r2(o2) {
      return e2.has(o2) || e2.set(o2, t8.transformSync(o2)), e2.get(o2);
    }
    function i({ tailwindConfig: o2 }) {
      return (v3) => {
        let m = /* @__PURE__ */ new Map, n2 = /* @__PURE__ */ new Set;
        if (v3.walkAtRules("defaults", (w3) => {
          if (w3.nodes && w3.nodes.length > 0) {
            n2.add(w3);
            return;
          }
          let y2 = w3.params;
          m.has(y2) || m.set(y2, /* @__PURE__ */ new Set), m.get(y2).add(w3.parent), w3.remove();
        }), (0, l2.flagEnabled)(o2, "optimizeUniversalDefaults"))
          for (let w3 of n2) {
            let y2 = /* @__PURE__ */ new Map;
            var d2;
            let x = (d2 = m.get(w3.params)) !== null && d2 !== undefined ? d2 : [];
            for (let g2 of x)
              for (let O3 of r2(g2.selector)) {
                let A = O3.includes(":-") || O3.includes("::-") || O3.includes(":has") ? O3 : "__DEFAULT__";
                var _3;
                let E2 = (_3 = y2.get(A)) !== null && _3 !== undefined ? _3 : /* @__PURE__ */ new Set;
                y2.set(A, E2), E2.add(O3);
              }
            if ((0, l2.flagEnabled)(o2, "optimizeUniversalDefaults")) {
              if (y2.size === 0) {
                w3.remove();
                continue;
              }
              for (let [, g2] of y2) {
                let O3 = h2.default.rule({
                  source: w3.source
                });
                O3.selectors = [
                  ...g2
                ], O3.append(w3.nodes.map((A) => A.clone())), w3.before(O3);
              }
            }
            w3.remove();
          }
        else if (n2.size) {
          let w3 = h2.default.rule({
            selectors: [
              "*",
              "::before",
              "::after"
            ]
          });
          for (let x of n2)
            w3.append(x.nodes), w3.parent || x.before(w3), w3.source || (w3.source = x.source), x.remove();
          let y2 = w3.clone({
            selectors: [
              "::backdrop"
            ]
          });
          w3.after(y2);
        }
      };
    }
  }(vi2)), vi2;
}
var Kf = Jf();
var Xf = /* @__PURE__ */ He3(Kf);
var gi2 = {};
var el;
function Zf() {
  return el || (el = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return l2;
      }
    });
    const a = Ui2(), h2 = /* @__PURE__ */ p(zi2());
    function p(f) {
      return f && f.__esModule ? f : {
        default: f
      };
    }
    function l2({ tailwindConfig: { theme: f } }) {
      return function(s2) {
        s2.walkAtRules("screen", (c2) => {
          let t8 = c2.params, r2 = (0, a.normalizeScreens)(f.screens).find(({ name: i }) => i === t8);
          if (!r2)
            throw c2.error(`No \`${t8}\` screen found.`);
          c2.name = "media", c2.params = (0, h2.default)(r2);
        });
      };
    }
  }(gi2)), gi2;
}
var ec = Zf();
var tc = /* @__PURE__ */ He3(ec);
var rc = (u, a) => u instanceof Ra2 && a instanceof Ra2 ? u.selector === a.selector || a.selector.includes("*") || a.selector.includes(":root") : u === a;
var nc = (u) => (u.walkRules((a) => {
  const h2 = /* @__PURE__ */ new Map, p = /* @__PURE__ */ new Set;
  a.walkDecls((l2) => {
    if (/var\(--[^\s)]+\)/.test(l2.value)) {
      const f = [
        ...l2.value.matchAll(/var\(--[^\s)]+\)/gm)
      ].map((s2) => s2.toString());
      u.walkDecls((s2) => {
        var c2;
        if (/--[^\s]+/.test(s2.prop)) {
          const t8 = `var(${s2.prop})`;
          if (f != null && f.includes(t8) && rc(l2.parent, s2.parent)) {
            if (((c2 = s2.parent) == null ? undefined : c2.parent) instanceof wl && s2.parent !== l2.parent) {
              const e2 = s2.parent.parent, r2 = xu2();
              r2.prop = l2.prop, r2.value = l2.value.replaceAll(t8, s2.value), r2.important = l2.important;
              const i = h2.get(e2);
              i ? i.add(r2) : h2.set(s2.parent.parent, /* @__PURE__ */ new Set([r2]));
              return;
            }
            p.add({
              declaration: l2,
              replacing: t8,
              replacement: s2.value
            });
          }
        }
      });
    }
  });
  for (const {
    declaration: l2,
    replacing: f,
    replacement: s2
  } of p)
    l2.value = l2.value.replaceAll(f, s2);
  for (const [l2, f] of h2.entries()) {
    const s2 = Su2();
    s2.selector = a.selector, s2.append(...f), l2.append(s2);
  }
}), u.walkDecls((a) => {
  if (/--[^\s]+/.test(a.prop)) {
    const h2 = a.parent;
    a.remove(), h2 && Li2(h2);
  }
}), u);
var ic = Ki2();
var mi2 = {};
var yi2 = {};
var wi2 = {};
var tl;
function ac() {
  return tl || (tl = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    const a = [
      "preflight",
      "container",
      "accessibility",
      "pointerEvents",
      "visibility",
      "position",
      "inset",
      "isolation",
      "zIndex",
      "order",
      "gridColumn",
      "gridColumnStart",
      "gridColumnEnd",
      "gridRow",
      "gridRowStart",
      "gridRowEnd",
      "float",
      "clear",
      "margin",
      "boxSizing",
      "lineClamp",
      "display",
      "aspectRatio",
      "size",
      "height",
      "maxHeight",
      "minHeight",
      "width",
      "minWidth",
      "maxWidth",
      "flex",
      "flexShrink",
      "flexGrow",
      "flexBasis",
      "tableLayout",
      "captionSide",
      "borderCollapse",
      "borderSpacing",
      "transformOrigin",
      "translate",
      "rotate",
      "skew",
      "scale",
      "transform",
      "animation",
      "cursor",
      "touchAction",
      "userSelect",
      "resize",
      "scrollSnapType",
      "scrollSnapAlign",
      "scrollSnapStop",
      "scrollMargin",
      "scrollPadding",
      "listStylePosition",
      "listStyleType",
      "listStyleImage",
      "appearance",
      "columns",
      "breakBefore",
      "breakInside",
      "breakAfter",
      "gridAutoColumns",
      "gridAutoFlow",
      "gridAutoRows",
      "gridTemplateColumns",
      "gridTemplateRows",
      "flexDirection",
      "flexWrap",
      "placeContent",
      "placeItems",
      "alignContent",
      "alignItems",
      "justifyContent",
      "justifyItems",
      "gap",
      "space",
      "divideWidth",
      "divideStyle",
      "divideColor",
      "divideOpacity",
      "placeSelf",
      "alignSelf",
      "justifySelf",
      "overflow",
      "overscrollBehavior",
      "scrollBehavior",
      "textOverflow",
      "hyphens",
      "whitespace",
      "textWrap",
      "wordBreak",
      "borderRadius",
      "borderWidth",
      "borderStyle",
      "borderColor",
      "borderOpacity",
      "backgroundColor",
      "backgroundOpacity",
      "backgroundImage",
      "gradientColorStops",
      "boxDecorationBreak",
      "backgroundSize",
      "backgroundAttachment",
      "backgroundClip",
      "backgroundPosition",
      "backgroundRepeat",
      "backgroundOrigin",
      "fill",
      "stroke",
      "strokeWidth",
      "objectFit",
      "objectPosition",
      "padding",
      "textAlign",
      "textIndent",
      "verticalAlign",
      "fontFamily",
      "fontSize",
      "fontWeight",
      "textTransform",
      "fontStyle",
      "fontVariantNumeric",
      "lineHeight",
      "letterSpacing",
      "textColor",
      "textOpacity",
      "textDecoration",
      "textDecorationColor",
      "textDecorationStyle",
      "textDecorationThickness",
      "textUnderlineOffset",
      "fontSmoothing",
      "placeholderColor",
      "placeholderOpacity",
      "caretColor",
      "accentColor",
      "opacity",
      "backgroundBlendMode",
      "mixBlendMode",
      "boxShadow",
      "boxShadowColor",
      "outlineStyle",
      "outlineWidth",
      "outlineOffset",
      "outlineColor",
      "ringWidth",
      "ringColor",
      "ringOpacity",
      "ringOffsetWidth",
      "ringOffsetColor",
      "blur",
      "brightness",
      "contrast",
      "dropShadow",
      "grayscale",
      "hueRotate",
      "invert",
      "saturate",
      "sepia",
      "filter",
      "backdropBlur",
      "backdropBrightness",
      "backdropContrast",
      "backdropGrayscale",
      "backdropHueRotate",
      "backdropInvert",
      "backdropOpacity",
      "backdropSaturate",
      "backdropSepia",
      "backdropFilter",
      "transitionProperty",
      "transitionDelay",
      "transitionDuration",
      "transitionTimingFunction",
      "willChange",
      "contain",
      "content",
      "forcedColorAdjust"
    ];
  }(wi2)), wi2;
}
var bi2 = {};
var rl;
function sc() {
  return rl || (rl = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2, p) {
      return h2 === undefined ? p : Array.isArray(h2) ? h2 : [
        ...new Set(p.filter((f) => h2 !== false && h2[f] !== false).concat(Object.keys(h2).filter((f) => h2[f] !== false)))
      ];
    }
  }(bi2)), bi2;
}
var _i2 = {};
var nl2;
function oc() {
  return nl2 || (nl2 = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return l2;
      }
    });
    const a = /* @__PURE__ */ h2(tt3());
    function h2(f) {
      return f && f.__esModule ? f : {
        default: f
      };
    }
    function p({ version: f, from: s2, to: c2 }) {
      a.default.warn(`${s2}-color-renamed`, [
        `As of Tailwind CSS ${f}, \`${s2}\` has been renamed to \`${c2}\`.`,
        "Update your configuration file to silence this warning."
      ]);
    }
    const l2 = {
      inherit: "inherit",
      current: "currentColor",
      transparent: "transparent",
      black: "#000",
      white: "#fff",
      slate: {
        50: "#f8fafc",
        100: "#f1f5f9",
        200: "#e2e8f0",
        300: "#cbd5e1",
        400: "#94a3b8",
        500: "#64748b",
        600: "#475569",
        700: "#334155",
        800: "#1e293b",
        900: "#0f172a",
        950: "#020617"
      },
      gray: {
        50: "#f9fafb",
        100: "#f3f4f6",
        200: "#e5e7eb",
        300: "#d1d5db",
        400: "#9ca3af",
        500: "#6b7280",
        600: "#4b5563",
        700: "#374151",
        800: "#1f2937",
        900: "#111827",
        950: "#030712"
      },
      zinc: {
        50: "#fafafa",
        100: "#f4f4f5",
        200: "#e4e4e7",
        300: "#d4d4d8",
        400: "#a1a1aa",
        500: "#71717a",
        600: "#52525b",
        700: "#3f3f46",
        800: "#27272a",
        900: "#18181b",
        950: "#09090b"
      },
      neutral: {
        50: "#fafafa",
        100: "#f5f5f5",
        200: "#e5e5e5",
        300: "#d4d4d4",
        400: "#a3a3a3",
        500: "#737373",
        600: "#525252",
        700: "#404040",
        800: "#262626",
        900: "#171717",
        950: "#0a0a0a"
      },
      stone: {
        50: "#fafaf9",
        100: "#f5f5f4",
        200: "#e7e5e4",
        300: "#d6d3d1",
        400: "#a8a29e",
        500: "#78716c",
        600: "#57534e",
        700: "#44403c",
        800: "#292524",
        900: "#1c1917",
        950: "#0c0a09"
      },
      red: {
        50: "#fef2f2",
        100: "#fee2e2",
        200: "#fecaca",
        300: "#fca5a5",
        400: "#f87171",
        500: "#ef4444",
        600: "#dc2626",
        700: "#b91c1c",
        800: "#991b1b",
        900: "#7f1d1d",
        950: "#450a0a"
      },
      orange: {
        50: "#fff7ed",
        100: "#ffedd5",
        200: "#fed7aa",
        300: "#fdba74",
        400: "#fb923c",
        500: "#f97316",
        600: "#ea580c",
        700: "#c2410c",
        800: "#9a3412",
        900: "#7c2d12",
        950: "#431407"
      },
      amber: {
        50: "#fffbeb",
        100: "#fef3c7",
        200: "#fde68a",
        300: "#fcd34d",
        400: "#fbbf24",
        500: "#f59e0b",
        600: "#d97706",
        700: "#b45309",
        800: "#92400e",
        900: "#78350f",
        950: "#451a03"
      },
      yellow: {
        50: "#fefce8",
        100: "#fef9c3",
        200: "#fef08a",
        300: "#fde047",
        400: "#facc15",
        500: "#eab308",
        600: "#ca8a04",
        700: "#a16207",
        800: "#854d0e",
        900: "#713f12",
        950: "#422006"
      },
      lime: {
        50: "#f7fee7",
        100: "#ecfccb",
        200: "#d9f99d",
        300: "#bef264",
        400: "#a3e635",
        500: "#84cc16",
        600: "#65a30d",
        700: "#4d7c0f",
        800: "#3f6212",
        900: "#365314",
        950: "#1a2e05"
      },
      green: {
        50: "#f0fdf4",
        100: "#dcfce7",
        200: "#bbf7d0",
        300: "#86efac",
        400: "#4ade80",
        500: "#22c55e",
        600: "#16a34a",
        700: "#15803d",
        800: "#166534",
        900: "#14532d",
        950: "#052e16"
      },
      emerald: {
        50: "#ecfdf5",
        100: "#d1fae5",
        200: "#a7f3d0",
        300: "#6ee7b7",
        400: "#34d399",
        500: "#10b981",
        600: "#059669",
        700: "#047857",
        800: "#065f46",
        900: "#064e3b",
        950: "#022c22"
      },
      teal: {
        50: "#f0fdfa",
        100: "#ccfbf1",
        200: "#99f6e4",
        300: "#5eead4",
        400: "#2dd4bf",
        500: "#14b8a6",
        600: "#0d9488",
        700: "#0f766e",
        800: "#115e59",
        900: "#134e4a",
        950: "#042f2e"
      },
      cyan: {
        50: "#ecfeff",
        100: "#cffafe",
        200: "#a5f3fc",
        300: "#67e8f9",
        400: "#22d3ee",
        500: "#06b6d4",
        600: "#0891b2",
        700: "#0e7490",
        800: "#155e75",
        900: "#164e63",
        950: "#083344"
      },
      sky: {
        50: "#f0f9ff",
        100: "#e0f2fe",
        200: "#bae6fd",
        300: "#7dd3fc",
        400: "#38bdf8",
        500: "#0ea5e9",
        600: "#0284c7",
        700: "#0369a1",
        800: "#075985",
        900: "#0c4a6e",
        950: "#082f49"
      },
      blue: {
        50: "#eff6ff",
        100: "#dbeafe",
        200: "#bfdbfe",
        300: "#93c5fd",
        400: "#60a5fa",
        500: "#3b82f6",
        600: "#2563eb",
        700: "#1d4ed8",
        800: "#1e40af",
        900: "#1e3a8a",
        950: "#172554"
      },
      indigo: {
        50: "#eef2ff",
        100: "#e0e7ff",
        200: "#c7d2fe",
        300: "#a5b4fc",
        400: "#818cf8",
        500: "#6366f1",
        600: "#4f46e5",
        700: "#4338ca",
        800: "#3730a3",
        900: "#312e81",
        950: "#1e1b4b"
      },
      violet: {
        50: "#f5f3ff",
        100: "#ede9fe",
        200: "#ddd6fe",
        300: "#c4b5fd",
        400: "#a78bfa",
        500: "#8b5cf6",
        600: "#7c3aed",
        700: "#6d28d9",
        800: "#5b21b6",
        900: "#4c1d95",
        950: "#2e1065"
      },
      purple: {
        50: "#faf5ff",
        100: "#f3e8ff",
        200: "#e9d5ff",
        300: "#d8b4fe",
        400: "#c084fc",
        500: "#a855f7",
        600: "#9333ea",
        700: "#7e22ce",
        800: "#6b21a8",
        900: "#581c87",
        950: "#3b0764"
      },
      fuchsia: {
        50: "#fdf4ff",
        100: "#fae8ff",
        200: "#f5d0fe",
        300: "#f0abfc",
        400: "#e879f9",
        500: "#d946ef",
        600: "#c026d3",
        700: "#a21caf",
        800: "#86198f",
        900: "#701a75",
        950: "#4a044e"
      },
      pink: {
        50: "#fdf2f8",
        100: "#fce7f3",
        200: "#fbcfe8",
        300: "#f9a8d4",
        400: "#f472b6",
        500: "#ec4899",
        600: "#db2777",
        700: "#be185d",
        800: "#9d174d",
        900: "#831843",
        950: "#500724"
      },
      rose: {
        50: "#fff1f2",
        100: "#ffe4e6",
        200: "#fecdd3",
        300: "#fda4af",
        400: "#fb7185",
        500: "#f43f5e",
        600: "#e11d48",
        700: "#be123c",
        800: "#9f1239",
        900: "#881337",
        950: "#4c0519"
      },
      get lightBlue() {
        return p({
          version: "v2.2",
          from: "lightBlue",
          to: "sky"
        }), this.sky;
      },
      get warmGray() {
        return p({
          version: "v3.0",
          from: "warmGray",
          to: "stone"
        }), this.stone;
      },
      get trueGray() {
        return p({
          version: "v3.0",
          from: "trueGray",
          to: "neutral"
        }), this.neutral;
      },
      get coolGray() {
        return p({
          version: "v3.0",
          from: "coolGray",
          to: "gray"
        }), this.gray;
      },
      get blueGray() {
        return p({
          version: "v3.0",
          from: "blueGray",
          to: "slate"
        }), this.slate;
      }
    };
  }(_i2)), _i2;
}
var Si2 = {};
var il;
function lc() {
  return il || (il = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "defaults", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2, ...p) {
      for (let s2 of p) {
        for (let c2 in s2) {
          var l2;
          !(h2 == null || (l2 = h2.hasOwnProperty) === null || l2 === undefined) && l2.call(h2, c2) || (h2[c2] = s2[c2]);
        }
        for (let c2 of Object.getOwnPropertySymbols(s2)) {
          var f;
          !(h2 == null || (f = h2.hasOwnProperty) === null || f === undefined) && f.call(h2, c2) || (h2[c2] = s2[c2]);
        }
      }
      return h2;
    }
  }(Si2)), Si2;
}
var xi2 = {};
var al;
function uc() {
  return al || (al = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "normalizeConfig", {
      enumerable: true,
      get: function() {
        return f;
      }
    });
    const a = it3(), h2 = /* @__PURE__ */ l2(tt3());
    function p(s2) {
      if (typeof WeakMap != "function")
        return null;
      var c2 = /* @__PURE__ */ new WeakMap, t8 = /* @__PURE__ */ new WeakMap;
      return (p = function(e2) {
        return e2 ? t8 : c2;
      })(s2);
    }
    function l2(s2, c2) {
      if (s2 && s2.__esModule)
        return s2;
      if (s2 === null || typeof s2 != "object" && typeof s2 != "function")
        return {
          default: s2
        };
      var t8 = p(c2);
      if (t8 && t8.has(s2))
        return t8.get(s2);
      var e2 = {}, r2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var i in s2)
        if (i !== "default" && Object.prototype.hasOwnProperty.call(s2, i)) {
          var o2 = r2 ? Object.getOwnPropertyDescriptor(s2, i) : null;
          o2 && (o2.get || o2.set) ? Object.defineProperty(e2, i, o2) : e2[i] = s2[i];
        }
      return e2.default = s2, t8 && t8.set(s2, e2), e2;
    }
    function f(s2) {
      if ((() => {
        if (s2.purge || !s2.content || !Array.isArray(s2.content) && !(typeof s2.content == "object" && s2.content !== null))
          return false;
        if (Array.isArray(s2.content))
          return s2.content.every((e2) => typeof e2 == "string" ? true : !(typeof (e2 == null ? undefined : e2.raw) != "string" || e2 != null && e2.extension && typeof (e2 == null ? undefined : e2.extension) != "string"));
        if (typeof s2.content == "object" && s2.content !== null) {
          if (Object.keys(s2.content).some((e2) => ![
            "files",
            "relative",
            "extract",
            "transform"
          ].includes(e2)))
            return false;
          if (Array.isArray(s2.content.files)) {
            if (!s2.content.files.every((e2) => typeof e2 == "string" ? true : !(typeof (e2 == null ? undefined : e2.raw) != "string" || e2 != null && e2.extension && typeof (e2 == null ? undefined : e2.extension) != "string")))
              return false;
            if (typeof s2.content.extract == "object") {
              for (let e2 of Object.values(s2.content.extract))
                if (typeof e2 != "function")
                  return false;
            } else if (!(s2.content.extract === undefined || typeof s2.content.extract == "function"))
              return false;
            if (typeof s2.content.transform == "object") {
              for (let e2 of Object.values(s2.content.transform))
                if (typeof e2 != "function")
                  return false;
            } else if (!(s2.content.transform === undefined || typeof s2.content.transform == "function"))
              return false;
            if (typeof s2.content.relative != "boolean" && typeof s2.content.relative < "u")
              return false;
          }
          return true;
        }
        return false;
      })() || h2.default.warn("purge-deprecation", [
        "The `purge`/`content` options have changed in Tailwind CSS v3.0.",
        "Update your configuration file to eliminate this warning.",
        "https://tailwindcss.com/docs/upgrade-guide#configure-content-sources"
      ]), s2.safelist = (() => {
        var e2;
        let { content: r2, purge: i, safelist: o2 } = s2;
        return Array.isArray(o2) ? o2 : Array.isArray(r2 == null ? undefined : r2.safelist) ? r2.safelist : Array.isArray(i == null ? undefined : i.safelist) ? i.safelist : Array.isArray(i == null || (e2 = i.options) === null || e2 === undefined ? undefined : e2.safelist) ? i.options.safelist : [];
      })(), s2.blocklist = (() => {
        let { blocklist: e2 } = s2;
        if (Array.isArray(e2)) {
          if (e2.every((r2) => typeof r2 == "string"))
            return e2;
          h2.default.warn("blocklist-invalid", [
            "The `blocklist` option must be an array of strings.",
            "https://tailwindcss.com/docs/content-configuration#discarding-classes"
          ]);
        }
        return [];
      })(), typeof s2.prefix == "function")
        h2.default.warn("prefix-function", [
          "As of Tailwind CSS v3.0, `prefix` cannot be a function.",
          "Update `prefix` in your configuration to be a string to eliminate this warning.",
          "https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function"
        ]), s2.prefix = "";
      else {
        var t8;
        s2.prefix = (t8 = s2.prefix) !== null && t8 !== undefined ? t8 : "";
      }
      s2.content = {
        relative: (() => {
          let { content: e2 } = s2;
          return e2 != null && e2.relative ? e2.relative : (0, a.flagEnabled)(s2, "relativeContentPathsByDefault");
        })(),
        files: (() => {
          let { content: e2, purge: r2 } = s2;
          return Array.isArray(r2) ? r2 : Array.isArray(r2 == null ? undefined : r2.content) ? r2.content : Array.isArray(e2) ? e2 : Array.isArray(e2 == null ? undefined : e2.content) ? e2.content : Array.isArray(e2 == null ? undefined : e2.files) ? e2.files : [];
        })(),
        extract: (() => {
          let e2 = (() => {
            var o2, v3, m, n2, d2, _3, w3, y2, x, g2;
            return !((o2 = s2.purge) === null || o2 === undefined) && o2.extract ? s2.purge.extract : !((v3 = s2.content) === null || v3 === undefined) && v3.extract ? s2.content.extract : !((m = s2.purge) === null || m === undefined || (n2 = m.extract) === null || n2 === undefined) && n2.DEFAULT ? s2.purge.extract.DEFAULT : !((d2 = s2.content) === null || d2 === undefined || (_3 = d2.extract) === null || _3 === undefined) && _3.DEFAULT ? s2.content.extract.DEFAULT : !((w3 = s2.purge) === null || w3 === undefined || (y2 = w3.options) === null || y2 === undefined) && y2.extractors ? s2.purge.options.extractors : !((x = s2.content) === null || x === undefined || (g2 = x.options) === null || g2 === undefined) && g2.extractors ? s2.content.options.extractors : {};
          })(), r2 = {}, i = (() => {
            var o2, v3, m, n2;
            if (!((o2 = s2.purge) === null || o2 === undefined || (v3 = o2.options) === null || v3 === undefined) && v3.defaultExtractor)
              return s2.purge.options.defaultExtractor;
            if (!((m = s2.content) === null || m === undefined || (n2 = m.options) === null || n2 === undefined) && n2.defaultExtractor)
              return s2.content.options.defaultExtractor;
          })();
          if (i !== undefined && (r2.DEFAULT = i), typeof e2 == "function")
            r2.DEFAULT = e2;
          else if (Array.isArray(e2))
            for (let { extensions: o2, extractor: v3 } of e2 ?? [])
              for (let m of o2)
                r2[m] = v3;
          else
            typeof e2 == "object" && e2 !== null && Object.assign(r2, e2);
          return r2;
        })(),
        transform: (() => {
          let e2 = (() => {
            var i, o2, v3, m, n2, d2;
            return !((i = s2.purge) === null || i === undefined) && i.transform ? s2.purge.transform : !((o2 = s2.content) === null || o2 === undefined) && o2.transform ? s2.content.transform : !((v3 = s2.purge) === null || v3 === undefined || (m = v3.transform) === null || m === undefined) && m.DEFAULT ? s2.purge.transform.DEFAULT : !((n2 = s2.content) === null || n2 === undefined || (d2 = n2.transform) === null || d2 === undefined) && d2.DEFAULT ? s2.content.transform.DEFAULT : {};
          })(), r2 = {};
          return typeof e2 == "function" ? r2.DEFAULT = e2 : typeof e2 == "object" && e2 !== null && Object.assign(r2, e2), r2;
        })()
      };
      for (let e2 of s2.content.files)
        if (typeof e2 == "string" && /{([^,]*?)}/g.test(e2)) {
          h2.default.warn("invalid-glob-braces", [
            `The glob pattern ${(0, h2.dim)(e2)} in your Tailwind CSS configuration is invalid.`,
            `Update it to ${(0, h2.dim)(e2.replace(/{([^,]*?)}/g, "$1"))} to silence this warning.`
          ]);
          break;
        }
      return s2;
    }
  }(xi2)), xi2;
}
var Oi2 = {};
var sl;
function fc() {
  return sl || (sl = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "cloneDeep", {
      enumerable: true,
      get: function() {
        return a;
      }
    });
    function a(h2) {
      return Array.isArray(h2) ? h2.map((p) => a(p)) : typeof h2 == "object" && h2 !== null ? Object.fromEntries(Object.entries(h2).map(([p, l2]) => [
        p,
        a(l2)
      ])) : h2;
    }
  }(Oi2)), Oi2;
}
var ol;
function cc() {
  return ol || (ol = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return q2;
      }
    });
    const a = /* @__PURE__ */ v3(ji2()), h2 = /* @__PURE__ */ v3(ac()), p = /* @__PURE__ */ v3(sc()), l2 = /* @__PURE__ */ v3(oc()), f = lc(), s2 = Wi2(), c2 = uc(), t8 = /* @__PURE__ */ v3(ut3()), e2 = fc(), r2 = gr3(), i = hr3(), o2 = /* @__PURE__ */ v3(iu3());
    function v3(M2) {
      return M2 && M2.__esModule ? M2 : {
        default: M2
      };
    }
    function m(M2) {
      return typeof M2 == "function";
    }
    function n2(M2, ...W3) {
      let S3 = W3.pop();
      for (let P3 of W3)
        for (let C in P3) {
          let R3 = S3(M2[C], P3[C]);
          R3 === undefined ? (0, t8.default)(M2[C]) && (0, t8.default)(P3[C]) ? M2[C] = n2({}, M2[C], P3[C], S3) : M2[C] = P3[C] : M2[C] = R3;
        }
      return M2;
    }
    const d2 = {
      colors: l2.default,
      negative(M2) {
        return Object.keys(M2).filter((W3) => M2[W3] !== "0").reduce((W3, S3) => {
          let P3 = (0, a.default)(M2[S3]);
          return P3 !== undefined && (W3[`-${S3}`] = P3), W3;
        }, {});
      },
      breakpoints(M2) {
        return Object.keys(M2).filter((W3) => typeof M2[W3] == "string").reduce((W3, S3) => ({
          ...W3,
          [`screen-${S3}`]: M2[S3]
        }), {});
      }
    };
    function _3(M2, ...W3) {
      return m(M2) ? M2(...W3) : M2;
    }
    function w3(M2) {
      return M2.reduce((W3, { extend: S3 }) => n2(W3, S3, (P3, C) => P3 === undefined ? [
        C
      ] : Array.isArray(P3) ? [
        C,
        ...P3
      ] : [
        C,
        P3
      ]), {});
    }
    function y2(M2) {
      return {
        ...M2.reduce((W3, S3) => (0, f.defaults)(W3, S3), {}),
        extend: w3(M2)
      };
    }
    function x(M2, W3) {
      if (Array.isArray(M2) && (0, t8.default)(M2[0]))
        return M2.concat(W3);
      if (Array.isArray(W3) && (0, t8.default)(W3[0]) && (0, t8.default)(M2))
        return [
          M2,
          ...W3
        ];
      if (Array.isArray(W3))
        return W3;
    }
    function g2({ extend: M2, ...W3 }) {
      return n2(W3, M2, (S3, P3) => !m(S3) && !P3.some(m) ? n2({}, S3, ...P3, x) : (C, R3) => n2({}, ...[
        S3,
        ...P3
      ].map(($2) => _3($2, C, R3)), x));
    }
    function* O3(M2) {
      let W3 = (0, s2.toPath)(M2);
      if (W3.length === 0 || (yield W3, Array.isArray(M2)))
        return;
      let S3 = /^(.*?)\s*\/\s*([^/]+)$/, P3 = M2.match(S3);
      if (P3 !== null) {
        let [, C, R3] = P3, $2 = (0, s2.toPath)(C);
        $2.alpha = R3, yield $2;
      }
    }
    function A(M2) {
      const W3 = (S3, P3) => {
        for (const C of O3(S3)) {
          let R3 = 0, $2 = M2;
          for (;$2 != null && R3 < C.length; )
            $2 = $2[C[R3++]], $2 = m($2) && (C.alpha === undefined || R3 <= C.length - 1) ? $2(W3, d2) : $2;
          if ($2 !== undefined) {
            if (C.alpha !== undefined) {
              let B3 = (0, r2.parseColorFormat)($2);
              return (0, i.withAlphaValue)(B3, C.alpha, (0, o2.default)(B3));
            }
            return (0, t8.default)($2) ? (0, e2.cloneDeep)($2) : $2;
          }
        }
        return P3;
      };
      return Object.assign(W3, {
        theme: W3,
        ...d2
      }), Object.keys(M2).reduce((S3, P3) => (S3[P3] = m(M2[P3]) ? M2[P3](W3, d2) : M2[P3], S3), {});
    }
    function E2(M2) {
      let W3 = [];
      return M2.forEach((S3) => {
        W3 = [
          ...W3,
          S3
        ];
        var P3;
        const C = (P3 = S3 == null ? undefined : S3.plugins) !== null && P3 !== undefined ? P3 : [];
        C.length !== 0 && C.forEach((R3) => {
          R3.__isOptionsFunction && (R3 = R3());
          var $2;
          W3 = [
            ...W3,
            ...E2([
              ($2 = R3 == null ? undefined : R3.config) !== null && $2 !== undefined ? $2 : {}
            ])
          ];
        });
      }), W3;
    }
    function b3(M2) {
      return [
        ...M2
      ].reduceRight((S3, P3) => m(P3) ? P3({
        corePlugins: S3
      }) : (0, p.default)(P3, S3), h2.default);
    }
    function k3(M2) {
      return [
        ...M2
      ].reduceRight((S3, P3) => [
        ...S3,
        ...P3
      ], []);
    }
    function q2(M2) {
      let W3 = [
        ...E2(M2),
        {
          prefix: "",
          important: false,
          separator: ":"
        }
      ];
      var S3, P3;
      return (0, c2.normalizeConfig)((0, f.defaults)({
        theme: A(g2(y2(W3.map((C) => (S3 = C == null ? undefined : C.theme) !== null && S3 !== undefined ? S3 : {})))),
        corePlugins: b3(W3.map((C) => C.corePlugins)),
        plugins: k3(M2.map((C) => (P3 = C == null ? undefined : C.plugins) !== null && P3 !== undefined ? P3 : []))
      }, ...W3));
    }
  }(yi2)), yi2;
}
var ki2 = {};
var Pi2;
var ll;
function dc() {
  return ll || (ll = 1, Pi2 = {
    content: [],
    presets: [],
    darkMode: "media",
    theme: {
      accentColor: ({ theme: u }) => ({
        ...u("colors"),
        auto: "auto"
      }),
      animation: {
        none: "none",
        spin: "spin 1s linear infinite",
        ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite",
        pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        bounce: "bounce 1s infinite"
      },
      aria: {
        busy: 'busy="true"',
        checked: 'checked="true"',
        disabled: 'disabled="true"',
        expanded: 'expanded="true"',
        hidden: 'hidden="true"',
        pressed: 'pressed="true"',
        readonly: 'readonly="true"',
        required: 'required="true"',
        selected: 'selected="true"'
      },
      aspectRatio: {
        auto: "auto",
        square: "1 / 1",
        video: "16 / 9"
      },
      backdropBlur: ({ theme: u }) => u("blur"),
      backdropBrightness: ({ theme: u }) => u("brightness"),
      backdropContrast: ({ theme: u }) => u("contrast"),
      backdropGrayscale: ({ theme: u }) => u("grayscale"),
      backdropHueRotate: ({ theme: u }) => u("hueRotate"),
      backdropInvert: ({ theme: u }) => u("invert"),
      backdropOpacity: ({ theme: u }) => u("opacity"),
      backdropSaturate: ({ theme: u }) => u("saturate"),
      backdropSepia: ({ theme: u }) => u("sepia"),
      backgroundColor: ({ theme: u }) => u("colors"),
      backgroundImage: {
        none: "none",
        "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))",
        "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))",
        "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))",
        "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))",
        "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))",
        "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))",
        "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))",
        "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))"
      },
      backgroundOpacity: ({ theme: u }) => u("opacity"),
      backgroundPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
      },
      backgroundSize: {
        auto: "auto",
        cover: "cover",
        contain: "contain"
      },
      blur: {
        0: "0",
        none: "",
        sm: "4px",
        DEFAULT: "8px",
        md: "12px",
        lg: "16px",
        xl: "24px",
        "2xl": "40px",
        "3xl": "64px"
      },
      borderColor: ({ theme: u }) => ({
        ...u("colors"),
        DEFAULT: u("colors.gray.200", "currentColor")
      }),
      borderOpacity: ({ theme: u }) => u("opacity"),
      borderRadius: {
        none: "0px",
        sm: "0.125rem",
        DEFAULT: "0.25rem",
        md: "0.375rem",
        lg: "0.5rem",
        xl: "0.75rem",
        "2xl": "1rem",
        "3xl": "1.5rem",
        full: "9999px"
      },
      borderSpacing: ({ theme: u }) => ({
        ...u("spacing")
      }),
      borderWidth: {
        DEFAULT: "1px",
        0: "0px",
        2: "2px",
        4: "4px",
        8: "8px"
      },
      boxShadow: {
        sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)",
        DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)",
        md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",
        lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)",
        xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)",
        "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)",
        inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)",
        none: "none"
      },
      boxShadowColor: ({ theme: u }) => u("colors"),
      brightness: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5",
        200: "2"
      },
      caretColor: ({ theme: u }) => u("colors"),
      colors: ({ colors: u }) => ({
        inherit: u.inherit,
        current: u.current,
        transparent: u.transparent,
        black: u.black,
        white: u.white,
        slate: u.slate,
        gray: u.gray,
        zinc: u.zinc,
        neutral: u.neutral,
        stone: u.stone,
        red: u.red,
        orange: u.orange,
        amber: u.amber,
        yellow: u.yellow,
        lime: u.lime,
        green: u.green,
        emerald: u.emerald,
        teal: u.teal,
        cyan: u.cyan,
        sky: u.sky,
        blue: u.blue,
        indigo: u.indigo,
        violet: u.violet,
        purple: u.purple,
        fuchsia: u.fuchsia,
        pink: u.pink,
        rose: u.rose
      }),
      columns: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        "3xs": "16rem",
        "2xs": "18rem",
        xs: "20rem",
        sm: "24rem",
        md: "28rem",
        lg: "32rem",
        xl: "36rem",
        "2xl": "42rem",
        "3xl": "48rem",
        "4xl": "56rem",
        "5xl": "64rem",
        "6xl": "72rem",
        "7xl": "80rem"
      },
      container: {},
      content: {
        none: "none"
      },
      contrast: {
        0: "0",
        50: ".5",
        75: ".75",
        100: "1",
        125: "1.25",
        150: "1.5",
        200: "2"
      },
      cursor: {
        auto: "auto",
        default: "default",
        pointer: "pointer",
        wait: "wait",
        text: "text",
        move: "move",
        help: "help",
        "not-allowed": "not-allowed",
        none: "none",
        "context-menu": "context-menu",
        progress: "progress",
        cell: "cell",
        crosshair: "crosshair",
        "vertical-text": "vertical-text",
        alias: "alias",
        copy: "copy",
        "no-drop": "no-drop",
        grab: "grab",
        grabbing: "grabbing",
        "all-scroll": "all-scroll",
        "col-resize": "col-resize",
        "row-resize": "row-resize",
        "n-resize": "n-resize",
        "e-resize": "e-resize",
        "s-resize": "s-resize",
        "w-resize": "w-resize",
        "ne-resize": "ne-resize",
        "nw-resize": "nw-resize",
        "se-resize": "se-resize",
        "sw-resize": "sw-resize",
        "ew-resize": "ew-resize",
        "ns-resize": "ns-resize",
        "nesw-resize": "nesw-resize",
        "nwse-resize": "nwse-resize",
        "zoom-in": "zoom-in",
        "zoom-out": "zoom-out"
      },
      divideColor: ({ theme: u }) => u("borderColor"),
      divideOpacity: ({ theme: u }) => u("borderOpacity"),
      divideWidth: ({ theme: u }) => u("borderWidth"),
      dropShadow: {
        sm: "0 1px 1px rgb(0 0 0 / 0.05)",
        DEFAULT: ["0 1px 2px rgb(0 0 0 / 0.1)", "0 1px 1px rgb(0 0 0 / 0.06)"],
        md: ["0 4px 3px rgb(0 0 0 / 0.07)", "0 2px 2px rgb(0 0 0 / 0.06)"],
        lg: ["0 10px 8px rgb(0 0 0 / 0.04)", "0 4px 3px rgb(0 0 0 / 0.1)"],
        xl: ["0 20px 13px rgb(0 0 0 / 0.03)", "0 8px 5px rgb(0 0 0 / 0.08)"],
        "2xl": "0 25px 25px rgb(0 0 0 / 0.15)",
        none: "0 0 #0000"
      },
      fill: ({ theme: u }) => ({
        none: "none",
        ...u("colors")
      }),
      flex: {
        1: "1 1 0%",
        auto: "1 1 auto",
        initial: "0 1 auto",
        none: "none"
      },
      flexBasis: ({ theme: u }) => ({
        auto: "auto",
        ...u("spacing"),
        "1/2": "50%",
        "1/3": "33.333333%",
        "2/3": "66.666667%",
        "1/4": "25%",
        "2/4": "50%",
        "3/4": "75%",
        "1/5": "20%",
        "2/5": "40%",
        "3/5": "60%",
        "4/5": "80%",
        "1/6": "16.666667%",
        "2/6": "33.333333%",
        "3/6": "50%",
        "4/6": "66.666667%",
        "5/6": "83.333333%",
        "1/12": "8.333333%",
        "2/12": "16.666667%",
        "3/12": "25%",
        "4/12": "33.333333%",
        "5/12": "41.666667%",
        "6/12": "50%",
        "7/12": "58.333333%",
        "8/12": "66.666667%",
        "9/12": "75%",
        "10/12": "83.333333%",
        "11/12": "91.666667%",
        full: "100%"
      }),
      flexGrow: {
        0: "0",
        DEFAULT: "1"
      },
      flexShrink: {
        0: "0",
        DEFAULT: "1"
      },
      fontFamily: {
        sans: [
          "ui-sans-serif",
          "system-ui",
          "sans-serif",
          '"Apple Color Emoji"',
          '"Segoe UI Emoji"',
          '"Segoe UI Symbol"',
          '"Noto Color Emoji"'
        ],
        serif: ["ui-serif", "Georgia", "Cambria", '"Times New Roman"', "Times", "serif"],
        mono: [
          "ui-monospace",
          "SFMono-Regular",
          "Menlo",
          "Monaco",
          "Consolas",
          '"Liberation Mono"',
          '"Courier New"',
          "monospace"
        ]
      },
      fontSize: {
        xs: ["0.75rem", { lineHeight: "1rem" }],
        sm: ["0.875rem", { lineHeight: "1.25rem" }],
        base: ["1rem", { lineHeight: "1.5rem" }],
        lg: ["1.125rem", { lineHeight: "1.75rem" }],
        xl: ["1.25rem", { lineHeight: "1.75rem" }],
        "2xl": ["1.5rem", { lineHeight: "2rem" }],
        "3xl": ["1.875rem", { lineHeight: "2.25rem" }],
        "4xl": ["2.25rem", { lineHeight: "2.5rem" }],
        "5xl": ["3rem", { lineHeight: "1" }],
        "6xl": ["3.75rem", { lineHeight: "1" }],
        "7xl": ["4.5rem", { lineHeight: "1" }],
        "8xl": ["6rem", { lineHeight: "1" }],
        "9xl": ["8rem", { lineHeight: "1" }]
      },
      fontWeight: {
        thin: "100",
        extralight: "200",
        light: "300",
        normal: "400",
        medium: "500",
        semibold: "600",
        bold: "700",
        extrabold: "800",
        black: "900"
      },
      gap: ({ theme: u }) => u("spacing"),
      gradientColorStops: ({ theme: u }) => u("colors"),
      gradientColorStopPositions: {
        "0%": "0%",
        "5%": "5%",
        "10%": "10%",
        "15%": "15%",
        "20%": "20%",
        "25%": "25%",
        "30%": "30%",
        "35%": "35%",
        "40%": "40%",
        "45%": "45%",
        "50%": "50%",
        "55%": "55%",
        "60%": "60%",
        "65%": "65%",
        "70%": "70%",
        "75%": "75%",
        "80%": "80%",
        "85%": "85%",
        "90%": "90%",
        "95%": "95%",
        "100%": "100%"
      },
      grayscale: {
        0: "0",
        DEFAULT: "100%"
      },
      gridAutoColumns: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
      },
      gridAutoRows: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
      },
      gridColumn: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
      },
      gridColumnEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13"
      },
      gridColumnStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13"
      },
      gridRow: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
      },
      gridRowEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13"
      },
      gridRowStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13"
      },
      gridTemplateColumns: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))"
      },
      gridTemplateRows: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))"
      },
      height: ({ theme: u }) => ({
        auto: "auto",
        ...u("spacing"),
        "1/2": "50%",
        "1/3": "33.333333%",
        "2/3": "66.666667%",
        "1/4": "25%",
        "2/4": "50%",
        "3/4": "75%",
        "1/5": "20%",
        "2/5": "40%",
        "3/5": "60%",
        "4/5": "80%",
        "1/6": "16.666667%",
        "2/6": "33.333333%",
        "3/6": "50%",
        "4/6": "66.666667%",
        "5/6": "83.333333%",
        full: "100%",
        screen: "100vh",
        svh: "100svh",
        lvh: "100lvh",
        dvh: "100dvh",
        min: "min-content",
        max: "max-content",
        fit: "fit-content"
      }),
      hueRotate: {
        0: "0deg",
        15: "15deg",
        30: "30deg",
        60: "60deg",
        90: "90deg",
        180: "180deg"
      },
      inset: ({ theme: u }) => ({
        auto: "auto",
        ...u("spacing"),
        "1/2": "50%",
        "1/3": "33.333333%",
        "2/3": "66.666667%",
        "1/4": "25%",
        "2/4": "50%",
        "3/4": "75%",
        full: "100%"
      }),
      invert: {
        0: "0",
        DEFAULT: "100%"
      },
      keyframes: {
        spin: {
          to: {
            transform: "rotate(360deg)"
          }
        },
        ping: {
          "75%, 100%": {
            transform: "scale(2)",
            opacity: "0"
          }
        },
        pulse: {
          "50%": {
            opacity: ".5"
          }
        },
        bounce: {
          "0%, 100%": {
            transform: "translateY(-25%)",
            animationTimingFunction: "cubic-bezier(0.8,0,1,1)"
          },
          "50%": {
            transform: "none",
            animationTimingFunction: "cubic-bezier(0,0,0.2,1)"
          }
        }
      },
      letterSpacing: {
        tighter: "-0.05em",
        tight: "-0.025em",
        normal: "0em",
        wide: "0.025em",
        wider: "0.05em",
        widest: "0.1em"
      },
      lineHeight: {
        none: "1",
        tight: "1.25",
        snug: "1.375",
        normal: "1.5",
        relaxed: "1.625",
        loose: "2",
        3: ".75rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem"
      },
      listStyleType: {
        none: "none",
        disc: "disc",
        decimal: "decimal"
      },
      listStyleImage: {
        none: "none"
      },
      margin: ({ theme: u }) => ({
        auto: "auto",
        ...u("spacing")
      }),
      lineClamp: {
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6"
      },
      maxHeight: ({ theme: u }) => ({
        ...u("spacing"),
        none: "none",
        full: "100%",
        screen: "100vh",
        svh: "100svh",
        lvh: "100lvh",
        dvh: "100dvh",
        min: "min-content",
        max: "max-content",
        fit: "fit-content"
      }),
      maxWidth: ({ theme: u, breakpoints: a }) => ({
        ...u("spacing"),
        none: "none",
        xs: "20rem",
        sm: "24rem",
        md: "28rem",
        lg: "32rem",
        xl: "36rem",
        "2xl": "42rem",
        "3xl": "48rem",
        "4xl": "56rem",
        "5xl": "64rem",
        "6xl": "72rem",
        "7xl": "80rem",
        full: "100%",
        min: "min-content",
        max: "max-content",
        fit: "fit-content",
        prose: "65ch",
        ...a(u("screens"))
      }),
      minHeight: ({ theme: u }) => ({
        ...u("spacing"),
        full: "100%",
        screen: "100vh",
        svh: "100svh",
        lvh: "100lvh",
        dvh: "100dvh",
        min: "min-content",
        max: "max-content",
        fit: "fit-content"
      }),
      minWidth: ({ theme: u }) => ({
        ...u("spacing"),
        full: "100%",
        min: "min-content",
        max: "max-content",
        fit: "fit-content"
      }),
      objectPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
      },
      opacity: {
        0: "0",
        5: "0.05",
        10: "0.1",
        15: "0.15",
        20: "0.2",
        25: "0.25",
        30: "0.3",
        35: "0.35",
        40: "0.4",
        45: "0.45",
        50: "0.5",
        55: "0.55",
        60: "0.6",
        65: "0.65",
        70: "0.7",
        75: "0.75",
        80: "0.8",
        85: "0.85",
        90: "0.9",
        95: "0.95",
        100: "1"
      },
      order: {
        first: "-9999",
        last: "9999",
        none: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12"
      },
      outlineColor: ({ theme: u }) => u("colors"),
      outlineOffset: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px"
      },
      outlineWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px"
      },
      padding: ({ theme: u }) => u("spacing"),
      placeholderColor: ({ theme: u }) => u("colors"),
      placeholderOpacity: ({ theme: u }) => u("opacity"),
      ringColor: ({ theme: u }) => ({
        DEFAULT: u("colors.blue.500", "#3b82f6"),
        ...u("colors")
      }),
      ringOffsetColor: ({ theme: u }) => u("colors"),
      ringOffsetWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px"
      },
      ringOpacity: ({ theme: u }) => ({
        DEFAULT: "0.5",
        ...u("opacity")
      }),
      ringWidth: {
        DEFAULT: "3px",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px"
      },
      rotate: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg",
        45: "45deg",
        90: "90deg",
        180: "180deg"
      },
      saturate: {
        0: "0",
        50: ".5",
        100: "1",
        150: "1.5",
        200: "2"
      },
      scale: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5"
      },
      screens: {
        sm: "640px",
        md: "768px",
        lg: "1024px",
        xl: "1280px",
        "2xl": "1536px"
      },
      scrollMargin: ({ theme: u }) => ({
        ...u("spacing")
      }),
      scrollPadding: ({ theme: u }) => u("spacing"),
      sepia: {
        0: "0",
        DEFAULT: "100%"
      },
      skew: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg"
      },
      space: ({ theme: u }) => ({
        ...u("spacing")
      }),
      spacing: {
        px: "1px",
        0: "0px",
        0.5: "0.125rem",
        1: "0.25rem",
        1.5: "0.375rem",
        2: "0.5rem",
        2.5: "0.625rem",
        3: "0.75rem",
        3.5: "0.875rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem",
        11: "2.75rem",
        12: "3rem",
        14: "3.5rem",
        16: "4rem",
        20: "5rem",
        24: "6rem",
        28: "7rem",
        32: "8rem",
        36: "9rem",
        40: "10rem",
        44: "11rem",
        48: "12rem",
        52: "13rem",
        56: "14rem",
        60: "15rem",
        64: "16rem",
        72: "18rem",
        80: "20rem",
        96: "24rem"
      },
      stroke: ({ theme: u }) => ({
        none: "none",
        ...u("colors")
      }),
      strokeWidth: {
        0: "0",
        1: "1",
        2: "2"
      },
      supports: {},
      data: {},
      textColor: ({ theme: u }) => u("colors"),
      textDecorationColor: ({ theme: u }) => u("colors"),
      textDecorationThickness: {
        auto: "auto",
        "from-font": "from-font",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px"
      },
      textIndent: ({ theme: u }) => ({
        ...u("spacing")
      }),
      textOpacity: ({ theme: u }) => u("opacity"),
      textUnderlineOffset: {
        auto: "auto",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px"
      },
      transformOrigin: {
        center: "center",
        top: "top",
        "top-right": "top right",
        right: "right",
        "bottom-right": "bottom right",
        bottom: "bottom",
        "bottom-left": "bottom left",
        left: "left",
        "top-left": "top left"
      },
      transitionDelay: {
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1000: "1000ms"
      },
      transitionDuration: {
        DEFAULT: "150ms",
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1000: "1000ms"
      },
      transitionProperty: {
        none: "none",
        all: "all",
        DEFAULT: "color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter",
        colors: "color, background-color, border-color, text-decoration-color, fill, stroke",
        opacity: "opacity",
        shadow: "box-shadow",
        transform: "transform"
      },
      transitionTimingFunction: {
        DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)",
        linear: "linear",
        in: "cubic-bezier(0.4, 0, 1, 1)",
        out: "cubic-bezier(0, 0, 0.2, 1)",
        "in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
      },
      translate: ({ theme: u }) => ({
        ...u("spacing"),
        "1/2": "50%",
        "1/3": "33.333333%",
        "2/3": "66.666667%",
        "1/4": "25%",
        "2/4": "50%",
        "3/4": "75%",
        full: "100%"
      }),
      size: ({ theme: u }) => ({
        auto: "auto",
        ...u("spacing"),
        "1/2": "50%",
        "1/3": "33.333333%",
        "2/3": "66.666667%",
        "1/4": "25%",
        "2/4": "50%",
        "3/4": "75%",
        "1/5": "20%",
        "2/5": "40%",
        "3/5": "60%",
        "4/5": "80%",
        "1/6": "16.666667%",
        "2/6": "33.333333%",
        "3/6": "50%",
        "4/6": "66.666667%",
        "5/6": "83.333333%",
        "1/12": "8.333333%",
        "2/12": "16.666667%",
        "3/12": "25%",
        "4/12": "33.333333%",
        "5/12": "41.666667%",
        "6/12": "50%",
        "7/12": "58.333333%",
        "8/12": "66.666667%",
        "9/12": "75%",
        "10/12": "83.333333%",
        "11/12": "91.666667%",
        full: "100%",
        min: "min-content",
        max: "max-content",
        fit: "fit-content"
      }),
      width: ({ theme: u }) => ({
        auto: "auto",
        ...u("spacing"),
        "1/2": "50%",
        "1/3": "33.333333%",
        "2/3": "66.666667%",
        "1/4": "25%",
        "2/4": "50%",
        "3/4": "75%",
        "1/5": "20%",
        "2/5": "40%",
        "3/5": "60%",
        "4/5": "80%",
        "1/6": "16.666667%",
        "2/6": "33.333333%",
        "3/6": "50%",
        "4/6": "66.666667%",
        "5/6": "83.333333%",
        "1/12": "8.333333%",
        "2/12": "16.666667%",
        "3/12": "25%",
        "4/12": "33.333333%",
        "5/12": "41.666667%",
        "6/12": "50%",
        "7/12": "58.333333%",
        "8/12": "66.666667%",
        "9/12": "75%",
        "10/12": "83.333333%",
        "11/12": "91.666667%",
        full: "100%",
        screen: "100vw",
        svw: "100svw",
        lvw: "100lvw",
        dvw: "100dvw",
        min: "min-content",
        max: "max-content",
        fit: "fit-content"
      }),
      willChange: {
        auto: "auto",
        scroll: "scroll-position",
        contents: "contents",
        transform: "transform"
      },
      zIndex: {
        auto: "auto",
        0: "0",
        10: "10",
        20: "20",
        30: "30",
        40: "40",
        50: "50"
      }
    },
    plugins: []
  }), Pi2;
}
var ul;
function pc() {
  return ul || (ul = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return l2;
      }
    });
    const a = /* @__PURE__ */ p(dc()), h2 = it3();
    function p(f) {
      return f && f.__esModule ? f : {
        default: f
      };
    }
    function l2(f) {
      var s2;
      const c2 = ((s2 = f == null ? undefined : f.presets) !== null && s2 !== undefined ? s2 : [
        a.default
      ]).slice().reverse().flatMap((r2) => l2(r2 instanceof Function ? r2() : r2)), t8 = {
        respectDefaultRingColorOpacity: {
          theme: {
            ringColor: ({ theme: r2 }) => ({
              DEFAULT: "#3b82f67f",
              ...r2("colors")
            })
          }
        },
        disableColorOpacityUtilitiesByDefault: {
          corePlugins: {
            backgroundOpacity: false,
            borderOpacity: false,
            divideOpacity: false,
            placeholderOpacity: false,
            ringOpacity: false,
            textOpacity: false
          }
        }
      }, e2 = Object.keys(t8).filter((r2) => (0, h2.flagEnabled)(f, r2)).map((r2) => t8[r2]);
      return [
        f,
        ...e2,
        ...c2
      ];
    }
  }(ki2)), ki2;
}
var fl;
function hc() {
  return fl || (fl = 1, function(u) {
    Object.defineProperty(u, "__esModule", {
      value: true
    }), Object.defineProperty(u, "default", {
      enumerable: true,
      get: function() {
        return l2;
      }
    });
    const a = /* @__PURE__ */ p(cc()), h2 = /* @__PURE__ */ p(pc());
    function p(f) {
      return f && f.__esModule ? f : {
        default: f
      };
    }
    function l2(...f) {
      let [, ...s2] = (0, h2.default)(f[0]);
      return (0, a.default)([
        ...f,
        ...s2
      ]);
    }
  }(mi2)), mi2;
}
var Ei;
var cl;
function vc() {
  if (cl)
    return Ei;
  cl = 1;
  let u = hc();
  return Ei = (u.__esModule ? u : { default: u }).default, Ei;
}
var gc = vc();
var mc = /* @__PURE__ */ He3(gc);
var yc = (u) => ic.createContext(mc({
  ...u,
  content: [],
  corePlugins: {
    preflight: false
  }
}));
var wc = _u2(`
  @tailwind base;
  @tailwind components;
`).root();
function bc(u) {
  "safelist" in u && (console.warn("The `safelist` option is not supported in the `Tailwind` component, it will not change any behavior."), delete u.safelist);
  const a = yc(u);
  return {
    generateRootForClasses: (h2) => {
      a.candidateRuleCache = /* @__PURE__ */ new Map;
      const p = Yf.generateRules(new Set(h2), a), l2 = wc.clone().append(...p.map(([, f]) => f));
      return Xo3()(l2), Gf(a)(l2), Xo3()(l2), $f(a)(l2), ff(a)(l2), tc(a)(l2), Xf(a)(l2), Hu2()(l2), Xu2()(l2), nc(l2), l2;
    }
  };
}
var Oc = ({ children: u, config: a }) => {
  const h2 = bc(a ?? {}), p = new Ou2;
  let l2 = [], f = false, s2 = sr3(u, (c2) => {
    if (Or3.isValidElement(c2)) {
      const {
        elementWithInlinedStyles: t8,
        nonInlinableClasses: e2,
        nonInlineStyleNodes: r2
      } = Gu2(c2, h2);
      return l2 = l2.concat(e2), p.append(r2), e2.length > 0 && !f && (f = true), t8;
    }
    return c2;
  });
  if (Pu2(p), f) {
    let c2 = false;
    if (s2 = sr3(s2, (t8) => {
      if (c2)
        return t8;
      if (Or3.isValidElement(t8) && t8.type === "head") {
        c2 = true;
        const e2 = /* @__PURE__ */ fu2("style", { children: ku2(p.toString().trim()) });
        return Or3.cloneElement(t8, t8.props, t8.props.children, e2);
      }
      return t8;
    }), !c2)
      throw new Error(`You are trying to use the following Tailwind classes that cannot be inlined: ${l2.join(" ")}.
For the media queries to work properly on rendering, they need to be added into a <style> tag inside of a <head> tag,
the Tailwind component tried finding a <head> element but just wasn't able to find it.

Make sure that you have a <head> element at some point inside of the <Tailwind> component at any depth. 
This can also be our <Head> component.

If you do already have a <head> element at some depth, 
please file a bug https://github.com/resend/react-email/issues/new?assignees=&labels=Type%3A+Bug&projects=&template=1.bug_report.yml.`);
  }
  return s2;
};

// ../../node_modules/.bun/@react-email+text@0.1.5+2f44e903108183df/node_modules/@react-email/text/dist/index.mjs
import * as React8 from "react";
import { jsx as jsx9 } from "react/jsx-runtime";
var __defProp9 = Object.defineProperty;
var __defProps8 = Object.defineProperties;
var __getOwnPropDescs8 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols8 = Object.getOwnPropertySymbols;
var __hasOwnProp9 = Object.prototype.hasOwnProperty;
var __propIsEnum8 = Object.prototype.propertyIsEnumerable;
var __defNormalProp8 = (obj, key, value) => (key in obj) ? __defProp9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues8 = (a, b3) => {
  for (var prop in b3 || (b3 = {}))
    if (__hasOwnProp9.call(b3, prop))
      __defNormalProp8(a, prop, b3[prop]);
  if (__getOwnPropSymbols8)
    for (var prop of __getOwnPropSymbols8(b3)) {
      if (__propIsEnum8.call(b3, prop))
        __defNormalProp8(a, prop, b3[prop]);
    }
  return a;
};
var __spreadProps8 = (a, b3) => __defProps8(a, __getOwnPropDescs8(b3));
var __objRest8 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp9.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols8)
    for (var prop of __getOwnPropSymbols8(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum8.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function parseMarginValue(value) {
  if (typeof value === "number")
    return {
      marginTop: value,
      marginBottom: value,
      marginLeft: value,
      marginRight: value
    };
  if (typeof value === "string") {
    const values = value.toString().trim().split(/\s+/);
    if (values.length === 1) {
      return {
        marginTop: values[0],
        marginBottom: values[0],
        marginLeft: values[0],
        marginRight: values[0]
      };
    }
    if (values.length === 2) {
      return {
        marginTop: values[0],
        marginRight: values[1],
        marginBottom: values[0],
        marginLeft: values[1]
      };
    }
    if (values.length === 3) {
      return {
        marginTop: values[0],
        marginRight: values[1],
        marginBottom: values[2],
        marginLeft: values[1]
      };
    }
    if (values.length === 4) {
      return {
        marginTop: values[0],
        marginRight: values[1],
        marginBottom: values[2],
        marginLeft: values[3]
      };
    }
  }
  return {
    marginTop: undefined,
    marginBottom: undefined,
    marginLeft: undefined,
    marginRight: undefined
  };
}
function computeMargins(properties) {
  let result = {
    marginTop: undefined,
    marginRight: undefined,
    marginBottom: undefined,
    marginLeft: undefined
  };
  for (const [key, value] of Object.entries(properties)) {
    if (key === "margin") {
      result = parseMarginValue(value);
    } else if (key === "marginTop") {
      result.marginTop = value;
    } else if (key === "marginRight") {
      result.marginRight = value;
    } else if (key === "marginBottom") {
      result.marginBottom = value;
    } else if (key === "marginLeft") {
      result.marginLeft = value;
    }
  }
  return result;
}
var Text3 = React8.forwardRef((_a4, ref) => {
  var _b = _a4, { style } = _b, props = __objRest8(_b, ["style"]);
  const defaultMargins = {};
  if ((style == null ? undefined : style.marginTop) === undefined) {
    defaultMargins.marginTop = "16px";
  }
  if ((style == null ? undefined : style.marginBottom) === undefined) {
    defaultMargins.marginBottom = "16px";
  }
  const margins = computeMargins(__spreadValues8(__spreadValues8({}, defaultMargins), style));
  return /* @__PURE__ */ jsx9("p", __spreadProps8(__spreadValues8({}, props), {
    ref,
    style: __spreadValues8(__spreadValues8({
      fontSize: "14px",
      lineHeight: "24px"
    }, style), margins)
  }));
});
Text3.displayName = "Text";

// src/email/server/render-email.ts
async function renderEmailTemplate(component, props) {
  const { subject } = props;
  let emailSubject;
  let componentProps;
  if (typeof subject === "function") {
    const { subject: _3, ...restProps } = props;
    componentProps = restProps;
    emailSubject = subject(componentProps);
  } else {
    componentProps = props;
    emailSubject = subject;
  }
  const [html, text2] = await Promise.all([render2(component(componentProps)), render2(component(componentProps), { plainText: true })]);
  return {
    subject: emailSubject,
    html,
    text: text2
  };
}
// src/email/templates/email-tailwind.config.ts
var emailTailwindConfig = {
  theme: {
    extend: {
      colors: {
        gray: {
          50: "#f9fafb",
          100: "#f3f4f6",
          200: "#e5e7eb",
          300: "#d1d5db",
          400: "#9ca3af",
          500: "#6b7280",
          600: "#4b5563",
          700: "#374151",
          800: "#1f2937",
          900: "#111827",
          950: "#030712"
        },
        muted: {
          50: "#f9fafb",
          100: "#f3f4f6",
          200: "#e5e7eb",
          300: "#d1d5db",
          400: "#9ca3af",
          500: "#6b7280",
          600: "#4b5563",
          700: "#374151",
          800: "#1f2937",
          900: "#111827"
        },
        blue: {
          50: "#eff6ff",
          100: "#dbeafe",
          200: "#bfdbfe",
          300: "#93c5fd",
          400: "#60a5fa",
          500: "#3b82f6",
          600: "#2563eb",
          700: "#1d4ed8",
          800: "#1e40af",
          900: "#1e3a8a",
          950: "#172554"
        },
        red: {
          50: "#fef2f2",
          100: "#fee2e2",
          200: "#fecaca",
          300: "#fca5a5",
          400: "#f87171",
          500: "#ef4444",
          600: "#dc2626",
          700: "#b91c1c",
          800: "#991b1b",
          900: "#7f1d1d",
          950: "#450a0a"
        },
        destructive: {
          DEFAULT: "#b91c1c",
          foreground: "#fef2f2"
        },
        primary: {
          500: "#667eea",
          600: "#764ba2"
        },
        danger: {
          100: "#f8d7da",
          200: "#f5c6cb",
          600: "#dc3545",
          900: "#721c24"
        },
        warning: {
          100: "#fff3cd",
          200: "#ffc107",
          900: "#856404"
        },
        info: {
          100: "#d1ecf1",
          200: "#bee5eb",
          600: "#0c5460",
          700: "#004085"
        }
      },
      fontFamily: {
        sans: ["-apple-system", "BlinkMacSystemFont", '"Segoe UI"', "Roboto", "sans-serif"],
        mono: ['"Courier New"', "monospace"]
      }
    }
  }
};

// src/email/templates/recovery-verification.tsx
import { jsx as jsx10, jsxs as jsxs2 } from "react/jsx-runtime";
function RecoveryVerificationTemplate({ code, email: email2, verificationUrl }) {
  return /* @__PURE__ */ jsxs2(Html, {
    children: [
      /* @__PURE__ */ jsx10(Head, {}),
      /* @__PURE__ */ jsx10(Oc, {
        config: emailTailwindConfig,
        children: /* @__PURE__ */ jsx10(Body, {
          className: "bg-white font-sans",
          children: /* @__PURE__ */ jsxs2(Container, {
            className: "mx-auto max-w-2xl text-gray-900 leading-relaxed",
            children: [
              /* @__PURE__ */ jsx10(Section, {
                className: "px-5 pt-10 pb-5 text-center",
                children: /* @__PURE__ */ jsx10(Heading, {
                  as: "h1",
                  children: "Account Recovery Request"
                })
              }),
              /* @__PURE__ */ jsxs2(Section, {
                className: "m-5 rounded-lg border-2 border-muted-100 bg-muted-50 p-5 text-center",
                children: [
                  /* @__PURE__ */ jsxs2(Text3, {
                    children: [
                      "An account recovery request for ",
                      /* @__PURE__ */ jsx10("strong", {
                        children: email2
                      }),
                      " is pending approval.",
                      " "
                    ]
                  }),
                  /* @__PURE__ */ jsx10(Text3, {
                    children: "If approved, registration of a new passkey will be allowed to proceed."
                  }),
                  /* @__PURE__ */ jsx10(Text3, {
                    children: "Please approve the account recovery request using the code below."
                  })
                ]
              }),
              /* @__PURE__ */ jsx10(Section, {
                className: "m-5 rounded-lg border-2 border-muted-100 bg-muted-50 p-5 text-center",
                children: /* @__PURE__ */ jsx10(Text3, {
                  className: "m-0 font-bold text-[32px] text-muted-600 tracking-[8px]",
                  children: code
                })
              }),
              /* @__PURE__ */ jsx10(Section, {
                className: "m-3 text-center text-muted-400 text-sm",
                children: /* @__PURE__ */ jsxs2(Text3, {
                  children: [
                    " ",
                    "This code will expire within ",
                    /* @__PURE__ */ jsx10("strong", {
                      children: "8 minutes"
                    }),
                    " if not approved."
                  ]
                })
              }),
              verificationUrl && /* @__PURE__ */ jsxs2(Section, {
                className: "m-4 rounded-2xl bg-muted-100 p-3 text-center",
                children: [
                  /* @__PURE__ */ jsx10(Text3, {
                    className: "mx-2",
                    children: /* @__PURE__ */ jsx10(Link, {
                      href: verificationUrl,
                      className: "font-bold no-underline",
                      children: "Click this link to approve the change"
                    })
                  }),
                  /* @__PURE__ */ jsxs2(Text3, {
                    className: "mx-2",
                    children: [
                      /* @__PURE__ */ jsx10(Text3, {
                        children: "If having trouble using the link above, use the url below to verify."
                      }),
                      /* @__PURE__ */ jsx10(Link, {
                        href: verificationUrl,
                        className: "underline",
                        children: verificationUrl
                      })
                    ]
                  })
                ]
              }),
              /* @__PURE__ */ jsxs2(Section, {
                className: "m-4 text-center text-muted-400 text-sm",
                children: [
                  /* @__PURE__ */ jsx10(Text3, {
                    children: "If this code was not requested, consider that someone may have unauthorized access to the account. It may be necessary to secure the account."
                  }),
                  /* @__PURE__ */ jsx10(Heading, {
                    as: "h3",
                    className: "text-red-500",
                    children: "If unauthorized, take immediate action:"
                  }),
                  /* @__PURE__ */ jsxs2(Section, {
                    className: "text-left mx-auto max-w-md",
                    children: [
                      /* @__PURE__ */ jsxs2(Text3, {
                        className: "italic",
                        children: [
                          "• ",
                          /* @__PURE__ */ jsx10("strong", {
                            children: "Do not enter the verification code."
                          })
                        ]
                      }),
                      /* @__PURE__ */ jsxs2(Text3, {
                        className: "italic",
                        children: [
                          "• Sign in to the account at ",
                          email2
                        ]
                      }),
                      /* @__PURE__ */ jsx10(Text3, {
                        className: "italic",
                        children: "• Review the security settings and passkeys"
                      }),
                      /* @__PURE__ */ jsx10(Text3, {
                        className: "italic",
                        children: "• Remove any unfamiliar devices"
                      })
                    ]
                  })
                ]
              })
            ]
          })
        })
      })
    ]
  });
}

// src/auth/server/totp-service.ts
init_auth_context();
import { getContext as getContext4 } from "@ycore/forge/context";
import { logger as logger6 } from "@ycore/forge/logger";
import { err as err7, ok as ok5 } from "@ycore/forge/result";
import { getBindings as getBindings3 } from "@ycore/forge/services";
function base32Decode(input) {
  const alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";
  const cleanInput = input.replace(/[^A-Z2-7]/gi, "").toUpperCase();
  let bits = "";
  for (const char of cleanInput) {
    const value = alphabet.indexOf(char);
    if (value === -1)
      throw new Error(`Invalid base32 character: ${char}`);
    bits += value.toString(2).padStart(5, "0");
  }
  const bytes = new Uint8Array(Math.floor(bits.length / 8));
  for (let i = 0;i < bytes.length; i++) {
    bytes[i] = Number.parseInt(bits.slice(i * 8, (i + 1) * 8), 2);
  }
  return bytes;
}
function normalizeSecret(secret) {
  if (secret instanceof Uint8Array)
    return secret;
  try {
    return base32Decode(secret);
  } catch {
    return new TextEncoder().encode(secret);
  }
}
function uint64ToBytes(num) {
  const bytes = new Uint8Array(8);
  const high = Math.floor(num / 4294967296);
  const low = num & 4294967295;
  bytes[0] = high >>> 24 & 255;
  bytes[1] = high >>> 16 & 255;
  bytes[2] = high >>> 8 & 255;
  bytes[3] = high & 255;
  bytes[4] = low >>> 24 & 255;
  bytes[5] = low >>> 16 & 255;
  bytes[6] = low >>> 8 & 255;
  bytes[7] = low & 255;
  return bytes;
}
async function hmac(algorithm, key, data) {
  const keyBuffer = new ArrayBuffer(key.length);
  new Uint8Array(keyBuffer).set(key);
  const dataBuffer = new ArrayBuffer(data.length);
  new Uint8Array(dataBuffer).set(data);
  const cryptoKey = await crypto.subtle.importKey("raw", keyBuffer, { name: "HMAC", hash: algorithm }, false, ["sign"]);
  const signature = await crypto.subtle.sign("HMAC", cryptoKey, dataBuffer);
  return new Uint8Array(signature);
}
function dynamicTruncation(hash, digits) {
  const offset = hash[hash.length - 1] & 15;
  const code = (hash[offset] & 127) << 24 | (hash[offset + 1] & 255) << 16 | (hash[offset + 2] & 255) << 8 | hash[offset + 3] & 255;
  return (code % 10 ** digits).toString().padStart(digits, "0");
}
function generateSecret(length = 32) {
  if (length <= 0)
    throw new Error("Length must be positive");
  return crypto.getRandomValues(new Uint8Array(length));
}
function base32Encode(bytes) {
  const alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";
  let bits = "";
  for (const byte of bytes) {
    bits += byte.toString(2).padStart(8, "0");
  }
  let result = "";
  for (let i = 0;i < bits.length; i += 5) {
    const chunk = bits.slice(i, i + 5).padEnd(5, "0");
    result += alphabet[Number.parseInt(chunk, 2)];
  }
  return result;
}
async function generateTOTP(options) {
  const { secret, timestamp = Date.now(), period = 30, digits = 6, algorithm = "SHA-1" } = options;
  if (period <= 0)
    throw new Error("Period must be positive");
  const counter = Math.floor(timestamp / 1000 / period);
  const secretBytes = normalizeSecret(secret);
  const counterBytes = uint64ToBytes(counter);
  const algoName = algorithm === "SHA-1" ? "SHA-1" : algorithm === "SHA-256" ? "SHA-256" : "SHA-512";
  const hash = await hmac(algoName, secretBytes, counterBytes);
  return dynamicTruncation(hash, digits);
}
async function verifyTOTP(options) {
  const { token: token2, window: window2 = 1, timestamp = Date.now(), period = 30, ...totpOptions } = options;
  if (!/^\d+$/.test(token2)) {
    return { valid: false };
  }
  const currentPeriod = Math.floor(timestamp / 1000 / period);
  for (let i = -window2;i <= window2; i++) {
    const testPeriod = currentPeriod + i;
    const testTimestamp = testPeriod * period * 1000;
    const expectedToken = await generateTOTP({
      ...totpOptions,
      timestamp: testTimestamp,
      period
    });
    if (token2 === expectedToken) {
      return { valid: true, timestamp: testTimestamp };
    }
  }
  return { valid: false };
}
var kvKeyTemplate = (purpose, email2) => `totp:${purpose}:${email2}`;
async function createVerificationCode(email2, purpose, context, metadata) {
  try {
    const authConfig = getContext4(context, authConfigContext);
    if (!authConfig) {
      return err7("Auth configuration not found");
    }
    const env = getBindings3(context);
    const kv = env[authConfig.session.kvBinding];
    if (!kv) {
      return err7(`KV binding '${authConfig.session.kvBinding}' not found`);
    }
    const secret = base32Encode(generateSecret());
    const period = authConfig.verification.period;
    const digits = authConfig.verification.digits;
    const code = await generateTOTP({ secret, period, digits });
    const verificationData = {
      secret,
      expireAt: Date.now() + period * 1000,
      attempts: 0,
      purpose,
      metadata
    };
    await kv.put(kvKeyTemplate(purpose, email2), JSON.stringify(verificationData), { expirationTtl: period });
    logger6.info("verification_code_created", { email: email2, purpose });
    return ok5(code);
  } catch (error) {
    logger6.error("verification_code_creation_failed", {
      email: email2,
      purpose,
      error: error instanceof Error ? error.message : String(error),
      stack: error instanceof Error ? error.stack : undefined
    });
    return err7("Failed to create verification code", { error });
  }
}
async function verifyCode(email2, code, purpose, context) {
  try {
    const authConfig = getContext4(context, authConfigContext);
    if (!authConfig) {
      return err7("Auth configuration not found");
    }
    const env = getBindings3(context);
    const kv = env[authConfig.session.kvBinding];
    if (!kv) {
      return err7(`KV binding '${authConfig.session.kvBinding}' not found`);
    }
    const kvKey = kvKeyTemplate(purpose, email2);
    const storedData = await kv.get(kvKey);
    if (!storedData) {
      logger6.warning("verification_code_not_found", { email: email2, purpose });
      return err7("Verification code expired or not found");
    }
    const verification = JSON.parse(storedData);
    if (verification.purpose !== purpose) {
      logger6.warning("verification_purpose_mismatch", {
        email: email2,
        expected: purpose,
        actual: verification.purpose
      });
      return err7("Invalid verification code");
    }
    if (verification.attempts >= authConfig.verification.maxAttempts) {
      await kv.delete(kvKey);
      logger6.warning("verification_max_attempts", { email: email2, purpose });
      return err7("Maximum verification attempts reached");
    }
    if (Date.now() > verification.expireAt) {
      await kv.delete(kvKey);
      logger6.warning("verification_expired", { email: email2, purpose });
      return err7("Verification code has expired");
    }
    const result = await verifyTOTP({
      secret: verification.secret,
      token: code,
      period: authConfig.verification.period,
      digits: authConfig.verification.digits,
      window: authConfig.verification.window
    });
    if (!result.valid) {
      await kv.put(kvKey, JSON.stringify({ ...verification, attempts: verification.attempts + 1 }), { expirationTtl: authConfig.verification.period });
      logger6.warning("verification_code_invalid", { email: email2, purpose, attempts: verification.attempts + 1 });
      return err7("Invalid verification code");
    }
    await kv.delete(kvKey);
    logger6.info("verification_code_verified", { email: email2, purpose });
    return ok5(verification);
  } catch (error) {
    logger6.error("verification_code_verification_failed", {
      email: email2,
      purpose,
      error: error instanceof Error ? error.message : String(error)
    });
    return err7("Failed to verify code", { error });
  }
}

// src/auth/server/recovery-service.ts
async function sendRecoveryVerification(email2, context, verificationUrl) {
  try {
    const codeResult = await createVerificationCode(email2, "recovery", context, { email: email2 });
    if (isError4(codeResult)) {
      logger7.error("recovery_verification_code_generation_failed", { email: email2, error: flattenError2(codeResult) });
      return codeResult;
    }
    const code = codeResult;
    const emailTemplate = await renderEmailTemplate(RecoveryVerificationTemplate, {
      code,
      email: email2,
      verificationUrl,
      subject: "Account Recovery - Verification Required"
    });
    const sendResult = await sendMail(context, { to: email2, template: emailTemplate });
    if (isError4(sendResult)) {
      logger7.error("recovery_verification_send_failed", { email: email2, error: flattenError2(sendResult) });
      return sendResult;
    }
    logger7.info("recovery_verification_sent", { email: email2 });
    return ok6(undefined);
  } catch (error) {
    logger7.error("recovery_verification_unexpected_error", { email: email2, error: error instanceof Error ? error.message : "Unknown error", stack: error instanceof Error ? error.stack : undefined });
    return err8("Failed to send recovery verification", { error });
  }
}
async function requestAccountRecovery(email2, context, verificationUrl) {
  const repository = getAuthRepository(context);
  const userResult = await repository.getUserByEmail(email2);
  if (isError4(userResult)) {
    logger7.info("recovery_request_email_not_found", { email: email2 });
    return ok6(null);
  }
  const user = userResult;
  const statusUpdateResult = await repository.updateUserStatus(user.id, "unrecovered");
  if (isError4(statusUpdateResult)) {
    logger7.error("recovery_request_status_update_failed", { userId: user.id, email: email2, error: flattenError2(statusUpdateResult) });
    return statusUpdateResult;
  }
  const verificationResult = await sendRecoveryVerification(email2, context, verificationUrl);
  if (isError4(verificationResult)) {
    logger7.error("recovery_request_verification_email_failed", { userId: user.id, email: email2, error: flattenError2(verificationResult) });
    await repository.updateUserStatus(user.id, user.status);
    return verificationResult;
  }
  return ok6(statusUpdateResult);
}

// src/auth/server/auth-recover.ts
init_session();
var recoverFormSchema = object2({
  email: pipe2(string3(), minLength2(1, "Email is required"), email2("Must be a valid email address"))
});
async function recoverLoader({ context }) {
  const token2 = requireCSRFToken(context);
  return respondOk({
    token: token2
  });
}
async function recoverAction({ request, context }) {
  const formData = await request.formData();
  const authConfig = getContext5(context, authConfigContext);
  const handlers = {
    recover: async (formData2) => {
      const validationResult = await validateFormData(recoverFormSchema, formData2);
      if (isError5(validationResult)) {
        return validationResult;
      }
      const { email: email3 } = validationResult;
      const result2 = await requestAccountRecovery(email3, context);
      if (isError5(result2)) {
        if (isSystemError(result2)) {
          logger8.error("recover_email_system_error", { email: email3, error: flattenError3(result2) });
        }
        return result2;
      }
      const user = result2;
      if (user) {
        const sessionResult = await createAuthSession(context, { user });
        if (isError5(sessionResult)) {
          if (isSystemError(sessionResult)) {
            logger8.error("recover_session_system_error", { userId: user.id, email: email3, error: flattenError3(sessionResult) });
          }
          return err9("Failed to create recovery session");
        }
        return ok7({
          message: "If this email exists, a verification code has been sent.",
          redirectTo: authConfig?.routes.verify || defaultAuthRoutes.verify,
          sessionCookie: sessionResult
        });
      }
      return ok7({
        message: "If this email exists, a verification code has been sent."
      });
    }
  };
  const result = await handleIntent(formData, handlers);
  if (isError5(result)) {
    if (isSystemError(result)) {
      logger8.error("recover_system_error", { error: flattenError3(result) });
      throwSystemError(result.message, result.status);
    }
    return respondError(result);
  }
  const resultData = result;
  if (resultData.redirectTo && resultData.sessionCookie) {
    throw respondRedirect(resultData.redirectTo, {
      headers: { "Set-Cookie": resultData.sessionCookie }
    });
  }
  return respondOk(result);
}
// src/auth/server/auth-signin.ts
import { decodeBase64url as decodeBase64url3 } from "@oslojs/encoding";
import { getContext as getContext7 } from "@ycore/forge/context";
import { handleIntent as handleIntent2 } from "@ycore/forge/intent/server";
import { logger as logger12 } from "@ycore/forge/logger";
import { err as err13, flattenError as flattenError4, isError as isError8, isSystemError as isSystemError2, ok as ok10, respondError as respondError2, respondOk as respondOk2, respondRedirect as respondRedirect2, throwSystemError as throwSystemError2, transformError, validateFormData as validateFormData2 } from "@ycore/forge/result";
import { requireCSRFToken as requireCSRFToken2 } from "@ycore/foundry/secure/server";
init_auth_context();
init_session();

// src/auth/server/webauthn.ts
import { decodePKIXECDSASignature, ECDSAPublicKey, p256, verifyECDSASignature } from "@oslojs/crypto/ecdsa";
import { sha256 } from "@oslojs/crypto/sha2";
import { decodeBase64url, encodeBase64url } from "@oslojs/encoding";
import { ClientDataType, COSEKeyType, createAssertionSignatureMessage, parseAttestationObject, parseAuthenticatorData, parseClientDataJSON } from "@oslojs/webauthn";
import { logger as logger9 } from "@ycore/forge/logger";
import { err as err10 } from "@ycore/forge/result";

// src/auth/auth.constants.ts
var WEBAUTHN_ALGORITHMS = {
  ES256: -7,
  RS256: -257
};
var WEBAUTHN_CONFIG = {
  CHALLENGE_TIMEOUT: 60000,
  CHALLENGE_SIZE: 32,
  USER_ID_SIZE: 16,
  COORDINATE_LENGTH: 32,
  HEX_COORDINATE_LENGTH: 64
};
var TRANSPORT_METHODS = {
  INTERNAL: "internal",
  HYBRID: "hybrid",
  USB: "usb",
  NFC: "nfc",
  BLE: "ble",
  SMART_CARD: "smart-card"
};
var ATTESTATION_TYPES = {
  NONE: "none",
  BASIC: "basic",
  SELF: "self",
  ATTCA: "attca",
  ECDAA: "ecdaa"
};
var DEVICE_TYPES = {
  PLATFORM: "platform",
  CROSS_PLATFORM: "cross-platform"
};
var AUTHENTICATOR_FLAGS = {
  BACKUP_ELIGIBLE: 8,
  BACKUP_STATE: 16
};
var DEFAULT_DEVICE_INFO = {
  platform: {
    type: DEVICE_TYPES.PLATFORM,
    vendor: "Unknown",
    model: "Platform Authenticator",
    certified: false,
    transports: [TRANSPORT_METHODS.INTERNAL, TRANSPORT_METHODS.HYBRID]
  },
  "cross-platform": {
    type: DEVICE_TYPES.CROSS_PLATFORM,
    vendor: "Unknown",
    model: "Security Key",
    certified: false,
    transports: [TRANSPORT_METHODS.USB, TRANSPORT_METHODS.NFC, TRANSPORT_METHODS.HYBRID]
  }
};
var ATTESTATION_FORMAT_HANDLERS = new Map([
  ["none", () => ATTESTATION_TYPES.NONE],
  [
    "packed",
    (attStmt) => {
      if (attStmt.x5c && attStmt.x5c.length > 0) {
        return ATTESTATION_TYPES.BASIC;
      }
      if (attStmt.sig && !attStmt.x5c) {
        return ATTESTATION_TYPES.SELF;
      }
      return ATTESTATION_TYPES.NONE;
    }
  ],
  [
    "fido-u2f",
    (attStmt) => {
      if (attStmt.x5c && attStmt.x5c.length > 0) {
        return ATTESTATION_TYPES.BASIC;
      }
      return ATTESTATION_TYPES.SELF;
    }
  ],
  ["android-key", () => ATTESTATION_TYPES.BASIC],
  ["android-safetynet", () => ATTESTATION_TYPES.ATTCA],
  ["tpm", () => ATTESTATION_TYPES.BASIC],
  ["apple", () => ATTESTATION_TYPES.BASIC]
]);
var WEBAUTHN_ERROR_MESSAGES = new Map([
  ["CHALLENGE_EXPIRED" /* CHALLENGE_EXPIRED */, () => "Session expired. Please refresh the page and try again."],
  ["INVALID_CHALLENGE" /* INVALID_CHALLENGE */, () => "Security check failed. Please refresh the page and try again."],
  ["INVALID_COUNTER" /* INVALID_COUNTER */, () => "Security violation detected. Your authenticator may be compromised. Please contact support immediately."],
  ["INVALID_KEY_FORMAT" /* INVALID_KEY_FORMAT */, () => "Invalid security key format. Please re-register your device."],
  ["INVALID_ORIGIN" /* INVALID_ORIGIN */, () => "Request origin not recognized. Please ensure you are on the correct website."],
  ["INVALID_RPID" /* INVALID_RPID */, () => "Security configuration error. Please contact support."],
  ["UNSUPPORTED_ALGORITHM" /* UNSUPPORTED_ALGORITHM */, () => "Your authenticator uses an unsupported security algorithm. Please use a different device."],
  ["USER_NOT_PRESENT" /* USER_NOT_PRESENT */, () => "User presence verification failed. Please interact with your authenticator when prompted."],
  ["INVALID_CREDENTIAL" /* INVALID_CREDENTIAL */, (operation) => operation === "registration" ? "Failed to create credential. Please try again." : "Authenticator not recognized. Please use the device you registered with."],
  [
    "SIGNATURE_FAILED" /* SIGNATURE_FAILED */,
    (operation) => operation === "registration" ? "Failed to verify authenticator. Please try a different device." : "Authentication failed. Please verify you are using the correct authenticator."
  ],
  ["DEFAULT" /* DEFAULT */, (operation) => operation === "registration" ? "Registration failed. Please try again." : "Authentication failed. Please try again."]
]);
function convertAAGUIDToUUID(aaguid) {
  const aaguidString = Array.from(aaguid).map((b3) => b3.toString(16).padStart(2, "0")).join("");
  return [aaguidString.slice(0, 8), aaguidString.slice(8, 12), aaguidString.slice(12, 16), aaguidString.slice(16, 20), aaguidString.slice(20, 32)].join("-");
}
function isAAGUIDAllZeros(aaguid) {
  return Array.from(aaguid).every((byte) => byte === 0);
}

// src/auth/server/webauthn.ts
function toArrayBuffer(uint8Array) {
  const buffer = new ArrayBuffer(uint8Array.byteLength);
  new Uint8Array(buffer).set(uint8Array);
  return buffer;
}
function extractBackupState(authenticatorData) {
  const flags = authenticatorData.flags || 0;
  const isBackupEligible = (flags & AUTHENTICATOR_FLAGS.BACKUP_ELIGIBLE) !== 0;
  const isBackedUp = (flags & AUTHENTICATOR_FLAGS.BACKUP_STATE) !== 0;
  return { isBackupEligible, isBackedUp };
}
function extractTransportMethods(deviceInfo) {
  return [...deviceInfo.transports];
}
function extractAttestationType(attestationObject) {
  try {
    const fmt = attestationObject.fmt;
    const attStmt = attestationObject.attStmt;
    const handler = ATTESTATION_FORMAT_HANDLERS.get(fmt);
    if (handler) {
      return handler(attStmt);
    }
    logger9.warning("webauthn_unknown_attestation_format", { format: fmt });
    return ATTESTATION_TYPES.NONE;
  } catch (error) {
    logger9.error("webauthn_attestation_extraction_error", {
      error: error instanceof Error ? error.message : "Unknown error"
    });
    return ATTESTATION_TYPES.NONE;
  }
}
function generateDefaultAuthenticatorName(deviceInfo) {
  if (deviceInfo.vendor !== "Unknown" && deviceInfo.model !== "Security Key" && deviceInfo.model !== "Device") {
    return `${deviceInfo.vendor} ${deviceInfo.model}`;
  }
  const deviceType = deviceInfo.type === "platform" ? "Biometric Device" : "Security Key";
  const timestamp = new Date().toLocaleDateString("en-US", {
    month: "short",
    day: "numeric"
  });
  return `${deviceType} (${timestamp})`;
}
async function getDeviceInfoByAAGUID(aaguid, metadataKV) {
  if (isAAGUIDAllZeros(aaguid)) {
    return DEFAULT_DEVICE_INFO.platform;
  }
  const uuid = convertAAGUIDToUUID(aaguid);
  if (metadataKV) {
    try {
      const mdsData = await metadataKV.get(`device:${uuid}`, "json");
      if (mdsData) {
        logger9.debug("device_info_mds_hit", { uuid });
        return mdsData;
      }
    } catch (error) {
      logger9.warning("device_info_kv_lookup_failed", {
        uuid,
        error: error instanceof Error ? error.message : "Unknown"
      });
    }
  }
  logger9.debug("device_info_fallback", { uuid });
  return DEFAULT_DEVICE_INFO["cross-platform"];
}
function getWebAuthnErrorMessage(code, operation) {
  if (!code) {
    return WEBAUTHN_ERROR_MESSAGES.get("DEFAULT" /* DEFAULT */)?.(operation) || "Auth failure. Please try again.";
  }
  const messageResolver = WEBAUTHN_ERROR_MESSAGES.get(code);
  return messageResolver ? messageResolver(operation) : WEBAUTHN_ERROR_MESSAGES.get("DEFAULT" /* DEFAULT */)?.(operation) || "Auth failure. Please try again.";
}
function generateChallenge() {
  const bytes = new Uint8Array(WEBAUTHN_CONFIG.CHALLENGE_SIZE);
  crypto.getRandomValues(bytes);
  return encodeBase64url(bytes);
}
function generateUserId() {
  const bytes = new Uint8Array(WEBAUTHN_CONFIG.USER_ID_SIZE);
  crypto.getRandomValues(bytes);
  return encodeBase64url(bytes);
}
function createRegistrationOptions(rpName, rpId, userName, userDisplayName, challenge, excludeCredentials = []) {
  return {
    challenge: toArrayBuffer(decodeBase64url(challenge)),
    rp: {
      name: rpName,
      id: rpId
    },
    user: {
      id: toArrayBuffer(decodeBase64url(generateUserId())),
      name: userName,
      displayName: userDisplayName
    },
    pubKeyCredParams: [
      { alg: WEBAUTHN_ALGORITHMS.ES256, type: "public-key" },
      { alg: WEBAUTHN_ALGORITHMS.RS256, type: "public-key" }
    ],
    timeout: WEBAUTHN_CONFIG.CHALLENGE_TIMEOUT,
    attestation: "none",
    excludeCredentials: excludeCredentials.map((cred) => ({
      id: toArrayBuffer(decodeBase64url(cred.id)),
      type: "public-key",
      ...cred.transports && cred.transports.length > 0 ? { transports: cred.transports } : {}
    })),
    authenticatorSelection: {
      residentKey: "discouraged",
      requireResidentKey: false,
      userVerification: "preferred"
    }
  };
}
async function verifyRegistration(credential, expectedChallenge, expectedOrigin, expectedRPID, metadataKV) {
  try {
    const attestationObject = await parseAttestationObject(new Uint8Array(credential.response.attestationObject));
    const { authenticatorData } = attestationObject;
    const clientData = parseClientDataJSON(new Uint8Array(credential.response.clientDataJSON));
    const receivedChallenge = encodeBase64url(new Uint8Array(clientData.challenge));
    if (receivedChallenge !== expectedChallenge) {
      return err10("Invalid challenge", {
        field: "challenge",
        code: "INVALID_CHALLENGE" /* INVALID_CHALLENGE */
      });
    }
    if (clientData.origin !== expectedOrigin) {
      return err10("Invalid origin", {
        field: "origin",
        code: "INVALID_ORIGIN" /* INVALID_ORIGIN */
      });
    }
    if (clientData.type !== ClientDataType.Create) {
      return err10("Invalid request type", {
        field: "type",
        code: "INVALID_CREDENTIAL" /* INVALID_CREDENTIAL */
      });
    }
    if (!authenticatorData.verifyRelyingPartyIdHash(expectedRPID)) {
      return err10("Invalid relying party", {
        field: "rpId",
        code: "INVALID_RPID" /* INVALID_RPID */
      });
    }
    if (!authenticatorData.userPresent) {
      return err10("User presence required", {
        field: "userPresence",
        code: "USER_NOT_PRESENT" /* USER_NOT_PRESENT */
      });
    }
    const attestedCredential = authenticatorData.credential;
    if (!attestedCredential) {
      return err10("No credential found", {
        field: "credential",
        code: "INVALID_CREDENTIAL" /* INVALID_CREDENTIAL */
      });
    }
    const publicKey = attestedCredential.publicKey;
    if (publicKey.type() !== COSEKeyType.EC2) {
      return err10("Only ES256 algorithm is supported", {
        field: "keyType",
        code: "UNSUPPORTED_ALGORITHM" /* UNSUPPORTED_ALGORITHM */
      });
    }
    const publicKeyAlgorithm = publicKey.algorithm();
    if (publicKeyAlgorithm !== WEBAUTHN_ALGORITHMS.ES256) {
      return err10("Only ES256 algorithm is supported", {
        field: "algorithm",
        code: "UNSUPPORTED_ALGORITHM" /* UNSUPPORTED_ALGORITHM */
      });
    }
    const credentialPublicKey = encodeBase64url(new TextEncoder().encode(JSON.stringify(attestedCredential.publicKey.decoded)));
    let transports = [];
    if (credential.response.transports && credential.response.transports.length > 0) {
      transports = credential.response.transports;
      logger9.debug("webauthn_using_actual_transports", { transports });
    } else {
      const deviceInfo2 = await getDeviceInfoByAAGUID(attestedCredential.authenticatorAAGUID, metadataKV);
      transports = extractTransportMethods(deviceInfo2);
      logger9.debug("webauthn_using_fallback_transports", { transports, source: "deviceInfo" });
    }
    let credentialDeviceType = "cross-platform";
    if (credential.authenticatorAttachment) {
      credentialDeviceType = credential.authenticatorAttachment === "platform" ? "platform" : "cross-platform";
      logger9.debug("webauthn_device_type_from_attachment", {
        authenticatorAttachment: credential.authenticatorAttachment,
        credentialDeviceType
      });
    } else {
      const deviceInfo2 = await getDeviceInfoByAAGUID(attestedCredential.authenticatorAAGUID, metadataKV);
      credentialDeviceType = deviceInfo2.type;
      logger9.debug("webauthn_device_type_from_aaguid", {
        aaguid: encodeBase64url(attestedCredential.authenticatorAAGUID),
        credentialDeviceType
      });
    }
    const deviceInfo = await getDeviceInfoByAAGUID(attestedCredential.authenticatorAAGUID, metadataKV);
    const backupState = extractBackupState(authenticatorData);
    const keyAlgorithm = attestedCredential.publicKey.algorithm();
    const attestationType = extractAttestationType(attestationObject);
    const defaultName = generateDefaultAuthenticatorName(deviceInfo);
    return {
      id: encodeBase64url(attestedCredential.id),
      credentialPublicKey,
      counter: authenticatorData.signatureCounter,
      credentialDeviceType,
      credentialBackedUp: backupState.isBackedUp,
      transports,
      aaguid: encodeBase64url(attestedCredential.authenticatorAAGUID),
      name: defaultName,
      lastUsedAt: null,
      attestationType,
      rpId: expectedRPID,
      algorithm: keyAlgorithm
    };
  } catch (error) {
    logger9.error("webauthn_registration_error", {
      error: error instanceof Error ? error.message : "Unknown error"
    });
    return err10("Registration verification failed", { field: "general" }, { status: 500 });
  }
}
async function verifyAuthentication(credential, expectedChallenge, expectedOrigin, expectedRPID, storedCredential) {
  try {
    const authenticatorData = parseAuthenticatorData(new Uint8Array(credential.response.authenticatorData));
    const clientData = parseClientDataJSON(new Uint8Array(credential.response.clientDataJSON));
    const receivedChallenge = encodeBase64url(new Uint8Array(clientData.challenge));
    if (receivedChallenge !== expectedChallenge) {
      return err10("Invalid challenge", {
        field: "challenge",
        code: "INVALID_CHALLENGE" /* INVALID_CHALLENGE */
      });
    }
    if (clientData.origin !== expectedOrigin) {
      return err10("Invalid origin", {
        field: "origin",
        code: "INVALID_ORIGIN" /* INVALID_ORIGIN */
      });
    }
    if (clientData.type !== ClientDataType.Get) {
      return err10("Invalid request type", {
        field: "type",
        code: "INVALID_CREDENTIAL" /* INVALID_CREDENTIAL */
      });
    }
    if (!authenticatorData.verifyRelyingPartyIdHash(expectedRPID)) {
      return err10("Invalid relying party", {
        field: "rpId",
        code: "INVALID_RPID" /* INVALID_RPID */
      });
    }
    if (!authenticatorData.userPresent) {
      return err10("User presence required", {
        field: "userPresence",
        code: "USER_NOT_PRESENT" /* USER_NOT_PRESENT */
      });
    }
    if (storedCredential.counter > 0 || authenticatorData.signatureCounter > 0) {
      if (authenticatorData.signatureCounter <= storedCredential.counter) {
        logger9.critical("webauthn_authentication_counter_rollback_detected", {
          stored: storedCredential.counter,
          received: authenticatorData.signatureCounter,
          credentialId: credential.id,
          userId: storedCredential.userId
        });
        return err10("Security violation: Counter rollback detected", {
          field: "counter",
          code: "INVALID_COUNTER" /* INVALID_COUNTER */
        });
      }
    }
    const signatureMessage = createAssertionSignatureMessage(new Uint8Array(credential.response.authenticatorData), new Uint8Array(credential.response.clientDataJSON));
    let publicKeyData;
    try {
      const storedKeyJson = new TextDecoder().decode(decodeBase64url(storedCredential.credentialPublicKey));
      publicKeyData = JSON.parse(storedKeyJson);
      if (!publicKeyData) {
        return err10("Invalid stored public key", {
          field: "publicKey",
          code: "INVALID_KEY_FORMAT" /* INVALID_KEY_FORMAT */
        }, { status: 500 });
      }
    } catch (error) {
      logger9.error("webauthn_authentication_key_parse_error", {
        error: error instanceof Error ? error.message : "Unknown error"
      });
      return err10("Failed to parse stored public key", {
        field: "publicKey",
        code: "INVALID_KEY_FORMAT" /* INVALID_KEY_FORMAT */
      }, { status: 500 });
    }
    try {
      const signatureBytes = new Uint8Array(credential.response.signature);
      const xCoordinate = publicKeyData[-2];
      const yCoordinate = publicKeyData[-3];
      if (!xCoordinate || !yCoordinate) {
        return err10("Invalid public key structure", {
          field: "publicKey",
          code: "INVALID_KEY_FORMAT" /* INVALID_KEY_FORMAT */
        });
      }
      let xBytes;
      let yBytes;
      try {
        if (typeof xCoordinate === "string") {
          xBytes = decodeBase64url(xCoordinate);
        } else if (Array.isArray(xCoordinate)) {
          xBytes = new Uint8Array(xCoordinate);
        } else if (typeof xCoordinate === "object" && xCoordinate !== null) {
          const values = Object.values(xCoordinate);
          xBytes = new Uint8Array(values);
        } else {
          xBytes = new Uint8Array(xCoordinate);
        }
        if (typeof yCoordinate === "string") {
          yBytes = decodeBase64url(yCoordinate);
        } else if (Array.isArray(yCoordinate)) {
          yBytes = new Uint8Array(yCoordinate);
        } else if (typeof yCoordinate === "object" && yCoordinate !== null) {
          const values = Object.values(yCoordinate);
          yBytes = new Uint8Array(values);
        } else {
          yBytes = new Uint8Array(yCoordinate);
        }
      } catch (error) {
        logger9.error("webauthn_authentication_coordinate_decode_error", {
          error: error instanceof Error ? error.message : "Unknown error"
        });
        return err10("Failed to decode key coordinates", {
          field: "publicKey",
          code: "INVALID_KEY_FORMAT" /* INVALID_KEY_FORMAT */
        });
      }
      if (xBytes.length !== WEBAUTHN_CONFIG.COORDINATE_LENGTH || yBytes.length !== WEBAUTHN_CONFIG.COORDINATE_LENGTH) {
        return err10("Invalid coordinate length for P-256 key", {
          field: "publicKey",
          code: "INVALID_KEY_FORMAT" /* INVALID_KEY_FORMAT */
        });
      }
      const xHex = Array.from(xBytes).map((b3) => b3.toString(16).padStart(2, "0")).join("");
      const yHex = Array.from(yBytes).map((b3) => b3.toString(16).padStart(2, "0")).join("");
      if (xHex.length === 0 || yHex.length === 0) {
        return err10("Empty coordinate data", {
          field: "publicKey",
          code: "INVALID_KEY_FORMAT" /* INVALID_KEY_FORMAT */
        });
      }
      const xHexPadded = xHex.padStart(WEBAUTHN_CONFIG.HEX_COORDINATE_LENGTH, "0");
      const yHexPadded = yHex.padStart(WEBAUTHN_CONFIG.HEX_COORDINATE_LENGTH, "0");
      const xBigInt = BigInt(`0x${xHexPadded}`);
      const yBigInt = BigInt(`0x${yHexPadded}`);
      const publicKey = new ECDSAPublicKey(p256, xBigInt, yBigInt);
      if (!publicKey.isCurve(p256)) {
        return err10("Public key not on P-256 curve", {
          field: "publicKey",
          code: "INVALID_KEY_FORMAT" /* INVALID_KEY_FORMAT */
        });
      }
      try {
        publicKey.encodeSEC1Uncompressed();
      } catch (error) {
        logger9.error("webauthn_authentication_public_key_encoding_error", {
          error: error instanceof Error ? error.message : "Unknown error"
        });
        return err10("Invalid public key encoding", {
          field: "publicKey",
          code: "INVALID_KEY_FORMAT" /* INVALID_KEY_FORMAT */
        });
      }
      const messageHash = sha256(signatureMessage);
      const signature = decodePKIXECDSASignature(signatureBytes);
      const isValid = verifyECDSASignature(publicKey, messageHash, signature);
      if (!isValid) {
        return err10("Invalid signature", {
          field: "signature",
          code: "SIGNATURE_FAILED" /* SIGNATURE_FAILED */
        });
      }
    } catch (error) {
      logger9.error("webauthn_authentication_signature_verification_error", {
        error: error instanceof Error ? error.message : "Unknown error",
        credentialId: credential.id
      });
      return err10("Signature verification failed", {
        field: "signature",
        code: "SIGNATURE_FAILED" /* SIGNATURE_FAILED */
      }, { status: 500 });
    }
    return {
      verified: true,
      newCounter: authenticatorData.signatureCounter
    };
  } catch (error) {
    logger9.error("webauthn_authentication_error", {
      error: error instanceof Error ? error.message : "Unknown error"
    });
    return err10("Authentication verification failed", { field: "general" }, { status: 500 });
  }
}

// src/auth/server/webauthn-utils.ts
import { getContext as getContext6 } from "@ycore/forge/context";
import { logger as logger10 } from "@ycore/forge/logger";
import { err as err11, isError as isError6, ok as ok8 } from "@ycore/forge/result";
init_auth_context();
init_session();
function parseWebAuthnCredential(formData, operation) {
  const webauthnResponse = formData.get("webauthn_response")?.toString();
  if (!webauthnResponse) {
    const errorMessage = operation === "signin" ? "Authentication failed. Please try again." : "Registration failed. Please try again.";
    logger10.warning(`${operation}_missing_webauthn_response`);
    return err11(errorMessage, { field: "general" });
  }
  try {
    const credential = JSON.parse(webauthnResponse);
    return ok8(credential);
  } catch (error) {
    logger10.error(`${operation}_webauthn_parse_error`, {
      error: error instanceof Error ? error.message : "Unknown error"
    });
    return err11("Invalid authentication data. Please try again.", { field: "general" });
  }
}
async function createAuthenticatedSession(context, user, email3, operation) {
  const sessionResult = await createAuthSession(context, { user });
  if (isError6(sessionResult)) {
    logger10.error(`${operation}_session_creation_failed`, {
      email: email3,
      userId: user.id,
      error: sessionResult.message
    });
    return err11("Failed to create session", { field: "general" });
  }
  return ok8(sessionResult);
}
function createAuthSuccessResponse(context, cookie, user) {
  const authConfig = getContext6(context, authConfigContext);
  if (user && user.status !== "active") {
    logger10.info("user_not_verified_redirect_to_verify", {
      userId: user.id,
      email: user.email,
      status: user.status
    });
    const redirectTo2 = authConfig?.routes.verify || defaultAuthRoutes.verify;
    return { redirectTo: redirectTo2, cookie };
  }
  const redirectTo = authConfig?.routes.signedin || defaultAuthRoutes.signedin;
  return { redirectTo, cookie };
}

// src/auth/server/webauthn-validation.ts
import { decodeBase64url as decodeBase64url2 } from "@oslojs/encoding";
import { logger as logger11 } from "@ycore/forge/logger";
import { err as err12, isError as isError7, ok as ok9 } from "@ycore/forge/result";
init_session();

// src/auth/server/webauthn-config.ts
import { getOrigin, getOriginDomain, isDevelopment } from "@ycore/forge/services";
function isLocalhostDomain(domain) {
  return domain === "localhost" || domain === "127.0.0.1" || domain === "[::1]";
}
function resolveRpId(context, request) {
  const originDomain = getOriginDomain(context, request);
  if (isLocalhostDomain(originDomain)) {
    return "localhost";
  }
  return originDomain;
}
function resolveOrigins(context, request) {
  const originUrl = getOrigin(context, request);
  const requestOrigin = new URL(request.url).origin;
  const isDevMode = isDevelopment(context);
  if (isDevMode) {
    return [...new Set([originUrl, requestOrigin])];
  }
  return [originUrl];
}
function validateOrigin(clientOrigin, allowedOrigins) {
  return allowedOrigins.includes(clientOrigin);
}

// src/auth/server/webauthn-validation.ts
async function validateChallenge(options, context) {
  const { storedChallenge, challengeCreatedAt, maxAge = 5 * 60 * 1000 } = options;
  if (Date.now() - challengeCreatedAt > maxAge) {
    return err12("Session expired. Please refresh and try again.", {
      field: "general",
      code: "CHALLENGE_EXPIRED" /* CHALLENGE_EXPIRED */
    });
  }
  const uniquenessResult = await verifyChallengeUniqueness(storedChallenge, context);
  if (!uniquenessResult) {
    return err12("Invalid challenge. Please refresh and try again.", {
      field: "general",
      code: "INVALID_CHALLENGE" /* INVALID_CHALLENGE */
    });
  }
  return ok9(undefined);
}
async function validateWebAuthnOrigin(request, options, context) {
  const { clientDataJSON, logContext = {}, operation } = options;
  const allowedOrigins = resolveOrigins(context, request);
  const serverOrigin = new URL(request.url).origin;
  if (!validateOrigin(serverOrigin, allowedOrigins)) {
    logger11.error(`${operation}_server_origin_not_allowed`, {
      serverOrigin,
      allowedOrigins,
      ...logContext
    });
    return err12("Server configuration error", { field: "general" });
  }
  const clientData = JSON.parse(new TextDecoder().decode(decodeBase64url2(clientDataJSON)));
  const clientOrigin = clientData.origin;
  if (clientOrigin !== serverOrigin) {
    return err12("Origin mismatch", { field: "general" });
  }
  return ok9(serverOrigin);
}
async function validateWebAuthnRequest(request, options, context) {
  const { storedChallenge, challengeCreatedAt, clientDataJSON, logContext, operation, maxAge } = options;
  const challengeResult = await validateChallenge({ storedChallenge, challengeCreatedAt, maxAge }, context);
  if (isError7(challengeResult)) {
    return challengeResult;
  }
  const originResult = await validateWebAuthnOrigin(request, { clientDataJSON, logContext, operation }, context);
  if (isError7(originResult)) {
    return originResult;
  }
  const rpId = resolveRpId(context, request);
  return ok9({ challenge: storedChallenge, origin: originResult, rpId });
}

// src/auth/server/auth-signin.ts
async function signinLoader({ context }) {
  const token2 = requireCSRFToken2(context);
  const challenge = generateChallenge();
  const cookieResult = await createChallengeSession(context, challenge);
  if (isError8(cookieResult)) {
    logger12.error("signin_loader_session_creation_failed", { error: cookieResult.message });
    return respondError2(cookieResult);
  }
  return respondOk2({ token: token2, challenge }, { headers: { "Set-Cookie": cookieResult } });
}
async function signinAction({ request, context }) {
  const repository = getAuthRepository(context);
  const authConfig = getContext7(context, authConfigContext);
  const formData = await request.formData();
  const handlers = {
    signin: async (formData2) => {
      try {
        const validationResult = await validateFormData2(signinFormSchema, formData2);
        if (isError8(validationResult)) {
          return validationResult;
        }
        const email3 = validationResult.email;
        const userResult = await repository.getUserByEmail(email3);
        const userExists = !isError8(userResult);
        const user = userExists ? userResult : null;
        const authenticatorsResult = user ? await repository.getAuthenticatorsByUserId(user.id) : [];
        const hasAuthenticators = !isError8(authenticatorsResult) && authenticatorsResult.length > 0;
        if (!userExists || !hasAuthenticators) {
          return err13("The credentials are incorrect", { email: "The credentials are incorrect" });
        }
        const authenticators2 = authenticatorsResult;
        const sessionResult = await getChallengeFromSession(request, context);
        if (isError8(sessionResult)) {
          return sessionResult;
        }
        const { challenge: storedChallenge, challengeCreatedAt, session } = sessionResult;
        const credentialResult = parseWebAuthnCredential(formData2, "signin");
        if (isError8(credentialResult)) {
          return credentialResult;
        }
        const credential = credentialResult;
        const authenticator = authenticators2.find((auth) => auth.id === credential.rawId);
        if (!authenticator) {
          return err13("The credentials are incorrect", { email: "The credentials are incorrect" });
        }
        if (authenticator.userId !== user?.id) {
          logger12.critical("signin_authenticator_user_mismatch", {
            authenticatorUserId: authenticator.userId,
            requestUserId: user?.id,
            email: email3,
            credentialId: credential.rawId
          });
          return err13("The credentials are incorrect", { email: "The credentials are incorrect" });
        }
        const webauthnValidationResult = await validateWebAuthnRequest(request, {
          storedChallenge,
          challengeCreatedAt,
          clientDataJSON: credential.response.clientDataJSON,
          operation: "signin",
          logContext: { email: email3 }
        }, context);
        if (isError8(webauthnValidationResult)) {
          return webauthnValidationResult;
        }
        const { challenge, origin, rpId } = webauthnValidationResult;
        const authenticationData = {
          id: credential.id,
          rawId: decodeBase64url3(credential.rawId).buffer,
          response: {
            authenticatorData: decodeBase64url3(credential.response.authenticatorData).buffer,
            clientDataJSON: decodeBase64url3(credential.response.clientDataJSON).buffer,
            signature: decodeBase64url3(credential.response.signature).buffer,
            userHandle: credential.response.userHandle ? decodeBase64url3(credential.response.userHandle).buffer : undefined
          },
          type: "public-key"
        };
        const verificationResult = await verifyAuthentication(authenticationData, challenge, origin, rpId, authenticator);
        if (isError8(verificationResult)) {
          if (isSystemError2(verificationResult)) {
            logger12.error("signin_verification_system_error", { email: email3, error: flattenError4(verificationResult), code: verificationResult.code });
          }
          const errorMessage = getWebAuthnErrorMessage(verificationResult.code, "authentication");
          return err13(errorMessage, { field: "general", code: verificationResult.code });
        }
        const updateResult = await repository.updateAuthenticatorUsage(authenticator.id, verificationResult.newCounter, new Date);
        if (isError8(updateResult)) {
          logger12.warning("signin_authenticator_update_failed", { authenticatorId: authenticator.id, error: updateResult.message });
        }
        if (user?.pending) {
          const pendingType = user?.pending.type;
          if (pendingType === "recovery") {
            const recoveryTimestamp = user?.pending.timestamp;
            logger12.info("recovery_cleanup_detected", { userId: user?.id, email: email3, recoveryTimestamp });
            const deleteResult = await repository.deleteAuthenticatorsByTimestamp(user?.id, recoveryTimestamp);
            if (isError8(deleteResult)) {
              logger12.warning("recovery_cleanup_delete_failed", { userId: user?.id, email: email3, error: flattenError4(deleteResult) });
            } else {
              logger12.info("recovery_cleanup_completed", { userId: user?.id, email: email3, deletedCount: deleteResult });
            }
          } else {
            logger12.info("pending_operation_abandoned_on_signin", { userId: user?.id, email: email3, pendingType });
          }
          const pendingUpdateResult = await repository.updateUserPending(user?.id, null);
          if (isError8(pendingUpdateResult)) {
            logger12.warning("pending_clear_failed_on_signin", { userId: user?.id, email: email3, pendingType, error: flattenError4(pendingUpdateResult) });
          }
          if (user?.status !== "active") {
            const statusUpdateResult = await repository.updateUserStatus(user?.id, "active");
            if (isError8(statusUpdateResult)) {
              logger12.warning("status_restore_failed_on_signin", { userId: user?.id, email: email3, error: flattenError4(statusUpdateResult) });
            } else {
              user.status = "active";
              logger12.info("status_restored_on_signin", { userId: user?.id, email: email3 });
            }
          }
        }
        const cleanupResult = await destroyChallengeSession(session, context);
        if (isError8(cleanupResult)) {
          logger12.warning("signin_challenge_cleanup_failed", { error: flattenError4(cleanupResult) });
        }
        const authSessionResult = await createAuthenticatedSession(context, user, email3, "signin");
        if (isError8(authSessionResult)) {
          if (isSystemError2(authSessionResult)) {
            logger12.error("signin_session_creation_failed", { email: email3, error: flattenError4(authSessionResult) });
          }
          return authSessionResult;
        }
        const redirectTo2 = user?.status === "active" ? authConfig?.routes.signedin || defaultAuthRoutes.signedin : authConfig?.routes.verify || defaultAuthRoutes.verify;
        return ok10({
          sessionCookie: authSessionResult,
          redirectTo: redirectTo2
        });
      } catch (error) {
        if (error instanceof Response) {
          throw error;
        }
        logger12.error("signin_error", { error: transformError(error) });
        return err13("Authentication failed", { field: "general" });
      }
    }
  };
  const result = await handleIntent2(formData, handlers);
  if (isError8(result)) {
    if (isSystemError2(result)) {
      logger12.error("signin_system_error", { error: flattenError4(result) });
      throwSystemError2(result.message, result.status);
    }
    return respondError2(result);
  }
  const { redirectTo, sessionCookie } = result;
  throw respondRedirect2(redirectTo, {
    headers: { "Set-Cookie": sessionCookie }
  });
}
// src/auth/server/auth-signout.ts
import { getContext as getContext8 } from "@ycore/forge/context";
import { logger as logger13 } from "@ycore/forge/logger";
import { flattenError as flattenError5, isError as isError9, isSystemError as isSystemError3, respondRedirect as respondRedirect3 } from "@ycore/forge/result";
init_auth_context();
init_session();
async function signoutAction({ request, context }) {
  const destroyResult = await destroyAuthSession(request, context);
  if (isError9(destroyResult)) {
    if (isSystemError3(destroyResult)) {
      logger13.error("signout_session_destruction_failed", { error: flattenError5(destroyResult) });
    }
  }
  const authConfig = getContext8(context, authConfigContext);
  const redirectTo = authConfig?.routes.signedout || defaultAuthRoutes.signedout;
  throw respondRedirect3(redirectTo, {
    headers: { "Set-Cookie": !isError9(destroyResult) ? destroyResult : "" }
  });
}
async function signoutLoader({ context }) {
  const authConfig = getContext8(context, authConfigContext);
  const redirectTo = authConfig?.routes.signedout || defaultAuthRoutes.signedout;
  throw respondRedirect3(redirectTo);
}
// src/auth/server/auth-signup.ts
import { decodeBase64url as decodeBase64url4 } from "@oslojs/encoding";
import { getContext as getContext9 } from "@ycore/forge/context";
import { handleIntent as handleIntent3 } from "@ycore/forge/intent/server";
import { logger as logger15 } from "@ycore/forge/logger";
import { err as err15, flattenError as flattenError7, isError as isError11, isSystemError as isSystemError4, ok as ok12, respondError as respondError3, respondOk as respondOk3, respondRedirect as respondRedirect4, throwSystemError as throwSystemError3, transformError as transformError2, validateFormData as validateFormData3 } from "@ycore/forge/result";
import { getKVStore as getKVStore2 } from "@ycore/forge/services";
import { requireCSRFToken as requireCSRFToken3 } from "@ycore/foundry/secure/server";
init_auth_context();
init_session();

// src/auth/server/verification-service.ts
import { logger as logger14 } from "@ycore/forge/logger";
import { err as err14, flattenError as flattenError6, isError as isError10, ok as ok11 } from "@ycore/forge/result";

// src/email/templates/auth-totp.tsx
import { jsx as jsx11, jsxs as jsxs3 } from "react/jsx-runtime";
var totpRepository = {
  signup: {
    title: "Verify Email Address",
    message: "Thank you for signing up. Please verify the email address to complete the sign-up.",
    action: "verify your email"
  },
  "passkey-add": {
    title: "Confirm Adding Passkey",
    message: "Please verify adding a new passkey to the user account.",
    action: "confirm adding the passkey"
  },
  "passkey-delete": {
    title: "Confirm Removing Passkey",
    message: "Please verify removing a passkey from the user account.",
    action: "confirm removing the passkey"
  },
  "email-change": {
    title: "Verify Email Address Update",
    message: "Please verify the email address change.",
    action: "verify email address change"
  },
  "account-delete": {
    title: "Confirm Account Deletion",
    message: "Please confirm account delete. This action cannot be undone.",
    action: "confirm account deletion"
  },
  recovery: {
    title: "Confirm Account Recovery",
    message: "An account recovery request is pending. Use this code to regain access to the account.",
    action: "recover your account"
  }
};
function TotpEmailTemplate({ code, purpose }) {
  const content = totpRepository[purpose];
  const isHighRisk = purpose === "account-delete" || purpose === "passkey-delete";
  const isAccountDelete = purpose === "account-delete";
  return /* @__PURE__ */ jsxs3(Html, {
    children: [
      /* @__PURE__ */ jsx11(Head, {}),
      /* @__PURE__ */ jsx11(Oc, {
        config: emailTailwindConfig,
        children: /* @__PURE__ */ jsx11(Body, {
          className: "bg-white font-sans",
          children: /* @__PURE__ */ jsxs3(Container, {
            className: `mx-auto max-w-2xl text-gray-900 leading-relaxed ${isAccountDelete ? "rounded-lg border-2 border-warning-200 bg-warning-100 p-5" : ""}`,
            children: [
              /* @__PURE__ */ jsx11(Section, {
                className: "px-5 pt-10 pb-5 text-center",
                children: /* @__PURE__ */ jsx11(Heading, {
                  as: "h1",
                  children: content.title
                })
              }),
              /* @__PURE__ */ jsx11(Section, {
                className: "px-5 pb-5 text-center text-gray-600",
                children: /* @__PURE__ */ jsx11(Text3, {
                  children: content.message
                })
              }),
              /* @__PURE__ */ jsx11(Section, {
                className: "mx-5 my-5 rounded-lg border-2 border-muted-100 bg-muted-50 p-5 text-center",
                children: /* @__PURE__ */ jsx11(Text3, {
                  className: "m-0 font-bold text-[32px] text-muted-600 tracking-[8px]",
                  children: code
                })
              }),
              /* @__PURE__ */ jsxs3(Section, {
                className: "px-5 py-5 text-center text-muted-400 text-sm",
                children: [
                  /* @__PURE__ */ jsxs3(Text3, {
                    children: [
                      "This code will expire within ",
                      /* @__PURE__ */ jsx11("strong", {
                        children: "8 minutes"
                      }),
                      " of issuing."
                    ]
                  }),
                  /* @__PURE__ */ jsxs3(Text3, {
                    children: [
                      "If this code was not requested,",
                      isHighRisk ? " consider securing your account" : " it can be safely ignored",
                      "."
                    ]
                  })
                ]
              })
            ]
          })
        })
      })
    ]
  });
}

// src/auth/server/verification-service.ts
async function sendVerificationEmail(options) {
  const { email: email3, purpose, metadata, context } = options;
  try {
    const codeResult = await createVerificationCode(email3, purpose, context, metadata);
    if (isError10(codeResult)) {
      logger14.error("verification_email_code_generation_failed", {
        email: email3,
        purpose,
        error: flattenError6(codeResult)
      });
      return codeResult;
    }
    const code = codeResult;
    const emailContent = await renderEmailTemplate(TotpEmailTemplate, {
      code,
      purpose,
      subject: totpRepository[purpose].title
    });
    const sendResult = await sendMail(context, {
      to: email3,
      template: emailContent
    });
    if (isError10(sendResult)) {
      logger14.error("verification_email_send_failed", {
        email: email3,
        purpose,
        error: flattenError6(sendResult)
      });
      return sendResult;
    }
    logger14.info("verification_email_sent", { email: email3, purpose });
    return ok11(undefined);
  } catch (error) {
    logger14.error("verification_email_unexpected_error", {
      email: email3,
      purpose,
      error: error instanceof Error ? error.message : "Unknown error",
      stack: error instanceof Error ? error.stack : undefined
    });
    return err14("Failed to send verification email", { error });
  }
}

// src/auth/server/auth-signup.ts
async function signupLoader({ context }) {
  const token2 = requireCSRFToken3(context);
  const challenge = generateChallenge();
  const cookieResult = await createChallengeSession(context, challenge);
  if (isError11(cookieResult)) {
    logger15.error("signup_loader_session_creation_failed", { error: cookieResult.message });
    return respondError3(cookieResult);
  }
  return respondOk3({ token: token2, challenge }, { headers: { "Set-Cookie": cookieResult } });
}
async function signupAction({ request, context }) {
  const repository = getAuthRepository(context);
  const authConfig = getContext9(context, authConfigContext);
  const formData = await request.formData();
  const handlers = {
    signup: async (formData2) => {
      try {
        const validationResult = await validateFormData3(signupFormSchema, formData2);
        if (isError11(validationResult)) {
          return validationResult;
        }
        const { email: email3, displayName } = validationResult;
        const existingUserResult = await repository.getUserByEmail(email3);
        const isRecoveryMode = !isError11(existingUserResult) && existingUserResult.status === "unrecovered";
        if (!isError11(existingUserResult) && !isRecoveryMode) {
          return err15("An account already exists with this email", { email: "An account already exists with this email" });
        }
        logger15.info("signup_mode_detected", { email: email3, isRecoveryMode });
        const sessionResult = await getChallengeFromSession(request, context);
        if (isError11(sessionResult)) {
          return sessionResult;
        }
        const { challenge: storedChallenge, challengeCreatedAt, session } = sessionResult;
        const credentialResult = parseWebAuthnCredential(formData2, "signup");
        if (isError11(credentialResult)) {
          return credentialResult;
        }
        const credential = credentialResult;
        const webauthnValidationResult = await validateWebAuthnRequest(request, {
          storedChallenge,
          challengeCreatedAt,
          clientDataJSON: credential.response.clientDataJSON,
          operation: "signup",
          logContext: { email: email3 }
        }, context);
        if (isError11(webauthnValidationResult)) {
          return webauthnValidationResult;
        }
        const { challenge, origin, rpId } = webauthnValidationResult;
        const registrationData = {
          id: credential.id,
          rawId: decodeBase64url4(credential.rawId).buffer,
          response: {
            attestationObject: decodeBase64url4(credential.response.attestationObject).buffer,
            clientDataJSON: decodeBase64url4(credential.response.clientDataJSON).buffer,
            transports: credential.response?.transports || []
          },
          type: "public-key",
          authenticatorAttachment: credential.authenticatorAttachment || null
        };
        const metadataKV = authConfig?.webauthn.kvBinding ? getKVStore2(context, authConfig.webauthn.kvBinding) : undefined;
        const verificationResult = await verifyRegistration(registrationData, challenge, origin, rpId, metadataKV);
        if (isError11(verificationResult)) {
          if (isSystemError4(verificationResult)) {
            logger15.error("signup_verification_system_error", { email: email3, error: flattenError7(verificationResult), code: verificationResult.code });
          }
          const errorMessage = getWebAuthnErrorMessage(verificationResult.code, "registration");
          return err15(errorMessage, { field: "general", code: verificationResult.code });
        }
        let user;
        if (isRecoveryMode) {
          user = existingUserResult;
          logger15.info("recovery_mode_using_existing_user", { userId: user.id, email: email3 });
        } else {
          const createUserResult = await repository.createUser(email3, displayName);
          if (isError11(createUserResult)) {
            logger15.error("signup_create_user_failed", { email: email3, error: flattenError7(createUserResult) });
            return err15("Failed to create account", { field: "general" }, { status: 503 });
          }
          user = createUserResult;
        }
        const createAuthResult = await repository.createAuthenticator({ ...verificationResult, userId: user.id });
        if (isError11(createAuthResult)) {
          logger15.error("signup_create_authenticator_failed", { email: email3, userId: user.id, error: flattenError7(createAuthResult) });
          if (!isRecoveryMode) {
            await repository.deleteUser(user.id);
          }
          return err15("Failed to register authenticator", { field: "general" }, { status: 503 });
        }
        if (isRecoveryMode) {
          const recoveryTimestamp = Date.now();
          const pendingUpdateResult = await repository.updateUserPending(user.id, {
            type: "recovery",
            timestamp: recoveryTimestamp
          });
          if (isError11(pendingUpdateResult)) {
            logger15.error("recovery_pending_update_failed", { userId: user.id, error: flattenError7(pendingUpdateResult) });
          }
          const statusUpdateResult = await repository.updateUserStatus(user.id, "active");
          if (isError11(statusUpdateResult)) {
            logger15.error("recovery_status_update_failed", { userId: user.id, error: flattenError7(statusUpdateResult) });
          }
          logger15.info("recovery_passkey_registered", { userId: user.id, email: email3, recoveryTimestamp });
        }
        const cleanupResult = await destroyChallengeSession(session, context);
        if (isError11(cleanupResult)) {
          logger15.warning("signup_challenge_cleanup_failed", { error: flattenError7(cleanupResult) });
        }
        const authSessionResult = await createAuthenticatedSession(context, user, email3, "signup");
        if (isError11(authSessionResult)) {
          if (isSystemError4(authSessionResult)) {
            logger15.error("signup_session_creation_failed", { email: email3, error: flattenError7(authSessionResult) });
          }
          return authSessionResult;
        }
        if (user.status !== "active") {
          const verificationResult2 = await sendVerificationEmail({ email: email3, purpose: "signup", context });
          if (isError11(verificationResult2)) {
            logger15.warning("signup_verification_email_error", { email: email3, error: flattenError7(verificationResult2) });
          }
        }
        const redirectTo2 = user.status === "active" ? authConfig?.routes.signedin || defaultAuthRoutes.signedin : authConfig?.routes.verify || defaultAuthRoutes.verify;
        return ok12({ sessionCookie: authSessionResult, redirectTo: redirectTo2 });
      } catch (error) {
        if (error instanceof Response) {
          throw error;
        }
        logger15.error("signup_error", { error: transformError2(error) });
        return err15("Registration failed", { field: "general" });
      }
    }
  };
  const result = await handleIntent3(formData, handlers);
  if (isError11(result)) {
    if (isSystemError4(result)) {
      logger15.error("signup_system_error", { error: flattenError7(result) });
      throwSystemError3(result.message, result.status);
    }
    return respondError3(result);
  }
  const { redirectTo, sessionCookie } = result;
  throw respondRedirect4(redirectTo, {
    headers: { "Set-Cookie": sessionCookie }
  });
}
// src/auth/server/auth-verify.ts
import { getContext as getContext10 } from "@ycore/forge/context";
import { handleIntent as handleIntent4 } from "@ycore/forge/intent/server";
import { logger as logger16 } from "@ycore/forge/logger";
import { err as err16, flattenError as flattenError8, isError as isError12, isSystemError as isSystemError5, ok as ok13, respondError as respondError4, respondOk as respondOk4, respondRedirect as respondRedirect5, throwSystemError as throwSystemError4, validateFormData as validateFormData4 } from "@ycore/forge/result";
import { requireCSRFToken as requireCSRFToken4 } from "@ycore/foundry/secure/server";
import { minLength as minLength3, object as object3, pipe as pipe3, string as string5 } from "valibot";
init_auth_context();
init_session();
var verifyFormSchema = object3({
  email: pipe3(string5(), minLength3(1, "Email is required")),
  code: pipe3(string5(), minLength3(6, "Code must be 6 digits"))
});
async function verifyLoader({ request, context }) {
  const token2 = requireCSRFToken4(context);
  const sessionResult = await getAuthSession(request, context);
  if (isError12(sessionResult)) {
    if (isSystemError5(sessionResult)) {
      logger16.error("verify_loader_session_error", { error: flattenError8(sessionResult) });
      throwSystemError4(sessionResult.message, sessionResult.status);
    }
    return respondError4(err16("Failed to get session"));
  }
  const session = sessionResult;
  if (!session || !session.user) {
    const authConfig = getContext10(context, authConfigContext);
    throw respondRedirect5(authConfig?.routes.signin || defaultAuthRoutes.signin);
  }
  let emailToVerify = session.user.email;
  let purpose = "signup";
  if (session.user.pending?.type === "email-change") {
    emailToVerify = session.user.pending.email;
    purpose = "email-change";
    logger16.info("verify_loader_email_change_detected", { userId: session.user.id, oldEmail: session.user.email, newEmail: emailToVerify });
  } else if (session.user.pending?.type === "account-delete") {
    purpose = "account-delete";
    logger16.info("verify_loader_account_delete_detected", { userId: session.user.id, email: session.user.email });
  }
  return respondOk4({
    token: token2,
    email: emailToVerify,
    status: session.user.status,
    purpose
  });
}
async function verifyAction({ request, context }) {
  const repository = getAuthRepository(context);
  const authConfig = getContext10(context, authConfigContext);
  const formData = await request.formData();
  const purpose = formData.get("purpose")?.toString() || "signup";
  const sessionResult = await getAuthSession(request, context);
  if (isError12(sessionResult)) {
    if (isSystemError5(sessionResult)) {
      logger16.error("verify_action_session_error", { error: flattenError8(sessionResult) });
      throwSystemError4(sessionResult.message, sessionResult.status);
    }
    return respondError4(err16("Failed to get session"));
  }
  const session = sessionResult;
  if (!session || !session.user) {
    return respondError4(err16("No active session found"));
  }
  const handlers = {
    resend: async () => {
      let emailToSendTo = session.user.email;
      if (purpose === "email-change" && session.user.pending?.type === "email-change") {
        emailToSendTo = session.user.pending.email;
        logger16.info("verify_resend_email_change", {
          userId: session.user.id,
          oldEmail: session.user.email,
          newEmail: emailToSendTo
        });
      }
      const sendResult = await sendVerificationEmail({
        email: emailToSendTo,
        purpose,
        context
      });
      if (isError12(sendResult)) {
        if (isSystemError5(sendResult)) {
          logger16.error("verify_resend_email_system_error", { email: emailToSendTo, purpose, error: flattenError8(sendResult) });
        }
        return sendResult;
      }
      return ok13({ resent: true });
    },
    unverify: async () => {
      const updateResult = await repository.updateUserStatus(session.user.id, "unverified");
      if (isError12(updateResult)) {
        if (isSystemError5(updateResult)) {
          logger16.error("verify_unverify_system_error", { userId: session.user.id, error: flattenError8(updateResult) });
        }
        return updateResult;
      }
      return ok13({ unverified: true });
    },
    verify: async (formData2) => {
      const validationResult = await validateFormData4(verifyFormSchema, formData2);
      if (isError12(validationResult)) {
        return validationResult;
      }
      const { email: email3, code } = validationResult;
      if (purpose !== "email-change") {
        if (session.user.email !== email3) {
          return err16("Session mismatch", { email: "Email does not match session" });
        }
      }
      const verifyResult = await verifyCode(email3, code, purpose, context);
      if (isError12(verifyResult)) {
        return err16(verifyResult.message, { code: verifyResult.message });
      }
      const verification = verifyResult;
      let userResult;
      if (purpose === "email-change") {
        userResult = await repository.getUserById(session.user.id);
      } else {
        userResult = await repository.getUserByEmail(email3);
      }
      if (isError12(userResult)) {
        logger16.error("verify_user_not_found", { email: email3, purpose, userId: session.user.id, error: flattenError8(userResult) });
        return err16("User not found", undefined, { status: 500 });
      }
      const user = userResult;
      switch (purpose) {
        case "signup": {
          const updateResult = await repository.updateUserStatus(user.id, "active");
          if (isError12(updateResult)) {
            if (isSystemError5(updateResult)) {
              logger16.error("verify_update_system_error", { userId: user.id, purpose, error: flattenError8(updateResult) });
            }
            return updateResult;
          }
          const updatedUser = {
            ...user,
            status: "active"
          };
          const sessionUpdateResult = await updateAuthSession(request, context, { user: updatedUser });
          if (isError12(sessionUpdateResult)) {
            logger16.warning("verify_session_update_failed", { userId: user.id, error: flattenError8(sessionUpdateResult) });
          }
          return ok13({
            sessionCookie: isError12(sessionUpdateResult) ? undefined : sessionUpdateResult,
            redirectTo: authConfig?.routes.signedin || defaultAuthRoutes.signedin
          });
        }
        case "email-change": {
          if (!user.pending || user.pending.type !== "email-change") {
            logger16.error("verify_email_change_no_pending_request", { userId: user.id, email: email3 });
            return err16("No pending email change request found. Request may have expired.");
          }
          const newEmail = user.pending.email;
          const oldEmail = user.email;
          if (email3 !== newEmail) {
            logger16.error("verify_email_change_email_mismatch", {
              userId: user.id,
              expectedEmail: newEmail,
              actualEmail: email3
            });
            return err16("Email mismatch. Please try again.");
          }
          const updateResult = await repository.updateUserEmail(user.id, newEmail);
          if (isError12(updateResult)) {
            if (isSystemError5(updateResult)) {
              logger16.error("verify_email_change_update_system_error", { userId: user.id, error: flattenError8(updateResult) });
            }
            return updateResult;
          }
          const verifyResult2 = await repository.updateUserStatus(user.id, "active");
          if (isError12(verifyResult2)) {
            logger16.warning("verify_email_change_status_update_failed", { userId: user.id, error: flattenError8(verifyResult2) });
          }
          const pendingClearResult = await repository.updateUserPending(user.id, null);
          if (isError12(pendingClearResult)) {
            logger16.warning("verify_email_change_pending_clear_failed", {
              userId: user.id,
              error: flattenError8(pendingClearResult)
            });
          }
          const updatedUser = {
            ...user,
            email: newEmail,
            status: "active",
            pending: null
          };
          const sessionUpdateResult = await updateAuthSession(request, context, { user: updatedUser });
          if (isError12(sessionUpdateResult)) {
            logger16.warning("verify_email_change_session_update_failed", { userId: user.id, error: flattenError8(sessionUpdateResult) });
          }
          logger16.info("email_changed_successfully", {
            userId: user.id,
            oldEmail,
            newEmail
          });
          return ok13({
            sessionCookie: isError12(sessionUpdateResult) ? undefined : sessionUpdateResult,
            redirectTo: authConfig?.routes.profile || defaultAuthRoutes.profile
          });
        }
        case "recovery": {
          logger16.info("recovery_email_verified", { userId: user.id, email: email3 });
          return ok13({
            redirectTo: authConfig?.routes.signup || defaultAuthRoutes.signup
          });
        }
        case "account-delete": {
          if (!user.pending || user.pending.type !== "account-delete") {
            logger16.error("verify_account_delete_no_pending_request", { userId: user.id, email: email3 });
            return err16("No pending account deletion request found. Request may have expired.");
          }
          const deleteResult = await repository.deleteUserAccount(user.id);
          if (isError12(deleteResult)) {
            if (isSystemError5(deleteResult)) {
              logger16.error("verify_account_delete_system_error", { userId: user.id, error: flattenError8(deleteResult) });
            }
            return deleteResult;
          }
          logger16.info("account_deleted_successfully", {
            userId: user.id,
            email: email3
          });
          return ok13({
            redirectTo: authConfig?.routes.signedout || defaultAuthRoutes.signedout,
            destroySession: true
          });
        }
        case "passkey-add":
        case "passkey-delete": {
          return ok13({
            verified: true,
            purpose,
            metadata: verification.metadata
          });
        }
        default: {
          return err16("Unknown verification purpose");
        }
      }
    }
  };
  const result = await handleIntent4(formData, handlers);
  if (isError12(result)) {
    if (isSystemError5(result)) {
      logger16.error("verify_system_error", { error: flattenError8(result), email: session.user.email });
      throwSystemError4(result.message, result.status);
    }
    return respondError4(result);
  }
  const resultData = result;
  if (resultData.redirectTo) {
    if (resultData.destroySession) {
      const { destroyAuthSession: destroyAuthSession2 } = await Promise.resolve().then(() => (init_session(), exports_session));
      const destroyResult = await destroyAuthSession2(request, context);
      throw respondRedirect5(resultData.redirectTo, {
        headers: { "Set-Cookie": !isError12(destroyResult) ? destroyResult : "" }
      });
    }
    throw respondRedirect5(resultData.redirectTo, {
      headers: resultData.sessionCookie ? { "Set-Cookie": resultData.sessionCookie } : undefined
    });
  }
  return respondOk4(result);
}
// src/auth/server/email-change-service.ts
import { logger as logger17 } from "@ycore/forge/logger";
import { err as err17, flattenError as flattenError9, isError as isError13, ok as ok14 } from "@ycore/forge/result";
import { getKVStore as getKVStore3 } from "@ycore/forge/services";

// src/email/templates/email-change-notification.tsx
import { jsx as jsx12, jsxs as jsxs4 } from "react/jsx-runtime";
function EmailChangeNotificationTemplate({ oldEmail, newEmail }) {
  return /* @__PURE__ */ jsxs4(Html, {
    children: [
      /* @__PURE__ */ jsx12(Head, {}),
      /* @__PURE__ */ jsx12(Oc, {
        config: emailTailwindConfig,
        children: /* @__PURE__ */ jsx12(Body, {
          className: "bg-white font-sans",
          children: /* @__PURE__ */ jsxs4(Container, {
            className: "mx-auto max-w-2xl text-gray-800 leading-relaxed",
            children: [
              /* @__PURE__ */ jsx12(Section, {
                className: "m-5 text-center",
                children: /* @__PURE__ */ jsx12(Heading, {
                  as: "h1",
                  children: "Important security notification"
                })
              }),
              /* @__PURE__ */ jsxs4(Section, {
                className: "m-5 rounded-lg border-2 border-muted-100 bg-muted-50 p-5 text-center",
                children: [
                  /* @__PURE__ */ jsxs4(Text3, {
                    children: [
                      "A request was received to change the account access email from ",
                      /* @__PURE__ */ jsx12("strong", {
                        children: oldEmail
                      }),
                      " to ",
                      /* @__PURE__ */ jsx12("strong", {
                        children: newEmail
                      }),
                      ", and is pending approval."
                    ]
                  }),
                  /* @__PURE__ */ jsxs4(Text3, {
                    children: [
                      "A verification code was sent to ",
                      /* @__PURE__ */ jsx12("strong", {
                        children: newEmail
                      }),
                      "."
                    ]
                  }),
                  /* @__PURE__ */ jsx12(Text3, {
                    children: "The account email will only be changed once the new address is successfully verified."
                  })
                ]
              }),
              /* @__PURE__ */ jsxs4(Section, {
                className: "m-4 text-center text-muted-400 text-sm",
                children: [
                  /* @__PURE__ */ jsx12(Text3, {
                    children: "If the email change was not requested, consider that someone may have unauthorized access to the account. It may be necessary to secure the account."
                  }),
                  /* @__PURE__ */ jsx12(Heading, {
                    as: "h3",
                    className: "text-red-500",
                    children: "If unauthorized, take immediate action:"
                  }),
                  /* @__PURE__ */ jsxs4(Section, {
                    className: "text-left mx-auto max-w-md",
                    children: [
                      /* @__PURE__ */ jsxs4(Text3, {
                        className: "italic",
                        children: [
                          "• Sign in to the account at ",
                          oldEmail
                        ]
                      }),
                      /* @__PURE__ */ jsx12(Text3, {
                        className: "italic",
                        children: "• Review the security settings and passkeys"
                      }),
                      /* @__PURE__ */ jsx12(Text3, {
                        className: "italic",
                        children: "• Remove any unfamiliar devices"
                      })
                    ]
                  })
                ]
              })
            ]
          })
        })
      })
    ]
  });
}

// src/email/templates/email-change-verification.tsx
import { jsx as jsx13, jsxs as jsxs5 } from "react/jsx-runtime";
function EmailChangeVerificationTemplate({ code, oldEmail, newEmail, verificationUrl }) {
  return /* @__PURE__ */ jsxs5(Html, {
    children: [
      /* @__PURE__ */ jsx13(Head, {}),
      /* @__PURE__ */ jsx13(Oc, {
        config: emailTailwindConfig,
        children: /* @__PURE__ */ jsx13(Body, {
          className: "bg-white font-sans",
          children: /* @__PURE__ */ jsxs5(Container, {
            className: "mx-auto max-w-2xl text-gray-900 leading-relaxed",
            children: [
              /* @__PURE__ */ jsx13(Section, {
                className: "px-5 pt-10 pb-5 text-center",
                children: /* @__PURE__ */ jsx13(Heading, {
                  as: "h1",
                  children: "Email Address Change Verification"
                })
              }),
              /* @__PURE__ */ jsxs5(Section, {
                className: "m-5 rounded-lg border-2 border-muted-100 bg-muted-50 p-5 text-center",
                children: [
                  /* @__PURE__ */ jsxs5(Text3, {
                    children: [
                      "An account email address change from ",
                      /* @__PURE__ */ jsx13("strong", {
                        children: oldEmail
                      }),
                      " to ",
                      /* @__PURE__ */ jsx13("strong", {
                        children: newEmail
                      }),
                      " is pending."
                    ]
                  }),
                  /* @__PURE__ */ jsx13(Text3, {
                    children: "Please approve the email address change using the code below."
                  })
                ]
              }),
              /* @__PURE__ */ jsx13(Section, {
                className: "m-5 rounded-lg border-2 border-muted-100 bg-muted-50 p-5 text-center",
                children: /* @__PURE__ */ jsx13(Text3, {
                  className: "m-0 font-bold text-[32px] text-muted-600 tracking-[8px]",
                  children: code
                })
              }),
              /* @__PURE__ */ jsx13(Section, {
                className: "m-3 text-center text-muted-400 text-sm",
                children: /* @__PURE__ */ jsxs5(Text3, {
                  children: [
                    " ",
                    "This code will expire within ",
                    /* @__PURE__ */ jsx13("strong", {
                      children: "8 minutes"
                    }),
                    " if not approved."
                  ]
                })
              }),
              verificationUrl && /* @__PURE__ */ jsxs5(Section, {
                className: "m-4 rounded-2xl bg-muted-100 p-3 text-center",
                children: [
                  /* @__PURE__ */ jsx13(Text3, {
                    className: "mx-2",
                    children: /* @__PURE__ */ jsx13(Link, {
                      href: verificationUrl,
                      className: "font-bold no-underline",
                      children: "Click this link to approve the change"
                    })
                  }),
                  /* @__PURE__ */ jsxs5(Text3, {
                    className: "mx-2",
                    children: [
                      /* @__PURE__ */ jsx13(Text3, {
                        children: "If having trouble using the link above, use the url below to verify."
                      }),
                      /* @__PURE__ */ jsx13(Link, {
                        href: verificationUrl,
                        className: "underline",
                        children: verificationUrl
                      })
                    ]
                  })
                ]
              }),
              /* @__PURE__ */ jsxs5(Section, {
                className: "m-4 text-center text-muted-400 text-sm",
                children: [
                  /* @__PURE__ */ jsx13(Text3, {
                    children: "If this code was not requested, consider that someone may have unauthorized access to the account. It may be necessary to secure the account."
                  }),
                  /* @__PURE__ */ jsx13(Heading, {
                    as: "h3",
                    className: "text-red-500",
                    children: "If unauthorized, take immediate action:"
                  }),
                  /* @__PURE__ */ jsxs5(Section, {
                    className: "text-left mx-auto max-w-md",
                    children: [
                      /* @__PURE__ */ jsxs5(Text3, {
                        className: "italic",
                        children: [
                          "• ",
                          /* @__PURE__ */ jsx13("strong", {
                            children: "Do not enter the verification code."
                          })
                        ]
                      }),
                      /* @__PURE__ */ jsxs5(Text3, {
                        className: "italic",
                        children: [
                          "• Sign in to the account at ",
                          oldEmail
                        ]
                      }),
                      /* @__PURE__ */ jsx13(Text3, {
                        className: "italic",
                        children: "• Review the security settings and passkeys"
                      }),
                      /* @__PURE__ */ jsx13(Text3, {
                        className: "italic",
                        children: "• Remove any unfamiliar devices"
                      })
                    ]
                  })
                ]
              })
            ]
          })
        })
      })
    ]
  });
}

// src/auth/server/email-change-service.ts
function getEmailChangeKey(userId) {
  return `email_change:${userId}`;
}
async function createEmailChangeRequest(userId, oldEmail, newEmail, context, kvBinding, expirationTtl = 480) {
  try {
    const kv = getKVStore3(context, kvBinding);
    if (!kv) {
      logger17.error("email_change_request_kv_not_found", { userId, kvBinding });
      return err17("KV storage not configured");
    }
    const pendingChange = {
      userId,
      oldEmail,
      newEmail,
      requestedAt: Date.now()
    };
    await kv.put(getEmailChangeKey(userId), JSON.stringify(pendingChange), {
      expirationTtl
    });
    logger17.info("email_change_request_created", {
      userId,
      oldEmail,
      newEmail,
      expirationTtl
    });
    return ok14(undefined);
  } catch (error) {
    logger17.error("email_change_request_creation_failed", {
      userId,
      error: error instanceof Error ? error.message : "Unknown error"
    });
    return err17("Failed to create email change request", { error });
  }
}
async function getEmailChangeRequest(userId, context, kvBinding) {
  try {
    const kv = getKVStore3(context, kvBinding);
    if (!kv) {
      logger17.error("email_change_request_kv_not_found", { userId, kvBinding });
      return err17("KV storage not configured");
    }
    const value = await kv.get(getEmailChangeKey(userId), "text");
    if (!value) {
      return ok14(null);
    }
    const pendingChange = JSON.parse(value);
    logger17.debug("email_change_request_retrieved", {
      userId,
      newEmail: pendingChange.newEmail
    });
    return ok14(pendingChange);
  } catch (error) {
    logger17.error("email_change_request_retrieval_failed", {
      userId,
      error: error instanceof Error ? error.message : "Unknown error"
    });
    return err17("Failed to retrieve email change request", { error });
  }
}
async function deleteEmailChangeRequest(userId, context, kvBinding) {
  try {
    const kv = getKVStore3(context, kvBinding);
    if (!kv) {
      logger17.error("email_change_request_kv_not_found", { userId, kvBinding });
      return err17("KV storage not configured");
    }
    await kv.delete(getEmailChangeKey(userId));
    logger17.info("email_change_request_deleted", { userId });
    return ok14(undefined);
  } catch (error) {
    logger17.error("email_change_request_deletion_failed", {
      userId,
      error: error instanceof Error ? error.message : "Unknown error"
    });
    return err17("Failed to delete email change request", { error });
  }
}
async function sendEmailChangeNotification(oldEmail, newEmail, context) {
  try {
    const emailContent = await renderEmailTemplate(EmailChangeNotificationTemplate, {
      oldEmail,
      newEmail,
      subject: "Email Change Request - Action May Be Required"
    });
    const sendResult = await sendMail(context, {
      to: oldEmail,
      template: emailContent
    });
    if (isError13(sendResult)) {
      logger17.error("email_change_notification_send_failed", {
        oldEmail,
        newEmail,
        error: flattenError9(sendResult)
      });
      return sendResult;
    }
    logger17.info("email_change_notification_sent", { oldEmail, newEmail });
    return ok14(undefined);
  } catch (error) {
    logger17.error("email_change_notification_unexpected_error", {
      oldEmail,
      newEmail,
      error: error instanceof Error ? error.message : "Unknown error",
      stack: error instanceof Error ? error.stack : undefined
    });
    return err17("Failed to send email change notification", { error });
  }
}
async function sendEmailChangeVerification(newEmail, oldEmail, context, verificationUrl) {
  try {
    const codeResult = await createVerificationCode(newEmail, "email-change", context, { oldEmail, newEmail });
    if (isError13(codeResult)) {
      logger17.error("email_change_verification_code_generation_failed", {
        newEmail,
        oldEmail,
        error: flattenError9(codeResult)
      });
      return codeResult;
    }
    const code = codeResult;
    const emailTemplate = await renderEmailTemplate(EmailChangeVerificationTemplate, {
      code,
      oldEmail,
      newEmail,
      verificationUrl,
      subject: "Verify Your New Email Address"
    });
    const sendResult = await sendMail(context, {
      to: newEmail,
      template: emailTemplate
    });
    if (isError13(sendResult)) {
      logger17.error("email_change_verification_send_failed", {
        newEmail,
        oldEmail,
        error: flattenError9(sendResult)
      });
      return sendResult;
    }
    logger17.info("email_change_verification_sent", { newEmail, oldEmail });
    return ok14(undefined);
  } catch (error) {
    logger17.error("email_change_verification_unexpected_error", {
      newEmail,
      oldEmail,
      error: error instanceof Error ? error.message : "Unknown error",
      stack: error instanceof Error ? error.stack : undefined
    });
    return err17("Failed to send email change verification", { error });
  }
}
async function requestEmailChange(userId, oldEmail, newEmail, context, kvBinding, verificationUrl) {
  const createResult = await createEmailChangeRequest(userId, oldEmail, newEmail, context, kvBinding);
  if (isError13(createResult)) {
    return createResult;
  }
  const verificationResult = await sendEmailChangeVerification(newEmail, oldEmail, context, verificationUrl);
  if (isError13(verificationResult)) {
    await deleteEmailChangeRequest(userId, context, kvBinding);
    return verificationResult;
  }
  const notificationResult = await sendEmailChangeNotification(oldEmail, newEmail, context);
  if (isError13(notificationResult)) {
    logger17.warning("email_change_old_email_notification_failed", {
      userId,
      oldEmail,
      newEmail,
      error: flattenError9(notificationResult)
    });
  }
  logger17.info("email_change_request_completed", { userId, oldEmail, newEmail });
  return ok14(undefined);
}
// src/auth/server/passkey-manager.ts
init_auth_context();
import { getContext as getContext11 } from "@ycore/forge/context";
import { logger as logger18 } from "@ycore/forge/logger";
import { err as err18, isError as isError14, ok as ok15 } from "@ycore/forge/result";
import { getKVStore as getKVStore4 } from "@ycore/forge/services";
init_session();
var MAX_AUTHENTICATORS_PER_USER = 10;
var MIN_AUTHENTICATORS_PER_USER = 1;
async function addPasskeyForUser(context, userId, credential, challenge, origin, request) {
  const repo = getAuthRepository(context);
  const authConfig = getContext11(context, authConfigContext);
  if (!authConfig) {
    return err18("Auth configuration not found", { field: "general" });
  }
  const rpId = resolveRpId(context, request);
  const metadataKV = authConfig.webauthn.kvBinding ? getKVStore4(context, authConfig.webauthn.kvBinding) : undefined;
  const countResult = await repo.countAuthenticatorsByUserId(userId);
  if (isError14(countResult)) {
    return countResult;
  }
  if (countResult >= MAX_AUTHENTICATORS_PER_USER) {
    logger18.warning("passkey_add_max_reached", { userId, count: countResult });
    return err18("Maximum number of authenticators reached", {
      limit: `You can have a maximum of ${MAX_AUTHENTICATORS_PER_USER} authenticators`
    });
  }
  const verificationResult = await verifyRegistration(credential, challenge, origin, rpId, metadataKV);
  if (isError14(verificationResult)) {
    logger18.error("passkey_add_verification_failed", { userId, error: verificationResult });
    return verificationResult;
  }
  const createResult = await repo.createAuthenticator({ ...verificationResult, userId });
  if (isError14(createResult)) {
    logger18.error("passkey_add_create_failed", { userId, error: createResult });
    return createResult;
  }
  return ok15(createResult);
}
async function renamePasskey(context, userId, authenticatorId, newName) {
  const repo = getAuthRepository(context);
  const ownershipResult = await repo.authenticatorBelongsToUser(authenticatorId, userId);
  if (isError14(ownershipResult)) {
    logger18.error("passkey_rename_ownership_check_failed", { userId, authenticatorId, error: ownershipResult });
    return ownershipResult;
  }
  if (!ownershipResult) {
    logger18.warning("passkey_rename_unauthorized", { userId, authenticatorId });
    return err18("Authenticator not found or unauthorized", {
      authenticator: "You do not have permission to modify this authenticator"
    });
  }
  const trimmedName = newName.trim();
  if (trimmedName.length < 1 || trimmedName.length > 50) {
    return err18("Invalid authenticator name", {
      name: "Name must be between 1 and 50 characters"
    });
  }
  const updateResult = await repo.updateAuthenticatorName(authenticatorId, trimmedName);
  if (isError14(updateResult)) {
    logger18.error("passkey_rename_failed", { userId, authenticatorId, error: updateResult });
    return updateResult;
  }
  return ok15(updateResult);
}
async function deletePasskey(context, userId, authenticatorId) {
  const repo = getAuthRepository(context);
  const ownershipResult = await repo.authenticatorBelongsToUser(authenticatorId, userId);
  if (isError14(ownershipResult)) {
    logger18.error("passkey_delete_ownership_check_failed", { userId, authenticatorId, error: ownershipResult });
    return ownershipResult;
  }
  if (!ownershipResult) {
    logger18.warning("passkey_delete_unauthorized", { userId, authenticatorId });
    return err18("Authenticator not found or unauthorized", {
      authenticator: "You do not have permission to delete this authenticator"
    });
  }
  const countResult = await repo.countAuthenticatorsByUserId(userId);
  if (isError14(countResult)) {
    logger18.error("passkey_delete_count_failed", { userId, error: countResult });
    return countResult;
  }
  if (countResult <= MIN_AUTHENTICATORS_PER_USER) {
    logger18.warning("passkey_delete_minimum_required", { userId, count: countResult });
    return err18("Cannot delete last authenticator", {
      authenticator: "You must have at least one authenticator for security"
    });
  }
  const deleteResult = await repo.deleteAuthenticator(authenticatorId);
  if (isError14(deleteResult)) {
    logger18.error("passkey_delete_failed", { userId, authenticatorId, error: deleteResult });
    return deleteResult;
  }
  return ok15(true);
}
async function generateAddPasskeyOptions(context, request, userId, rpName, rpId) {
  const repo = getAuthRepository(context);
  const authSession = await getAuthSession(request, context);
  if (isError14(authSession)) {
    return authSession;
  }
  if (!authSession || !authSession.user) {
    return err18("User not authenticated", { user: "Session does not contain user data" });
  }
  const session = authSession;
  const existingAuthsResult = await repo.getAuthenticatorsByUserId(userId);
  if (isError14(existingAuthsResult)) {
    logger18.error("passkey_options_get_existing_failed", { userId, error: existingAuthsResult });
    return existingAuthsResult;
  }
  const excludeCredentials = existingAuthsResult.map((auth) => ({ id: auth.id, transports: auth.transports }));
  const challenge = generateChallenge();
  const options = createRegistrationOptions(rpName, rpId, session.user.email, session.user.displayName, challenge, excludeCredentials);
  return ok15({ challenge, options });
}

// src/auth/server/index.ts
init_session();

// src/auth/server/webauthn-credential.ts
import { decodeBase64url as decodeBase64url5 } from "@oslojs/encoding";
function arrayBufferFromObject(obj) {
  if (obj instanceof ArrayBuffer) {
    return obj;
  }
  if (typeof obj === "object" && obj !== null) {
    const keys = Object.keys(obj);
    if (keys.length > 0 && keys.every((key) => /^\d+$/.test(key))) {
      const bytes = Object.values(obj);
      const uint8Array = new Uint8Array(bytes);
      const buffer = new ArrayBuffer(uint8Array.length);
      new Uint8Array(buffer).set(uint8Array);
      return buffer;
    }
  }
  if (typeof obj === "string") {
    const uint8Array = decodeBase64url5(obj);
    const buffer = new ArrayBuffer(uint8Array.length);
    new Uint8Array(buffer).set(uint8Array);
    return buffer;
  }
  return new ArrayBuffer(0);
}
function convertServerOptionsToWebAuthn(serverOptions, challengeString) {
  const challengeUint8Array = decodeBase64url5(challengeString);
  const challengeBuffer = new ArrayBuffer(challengeUint8Array.length);
  new Uint8Array(challengeBuffer).set(challengeUint8Array);
  return {
    ...serverOptions,
    challenge: challengeBuffer,
    user: {
      ...serverOptions.user,
      id: arrayBufferFromObject(serverOptions.user.id)
    },
    excludeCredentials: serverOptions.excludeCredentials?.map((cred) => ({
      ...cred,
      id: arrayBufferFromObject(cred.id)
    })) || []
  };
}
function convertWebAuthnCredentialToStorage(credential) {
  const rawIdUint8Array = decodeBase64url5(credential.rawId);
  const rawIdBuffer = new ArrayBuffer(rawIdUint8Array.length);
  new Uint8Array(rawIdBuffer).set(rawIdUint8Array);
  const attestationUint8Array = decodeBase64url5(credential.response.attestationObject);
  const attestationBuffer = new ArrayBuffer(attestationUint8Array.length);
  new Uint8Array(attestationBuffer).set(attestationUint8Array);
  const clientDataUint8Array = decodeBase64url5(credential.response.clientDataJSON);
  const clientDataBuffer = new ArrayBuffer(clientDataUint8Array.length);
  new Uint8Array(clientDataBuffer).set(clientDataUint8Array);
  return {
    id: credential.id,
    rawId: rawIdBuffer,
    response: {
      attestationObject: attestationBuffer,
      clientDataJSON: clientDataBuffer,
      transports: credential.response?.transports
    },
    type: "public-key",
    authenticatorAttachment: credential.authenticatorAttachment
  };
}
export {
  verifyRouteMiddleware,
  verifyLoader,
  verifyCode,
  verifyChallengeUniqueness,
  verifyAction,
  validateWebAuthnRequest,
  validateWebAuthnOrigin,
  validateOrigin,
  validateChallenge,
  updateAuthSession,
  unguardedAuthMiddleware,
  signupLoader,
  signupFormSchema,
  signupAction,
  signoutLoader,
  signoutAction,
  signinLoader,
  signinFormSchema,
  signinAction,
  sendVerificationEmail,
  sendEmailChangeNotification,
  resolveRpId,
  resolveOrigins,
  requireAuthUser,
  requestEmailChange,
  requestAccountRecovery,
  renamePasskey,
  recoverLoader,
  recoverAction,
  profileLoader,
  parseWebAuthnCredential,
  isAuthenticated,
  guardedAuthMiddleware,
  getWebAuthnErrorMessage,
  getUserWithAuthenticators,
  getEmailChangeRequest,
  getChallengeFromSession,
  getAuthUser,
  getAuthSession,
  getAuthRepository,
  generateAddPasskeyOptions,
  destroyChallengeSession,
  destroyAuthSession,
  deletePasskey,
  deleteEmailChangeRequest,
  createVerificationCode,
  createEmailChangeRequest,
  createChallengeSession,
  createAuthenticatedSession,
  createAuthSuccessResponse,
  createAuthSessionStorage,
  createAuthSession,
  createAuthRepository,
  convertWebAuthnCredentialToStorage,
  convertServerOptionsToWebAuthn,
  cleanupChallengeSession,
  changeEmailSchema,
  authUserContext,
  authSessionMiddleware,
  authFormSchema,
  authConfigContext,
  arrayBufferFromObject,
  addPasskeyForUser
};

//# debugId=A1AD0C304F7DD5EE64756E2164756E21
