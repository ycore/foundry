{
  "version": 3,
  "sources": ["../../src/secure/csrf/csrf.config.ts", "../../src/secure/csrf/form.tsx", "../../../../node_modules/.bun/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs", "../../src/secure/csrf/SecureFetcher.tsx", "../../src/secure/csrf/SecureForm.tsx", "../../src/secure/csrf/SecureProvider.tsx", "../../src/secure/rate-limiter/rate-limiter.config.ts", "../../src/secure/index.ts"],
  "sourcesContent": [
    "import type { CSRFConfig } from './@types/csrf.types';\n\n/**\n * Default CSRF configuration\n * Can be overridden in app's config.system.ts\n */\nexport const defaultCSRFConfig: CSRFConfig = {\n  secretKey: 'UNCONFIGURED',\n  cookieName: '__csrf',\n  cookie: {\n    httpOnly: true,\n    sameSite: 'lax',\n    path: '/',\n    secure: true,\n    maxAge: undefined, // Session cookie by default\n  },\n};\n",
    "import { Label } from '@ycore/componentry/vibrant';\nimport clsx from 'clsx';\nimport React from 'react';\nimport type { FormErrorProps, FormFieldContextValue, FormFieldProps } from './@types/form.types';\n\nconst FormFieldContext = React.createContext<FormFieldContextValue | null>(null);\n\nexport { Form } from 'react-router';\n\nexport function FormField({ label, description, error, className, children }: FormFieldProps) {\n  const id = React.useId();\n  const fieldId = `${id}-field`;\n  const descriptionId = `${id}-description`;\n  const errorId = `${id}-error`;\n  const hasError = Boolean(error);\n\n  const contextValue = React.useMemo(() => ({ fieldId, descriptionId, errorId, hasError }), [fieldId, descriptionId, errorId, hasError]);\n\n  const enhancedChildren = React.Children.map(children, child => {\n    if (!React.isValidElement(child)) return child;\n\n    const childProps = child.props as any;\n    if (childProps.name) {\n      const ariaDescribedBy = [description && descriptionId, error && errorId].filter(Boolean).join(' ') || undefined;\n\n      return React.cloneElement(child as React.ReactElement<any>, {\n        id: childProps.id || fieldId,\n        'aria-invalid': hasError || undefined,\n        'aria-describedby': ariaDescribedBy,\n        'data-error': hasError || undefined,\n      });\n    }\n\n    return child;\n  });\n\n  return (\n    <FormFieldContext.Provider value={contextValue}>\n      <div className={clsx('space-y-2', className)} data-slot=\"form-field\">\n        {label && (\n          <Label htmlFor={fieldId} data-slot=\"form-label\" data-error={hasError} className={clsx(hasError && 'text-destructive')}>\n            {label}\n          </Label>\n        )}\n\n        {enhancedChildren}\n\n        {description && !error && (\n          <p id={descriptionId} data-slot=\"form-description\" className=\"text-muted-foreground text-sm\">\n            {description}\n          </p>\n        )}\n\n        {error && <FormError id={errorId} error={error} />}\n      </div>\n    </FormFieldContext.Provider>\n  );\n}\n\nexport function FormError({ error, className, id }: FormErrorProps) {\n  if (!error) {\n    return null;\n  }\n\n  return (\n    <p id={id} data-slot=\"form-error\" className={clsx('text-destructive text-sm', className)}>\n      {error}\n    </p>\n  );\n}\n\nexport function useFormField() {\n  const context = React.useContext(FormFieldContext);\n\n  if (!context) {\n    throw new Error('useFormField must be used within a FormField');\n  }\n\n  return context;\n}\n",
    "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;",
    "import type { FieldErrors } from '@ycore/forge/result';\nimport { extractFieldErrors, isError } from '@ycore/forge/result';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { type FetcherWithComponents, type SubmitOptions, useFetcher } from 'react-router';\nimport { AuthenticityTokenInput, useAuthenticityToken } from 'remix-utils/csrf/react';\n\n// Types\nexport interface SecureFetcherFormProps extends Omit<React.ComponentProps<'form'>, 'method' | 'action' | 'encType'> {\n  /** Override the CSRF token field name (optional) */\n  csrf_name?: string;\n  errors?: FieldErrors | null;\n  fetcher: FetcherWithComponents<unknown>;\n  children?: React.ReactNode;\n  method?: 'get' | 'post' | 'put' | 'patch' | 'delete';\n  action?: string;\n  encType?: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain';\n}\n\nexport interface UseSecureFetcherOptions {\n  key?: string;\n}\n\nexport interface SecureFetcherHandle<T = unknown> {\n  SecureForm: React.FC<Omit<SecureFetcherFormProps, 'fetcher'>>;\n  submitSecure: (data: FormData, options?: SubmitOptions) => void;\n  errors: FieldErrors | null;\n  data: T | undefined;\n  state: 'idle' | 'submitting' | 'loading';\n  Form: FetcherWithComponents<T>['Form'];\n  submit: FetcherWithComponents<T>['submit'];\n  load: FetcherWithComponents<T>['load'];\n  formData: FormData | undefined;\n  formMethod: 'get' | 'post' | 'put' | 'patch' | 'delete' | undefined;\n  formAction: string | undefined;\n  formEncType: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'application/json' | 'text/plain' | undefined;\n}\n\n/** Fetcher with built-in CSRF protection */\nexport function useSecureFetcher<T = unknown>({ key }: UseSecureFetcherOptions = {}): SecureFetcherHandle<T> {\n  const fetcher = useFetcher<T>({ key });\n  const token = useAuthenticityToken();\n\n  // Extract errors from fetcher data if present\n  const errors = React.useMemo(() => {\n    if (fetcher.data && isError(fetcher.data)) {\n      return extractFieldErrors(fetcher.data);\n    }\n    return null;\n  }, [fetcher.data]);\n\n  // Secure submit function that automatically adds CSRF token\n  const submitSecure = React.useCallback(\n    (data: FormData, options?: SubmitOptions) => {\n      const secureData = new FormData();\n\n      // Copy all existing form data\n      data.forEach((value, key) => {\n        secureData.append(key, value);\n      });\n\n      // Add CSRF token if not already present using default field name\n      if (!secureData.has('csrf_token') && token) {\n        secureData.append('csrf_token', token);\n      }\n\n      fetcher.submit(secureData, options);\n    },\n    [fetcher, token]\n  );\n\n  // SecureForm component bound to this fetcher\n  const SecureForm = React.useMemo(\n    () =>\n      React.forwardRef<HTMLFormElement, Omit<SecureFetcherFormProps, 'fetcher'>>(({ children, csrf_name, errors: explicitErrors, ...props }, ref) => (\n        <SecureFetcherForm ref={ref} fetcher={fetcher} csrf_name={csrf_name} errors={explicitErrors || errors} {...props}>\n          {children}\n        </SecureFetcherForm>\n      )),\n    [fetcher, errors]\n  );\n\n  SecureForm.displayName = 'SecureForm';\n\n  return {\n    SecureForm,\n    submitSecure,\n    errors,\n    data: fetcher.data as T | undefined,\n    state: fetcher.state,\n    Form: fetcher.Form,\n    submit: fetcher.submit,\n    load: fetcher.load,\n    formData: fetcher.formData,\n    formMethod: fetcher.formMethod?.toLowerCase() as 'get' | 'post' | 'put' | 'patch' | 'delete' | undefined,\n    formAction: fetcher.formAction,\n    formEncType: fetcher.formEncType,\n  };\n}\n\n/** Fetcher form with CSRF protection */\nexport const SecureFetcherForm = React.forwardRef<HTMLFormElement, SecureFetcherFormProps>(({ children, csrf_name, errors, fetcher, className, ...props }, ref) => {\n  // Use override if provided, otherwise use default 'csrf_token'\n  const tokenFieldName = csrf_name ?? 'csrf_token';\n  const FetcherForm = fetcher.Form;\n\n  return (\n    <FetcherForm ref={ref} className={className} {...props}>\n      {/* CSRF token hidden input */}\n      <AuthenticityTokenInput name={tokenFieldName} />\n\n      {/* Display CSRF validation error if present */}\n      {errors?.csrf && <SecureFetcherError error={errors.csrf} className=\"mb-4\" />}\n\n      {/* Display general form error if present (and no CSRF error) */}\n      {errors?.form && !errors.csrf && <SecureFetcherError error={errors.form} className=\"mb-4\" />}\n\n      {children}\n    </FetcherForm>\n  );\n});\n\nSecureFetcherForm.displayName = 'SecureFetcherForm';\n\n/** Displays fetcher error messages */\nexport function SecureFetcherError({ error, className, id }: { error?: string | null; className?: string; id?: string }) {\n  if (!error) {\n    return null;\n  }\n\n  return (\n    <p id={id} data-slot=\"form-error\" className={clsx('text-destructive text-sm', className)} role=\"alert\">\n      {error}\n    </p>\n  );\n}\n\n/** Field component for fetcher forms (reuses SecureFormField) */\nexport { SecureFormField as SecureFetcherField } from './SecureForm';\n\n/** Creates field props with error handling for fetchers */\nexport function createFetcherFieldProps(name: string, errors?: FieldErrors | null): { error?: string; 'aria-invalid'?: boolean; 'aria-describedby'?: string } {\n  const error = errors?.[name];\n\n  if (!error) {\n    return {};\n  }\n\n  return { error, 'aria-invalid': true, 'aria-describedby': `${name}-error` };\n}\n",
    "import { Label } from '@ycore/componentry/vibrant';\nimport type { FieldErrors } from '@ycore/forge/result';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Form } from 'react-router';\nimport { AuthenticityTokenInput, useAuthenticityToken } from 'remix-utils/csrf/react';\n\n// Types\nexport interface SecureFormProps extends React.ComponentProps<typeof Form> {\n  /** Override the CSRF token field name (optional) */\n  csrf_name?: string;\n  /** Form-level and field-level errors */\n  errors?: FieldErrors | null;\n  children?: React.ReactNode;\n}\n\nexport interface SecureFormFieldProps {\n  name: string;\n  label?: string;\n  description?: string;\n  error?: string | null;\n  required?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n}\n\nexport interface SecureFormErrorProps {\n  error?: string | null;\n  className?: string;\n  id?: string;\n}\n\nconst CSRF_TOKER_ERROR = 'Form load error. Please refresh the page or contact support if the issue persists.' as const;\n\n// Context for passing errors down to field components\nconst SecureFormContext = React.createContext<{ errors: FieldErrors | null }>({ errors: null });\n\n/** Form with CSRF protection and error handling */\nexport function SecureForm({ children, csrf_name, errors, ...props }: SecureFormProps) {\n  const token = useAuthenticityToken();\n\n  // Use override if provided, otherwise use default 'csrf_token'\n  const tokenFieldName = csrf_name ?? 'csrf_token';\n  const contextValue = React.useMemo(() => ({ errors: errors || null }), [errors]);\n\n  return (\n    // if CSRF token is missing, avoid unsecured form\n    !token ? (\n      <div role=\"alert\" className=\"rounded-lg border border-destructive bg-destructive/10 p-4\">\n        <SecureFormError error={CSRF_TOKER_ERROR} />\n      </div>\n    ) : (\n      <SecureFormContext.Provider value={contextValue}>\n        <Form role=\"form\" {...props}>\n          <AuthenticityTokenInput name={tokenFieldName} />\n\n          {/* CSRF validation errors, if present */}\n          {errors?.csrf && <SecureFormError error={errors.csrf} className=\"mb-4\" />}\n\n          {/* General form errors, if present */}\n          {errors?.form && !errors.csrf && <SecureFormError error={errors.form} className=\"mb-4\" />}\n\n          {children}\n        </Form>\n      </SecureFormContext.Provider>\n    )\n  );\n}\n\n/** Form field with automatic error display and ARIA attributes */\nexport function SecureFormField({ name, label, description, error, required, className, children }: SecureFormFieldProps) {\n  const { errors } = React.useContext(SecureFormContext);\n  const fieldError = error || errors?.[name];\n  const errorId = fieldError ? `${name}-error` : undefined;\n\n  return (\n    <div className={clsx('space-y-2', className)}>\n      {label && (\n        <Label htmlFor={name}>\n          {label}\n          {required && <span className=\"ml-1 text-destructive\">*</span>}\n        </Label>\n      )}\n      {description && <p className=\"text-muted-foreground text-sm\">{description}</p>}\n      {React.Children.map(children, child => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child as React.ReactElement<any>, {\n            id: (child.props as any).id || name,\n            name: (child.props as any).name || name,\n            'aria-invalid': fieldError ? true : undefined,\n            'aria-describedby': fieldError ? errorId : (child.props as any)['aria-describedby'],\n          });\n        }\n        return child;\n      })}\n      {fieldError && (\n        <p id={errorId} className=\"text-destructive text-sm\" role=\"alert\">\n          {fieldError}\n        </p>\n      )}\n    </div>\n  );\n}\n\n/** Displays form-level error messages */\nexport function SecureFormError({ error, className, id }: SecureFormErrorProps) {\n  if (!error) {\n    return null;\n  }\n\n  return (\n    <p id={id} data-slot=\"form-error\" className={clsx('text-destructive text-sm', className)} role=\"alert\">\n      {error}\n    </p>\n  );\n}\n\n/** Returns form field props with error handling */\nexport function useSecureFormField(name: string): { error?: string; 'aria-invalid'?: boolean; 'aria-describedby'?: string } {\n  const { errors } = React.useContext(SecureFormContext);\n  const error = errors?.[name];\n\n  if (!error) {\n    return {};\n  }\n\n  return {\n    error,\n    'aria-invalid': true,\n    'aria-describedby': `${name}-error`,\n  };\n}\n",
    "import type { ReactNode } from 'react';\nimport { AuthenticityTokenProvider } from 'remix-utils/csrf/react';\n\nexport interface SecureProviderProps {\n  children: ReactNode;\n  token: string;\n}\n\n/** Provides CSRF protection using remix-utils token context */\nexport const SecureProvider = ({ children, token }: SecureProviderProps) => {\n  return <AuthenticityTokenProvider token={token}>{children}</AuthenticityTokenProvider>;\n};\n",
    "import type { CloudflareProviderConfig, KvProviderConfig, RateLimiterConfig } from './@types/rate-limiter.types';\n\n/**\n * Default rate limiter configuration\n *\n * IMPORTANT: This configuration uses 'UNCONFIGURED' placeholders that MUST be\n * replaced by the consuming application in config.system.ts\n *\n * The app is responsible for:\n * - Configuring kvBinding to match a KV namespace from wrangler.jsonc\n * - Configuring limiterBinding to match a RateLimit binding from wrangler.jsonc\n * - Defining explicit route configurations with provider assignments\n *\n * Rate limiting is ONLY applied to routes explicitly configured in the routes array.\n */\nexport const defaultRateLimiterConfig: RateLimiterConfig = {\n  providers: [\n    {\n      id: 'default-kv',\n      type: 'kv',\n      options: {\n        kvBinding: 'UNCONFIGURED',\n      },\n      limits: {\n        maxRequests: 10,\n        windowMs: 60 * 1000, // 1 minute window\n      },\n    } satisfies KvProviderConfig,\n    {\n      id: 'default-cloudflare',\n      type: 'cloudflare',\n      options: {\n        limiterBinding: 'UNCONFIGURED',\n      },\n    } satisfies CloudflareProviderConfig,\n  ],\n  routes: [\n    // Example route configuration (uncomment and customize as needed):\n    // {\n    //   pattern: '/api/**',\n    //   provider: 'default-kv',\n    //   methods: ['POST', 'PUT', 'DELETE', 'PATCH'],\n    // },\n  ],\n  conditions: {\n    skipPaths: ['/favicon.ico'],\n  },\n};\n",
    "export type { CSRFConfig, CSRFData } from './csrf/@types/csrf.types';\nexport { defaultCSRFConfig } from './csrf/csrf.config';\nexport { FormError, FormField, useFormField } from './csrf/form';\nexport type { SecureFetcherFormProps, SecureFetcherHandle, UseSecureFetcherOptions } from './csrf/SecureFetcher';\nexport { createFetcherFieldProps, SecureFetcherError, useSecureFetcher } from './csrf/SecureFetcher';\nexport { SecureProvider } from './csrf/SecureProvider';\nexport type { RateLimiterConfig } from './rate-limiter/@types/rate-limiter.types';\nexport { defaultRateLimiterConfig } from './rate-limiter/rate-limiter.config';\n\nimport * as SecureFormComponents from './csrf/SecureForm';\nimport { SecureForm as SecureFormComponent } from './csrf/SecureForm';\nexport const SecureForm = Object.assign(SecureFormComponent, {\n  Field: SecureFormComponents.SecureFormField,\n  Error: SecureFormComponents.SecureFormError,\n});\n\nimport * as FormComponents from './csrf/form';\nimport { Form as FormComponent } from './csrf/form';\nexport const Form = Object.assign(FormComponent, {\n  Field: FormComponents.FormField,\n  Error: FormComponents.FormError,\n});\n\nimport * as SecureFetcherComponents from './csrf/SecureFetcher';\nimport { SecureFetcherForm as SecureFetcherFormComponent } from './csrf/SecureFetcher';\nexport const SecureFetcher = Object.assign(SecureFetcherFormComponent, {\n  Field: SecureFetcherComponents.SecureFetcherField,\n  Error: SecureFetcherComponents.SecureFetcherError,\n});\n"
  ],
  "mappings": "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",
  "debugId": "D94E073E66E3A51764756E2164756E21",
  "names": []
}