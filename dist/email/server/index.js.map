{
  "version": 3,
  "sources": ["../../../../../node_modules/.bun/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js", "../../../src/email/server/email.middleware.ts", "../../../src/email/email.context.ts", "../../../src/email/server/email.service.ts", "../../../src/email/email.config.ts", "../../../src/email/email-provider.ts", "../../../src/email/providers/local-dev.ts", "../../../src/email/providers/base-provider.ts", "../../../src/email/providers/mailchannels.ts", "../../../src/email/providers/resend.ts", "../../../src/email/providers/test-mock.ts", "../../../../../node_modules/.bun/@react-email+render@1.4.0+2b5434204782a989/node_modules/@react-email/render/dist/browser/index.mjs", "../../../../../node_modules/.bun/prettier@3.6.2/node_modules/prettier/plugins/html.mjs", "../../../../../node_modules/.bun/prettier@3.6.2/node_modules/prettier/standalone.mjs", "../../../../../node_modules/.bun/domelementtype@2.3.0/node_modules/domelementtype/lib/esm/index.js", "../../../../../node_modules/.bun/domhandler@5.0.3/node_modules/domhandler/lib/esm/node.js", "../../../../../node_modules/.bun/domhandler@5.0.3/node_modules/domhandler/lib/esm/index.js", "../../../../../node_modules/.bun/leac@0.6.0/node_modules/leac/lib/leac.mjs", "../../../../../node_modules/.bun/peberminta@0.9.0/node_modules/peberminta/lib/core.mjs", "../../../../../node_modules/.bun/parseley@0.12.1/node_modules/parseley/lib/parseley.mjs", "../../../../../node_modules/.bun/selderee@0.11.0/node_modules/selderee/lib/selderee.mjs", "../../../../../node_modules/.bun/@selderee+plugin-htmlparser2@0.11.0/node_modules/@selderee/plugin-htmlparser2/lib/hp2-builder.mjs", "../../../../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-html.js", "../../../../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-xml.js", "../../../../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.js", "../../../../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/decode.js", "../../../../../node_modules/.bun/htmlparser2@8.0.2/node_modules/htmlparser2/lib/esm/Tokenizer.js", "../../../../../node_modules/.bun/htmlparser2@8.0.2/node_modules/htmlparser2/lib/esm/Parser.js", "../../../../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/escape.js", "../../../../../node_modules/.bun/entities@4.5.0/node_modules/entities/lib/esm/index.js", "../../../../../node_modules/.bun/dom-serializer@2.0.0/node_modules/dom-serializer/lib/esm/foreignNames.js", "../../../../../node_modules/.bun/dom-serializer@2.0.0/node_modules/dom-serializer/lib/esm/index.js", "../../../../../node_modules/.bun/htmlparser2@8.0.2/node_modules/htmlparser2/lib/esm/index.js", "../../../../../node_modules/.bun/html-to-text@9.0.5/node_modules/html-to-text/lib/html-to-text.mjs", "../../../src/email/server/render-email.ts"],
  "sourcesContent": [
    "'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n",
    "import { setContext } from '@ycore/forge/context';\nimport type { MiddlewareFunction } from 'react-router';\nimport type { EmailConfig } from '../@types/email.types';\nimport { emailContext } from '../email.context';\n\n/**\n * Email configuration middleware\n *\n * Injects email configuration into React Router context for use by email services.\n * This eliminates prop-drilling of email config through function parameters.\n */\nexport function emailConfigMiddleware(emailConfig: EmailConfig): MiddlewareFunction<Response> {\n  return async ({ context }, next) => {\n    setContext(context, emailContext, emailConfig);\n    return next();\n  };\n}\n",
    "import { createContext } from 'react-router';\nimport type { EmailConfig } from './@types/email.types';\n\nexport const emailContext = createContext<EmailConfig | null>(null);\n",
    "import { getContext } from '@ycore/forge/context';\nimport { logger } from '@ycore/forge/logger';\nimport { err, flattenError, isError, ok, type Result } from '@ycore/forge/result';\nimport { getBindings } from '@ycore/forge/services';\nimport type { RouterContextProvider } from 'react-router';\nimport type { EmailProviderConfig, SendMailOptions } from '../@types/email.types';\nimport { defaultEmailConfig } from '../email.config';\nimport { emailContext } from '../email.context';\nimport { createEmailProvider, getProviderConfig } from '../email-provider';\n\n/**\n * Send email with cascading configuration fallback\n *\n * This is the primary email sending function for the application.\n * It implements a predictable configuration cascade:\n * 1. Provided options (highest priority)\n * 2. Email context from middleware\n * 3. Default email config (lowest priority)\n */\nexport async function sendMail(context: Readonly<RouterContextProvider>, options: SendMailOptions): Promise<Result<void>> {\n  try {\n    const { to, template, from: optionsFrom, provider: optionsProvider, apiKey: optionsApiKey } = options;\n\n    // Get email config from context (may be null if middleware not configured)\n    const emailConfig = getContext(context, emailContext, null);\n    const provider = optionsProvider || emailConfig?.active || defaultEmailConfig.active;\n\n    if (!provider) {\n      logger.error('email_no_provider', { optionsProvider, contextActive: emailConfig?.active, defaultActive: defaultEmailConfig.active, to });\n      return err('No email provider configured');\n    }\n\n    // Get provider config with cascading fallback\n    const providerConfig = (emailConfig && getProviderConfig(emailConfig, provider)) || getProviderConfig(defaultEmailConfig, provider);\n    if (!providerConfig) {\n      logger.error('email_provider_config_missing', { provider, to, contextProviders: emailConfig?.providers.map((p: EmailProviderConfig) => p.name) });\n      return err(`Provider configuration not found for: ${provider}`);\n    }\n\n    // Determine apiKey with cascading fallback\n    let apiKey = optionsApiKey;\n    if (!apiKey && providerConfig.apiKey) {\n      const bindings = getBindings(context);\n      apiKey = bindings[providerConfig.apiKey as keyof typeof bindings] as string | undefined;\n    }\n\n    // Determine from address with cascading fallback\n    const from = optionsFrom || providerConfig.sendFrom;\n\n    // Create email provider instance\n    const emailProviderResult = createEmailProvider(provider);\n    if (isError(emailProviderResult)) {\n      logger.error('email_provider_creation_failed', { provider, to, error: flattenError(emailProviderResult) });\n      return emailProviderResult;\n    }\n\n    // Send email\n    const sendResult = await emailProviderResult.sendEmail({\n      apiKey: apiKey || '',\n      to,\n      from,\n      template: {\n        subject: template.subject,\n        text: template.text,\n        html: template.html,\n      },\n    });\n\n    if (isError(sendResult)) {\n      logger.error('email_send_failed', { to, from, provider, error: flattenError(sendResult) });\n      return sendResult;\n    }\n\n    return ok(undefined);\n  } catch (error) {\n    logger.error('email_send_unexpected_error', { to: options.to, error: error });\n    return err('Failed to send email', { error });\n  }\n}\n",
    "import type { EmailConfig } from './@types/email.types';\n\n/**\n * Default Email Configuration\n *\n * IMPORTANT: This configuration uses local-dev provider by default for development.\n * For production deployments, you MUST:\n * 1. Override this config in your app's config file (e.g., app/config/config.system.ts)\n * 2. Set active provider to 'resend' or 'mailchannels'\n * 3. Configure valid sendFrom addresses for your domain\n * 4. Set API keys via environment variables or Cloudflare bindings\n *\n */\nexport const defaultEmailConfig: EmailConfig = {\n  active: 'local-dev',\n  providers: [\n    {\n      name: 'local-dev',\n      sendFrom: 'dev@localhost',\n    },\n  ],\n};\n",
    "import type { Result } from '@ycore/forge/result';\nimport { err, ok } from '@ycore/forge/result';\nimport type { EmailConfig, EmailProvider, EmailProviderConfig, EmailProviders } from './@types/email.types';\nimport { createLocalDevEmailProvider } from './providers/local-dev';\nimport { createMailChannelsEmailProvider } from './providers/mailchannels';\nimport { createResendEmailProvider } from './providers/resend';\nimport { createTestMockEmailProvider } from './providers/test-mock';\n\nconst providerRegistry: Record<EmailProviders, () => EmailProvider> = {\n  'local-dev': createLocalDevEmailProvider,\n  mailchannels: createMailChannelsEmailProvider,\n  resend: createResendEmailProvider,\n  'test-mock': createTestMockEmailProvider,\n};\n\nexport function createEmailProvider(providerName: string): Result<EmailProvider> {\n  if (!isValidProvider(providerName)) {\n    return err(`Unsupported email provider: ${providerName}`);\n  }\n\n  try {\n    const factory = providerRegistry[providerName];\n    const provider = factory();\n    return ok(provider);\n  } catch (error) {\n    return err(`Failed to create email provider: ${providerName}`, undefined, { cause: error });\n  }\n}\n\nexport function isValidProvider(providerName: string): providerName is EmailProviders {\n  return providerName in providerRegistry;\n}\n\nexport function getSupportedProviders(): EmailProviders[] {\n  return Object.keys(providerRegistry) as EmailProviders[];\n}\n\nexport function getEmailProviderNames(emailConfig: EmailConfig): EmailProviders[] {\n  return emailConfig.providers.map(provider => provider.name);\n}\n\nexport function getProviderConfig(emailConfig: EmailConfig, providerName: string): EmailProviderConfig | undefined {\n  return emailConfig.providers.find(provider => provider.name === providerName);\n}\n",
    "import { logger } from '@ycore/forge/logger';\nimport type { EmailProvider } from '../@types/email.types';\nimport { createEmailProviderBase, EMAIL_PROVIDER_DELAYS } from './base-provider';\n\n/**\n * Local Dev Email Provider - Development provider that logs emails instead of sending\n */\nexport function createLocalDevEmailProvider(): EmailProvider {\n  return createEmailProviderBase('local-dev', async options => {\n    const { to, from, template } = options;\n\n    // Simulate a slight delay like a real email service\n    await new Promise(resolve => setTimeout(resolve, EMAIL_PROVIDER_DELAYS.LOCAL_DEV));\n\n    logger.info('local_dev_email_sent', {\n      provider: 'local-dev',\n      from,\n      to,\n      subject: template.subject,\n      text: template.text,\n    });\n  });\n}\n",
    "import { logger } from '@ycore/forge/logger';\nimport type { Result } from '@ycore/forge/result';\nimport { err, tryCatch } from '@ycore/forge/result';\nimport type { EmailProvider, SendEmailOptions } from '../@types/email.types';\n\n/**\n * Configuration delays for email providers (in milliseconds)\n */\nexport const EMAIL_PROVIDER_DELAYS = {\n  LOCAL_DEV: 800,\n  TEST_MOCK: 10,\n} as const;\n\n/**\n * Base email provider factory - creates an EmailProvider with common validation and error handling logic\n */\nexport function createEmailProviderBase(name: string, sendFn: (options: SendEmailOptions) => Promise<void>): EmailProvider {\n  return {\n    async sendEmail(options: SendEmailOptions): Promise<Result<void>> {\n      const { from, to, template } = options;\n\n      if (!from) {\n        return err('From address is required');\n      }\n\n      return tryCatch(async () => {\n        await sendFn(options);\n\n        logger.debug('email_sent_success', {\n          provider: name,\n          to,\n          subject: template.subject,\n        });\n      }, `Failed to send email via ${name}`);\n    },\n  };\n}\n",
    "import type { EmailProvider } from '../@types/email.types';\nimport { createEmailProviderBase } from './base-provider';\n\n/**\n * MailChannels Email Provider\n * Implementation for MailChannels email service\n *\n * Requires DNS record for authorization:\n * Type: TXT, Name: _mailchannels, Content: \"v=mc1 auth=<AccountId>\"\n */\nexport function createMailChannelsEmailProvider(): EmailProvider {\n  const apiUrl = 'https://api.mailchannels.net/tx/v1/send';\n\n  return createEmailProviderBase('mailchannels', async options => {\n    const { apiKey, to, from, template } = options;\n\n    const payload = {\n      personalizations: [\n        {\n          to: [{ email: to }],\n        },\n      ],\n      from: { email: from },\n      subject: template.subject,\n      content: [\n        { type: 'text/plain', value: template.text },\n        { type: 'text/html', value: template.html },\n      ],\n    };\n\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'X-Api-Key': apiKey,\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(payload),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`MailChannels API error (${response.status}): ${errorText}`);\n    }\n  });\n}\n",
    "import type { EmailProvider } from '../@types/email.types';\nimport { createEmailProviderBase } from './base-provider';\n\n/**\n * Resend Email Provider\n * Implementation for Resend email service (https://resend.com)\n */\nexport function createResendEmailProvider(): EmailProvider {\n  return createEmailProviderBase('resend', async options => {\n    const { apiKey, to, from, template } = options;\n\n    const response = await fetch('https://api.resend.com/emails', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({\n        from,\n        to,\n        subject: template.subject,\n        html: template.html,\n        text: template.text,\n      }),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Resend API error (${response.status}): ${errorText}`);\n    }\n  });\n}\n",
    "import { logger } from '@ycore/forge/logger';\nimport { err } from '@ycore/forge/result';\nimport type { EmailProvider } from '../@types/email.types';\nimport { createEmailProviderBase, EMAIL_PROVIDER_DELAYS } from './base-provider';\n\n/**\n * Stored email metadata for test verification (excludes sensitive data)\n */\nexport interface StoredTestEmail {\n  to: string;\n  from: string;\n  template: {\n    subject: string;\n    html: string;\n    text: string;\n  };\n}\n\n/**\n * Module-level state for test email tracking\n * Isolated from production code for security\n */\nlet sentEmails: StoredTestEmail[] = [];\nlet shouldFail = false;\nlet failureReason = 'Simulated email failure';\n\n/**\n * Test Mock Email Provider\n * Enhanced mock provider for testing that tracks sent emails and allows failure simulation\n */\nexport function createTestMockEmailProvider(): EmailProvider {\n  return {\n    async sendEmail(options) {\n      const { to, from, template } = options;\n\n      if (!from) {\n        return err('From address is required');\n      }\n\n      // Store email metadata for test verification (excludes sensitive apiKey)\n      sentEmails.push({\n        to,\n        from,\n        template: {\n          subject: template.subject,\n          html: template.html,\n          text: template.text,\n        },\n      });\n\n      // Simulate failure if configured\n      if (shouldFail) {\n        return err(failureReason);\n      }\n\n      // Use base provider for consistent behavior\n      const baseProvider = createEmailProviderBase('test-mock', async opts => {\n        await new Promise(resolve => setTimeout(resolve, EMAIL_PROVIDER_DELAYS.TEST_MOCK));\n\n        logger.debug('email_test_mock_sent', {\n          provider: 'test-mock',\n          from: opts.from,\n          to: opts.to,\n          subject: opts.template.subject,\n          textLength: opts.template.text.length,\n          htmlLength: opts.template.html.length,\n        });\n      });\n\n      return baseProvider.sendEmail(options);\n    },\n  };\n}\n\n// ============================================================================\n// Test Utility Functions\n// ============================================================================\n\n/**\n * Get all sent emails (returns copy to prevent mutation)\n */\nexport function getTestSentEmails(): StoredTestEmail[] {\n  return sentEmails.map(email => ({\n    to: email.to,\n    from: email.from,\n    template: {\n      subject: email.template.subject,\n      html: email.template.html,\n      text: email.template.text,\n    },\n  }));\n}\n\n/**\n * Get the most recently sent email\n */\nexport function getTestLastSentEmail(): StoredTestEmail | undefined {\n  const lastEmail = sentEmails[sentEmails.length - 1];\n  if (!lastEmail) {\n    return undefined;\n  }\n\n  return {\n    to: lastEmail.to,\n    from: lastEmail.from,\n    template: {\n      subject: lastEmail.template.subject,\n      html: lastEmail.template.html,\n      text: lastEmail.template.text,\n    },\n  };\n}\n\n/**\n * Get count of sent emails\n */\nexport function getTestEmailCount(): number {\n  return sentEmails.length;\n}\n\n/**\n * Find email sent to specific recipient\n */\nexport function findTestEmailByTo(to: string): StoredTestEmail | undefined {\n  return sentEmails.find(email => email.to === to);\n}\n\n/**\n * Find all emails with subject containing search string\n */\nexport function findTestEmailsBySubject(subject: string): StoredTestEmail[] {\n  return sentEmails.filter(email => email.template.subject.includes(subject));\n}\n\n/**\n * Clear all sent emails\n */\nexport function clearTestSentEmails(): void {\n  sentEmails = [];\n}\n\n/**\n * Configure provider to simulate failures\n */\nexport function simulateTestEmailFailure(reason = 'Simulated email failure'): void {\n  shouldFail = true;\n  failureReason = reason;\n}\n\n/**\n * Reset provider to success mode\n */\nexport function resetTestEmailToSuccess(): void {\n  shouldFail = false;\n  failureReason = 'Simulated email failure';\n}\n\n/**\n * Full reset - clears emails and resets failure state\n */\nexport function resetTestEmailProvider(): void {\n  clearTestSentEmails();\n  resetTestEmailToSuccess();\n}\n\n/**\n * Get current failure configuration\n */\nexport function getTestEmailFailureState(): { shouldFail: boolean; reason: string } {\n  return {\n    shouldFail,\n    reason: failureReason,\n  };\n}\n\n// ============================================================================\n// Test Assertion Helpers\n// ============================================================================\n\n/**\n * Assert that an email was sent to a specific recipient\n * Throws if email not found\n */\nexport function assertTestEmailSent(to: string): StoredTestEmail {\n  const email = findTestEmailByTo(to);\n  if (!email) {\n    throw new Error(`Expected email to be sent to ${to}, but no email was found`);\n  }\n  return email;\n}\n\n/**\n * Assert specific number of emails were sent\n */\nexport function assertTestEmailCount(expectedCount: number): void {\n  const actualCount = getTestEmailCount();\n  if (actualCount !== expectedCount) {\n    throw new Error(`Expected ${expectedCount} emails to be sent, but ${actualCount} were sent`);\n  }\n}\n\n/**\n * Assert no emails were sent\n */\nexport function assertTestNoEmailsSent(): void {\n  assertTestEmailCount(0);\n}\n",
    "import { Suspense } from \"react\";\nimport * as html from \"prettier/plugins/html\";\nimport { format } from \"prettier/standalone\";\nimport { convert } from \"html-to-text\";\nimport { jsx } from \"react/jsx-runtime\";\n\n//#region src/shared/utils/pretty.ts\nfunction recursivelyMapDoc(doc, callback) {\n\tif (Array.isArray(doc)) return doc.map((innerDoc) => recursivelyMapDoc(innerDoc, callback));\n\tif (typeof doc === \"object\") {\n\t\tif (doc.type === \"group\") return {\n\t\t\t...doc,\n\t\t\tcontents: recursivelyMapDoc(doc.contents, callback),\n\t\t\texpandedStates: recursivelyMapDoc(doc.expandedStates, callback)\n\t\t};\n\t\tif (\"contents\" in doc) return {\n\t\t\t...doc,\n\t\t\tcontents: recursivelyMapDoc(doc.contents, callback)\n\t\t};\n\t\tif (\"parts\" in doc) return {\n\t\t\t...doc,\n\t\t\tparts: recursivelyMapDoc(doc.parts, callback)\n\t\t};\n\t\tif (doc.type === \"if-break\") return {\n\t\t\t...doc,\n\t\t\tbreakContents: recursivelyMapDoc(doc.breakContents, callback),\n\t\t\tflatContents: recursivelyMapDoc(doc.flatContents, callback)\n\t\t};\n\t}\n\treturn callback(doc);\n}\nconst modifiedHtml = { ...html };\nif (modifiedHtml.printers) {\n\tconst previousPrint = modifiedHtml.printers.html.print;\n\tmodifiedHtml.printers.html.print = (path, options, print, args) => {\n\t\tconst node = path.getNode();\n\t\tconst rawPrintingResult = previousPrint(path, options, print, args);\n\t\tif (node.type === \"ieConditionalComment\") return recursivelyMapDoc(rawPrintingResult, (doc) => {\n\t\t\tif (typeof doc === \"object\" && doc.type === \"line\") return doc.soft ? \"\" : \" \";\n\t\t\treturn doc;\n\t\t});\n\t\treturn rawPrintingResult;\n\t};\n}\nconst defaults = {\n\tendOfLine: \"lf\",\n\ttabWidth: 2,\n\tplugins: [modifiedHtml],\n\tbracketSameLine: true,\n\tparser: \"html\"\n};\nconst pretty = (str, options = {}) => {\n\treturn format(str.replaceAll(\"\\0\", \"\"), {\n\t\t...defaults,\n\t\t...options\n\t});\n};\n\n//#endregion\n//#region src/shared/utils/to-plain-text.ts\nconst plainTextSelectors = [\n\t{\n\t\tselector: \"img\",\n\t\tformat: \"skip\"\n\t},\n\t{\n\t\tselector: \"[data-skip-in-text=true]\",\n\t\tformat: \"skip\"\n\t},\n\t{\n\t\tselector: \"a\",\n\t\toptions: {\n\t\t\tlinkBrackets: false,\n\t\t\thideLinkHrefIfSameAsText: true\n\t\t}\n\t}\n];\nfunction toPlainText(html$1, options) {\n\treturn convert(html$1, {\n\t\tselectors: plainTextSelectors,\n\t\twordwrap: false,\n\t\t...options\n\t});\n}\n\n//#endregion\n//#region src/shared/read-stream.browser.ts\nconst decoder = new TextDecoder(\"utf-8\");\nconst readStream = async (stream) => {\n\tconst chunks = [];\n\tconst writableStream = new WritableStream({\n\t\twrite(chunk) {\n\t\t\tchunks.push(chunk);\n\t\t},\n\t\tabort(reason) {\n\t\t\tthrow new Error(\"Stream aborted\", { cause: { reason } });\n\t\t}\n\t});\n\tawait stream.pipeTo(writableStream);\n\tlet length = 0;\n\tchunks.forEach((item) => {\n\t\tlength += item.length;\n\t});\n\tconst mergedChunks = new Uint8Array(length);\n\tlet offset = 0;\n\tchunks.forEach((item) => {\n\t\tmergedChunks.set(item, offset);\n\t\toffset += item.length;\n\t});\n\treturn decoder.decode(mergedChunks);\n};\n\n//#endregion\n//#region src/browser/render.tsx\nconst render = async (node, options) => {\n\tconst suspendedElement = /* @__PURE__ */ jsx(Suspense, { children: node });\n\tconst reactDOMServer = await import(\"react-dom/server.browser\").then((m) => m.default);\n\tconst html$1 = await new Promise((resolve, reject) => {\n\t\treactDOMServer.renderToReadableStream(suspendedElement, {\n\t\t\tonError(error) {\n\t\t\t\treject(error);\n\t\t\t},\n\t\t\tprogressiveChunkSize: Number.POSITIVE_INFINITY\n\t\t}).then(readStream).then(resolve).catch(reject);\n\t});\n\tif (options?.plainText) return toPlainText(html$1, options.htmlToTextOptions);\n\tconst document = `<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">${html$1.replace(/<!DOCTYPE.*?>/, \"\")}`;\n\tif (options?.pretty) return pretty(document);\n\treturn document;\n};\n\n//#endregion\n//#region src/browser/index.ts\n/**\n* @deprecated use {@link render}\n*/\nconst renderAsync = (element, options) => {\n\treturn render(element, options);\n};\n\n//#endregion\nexport { plainTextSelectors, pretty, render, renderAsync, toPlainText };\n//# sourceMappingURL=index.mjs.map",
    "var on=Object.defineProperty;var un=t=>{throw TypeError(t)};var Ai=(t,e,r)=>e in t?on(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var ln=(t,e)=>{for(var r in e)on(t,r,{get:e[r],enumerable:!0})};var lr=(t,e,r)=>Ai(t,typeof e!=\"symbol\"?e+\"\":e,r),cn=(t,e,r)=>e.has(t)||un(\"Cannot \"+r);var R=(t,e,r)=>(cn(t,e,\"read from private field\"),r?r.call(t):e.get(t)),At=(t,e,r)=>e.has(t)?un(\"Cannot add the same private member more than once\"):e instanceof WeakSet?e.add(t):e.set(t,r),pn=(t,e,r,n)=>(cn(t,e,\"write to private field\"),n?n.call(t,r):e.set(t,r),r);var rn={};ln(rn,{languages:()=>Hs,options:()=>Us,parsers:()=>tn,printers:()=>uu});var Di=(t,e,r,n)=>{if(!(t&&e==null))return e.replaceAll?e.replaceAll(r,n):r.global?e.replace(r,n):e.split(r).join(n)},w=Di;var we=\"string\",ze=\"array\",Ye=\"cursor\",be=\"indent\",Te=\"align\",je=\"trim\",xe=\"group\",ke=\"fill\",ce=\"if-break\",Be=\"indent-if-break\",Ke=\"line-suffix\",Xe=\"line-suffix-boundary\",j=\"line\",Qe=\"label\",Le=\"break-parent\",Dt=new Set([Ye,be,Te,je,xe,ke,ce,Be,Ke,Xe,j,Qe,Le]);var vi=(t,e,r)=>{if(!(t&&e==null))return Array.isArray(e)||typeof e==\"string\"?e[r<0?e.length+r:r]:e.at(r)},K=vi;function yi(t){if(typeof t==\"string\")return we;if(Array.isArray(t))return ze;if(!t)return;let{type:e}=t;if(Dt.has(e))return e}var Fe=yi;var wi=t=>new Intl.ListFormat(\"en-US\",{type:\"disjunction\"}).format(t);function bi(t){let e=t===null?\"null\":typeof t;if(e!==\"string\"&&e!==\"object\")return`Unexpected doc '${e}', \nExpected it to be 'string' or 'object'.`;if(Fe(t))throw new Error(\"doc is valid.\");let r=Object.prototype.toString.call(t);if(r!==\"[object Object]\")return`Unexpected doc '${r}'.`;let n=wi([...Dt].map(s=>`'${s}'`));return`Unexpected doc.type '${t.type}'.\nExpected it to be ${n}.`}var cr=class extends Error{name=\"InvalidDocError\";constructor(e){super(bi(e)),this.doc=e}},pr=cr;function hr(t,e){if(typeof t==\"string\")return e(t);let r=new Map;return n(t);function n(i){if(r.has(i))return r.get(i);let a=s(i);return r.set(i,a),a}function s(i){switch(Fe(i)){case ze:return e(i.map(n));case ke:return e({...i,parts:i.parts.map(n)});case ce:return e({...i,breakContents:n(i.breakContents),flatContents:n(i.flatContents)});case xe:{let{expandedStates:a,contents:o}=i;return a?(a=a.map(n),o=a[0]):o=n(o),e({...i,contents:o,expandedStates:a})}case Te:case be:case Be:case Qe:case Ke:return e({...i,contents:n(i.contents)});case we:case Ye:case je:case Xe:case j:case Le:return e(i);default:throw new pr(i)}}}function B(t,e=hn){return hr(t,r=>typeof r==\"string\"?H(e,r.split(`\n`)):r)}var mr=()=>{},re=mr,fr=mr,mn=mr;function k(t){return re(t),{type:be,contents:t}}function fn(t,e){return re(e),{type:Te,contents:e,n:t}}function E(t,e={}){return re(t),fr(e.expandedStates,!0),{type:xe,id:e.id,contents:t,break:!!e.shouldBreak,expandedStates:e.expandedStates}}function dn(t){return fn(Number.NEGATIVE_INFINITY,t)}function gn(t){return fn({type:\"root\"},t)}function vt(t){return mn(t),{type:ke,parts:t}}function pe(t,e=\"\",r={}){return re(t),e!==\"\"&&re(e),{type:ce,breakContents:t,flatContents:e,groupId:r.groupId}}function Cn(t,e){return re(t),{type:Be,contents:t,groupId:e.groupId,negate:e.negate}}var ne={type:Le};var xi={type:j,hard:!0},ki={type:j,hard:!0,literal:!0},_={type:j},v={type:j,soft:!0},S=[xi,ne],hn=[ki,ne];function H(t,e){re(t),fr(e);let r=[];for(let n=0;n<e.length;n++)n!==0&&r.push(t),r.push(e[n]);return r}var yt=\"'\",Sn='\"';function Bi(t,e){let r=e===!0||e===yt?yt:Sn,n=r===yt?Sn:yt,s=0,i=0;for(let a of t)a===r?s++:a===n&&i++;return s>i?n:r}var _n=Bi;function dr(t){if(typeof t!=\"string\")throw new TypeError(\"Expected a string\");return t.replace(/[|\\\\{}()[\\]^$+*?.]/g,\"\\\\$&\").replace(/-/g,\"\\\\x2d\")}var V,gr=class{constructor(e){At(this,V);pn(this,V,new Set(e))}getLeadingWhitespaceCount(e){let r=R(this,V),n=0;for(let s=0;s<e.length&&r.has(e.charAt(s));s++)n++;return n}getTrailingWhitespaceCount(e){let r=R(this,V),n=0;for(let s=e.length-1;s>=0&&r.has(e.charAt(s));s--)n++;return n}getLeadingWhitespace(e){let r=this.getLeadingWhitespaceCount(e);return e.slice(0,r)}getTrailingWhitespace(e){let r=this.getTrailingWhitespaceCount(e);return e.slice(e.length-r)}hasLeadingWhitespace(e){return R(this,V).has(e.charAt(0))}hasTrailingWhitespace(e){return R(this,V).has(K(!1,e,-1))}trimStart(e){let r=this.getLeadingWhitespaceCount(e);return e.slice(r)}trimEnd(e){let r=this.getTrailingWhitespaceCount(e);return e.slice(0,e.length-r)}trim(e){return this.trimEnd(this.trimStart(e))}split(e,r=!1){let n=`[${dr([...R(this,V)].join(\"\"))}]+`,s=new RegExp(r?`(${n})`:n,\"u\");return e.split(s)}hasWhitespaceCharacter(e){let r=R(this,V);return Array.prototype.some.call(e,n=>r.has(n))}hasNonWhitespaceCharacter(e){let r=R(this,V);return Array.prototype.some.call(e,n=>!r.has(n))}isWhitespaceOnly(e){let r=R(this,V);return Array.prototype.every.call(e,n=>r.has(n))}};V=new WeakMap;var En=gr;var Li=[\"\t\",`\n`,\"\\f\",\"\\r\",\" \"],Fi=new En(Li),O=Fi;var Cr=class extends Error{name=\"UnexpectedNodeError\";constructor(e,r,n=\"type\"){super(`Unexpected ${r} node ${n}: ${JSON.stringify(e[n])}.`),this.node=e}},An=Cr;function Pi(t){return(t==null?void 0:t.type)===\"front-matter\"}var Pe=Pi;var Ni=new Set([\"sourceSpan\",\"startSourceSpan\",\"endSourceSpan\",\"nameSpan\",\"valueSpan\",\"keySpan\",\"tagDefinition\",\"tokens\",\"valueTokens\",\"switchValueSourceSpan\",\"expSourceSpan\",\"valueSourceSpan\"]),Ii=new Set([\"if\",\"else if\",\"for\",\"switch\",\"case\"]);function Dn(t,e){var r;if(t.type===\"text\"||t.type===\"comment\"||Pe(t)||t.type===\"yaml\"||t.type===\"toml\")return null;if(t.type===\"attribute\"&&delete e.value,t.type===\"docType\"&&delete e.value,t.type===\"angularControlFlowBlock\"&&((r=t.parameters)!=null&&r.children))for(let n of e.parameters.children)Ii.has(t.name)?delete n.expression:n.expression=n.expression.trim();t.type===\"angularIcuExpression\"&&(e.switchValue=t.switchValue.trim()),t.type===\"angularLetDeclarationInitializer\"&&delete e.value}Dn.ignoredProperties=Ni;var vn=Dn;async function Ri(t,e){if(t.language===\"yaml\"){let r=t.value.trim(),n=r?await e(r,{parser:\"yaml\"}):\"\";return gn([t.startDelimiter,t.explicitLanguage,S,n,n?S:\"\",t.endDelimiter])}}var yn=Ri;function he(t,e=!0){return[k([v,t]),e?v:\"\"]}function X(t,e){let r=t.type===\"NGRoot\"?t.node.type===\"NGMicrosyntax\"&&t.node.body.length===1&&t.node.body[0].type===\"NGMicrosyntaxExpression\"?t.node.body[0].expression:t.node:t.type===\"JsExpressionRoot\"?t.node:t;return r&&(r.type===\"ObjectExpression\"||r.type===\"ArrayExpression\"||(e.parser===\"__vue_expression\"||e.parser===\"__vue_ts_expression\")&&(r.type===\"TemplateLiteral\"||r.type===\"StringLiteral\"))}async function T(t,e,r,n){r={__isInHtmlAttribute:!0,__embeddedInHtml:!0,...r};let s=!0;n&&(r.__onHtmlBindingRoot=(a,o)=>{s=n(a,o)});let i=await e(t,r,e);return s?E(i):he(i)}function $i(t,e,r,n){let{node:s}=r,i=n.originalText.slice(s.sourceSpan.start.offset,s.sourceSpan.end.offset);return/^\\s*$/u.test(i)?\"\":T(i,t,{parser:\"__ng_directive\",__isInHtmlAttribute:!1},X)}var wn=$i;var Oi=(t,e)=>{if(!(t&&e==null))return e.toReversed||!Array.isArray(e)?e.toReversed():[...e].reverse()},bn=Oi;function Mi(t){return Array.isArray(t)&&t.length>0}var me=Mi;var Tn,xn,kn,Bn,Ln,qi=((Tn=globalThis.Deno)==null?void 0:Tn.build.os)===\"windows\"||((kn=(xn=globalThis.navigator)==null?void 0:xn.platform)==null?void 0:kn.startsWith(\"Win\"))||((Ln=(Bn=globalThis.process)==null?void 0:Bn.platform)==null?void 0:Ln.startsWith(\"win\"))||!1;function Fn(t){if(t=t instanceof URL?t:new URL(t),t.protocol!==\"file:\")throw new TypeError(`URL must be a file URL: received \"${t.protocol}\"`);return t}function Hi(t){return t=Fn(t),decodeURIComponent(t.pathname.replace(/%(?![0-9A-Fa-f]{2})/g,\"%25\"))}function Vi(t){t=Fn(t);let e=decodeURIComponent(t.pathname.replace(/\\//g,\"\\\\\").replace(/%(?![0-9A-Fa-f]{2})/g,\"%25\")).replace(/^\\\\*([A-Za-z]:)(\\\\|$)/,\"$1\\\\\");return t.hostname!==\"\"&&(e=`\\\\\\\\${t.hostname}${e}`),e}function Pn(t){return qi?Vi(t):Hi(t)}var Nn=Pn;var Ui=t=>String(t).split(/[/\\\\]/u).pop();function In(t,e){if(!e)return;let r=Ui(e).toLowerCase();return t.find(({filenames:n})=>n==null?void 0:n.some(s=>s.toLowerCase()===r))??t.find(({extensions:n})=>n==null?void 0:n.some(s=>r.endsWith(s)))}function Wi(t,e){if(e)return t.find(({name:r})=>r.toLowerCase()===e)??t.find(({aliases:r})=>r==null?void 0:r.includes(e))??t.find(({extensions:r})=>r==null?void 0:r.includes(`.${e}`))}function Rn(t,e){if(e){if(String(e).startsWith(\"file:\"))try{e=Nn(e)}catch{return}if(typeof e==\"string\")return t.find(({isSupported:r})=>r==null?void 0:r({filepath:e}))}}function Gi(t,e){let r=bn(!1,t.plugins).flatMap(s=>s.languages??[]),n=Wi(r,e.language)??In(r,e.physicalFile)??In(r,e.file)??Rn(r,e.physicalFile)??Rn(r,e.file)??(e.physicalFile,void 0);return n==null?void 0:n.parsers[0]}var Ne=Gi;var $n=\"inline\",Sr={area:\"none\",base:\"none\",basefont:\"none\",datalist:\"none\",head:\"none\",link:\"none\",meta:\"none\",noembed:\"none\",noframes:\"none\",param:\"block\",rp:\"none\",script:\"block\",style:\"none\",template:\"inline\",title:\"none\",html:\"block\",body:\"block\",address:\"block\",blockquote:\"block\",center:\"block\",dialog:\"block\",div:\"block\",figure:\"block\",figcaption:\"block\",footer:\"block\",form:\"block\",header:\"block\",hr:\"block\",legend:\"block\",listing:\"block\",main:\"block\",p:\"block\",plaintext:\"block\",pre:\"block\",search:\"block\",xmp:\"block\",slot:\"contents\",ruby:\"ruby\",rt:\"ruby-text\",article:\"block\",aside:\"block\",h1:\"block\",h2:\"block\",h3:\"block\",h4:\"block\",h5:\"block\",h6:\"block\",hgroup:\"block\",nav:\"block\",section:\"block\",dir:\"block\",dd:\"block\",dl:\"block\",dt:\"block\",menu:\"block\",ol:\"block\",ul:\"block\",li:\"list-item\",table:\"table\",caption:\"table-caption\",colgroup:\"table-column-group\",col:\"table-column\",thead:\"table-header-group\",tbody:\"table-row-group\",tfoot:\"table-footer-group\",tr:\"table-row\",td:\"table-cell\",th:\"table-cell\",input:\"inline-block\",button:\"inline-block\",fieldset:\"block\",details:\"block\",summary:\"block\",marquee:\"inline-block\",source:\"block\",track:\"block\",meter:\"inline-block\",progress:\"inline-block\",object:\"inline-block\",video:\"inline-block\",audio:\"inline-block\",select:\"inline-block\",option:\"block\",optgroup:\"block\"},On=\"normal\",_r={listing:\"pre\",plaintext:\"pre\",pre:\"pre\",xmp:\"pre\",nobr:\"nowrap\",table:\"initial\",textarea:\"pre-wrap\"};function zi(t){return t.type===\"element\"&&!t.hasExplicitNamespace&&![\"html\",\"svg\"].includes(t.namespace)}var fe=zi;var Yi=t=>w(!1,t,/^[\\t\\f\\r ]*\\n/gu,\"\"),Er=t=>Yi(O.trimEnd(t)),Mn=t=>{let e=t,r=O.getLeadingWhitespace(e);r&&(e=e.slice(r.length));let n=O.getTrailingWhitespace(e);return n&&(e=e.slice(0,-n.length)),{leadingWhitespace:r,trailingWhitespace:n,text:e}};function wt(t,e){return!!(t.type===\"ieConditionalComment\"&&t.lastChild&&!t.lastChild.isSelfClosing&&!t.lastChild.endSourceSpan||t.type===\"ieConditionalComment\"&&!t.complete||de(t)&&t.children.some(r=>r.type!==\"text\"&&r.type!==\"interpolation\")||xt(t,e)&&!W(t,e)&&t.type!==\"interpolation\")}function ge(t){return t.type===\"attribute\"||!t.parent||!t.prev?!1:ji(t.prev)}function ji(t){return t.type===\"comment\"&&t.value.trim()===\"prettier-ignore\"}function $(t){return t.type===\"text\"||t.type===\"comment\"}function W(t,e){return t.type===\"element\"&&(t.fullName===\"script\"||t.fullName===\"style\"||t.fullName===\"svg:style\"||t.fullName===\"svg:script\"||t.fullName===\"mj-style\"&&e.parser===\"mjml\"||fe(t)&&(t.name===\"script\"||t.name===\"style\"))}function qn(t,e){return t.children&&!W(t,e)}function Hn(t,e){return W(t,e)||t.type===\"interpolation\"||Ar(t)}function Ar(t){return Jn(t).startsWith(\"pre\")}function Vn(t,e){var s,i;let r=n();if(r&&!t.prev&&((i=(s=t.parent)==null?void 0:s.tagDefinition)!=null&&i.ignoreFirstLf))return t.type===\"interpolation\";return r;function n(){return Pe(t)||t.type===\"angularControlFlowBlock\"?!1:(t.type===\"text\"||t.type===\"interpolation\")&&t.prev&&(t.prev.type===\"text\"||t.prev.type===\"interpolation\")?!0:!t.parent||t.parent.cssDisplay===\"none\"?!1:de(t.parent)?!0:!(!t.prev&&(t.parent.type===\"root\"||de(t)&&t.parent||W(t.parent,e)||et(t.parent,e)||!ea(t.parent.cssDisplay))||t.prev&&!na(t.prev.cssDisplay))}}function Un(t,e){return Pe(t)||t.type===\"angularControlFlowBlock\"?!1:(t.type===\"text\"||t.type===\"interpolation\")&&t.next&&(t.next.type===\"text\"||t.next.type===\"interpolation\")?!0:!t.parent||t.parent.cssDisplay===\"none\"?!1:de(t.parent)?!0:!(!t.next&&(t.parent.type===\"root\"||de(t)&&t.parent||W(t.parent,e)||et(t.parent,e)||!ta(t.parent.cssDisplay))||t.next&&!ra(t.next.cssDisplay))}function Wn(t,e){return sa(t.cssDisplay)&&!W(t,e)}function Je(t){return Pe(t)||t.next&&t.sourceSpan.end&&t.sourceSpan.end.line+1<t.next.sourceSpan.start.line}function Gn(t){return Dr(t)||t.type===\"element\"&&t.children.length>0&&([\"body\",\"script\",\"style\"].includes(t.name)||t.children.some(e=>Xi(e)))||t.firstChild&&t.firstChild===t.lastChild&&t.firstChild.type!==\"text\"&&Yn(t.firstChild)&&(!t.lastChild.isTrailingSpaceSensitive||jn(t.lastChild))}function Dr(t){return t.type===\"element\"&&t.children.length>0&&([\"html\",\"head\",\"ul\",\"ol\",\"select\"].includes(t.name)||t.cssDisplay.startsWith(\"table\")&&t.cssDisplay!==\"table-cell\")}function bt(t){return Kn(t)||t.prev&&Ki(t.prev)||zn(t)}function Ki(t){return Kn(t)||t.type===\"element\"&&t.fullName===\"br\"||zn(t)}function zn(t){return Yn(t)&&jn(t)}function Yn(t){return t.hasLeadingSpaces&&(t.prev?t.prev.sourceSpan.end.line<t.sourceSpan.start.line:t.parent.type===\"root\"||t.parent.startSourceSpan.end.line<t.sourceSpan.start.line)}function jn(t){return t.hasTrailingSpaces&&(t.next?t.next.sourceSpan.start.line>t.sourceSpan.end.line:t.parent.type===\"root\"||t.parent.endSourceSpan&&t.parent.endSourceSpan.start.line>t.sourceSpan.end.line)}function Kn(t){switch(t.type){case\"ieConditionalComment\":case\"comment\":case\"directive\":return!0;case\"element\":return[\"script\",\"select\"].includes(t.name)}return!1}function Tt(t){return t.lastChild?Tt(t.lastChild):t}function Xi(t){var e;return(e=t.children)==null?void 0:e.some(r=>r.type!==\"text\")}function Xn(t){if(t)switch(t){case\"module\":case\"text/javascript\":case\"text/babel\":case\"text/jsx\":case\"application/javascript\":return\"babel\";case\"application/x-typescript\":return\"typescript\";case\"text/markdown\":return\"markdown\";case\"text/html\":return\"html\";case\"text/x-handlebars-template\":return\"glimmer\";default:if(t.endsWith(\"json\")||t.endsWith(\"importmap\")||t===\"speculationrules\")return\"json\"}}function Qi(t,e){let{name:r,attrMap:n}=t;if(r!==\"script\"||Object.prototype.hasOwnProperty.call(n,\"src\"))return;let{type:s,lang:i}=t.attrMap;return!i&&!s?\"babel\":Ne(e,{language:i})??Xn(s)}function Ji(t,e){if(!xt(t,e))return;let{attrMap:r}=t;if(Object.prototype.hasOwnProperty.call(r,\"src\"))return;let{type:n,lang:s}=r;return Ne(e,{language:s})??Xn(n)}function Zi(t,e){if(t.name===\"style\"){let{lang:r}=t.attrMap;return r?Ne(e,{language:r}):\"css\"}if(t.name===\"mj-style\"&&e.parser===\"mjml\")return\"css\"}function vr(t,e){return Qi(t,e)??Zi(t,e)??Ji(t,e)}function Ze(t){return t===\"block\"||t===\"list-item\"||t.startsWith(\"table\")}function ea(t){return!Ze(t)&&t!==\"inline-block\"}function ta(t){return!Ze(t)&&t!==\"inline-block\"}function ra(t){return!Ze(t)}function na(t){return!Ze(t)}function sa(t){return!Ze(t)&&t!==\"inline-block\"}function de(t){return Jn(t).startsWith(\"pre\")}function ia(t,e){let r=t;for(;r;){if(e(r))return!0;r=r.parent}return!1}function Qn(t,e){var n;if(Ce(t,e))return\"block\";if(((n=t.prev)==null?void 0:n.type)===\"comment\"){let s=t.prev.value.match(/^\\s*display:\\s*([a-z]+)\\s*$/u);if(s)return s[1]}let r=!1;if(t.type===\"element\"&&t.namespace===\"svg\")if(ia(t,s=>s.fullName===\"svg:foreignObject\"))r=!0;else return t.name===\"svg\"?\"inline-block\":\"block\";switch(e.htmlWhitespaceSensitivity){case\"strict\":return\"inline\";case\"ignore\":return\"block\";default:if(t.type===\"element\"&&(!t.namespace||r||fe(t))&&Object.prototype.hasOwnProperty.call(Sr,t.name))return Sr[t.name]}return $n}function Jn(t){return t.type===\"element\"&&(!t.namespace||fe(t))&&Object.prototype.hasOwnProperty.call(_r,t.name)?_r[t.name]:On}function aa(t){let e=Number.POSITIVE_INFINITY;for(let r of t.split(`\n`)){if(r.length===0)continue;let n=O.getLeadingWhitespaceCount(r);if(n===0)return 0;r.length!==n&&n<e&&(e=n)}return e===Number.POSITIVE_INFINITY?0:e}function yr(t,e=aa(t)){return e===0?t:t.split(`\n`).map(r=>r.slice(e)).join(`\n`)}function wr(t){return w(!1,w(!1,t,\"&apos;\",\"'\"),\"&quot;\",'\"')}function P(t){return wr(t.value)}var oa=new Set([\"template\",\"style\",\"script\"]);function et(t,e){return Ce(t,e)&&!oa.has(t.fullName)}function Ce(t,e){return e.parser===\"vue\"&&t.type===\"element\"&&t.parent.type===\"root\"&&t.fullName.toLowerCase()!==\"html\"}function xt(t,e){return Ce(t,e)&&(et(t,e)||t.attrMap.lang&&t.attrMap.lang!==\"html\")}function Zn(t){let e=t.fullName;return e.charAt(0)===\"#\"||e===\"slot-scope\"||e===\"v-slot\"||e.startsWith(\"v-slot:\")}function es(t,e){let r=t.parent;if(!Ce(r,e))return!1;let n=r.fullName,s=t.fullName;return n===\"script\"&&s===\"setup\"||n===\"style\"&&s===\"vars\"}function kt(t,e=t.value){return t.parent.isWhitespaceSensitive?t.parent.isIndentationSensitive?B(e):B(yr(Er(e)),S):H(_,O.split(e))}function Bt(t,e){return Ce(t,e)&&t.name===\"script\"}var br=/\\{\\{(.+?)\\}\\}/su;async function ts(t,e){let r=[];for(let[n,s]of t.split(br).entries())if(n%2===0)r.push(B(s));else try{r.push(E([\"{{\",k([_,await T(s,e,{parser:\"__ng_interpolation\",__isInHtmlInterpolation:!0})]),_,\"}}\"]))}catch{r.push(\"{{\",B(s),\"}}\")}return r}function Tr({parser:t}){return(e,r,n)=>T(P(n.node),e,{parser:t},X)}var ua=Tr({parser:\"__ng_action\"}),la=Tr({parser:\"__ng_binding\"}),ca=Tr({parser:\"__ng_directive\"});function pa(t,e){if(e.parser!==\"angular\")return;let{node:r}=t,n=r.fullName;if(n.startsWith(\"(\")&&n.endsWith(\")\")||n.startsWith(\"on-\"))return ua;if(n.startsWith(\"[\")&&n.endsWith(\"]\")||/^bind(?:on)?-/u.test(n)||/^ng-(?:if|show|hide|class|style)$/u.test(n))return la;if(n.startsWith(\"*\"))return ca;let s=P(r);if(/^i18n(?:-.+)?$/u.test(n))return()=>he(vt(kt(r,s.trim())),!s.includes(\"@@\"));if(br.test(s))return i=>ts(s,i)}var rs=pa;function ha(t,e){let{node:r}=t,n=P(r);if(r.fullName===\"class\"&&!e.parentParser&&!n.includes(\"{{\"))return()=>n.trim().split(/\\s+/u).join(\" \")}var ns=ha;function ss(t){return t===\"\t\"||t===`\n`||t===\"\\f\"||t===\"\\r\"||t===\" \"}var ma=/^[ \\t\\n\\r\\u000c]+/,fa=/^[, \\t\\n\\r\\u000c]+/,da=/^[^ \\t\\n\\r\\u000c]+/,ga=/[,]+$/,is=/^\\d+$/,Ca=/^-?(?:[0-9]+|[0-9]*\\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/;function Sa(t){let e=t.length,r,n,s,i,a,o=0,u;function p(C){let A,D=C.exec(t.substring(o));if(D)return[A]=D,o+=A.length,A}let l=[];for(;;){if(p(fa),o>=e){if(l.length===0)throw new Error(\"Must contain one or more image candidate strings.\");return l}u=o,r=p(da),n=[],r.slice(-1)===\",\"?(r=r.replace(ga,\"\"),f()):m()}function m(){for(p(ma),s=\"\",i=\"in descriptor\";;){if(a=t.charAt(o),i===\"in descriptor\")if(ss(a))s&&(n.push(s),s=\"\",i=\"after descriptor\");else if(a===\",\"){o+=1,s&&n.push(s),f();return}else if(a===\"(\")s+=a,i=\"in parens\";else if(a===\"\"){s&&n.push(s),f();return}else s+=a;else if(i===\"in parens\")if(a===\")\")s+=a,i=\"in descriptor\";else if(a===\"\"){n.push(s),f();return}else s+=a;else if(i===\"after descriptor\"&&!ss(a))if(a===\"\"){f();return}else i=\"in descriptor\",o-=1;o+=1}}function f(){let C=!1,A,D,I,F,c={},g,y,q,x,U;for(F=0;F<n.length;F++)g=n[F],y=g[g.length-1],q=g.substring(0,g.length-1),x=parseInt(q,10),U=parseFloat(q),is.test(q)&&y===\"w\"?((A||D)&&(C=!0),x===0?C=!0:A=x):Ca.test(q)&&y===\"x\"?((A||D||I)&&(C=!0),U<0?C=!0:D=U):is.test(q)&&y===\"h\"?((I||D)&&(C=!0),x===0?C=!0:I=x):C=!0;if(!C)c.source={value:r,startOffset:u},A&&(c.width={value:A}),D&&(c.density={value:D}),I&&(c.height={value:I}),l.push(c);else throw new Error(`Invalid srcset descriptor found in \"${t}\" at \"${g}\".`)}}var as=Sa;function _a(t){if(t.node.fullName===\"srcset\"&&(t.parent.fullName===\"img\"||t.parent.fullName===\"source\"))return()=>Aa(P(t.node))}var os={width:\"w\",height:\"h\",density:\"x\"},Ea=Object.keys(os);function Aa(t){let e=as(t),r=Ea.filter(l=>e.some(m=>Object.prototype.hasOwnProperty.call(m,l)));if(r.length>1)throw new Error(\"Mixed descriptor in srcset is not supported\");let[n]=r,s=os[n],i=e.map(l=>l.source.value),a=Math.max(...i.map(l=>l.length)),o=e.map(l=>l[n]?String(l[n].value):\"\"),u=o.map(l=>{let m=l.indexOf(\".\");return m===-1?l.length:m}),p=Math.max(...u);return he(H([\",\",_],i.map((l,m)=>{let f=[l],C=o[m];if(C){let A=a-l.length+1,D=p-u[m],I=\" \".repeat(A+D);f.push(pe(I,\" \"),C+s)}return f})))}var us=_a;function ls(t,e){let{node:r}=t,n=P(t.node).trim();if(r.fullName===\"style\"&&!e.parentParser&&!n.includes(\"{{\"))return async s=>he(await s(n,{parser:\"css\",__isHTMLStyleAttribute:!0}))}var xr=new WeakMap;function Da(t,e){let{root:r}=t;return xr.has(r)||xr.set(r,r.children.some(n=>Bt(n,e)&&[\"ts\",\"typescript\"].includes(n.attrMap.lang))),xr.get(r)}var Ie=Da;function cs(t,e,r){let{node:n}=r,s=P(n);return T(`type T<${s}> = any`,t,{parser:\"babel-ts\",__isEmbeddedTypescriptGenericParameters:!0},X)}function ps(t,e,{parseWithTs:r}){return T(`function _(${t}) {}`,e,{parser:r?\"babel-ts\":\"babel\",__isVueBindings:!0})}async function hs(t,e,r,n){let s=P(r.node),{left:i,operator:a,right:o}=va(s),u=Ie(r,n);return[E(await T(`function _(${i}) {}`,t,{parser:u?\"babel-ts\":\"babel\",__isVueForBindingLeft:!0})),\" \",a,\" \",await T(o,t,{parser:u?\"__ts_expression\":\"__js_expression\"})]}function va(t){let e=/(.*?)\\s+(in|of)\\s+(.*)/su,r=/,([^,\\]}]*)(?:,([^,\\]}]*))?$/u,n=/^\\(|\\)$/gu,s=t.match(e);if(!s)return;let i={};if(i.for=s[3].trim(),!i.for)return;let a=w(!1,s[1].trim(),n,\"\"),o=a.match(r);o?(i.alias=a.replace(r,\"\"),i.iterator1=o[1].trim(),o[2]&&(i.iterator2=o[2].trim())):i.alias=a;let u=[i.alias,i.iterator1,i.iterator2];if(!u.some((p,l)=>!p&&(l===0||u.slice(l+1).some(Boolean))))return{left:u.filter(Boolean).join(\",\"),operator:s[2],right:i.for}}function ya(t,e){if(e.parser!==\"vue\")return;let{node:r}=t,n=r.fullName;if(n===\"v-for\")return hs;if(n===\"generic\"&&Bt(r.parent,e))return cs;let s=P(r),i=Ie(t,e);if(Zn(r)||es(r,e))return a=>ps(s,a,{parseWithTs:i});if(n.startsWith(\"@\")||n.startsWith(\"v-on:\"))return a=>wa(s,a,{parseWithTs:i});if(n.startsWith(\":\")||n.startsWith(\".\")||n.startsWith(\"v-bind:\"))return a=>ba(s,a,{parseWithTs:i});if(n.startsWith(\"v-\"))return a=>ms(s,a,{parseWithTs:i})}async function wa(t,e,{parseWithTs:r}){var n;try{return await ms(t,e,{parseWithTs:r})}catch(s){if(((n=s.cause)==null?void 0:n.code)!==\"BABEL_PARSER_SYNTAX_ERROR\")throw s}return T(t,e,{parser:r?\"__vue_ts_event_binding\":\"__vue_event_binding\"},X)}function ba(t,e,{parseWithTs:r}){return T(t,e,{parser:r?\"__vue_ts_expression\":\"__vue_expression\"},X)}function ms(t,e,{parseWithTs:r}){return T(t,e,{parser:r?\"__ts_expression\":\"__js_expression\"},X)}var fs=ya;function Ta(t,e){let{node:r}=t;if(r.value){if(/^PRETTIER_HTML_PLACEHOLDER_\\d+_\\d+_IN_JS$/u.test(e.originalText.slice(r.valueSpan.start.offset,r.valueSpan.end.offset))||e.parser===\"lwc\"&&r.value.startsWith(\"{\")&&r.value.endsWith(\"}\"))return[r.rawName,\"=\",r.value];for(let n of[us,ls,ns,fs,rs]){let s=n(t,e);if(s)return xa(s)}}}function xa(t){return async(e,r,n,s)=>{let i=await t(e,r,n,s);if(i)return i=hr(i,a=>typeof a==\"string\"?w(!1,a,'\"',\"&quot;\"):a),[n.node.rawName,'=\"',E(i),'\"']}}var ds=Ta;var ka=new Proxy(()=>{},{get:()=>ka});function J(t){return t.sourceSpan.start.offset}function se(t){return t.sourceSpan.end.offset}function tt(t,e){return[t.isSelfClosing?\"\":Ba(t,e),Se(t,e)]}function Ba(t,e){return t.lastChild&&Ae(t.lastChild)?\"\":[La(t,e),Lt(t,e)]}function Se(t,e){return(t.next?Q(t.next):Ee(t.parent))?\"\":[_e(t,e),G(t,e)]}function La(t,e){return Ee(t)?_e(t.lastChild,e):\"\"}function G(t,e){return Ae(t)?Lt(t.parent,e):rt(t)?Ft(t.next,e):\"\"}function Lt(t,e){if(Cs(t,e))return\"\";switch(t.type){case\"ieConditionalComment\":return\"<!\";case\"element\":if(t.hasHtmComponentClosingTag)return\"<//\";default:return`</${t.rawName}`}}function _e(t,e){if(Cs(t,e))return\"\";switch(t.type){case\"ieConditionalComment\":case\"ieConditionalEndComment\":return\"[endif]-->\";case\"ieConditionalStartComment\":return\"]><!-->\";case\"interpolation\":return\"}}\";case\"angularIcuExpression\":return\"}\";case\"element\":if(t.isSelfClosing)return\"/>\";default:return\">\"}}function Cs(t,e){return!t.isSelfClosing&&!t.endSourceSpan&&(ge(t)||wt(t.parent,e))}function Q(t){return t.prev&&t.prev.type!==\"docType\"&&t.type!==\"angularControlFlowBlock\"&&!$(t.prev)&&t.isLeadingSpaceSensitive&&!t.hasLeadingSpaces}function Ee(t){var e;return((e=t.lastChild)==null?void 0:e.isTrailingSpaceSensitive)&&!t.lastChild.hasTrailingSpaces&&!$(Tt(t.lastChild))&&!de(t)}function Ae(t){return!t.next&&!t.hasTrailingSpaces&&t.isTrailingSpaceSensitive&&$(Tt(t))}function rt(t){return t.next&&!$(t.next)&&$(t)&&t.isTrailingSpaceSensitive&&!t.hasTrailingSpaces}function Fa(t){let e=t.trim().match(/^prettier-ignore-attribute(?:\\s+(.+))?$/su);return e?e[1]?e[1].split(/\\s+/u):!0:!1}function nt(t){return!t.prev&&t.isLeadingSpaceSensitive&&!t.hasLeadingSpaces}function Pa(t,e,r){var m;let{node:n}=t;if(!me(n.attrs))return n.isSelfClosing?\" \":\"\";let s=((m=n.prev)==null?void 0:m.type)===\"comment\"&&Fa(n.prev.value),i=typeof s==\"boolean\"?()=>s:Array.isArray(s)?f=>s.includes(f.rawName):()=>!1,a=t.map(({node:f})=>i(f)?B(e.originalText.slice(J(f),se(f))):r(),\"attrs\"),o=n.type===\"element\"&&n.fullName===\"script\"&&n.attrs.length===1&&n.attrs[0].fullName===\"src\"&&n.children.length===0,p=e.singleAttributePerLine&&n.attrs.length>1&&!Ce(n,e)?S:_,l=[k([o?\" \":_,H(p,a)])];return n.firstChild&&nt(n.firstChild)||n.isSelfClosing&&Ee(n.parent)||o?l.push(n.isSelfClosing?\" \":\"\"):l.push(e.bracketSameLine?n.isSelfClosing?\" \":\"\":n.isSelfClosing?_:v),l}function Na(t){return t.firstChild&&nt(t.firstChild)?\"\":Pt(t)}function st(t,e,r){let{node:n}=t;return[De(n,e),Pa(t,e,r),n.isSelfClosing?\"\":Na(n)]}function De(t,e){return t.prev&&rt(t.prev)?\"\":[z(t,e),Ft(t,e)]}function z(t,e){return nt(t)?Pt(t.parent):Q(t)?_e(t.prev,e):\"\"}var gs=\"<!doctype\";function Ft(t,e){switch(t.type){case\"ieConditionalComment\":case\"ieConditionalStartComment\":return`<!--[if ${t.condition}`;case\"ieConditionalEndComment\":return\"<!--<!\";case\"interpolation\":return\"{{\";case\"docType\":{if(t.value===\"html\"){let{filepath:n}=e;if(n&&/\\.html?$/u.test(n))return gs}let r=J(t);return e.originalText.slice(r,r+gs.length)}case\"angularIcuExpression\":return\"{\";case\"element\":if(t.condition)return`<!--[if ${t.condition}]><!--><${t.rawName}`;default:return`<${t.rawName}`}}function Pt(t){switch(t.type){case\"ieConditionalComment\":return\"]>\";case\"element\":if(t.condition)return\"><!--<![endif]-->\";default:return\">\"}}function Ia(t,e){if(!t.endSourceSpan)return\"\";let r=t.startSourceSpan.end.offset;t.firstChild&&nt(t.firstChild)&&(r-=Pt(t).length);let n=t.endSourceSpan.start.offset;return t.lastChild&&Ae(t.lastChild)?n+=Lt(t,e).length:Ee(t)&&(n-=_e(t.lastChild,e).length),e.originalText.slice(r,n)}var Nt=Ia;var Ra=new Set([\"if\",\"else if\",\"for\",\"switch\",\"case\"]);function $a(t,e){let{node:r}=t;switch(r.type){case\"element\":if(W(r,e)||r.type===\"interpolation\")return;if(!r.isSelfClosing&&xt(r,e)){let n=vr(r,e);return n?async(s,i)=>{let a=Nt(r,e),o=/^\\s*$/u.test(a),u=\"\";return o||(u=await s(Er(a),{parser:n,__embeddedInHtml:!0}),o=u===\"\"),[z(r,e),E(st(t,e,i)),o?\"\":S,u,o?\"\":S,tt(r,e),G(r,e)]}:void 0}break;case\"text\":if(W(r.parent,e)){let n=vr(r.parent,e);if(n)return async s=>{let i=n===\"markdown\"?yr(r.value.replace(/^[^\\S\\n]*\\n/u,\"\")):r.value,a={parser:n,__embeddedInHtml:!0};if(e.parser===\"html\"&&n===\"babel\"){let o=\"script\",{attrMap:u}=r.parent;u&&(u.type===\"module\"||(u.type===\"text/babel\"||u.type===\"text/jsx\")&&u[\"data-type\"]===\"module\")&&(o=\"module\"),a.__babelSourceType=o}return[ne,z(r,e),await s(i,a),G(r,e)]}}else if(r.parent.type===\"interpolation\")return async n=>{let s={__isInHtmlInterpolation:!0,__embeddedInHtml:!0};return e.parser===\"angular\"?s.parser=\"__ng_interpolation\":e.parser===\"vue\"?s.parser=Ie(t,e)?\"__vue_ts_expression\":\"__vue_expression\":s.parser=\"__js_expression\",[k([_,await n(r.value,s)]),r.parent.next&&Q(r.parent.next)?\" \":_]};break;case\"attribute\":return ds(t,e);case\"front-matter\":return n=>yn(r,n);case\"angularControlFlowBlockParameters\":return Ra.has(t.parent.name)?wn:void 0;case\"angularLetDeclarationInitializer\":return n=>T(r.value,n,{parser:\"__ng_binding\",__isInHtmlAttribute:!1})}}var Ss=$a;var it=null;function at(t){if(it!==null&&typeof it.property){let e=it;return it=at.prototype=null,e}return it=at.prototype=t??Object.create(null),new at}var Oa=10;for(let t=0;t<=Oa;t++)at();function kr(t){return at(t)}function Ma(t,e=\"type\"){kr(t);function r(n){let s=n[e],i=t[s];if(!Array.isArray(i))throw Object.assign(new Error(`Missing visitor keys for '${s}'.`),{node:n});return i}return r}var _s=Ma;var qa={\"front-matter\":[],root:[\"children\"],element:[\"attrs\",\"children\"],ieConditionalComment:[\"children\"],ieConditionalStartComment:[],ieConditionalEndComment:[],interpolation:[\"children\"],text:[\"children\"],docType:[],comment:[],attribute:[],cdata:[],angularControlFlowBlock:[\"children\",\"parameters\"],angularControlFlowBlockParameters:[\"children\"],angularControlFlowBlockParameter:[],angularLetDeclaration:[\"init\"],angularLetDeclarationInitializer:[],angularIcuExpression:[\"cases\"],angularIcuCase:[\"expression\"]},Es=qa;var Ha=_s(Es),As=Ha;var Ds=\"format\";var vs=/^\\s*<!--\\s*@(?:noformat|noprettier)\\s*-->/u,ys=/^\\s*<!--\\s*@(?:format|prettier)\\s*-->/u;function ws(t){return ys.test(t)}function bs(t){return vs.test(t)}function Ts(t){return`<!-- @${Ds} -->\n\n${t}`}var xs=new Map([[\"if\",new Set([\"else if\",\"else\"])],[\"else if\",new Set([\"else if\",\"else\"])],[\"for\",new Set([\"empty\"])],[\"defer\",new Set([\"placeholder\",\"error\",\"loading\"])],[\"placeholder\",new Set([\"placeholder\",\"error\",\"loading\"])],[\"error\",new Set([\"placeholder\",\"error\",\"loading\"])],[\"loading\",new Set([\"placeholder\",\"error\",\"loading\"])]]);function ks(t){let e=se(t);return t.type===\"element\"&&!t.endSourceSpan&&me(t.children)?Math.max(e,ks(K(!1,t.children,-1))):e}function ot(t,e,r){let n=t.node;if(ge(n)){let s=ks(n);return[z(n,e),B(O.trimEnd(e.originalText.slice(J(n)+(n.prev&&rt(n.prev)?Ft(n).length:0),s-(n.next&&Q(n.next)?_e(n,e).length:0)))),G(n,e)]}return r()}function It(t,e){return $(t)&&$(e)?t.isTrailingSpaceSensitive?t.hasTrailingSpaces?bt(e)?S:_:\"\":bt(e)?S:v:rt(t)&&(ge(e)||e.firstChild||e.isSelfClosing||e.type===\"element\"&&e.attrs.length>0)||t.type===\"element\"&&t.isSelfClosing&&Q(e)?\"\":!e.isLeadingSpaceSensitive||bt(e)||Q(e)&&t.lastChild&&Ae(t.lastChild)&&t.lastChild.lastChild&&Ae(t.lastChild.lastChild)?S:e.hasLeadingSpaces?_:v}function Re(t,e,r){let{node:n}=t;if(Dr(n))return[ne,...t.map(i=>{let a=i.node,o=a.prev?It(a.prev,a):\"\";return[o?[o,Je(a.prev)?S:\"\"]:\"\",ot(i,e,r)]},\"children\")];let s=n.children.map(()=>Symbol(\"\"));return t.map((i,a)=>{let o=i.node;if($(o)){if(o.prev&&$(o.prev)){let A=It(o.prev,o);if(A)return Je(o.prev)?[S,S,ot(i,e,r)]:[A,ot(i,e,r)]}return ot(i,e,r)}let u=[],p=[],l=[],m=[],f=o.prev?It(o.prev,o):\"\",C=o.next?It(o,o.next):\"\";return f&&(Je(o.prev)?u.push(S,S):f===S?u.push(S):$(o.prev)?p.push(f):p.push(pe(\"\",v,{groupId:s[a-1]}))),C&&(Je(o)?$(o.next)&&m.push(S,S):C===S?$(o.next)&&m.push(S):l.push(C)),[...u,E([...p,E([ot(i,e,r),...l],{id:s[a]})]),...m]},\"children\")}function Bs(t,e,r){let{node:n}=t,s=[];Va(t)&&s.push(\"} \"),s.push(\"@\",n.name),n.parameters&&s.push(\" (\",E(r(\"parameters\")),\")\"),s.push(\" {\");let i=Ls(n);return n.children.length>0?(n.firstChild.hasLeadingSpaces=!0,n.lastChild.hasTrailingSpaces=!0,s.push(k([S,Re(t,e,r)])),i&&s.push(S,\"}\")):i&&s.push(\"}\"),E(s,{shouldBreak:!0})}function Ls(t){var e,r;return!(((e=t.next)==null?void 0:e.type)===\"angularControlFlowBlock\"&&((r=xs.get(t.name))!=null&&r.has(t.next.name)))}function Va(t){let{previous:e}=t;return(e==null?void 0:e.type)===\"angularControlFlowBlock\"&&!ge(e)&&!Ls(e)}function Fs(t,e,r){return[k([v,H([\";\",_],t.map(r,\"children\"))]),v]}function Ps(t,e,r){let{node:n}=t;return[De(n,e),E([n.switchValue.trim(),\", \",n.clause,n.cases.length>0?[\",\",k([_,H(_,t.map(r,\"cases\"))])]:\"\",v]),Se(n,e)]}function Ns(t,e,r){let{node:n}=t;return[n.value,\" {\",E([k([v,t.map(({node:s,isLast:i})=>{let a=[r()];return s.type===\"text\"&&(s.hasLeadingSpaces&&a.unshift(_),s.hasTrailingSpaces&&!i&&a.push(_)),a},\"expression\")]),v]),\"}\"]}function Is(t,e,r){let{node:n}=t;if(wt(n,e))return[z(n,e),E(st(t,e,r)),B(Nt(n,e)),...tt(n,e),G(n,e)];let s=n.children.length===1&&(n.firstChild.type===\"interpolation\"||n.firstChild.type===\"angularIcuExpression\")&&n.firstChild.isLeadingSpaceSensitive&&!n.firstChild.hasLeadingSpaces&&n.lastChild.isTrailingSpaceSensitive&&!n.lastChild.hasTrailingSpaces,i=Symbol(\"element-attr-group-id\"),a=l=>E([E(st(t,e,r),{id:i}),l,tt(n,e)]),o=l=>s?Cn(l,{groupId:i}):(W(n,e)||et(n,e))&&n.parent.type===\"root\"&&e.parser===\"vue\"&&!e.vueIndentScriptAndStyle?l:k(l),u=()=>s?pe(v,\"\",{groupId:i}):n.firstChild.hasLeadingSpaces&&n.firstChild.isLeadingSpaceSensitive?_:n.firstChild.type===\"text\"&&n.isWhitespaceSensitive&&n.isIndentationSensitive?dn(v):v,p=()=>(n.next?Q(n.next):Ee(n.parent))?n.lastChild.hasTrailingSpaces&&n.lastChild.isTrailingSpaceSensitive?\" \":\"\":s?pe(v,\"\",{groupId:i}):n.lastChild.hasTrailingSpaces&&n.lastChild.isTrailingSpaceSensitive?_:(n.lastChild.type===\"comment\"||n.lastChild.type===\"text\"&&n.isWhitespaceSensitive&&n.isIndentationSensitive)&&new RegExp(`\\\\n[\\\\t ]{${e.tabWidth*(t.ancestors.length-1)}}$`,\"u\").test(n.lastChild.value)?\"\":v;return n.children.length===0?a(n.hasDanglingSpaces&&n.isDanglingSpaceSensitive?_:\"\"):a([Gn(n)?ne:\"\",o([u(),Re(t,e,r)]),p()])}function ut(t){return t>=9&&t<=32||t==160}function Rt(t){return 48<=t&&t<=57}function lt(t){return t>=97&&t<=122||t>=65&&t<=90}function Rs(t){return t>=97&&t<=102||t>=65&&t<=70||Rt(t)}function $t(t){return t===10||t===13}function Br(t){return 48<=t&&t<=55}function Ot(t){return t===39||t===34||t===96}var Ua=/-+([a-z0-9])/g;function Os(t){return t.replace(Ua,(...e)=>e[1].toUpperCase())}var ie=class t{constructor(e,r,n,s){this.file=e,this.offset=r,this.line=n,this.col=s}toString(){return this.offset!=null?`${this.file.url}@${this.line}:${this.col}`:this.file.url}moveBy(e){let r=this.file.content,n=r.length,s=this.offset,i=this.line,a=this.col;for(;s>0&&e<0;)if(s--,e++,r.charCodeAt(s)==10){i--;let u=r.substring(0,s-1).lastIndexOf(String.fromCharCode(10));a=u>0?s-u:s}else a--;for(;s<n&&e>0;){let o=r.charCodeAt(s);s++,e--,o==10?(i++,a=0):a++}return new t(this.file,s,i,a)}getContext(e,r){let n=this.file.content,s=this.offset;if(s!=null){s>n.length-1&&(s=n.length-1);let i=s,a=0,o=0;for(;a<e&&s>0&&(s--,a++,!(n[s]==`\n`&&++o==r)););for(a=0,o=0;a<e&&i<n.length-1&&(i++,a++,!(n[i]==`\n`&&++o==r)););return{before:n.substring(s,this.offset),after:n.substring(this.offset,i+1)}}return null}},ve=class{constructor(e,r){this.content=e,this.url=r}},h=class{constructor(e,r,n=e,s=null){this.start=e,this.end=r,this.fullStart=n,this.details=s}toString(){return this.start.file.content.substring(this.start.offset,this.end.offset)}},Mt;(function(t){t[t.WARNING=0]=\"WARNING\",t[t.ERROR=1]=\"ERROR\"})(Mt||(Mt={}));var Oe=class{constructor(e,r,n=Mt.ERROR,s){this.span=e,this.msg=r,this.level=n,this.relatedError=s}contextualMessage(){let e=this.span.start.getContext(100,3);return e?`${this.msg} (\"${e.before}[${Mt[this.level]} ->]${e.after}\")`:this.msg}toString(){let e=this.span.details?`, ${this.span.details}`:\"\";return`${this.contextualMessage()}: ${this.span.start}${e}`}};var Wa=[za,Ya,Ka,Qa,Ja,to,Za,eo,ro,Xa];function Ga(t,e){for(let r of Wa)r(t,e);return t}function za(t){t.walk(e=>{if(e.type===\"element\"&&e.tagDefinition.ignoreFirstLf&&e.children.length>0&&e.children[0].type===\"text\"&&e.children[0].value[0]===`\n`){let r=e.children[0];r.value.length===1?e.removeChild(r):r.value=r.value.slice(1)}})}function Ya(t){let e=r=>{var n,s;return r.type===\"element\"&&((n=r.prev)==null?void 0:n.type)===\"ieConditionalStartComment\"&&r.prev.sourceSpan.end.offset===r.startSourceSpan.start.offset&&((s=r.firstChild)==null?void 0:s.type)===\"ieConditionalEndComment\"&&r.firstChild.sourceSpan.start.offset===r.startSourceSpan.end.offset};t.walk(r=>{if(r.children)for(let n=0;n<r.children.length;n++){let s=r.children[n];if(!e(s))continue;let i=s.prev,a=s.firstChild;r.removeChild(i),n--;let o=new h(i.sourceSpan.start,a.sourceSpan.end),u=new h(o.start,s.sourceSpan.end);s.condition=i.condition,s.sourceSpan=u,s.startSourceSpan=o,s.removeChild(a)}})}function ja(t,e,r){t.walk(n=>{if(n.children)for(let s=0;s<n.children.length;s++){let i=n.children[s];if(i.type!==\"text\"&&!e(i))continue;i.type!==\"text\"&&(i.type=\"text\",i.value=r(i));let a=i.prev;!a||a.type!==\"text\"||(a.value+=i.value,a.sourceSpan=new h(a.sourceSpan.start,i.sourceSpan.end),n.removeChild(i),s--)}})}function Ka(t){return ja(t,e=>e.type===\"cdata\",e=>`<![CDATA[${e.value}]]>`)}function Xa(t){let e=r=>{var n,s;return r.type===\"element\"&&r.attrs.length===0&&r.children.length===1&&r.firstChild.type===\"text\"&&!O.hasWhitespaceCharacter(r.children[0].value)&&!r.firstChild.hasLeadingSpaces&&!r.firstChild.hasTrailingSpaces&&r.isLeadingSpaceSensitive&&!r.hasLeadingSpaces&&r.isTrailingSpaceSensitive&&!r.hasTrailingSpaces&&((n=r.prev)==null?void 0:n.type)===\"text\"&&((s=r.next)==null?void 0:s.type)===\"text\"};t.walk(r=>{if(r.children)for(let n=0;n<r.children.length;n++){let s=r.children[n];if(!e(s))continue;let i=s.prev,a=s.next;i.value+=`<${s.rawName}>`+s.firstChild.value+`</${s.rawName}>`+a.value,i.sourceSpan=new h(i.sourceSpan.start,a.sourceSpan.end),i.isTrailingSpaceSensitive=a.isTrailingSpaceSensitive,i.hasTrailingSpaces=a.hasTrailingSpaces,r.removeChild(s),n--,r.removeChild(a)}})}function Qa(t,e){if(e.parser===\"html\")return;let r=/\\{\\{(.+?)\\}\\}/su;t.walk(n=>{if(qn(n,e))for(let s of n.children){if(s.type!==\"text\")continue;let i=s.sourceSpan.start,a=null,o=s.value.split(r);for(let u=0;u<o.length;u++,i=a){let p=o[u];if(u%2===0){a=i.moveBy(p.length),p.length>0&&n.insertChildBefore(s,{type:\"text\",value:p,sourceSpan:new h(i,a)});continue}a=i.moveBy(p.length+4),n.insertChildBefore(s,{type:\"interpolation\",sourceSpan:new h(i,a),children:p.length===0?[]:[{type:\"text\",value:p,sourceSpan:new h(i.moveBy(2),a.moveBy(-2))}]})}n.removeChild(s)}})}function Ja(t,e){t.walk(r=>{let n=r.$children;if(!n)return;if(n.length===0||n.length===1&&n[0].type===\"text\"&&O.trim(n[0].value).length===0){r.hasDanglingSpaces=n.length>0,r.$children=[];return}let s=Hn(r,e),i=Ar(r);if(!s)for(let a=0;a<n.length;a++){let o=n[a];if(o.type!==\"text\")continue;let{leadingWhitespace:u,text:p,trailingWhitespace:l}=Mn(o.value),m=o.prev,f=o.next;p?(o.value=p,o.sourceSpan=new h(o.sourceSpan.start.moveBy(u.length),o.sourceSpan.end.moveBy(-l.length)),u&&(m&&(m.hasTrailingSpaces=!0),o.hasLeadingSpaces=!0),l&&(o.hasTrailingSpaces=!0,f&&(f.hasLeadingSpaces=!0))):(r.removeChild(o),a--,(u||l)&&(m&&(m.hasTrailingSpaces=!0),f&&(f.hasLeadingSpaces=!0)))}r.isWhitespaceSensitive=s,r.isIndentationSensitive=i})}function Za(t){t.walk(e=>{e.isSelfClosing=!e.children||e.type===\"element\"&&(e.tagDefinition.isVoid||e.endSourceSpan&&e.startSourceSpan.start===e.endSourceSpan.start&&e.startSourceSpan.end===e.endSourceSpan.end)})}function eo(t,e){t.walk(r=>{r.type===\"element\"&&(r.hasHtmComponentClosingTag=r.endSourceSpan&&/^<\\s*\\/\\s*\\/\\s*>$/u.test(e.originalText.slice(r.endSourceSpan.start.offset,r.endSourceSpan.end.offset)))})}function to(t,e){t.walk(r=>{r.cssDisplay=Qn(r,e)})}function ro(t,e){t.walk(r=>{let{children:n}=r;if(n){if(n.length===0){r.isDanglingSpaceSensitive=Wn(r,e);return}for(let s of n)s.isLeadingSpaceSensitive=Vn(s,e),s.isTrailingSpaceSensitive=Un(s,e);for(let s=0;s<n.length;s++){let i=n[s];i.isLeadingSpaceSensitive=(s===0||i.prev.isTrailingSpaceSensitive)&&i.isLeadingSpaceSensitive,i.isTrailingSpaceSensitive=(s===n.length-1||i.next.isLeadingSpaceSensitive)&&i.isTrailingSpaceSensitive}}})}var Ms=Ga;function no(t,e,r){let{node:n}=t;switch(n.type){case\"front-matter\":return B(n.raw);case\"root\":return e.__onHtmlRoot&&e.__onHtmlRoot(n),[E(Re(t,e,r)),S];case\"element\":case\"ieConditionalComment\":return Is(t,e,r);case\"angularControlFlowBlock\":return Bs(t,e,r);case\"angularControlFlowBlockParameters\":return Fs(t,e,r);case\"angularControlFlowBlockParameter\":return O.trim(n.expression);case\"angularLetDeclaration\":return E([\"@let \",E([n.id,\" =\",E(k([_,r(\"init\")]))]),\";\"]);case\"angularLetDeclarationInitializer\":return n.value;case\"angularIcuExpression\":return Ps(t,e,r);case\"angularIcuCase\":return Ns(t,e,r);case\"ieConditionalStartComment\":case\"ieConditionalEndComment\":return[De(n),Se(n)];case\"interpolation\":return[De(n,e),...t.map(r,\"children\"),Se(n,e)];case\"text\":{if(n.parent.type===\"interpolation\"){let o=/\\n[^\\S\\n]*$/u,u=o.test(n.value),p=u?n.value.replace(o,\"\"):n.value;return[B(p),u?S:\"\"]}let s=z(n,e),i=kt(n),a=G(n,e);return i[0]=[s,i[0]],i.push([i.pop(),a]),vt(i)}case\"docType\":return[E([De(n,e),\" \",w(!1,n.value.replace(/^html\\b/iu,\"html\"),/\\s+/gu,\" \")]),Se(n,e)];case\"comment\":return[z(n,e),B(e.originalText.slice(J(n),se(n))),G(n,e)];case\"attribute\":{if(n.value===null)return n.rawName;let s=wr(n.value),i=_n(s,'\"');return[n.rawName,\"=\",i,B(i==='\"'?w(!1,s,'\"',\"&quot;\"):w(!1,s,\"'\",\"&apos;\")),i]}case\"cdata\":default:throw new An(n,\"HTML\")}}var so={preprocess:Ms,print:no,insertPragma:Ts,massageAstNode:vn,embed:Ss,getVisitorKeys:As},qs=so;var Hs=[{name:\"Angular\",type:\"markup\",extensions:[\".component.html\"],tmScope:\"text.html.basic\",aceMode:\"html\",aliases:[\"xhtml\"],codemirrorMode:\"htmlmixed\",codemirrorMimeType:\"text/html\",parsers:[\"angular\"],vscodeLanguageIds:[\"html\"],filenames:[],linguistLanguageId:146},{name:\"HTML\",type:\"markup\",extensions:[\".html\",\".hta\",\".htm\",\".html.hl\",\".inc\",\".xht\",\".xhtml\"],tmScope:\"text.html.basic\",aceMode:\"html\",aliases:[\"xhtml\"],codemirrorMode:\"htmlmixed\",codemirrorMimeType:\"text/html\",parsers:[\"html\"],vscodeLanguageIds:[\"html\"],linguistLanguageId:146},{name:\"Lightning Web Components\",type:\"markup\",extensions:[],tmScope:\"text.html.basic\",aceMode:\"html\",aliases:[\"xhtml\"],codemirrorMode:\"htmlmixed\",codemirrorMimeType:\"text/html\",parsers:[\"lwc\"],vscodeLanguageIds:[\"html\"],filenames:[],linguistLanguageId:146},{name:\"MJML\",type:\"markup\",extensions:[\".mjml\"],tmScope:\"text.mjml.basic\",aceMode:\"html\",aliases:[\"MJML\",\"mjml\"],codemirrorMode:\"htmlmixed\",codemirrorMimeType:\"text/html\",parsers:[\"mjml\"],filenames:[],vscodeLanguageIds:[\"mjml\"],linguistLanguageId:146},{name:\"Vue\",type:\"markup\",extensions:[\".vue\"],tmScope:\"source.vue\",aceMode:\"html\",parsers:[\"vue\"],vscodeLanguageIds:[\"vue\"],linguistLanguageId:391}];var Lr={bracketSpacing:{category:\"Common\",type:\"boolean\",default:!0,description:\"Print spaces between brackets.\",oppositeDescription:\"Do not print spaces between brackets.\"},objectWrap:{category:\"Common\",type:\"choice\",default:\"preserve\",description:\"How to wrap object literals.\",choices:[{value:\"preserve\",description:\"Keep as multi-line, if there is a newline between the opening brace and first property.\"},{value:\"collapse\",description:\"Fit to a single line when possible.\"}]},singleQuote:{category:\"Common\",type:\"boolean\",default:!1,description:\"Use single quotes instead of double quotes.\"},proseWrap:{category:\"Common\",type:\"choice\",default:\"preserve\",description:\"How to wrap prose.\",choices:[{value:\"always\",description:\"Wrap prose if it exceeds the print width.\"},{value:\"never\",description:\"Do not wrap prose.\"},{value:\"preserve\",description:\"Wrap prose as-is.\"}]},bracketSameLine:{category:\"Common\",type:\"boolean\",default:!1,description:\"Put > of opening tags on the last line instead of on a new line.\"},singleAttributePerLine:{category:\"Common\",type:\"boolean\",default:!1,description:\"Enforce single attribute per line in HTML, Vue and JSX.\"}};var Vs=\"HTML\",io={bracketSameLine:Lr.bracketSameLine,htmlWhitespaceSensitivity:{category:Vs,type:\"choice\",default:\"css\",description:\"How to handle whitespaces in HTML.\",choices:[{value:\"css\",description:\"Respect the default value of CSS display property.\"},{value:\"strict\",description:\"Whitespaces are considered sensitive.\"},{value:\"ignore\",description:\"Whitespaces are considered insensitive.\"}]},singleAttributePerLine:Lr.singleAttributePerLine,vueIndentScriptAndStyle:{category:Vs,type:\"boolean\",default:!1,description:\"Indent script and style tags in Vue files.\"}},Us=io;var tn={};ln(tn,{angular:()=>iu,html:()=>ru,lwc:()=>ou,mjml:()=>su,vue:()=>au});var ah=new RegExp(`(\\\\:not\\\\()|(([\\\\.\\\\#]?)[-\\\\w]+)|(?:\\\\[([-.\\\\w*\\\\\\\\$]+)(?:=([\"']?)([^\\\\]\"']*)\\\\5)?\\\\])|(\\\\))|(\\\\s*,\\\\s*)`,\"g\");var Ws;(function(t){t[t.Emulated=0]=\"Emulated\",t[t.None=2]=\"None\",t[t.ShadowDom=3]=\"ShadowDom\"})(Ws||(Ws={}));var Gs;(function(t){t[t.OnPush=0]=\"OnPush\",t[t.Default=1]=\"Default\"})(Gs||(Gs={}));var zs;(function(t){t[t.None=0]=\"None\",t[t.SignalBased=1]=\"SignalBased\",t[t.HasDecoratorInputTransform=2]=\"HasDecoratorInputTransform\"})(zs||(zs={}));var Fr={name:\"custom-elements\"},Pr={name:\"no-errors-schema\"};var Z;(function(t){t[t.NONE=0]=\"NONE\",t[t.HTML=1]=\"HTML\",t[t.STYLE=2]=\"STYLE\",t[t.SCRIPT=3]=\"SCRIPT\",t[t.URL=4]=\"URL\",t[t.RESOURCE_URL=5]=\"RESOURCE_URL\"})(Z||(Z={}));var Ys;(function(t){t[t.Error=0]=\"Error\",t[t.Warning=1]=\"Warning\",t[t.Ignore=2]=\"Ignore\"})(Ys||(Ys={}));var N;(function(t){t[t.RAW_TEXT=0]=\"RAW_TEXT\",t[t.ESCAPABLE_RAW_TEXT=1]=\"ESCAPABLE_RAW_TEXT\",t[t.PARSABLE_DATA=2]=\"PARSABLE_DATA\"})(N||(N={}));function ct(t,e=!0){if(t[0]!=\":\")return[null,t];let r=t.indexOf(\":\",1);if(r===-1){if(e)throw new Error(`Unsupported format \"${t}\" expecting \":namespace:name\"`);return[null,t]}return[t.slice(1,r),t.slice(r+1)]}function Nr(t){return ct(t)[1]===\"ng-container\"}function Ir(t){return ct(t)[1]===\"ng-content\"}function Me(t){return t===null?null:ct(t)[0]}function qe(t,e){return t?`:${t}:${e}`:e}var Ht;function Rr(){return Ht||(Ht={},qt(Z.HTML,[\"iframe|srcdoc\",\"*|innerHTML\",\"*|outerHTML\"]),qt(Z.STYLE,[\"*|style\"]),qt(Z.URL,[\"*|formAction\",\"area|href\",\"area|ping\",\"audio|src\",\"a|href\",\"a|ping\",\"blockquote|cite\",\"body|background\",\"del|cite\",\"form|action\",\"img|src\",\"input|src\",\"ins|cite\",\"q|cite\",\"source|src\",\"track|src\",\"video|poster\",\"video|src\"]),qt(Z.RESOURCE_URL,[\"applet|code\",\"applet|codebase\",\"base|href\",\"embed|src\",\"frame|src\",\"head|profile\",\"html|manifest\",\"iframe|src\",\"link|href\",\"media|src\",\"object|codebase\",\"object|data\",\"script|src\"])),Ht}function qt(t,e){for(let r of e)Ht[r.toLowerCase()]=t}var Vt=class{};var ao=\"boolean\",oo=\"number\",uo=\"string\",lo=\"object\",co=[\"[Element]|textContent,%ariaAtomic,%ariaAutoComplete,%ariaBusy,%ariaChecked,%ariaColCount,%ariaColIndex,%ariaColSpan,%ariaCurrent,%ariaDescription,%ariaDisabled,%ariaExpanded,%ariaHasPopup,%ariaHidden,%ariaKeyShortcuts,%ariaLabel,%ariaLevel,%ariaLive,%ariaModal,%ariaMultiLine,%ariaMultiSelectable,%ariaOrientation,%ariaPlaceholder,%ariaPosInSet,%ariaPressed,%ariaReadOnly,%ariaRelevant,%ariaRequired,%ariaRoleDescription,%ariaRowCount,%ariaRowIndex,%ariaRowSpan,%ariaSelected,%ariaSetSize,%ariaSort,%ariaValueMax,%ariaValueMin,%ariaValueNow,%ariaValueText,%classList,className,elementTiming,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*fullscreenchange,*fullscreenerror,*search,*webkitfullscreenchange,*webkitfullscreenerror,outerHTML,%part,#scrollLeft,#scrollTop,slot,*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored\",\"[HTMLElement]^[Element]|accessKey,autocapitalize,!autofocus,contentEditable,dir,!draggable,enterKeyHint,!hidden,!inert,innerText,inputMode,lang,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate,virtualKeyboardPolicy\",\"abbr,address,article,aside,b,bdi,bdo,cite,content,code,dd,dfn,dt,em,figcaption,figure,footer,header,hgroup,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,autocapitalize,!autofocus,contentEditable,dir,!draggable,enterKeyHint,!hidden,innerText,inputMode,lang,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate,virtualKeyboardPolicy\",\"media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,!preservesPitch,src,%srcObject,#volume\",\":svg:^[HTMLElement]|!autofocus,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,%style,#tabIndex\",\":svg:graphics^:svg:|\",\":svg:animation^:svg:|*begin,*end,*repeat\",\":svg:geometry^:svg:|\",\":svg:componentTransferFunction^:svg:|\",\":svg:gradient^:svg:|\",\":svg:textContent^:svg:graphics|\",\":svg:textPositioning^:svg:textContent|\",\"a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,%relList,rev,search,shape,target,text,type,username\",\"area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,%relList,search,shape,target,username\",\"audio^media|\",\"br^[HTMLElement]|clear\",\"base^[HTMLElement]|href,target\",\"body^[HTMLElement]|aLink,background,bgColor,link,*afterprint,*beforeprint,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*messageerror,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink\",\"button^[HTMLElement]|!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value\",\"canvas^[HTMLElement]|#height,#width\",\"content^[HTMLElement]|select\",\"dl^[HTMLElement]|!compact\",\"data^[HTMLElement]|value\",\"datalist^[HTMLElement]|\",\"details^[HTMLElement]|!open\",\"dialog^[HTMLElement]|!open,returnValue\",\"dir^[HTMLElement]|!compact\",\"div^[HTMLElement]|align\",\"embed^[HTMLElement]|align,height,name,src,type,width\",\"fieldset^[HTMLElement]|!disabled,name\",\"font^[HTMLElement]|color,face,size\",\"form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target\",\"frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src\",\"frameset^[HTMLElement]|cols,*afterprint,*beforeprint,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*messageerror,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows\",\"hr^[HTMLElement]|align,color,!noShade,size,width\",\"head^[HTMLElement]|\",\"h1,h2,h3,h4,h5,h6^[HTMLElement]|align\",\"html^[HTMLElement]|version\",\"iframe^[HTMLElement]|align,allow,!allowFullscreen,!allowPaymentRequest,csp,frameBorder,height,loading,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width\",\"img^[HTMLElement]|align,alt,border,%crossOrigin,decoding,#height,#hspace,!isMap,loading,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width\",\"input^[HTMLElement]|accept,align,alt,autocomplete,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width\",\"li^[HTMLElement]|type,#value\",\"label^[HTMLElement]|htmlFor\",\"legend^[HTMLElement]|align\",\"link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,imageSizes,imageSrcset,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type\",\"map^[HTMLElement]|name\",\"marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width\",\"menu^[HTMLElement]|!compact\",\"meta^[HTMLElement]|content,httpEquiv,media,name,scheme\",\"meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value\",\"ins,del^[HTMLElement]|cite,dateTime\",\"ol^[HTMLElement]|!compact,!reversed,#start,type\",\"object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width\",\"optgroup^[HTMLElement]|!disabled,label\",\"option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value\",\"output^[HTMLElement]|defaultValue,%htmlFor,name,value\",\"p^[HTMLElement]|align\",\"param^[HTMLElement]|name,type,value,valueType\",\"picture^[HTMLElement]|\",\"pre^[HTMLElement]|#width\",\"progress^[HTMLElement]|#max,#value\",\"q,blockquote,cite^[HTMLElement]|\",\"script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,!noModule,%referrerPolicy,src,text,type\",\"select^[HTMLElement]|autocomplete,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value\",\"slot^[HTMLElement]|name\",\"source^[HTMLElement]|#height,media,sizes,src,srcset,type,#width\",\"span^[HTMLElement]|\",\"style^[HTMLElement]|!disabled,media,type\",\"caption^[HTMLElement]|align\",\"th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width\",\"col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width\",\"table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width\",\"tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign\",\"tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign\",\"template^[HTMLElement]|\",\"textarea^[HTMLElement]|autocomplete,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap\",\"time^[HTMLElement]|dateTime\",\"title^[HTMLElement]|text\",\"track^[HTMLElement]|!default,kind,label,src,srclang\",\"ul^[HTMLElement]|!compact,type\",\"unknown^[HTMLElement]|\",\"video^media|!disablePictureInPicture,#height,*enterpictureinpicture,*leavepictureinpicture,!playsInline,poster,#width\",\":svg:a^:svg:graphics|\",\":svg:animate^:svg:animation|\",\":svg:animateMotion^:svg:animation|\",\":svg:animateTransform^:svg:animation|\",\":svg:circle^:svg:geometry|\",\":svg:clipPath^:svg:graphics|\",\":svg:defs^:svg:graphics|\",\":svg:desc^:svg:|\",\":svg:discard^:svg:|\",\":svg:ellipse^:svg:geometry|\",\":svg:feBlend^:svg:|\",\":svg:feColorMatrix^:svg:|\",\":svg:feComponentTransfer^:svg:|\",\":svg:feComposite^:svg:|\",\":svg:feConvolveMatrix^:svg:|\",\":svg:feDiffuseLighting^:svg:|\",\":svg:feDisplacementMap^:svg:|\",\":svg:feDistantLight^:svg:|\",\":svg:feDropShadow^:svg:|\",\":svg:feFlood^:svg:|\",\":svg:feFuncA^:svg:componentTransferFunction|\",\":svg:feFuncB^:svg:componentTransferFunction|\",\":svg:feFuncG^:svg:componentTransferFunction|\",\":svg:feFuncR^:svg:componentTransferFunction|\",\":svg:feGaussianBlur^:svg:|\",\":svg:feImage^:svg:|\",\":svg:feMerge^:svg:|\",\":svg:feMergeNode^:svg:|\",\":svg:feMorphology^:svg:|\",\":svg:feOffset^:svg:|\",\":svg:fePointLight^:svg:|\",\":svg:feSpecularLighting^:svg:|\",\":svg:feSpotLight^:svg:|\",\":svg:feTile^:svg:|\",\":svg:feTurbulence^:svg:|\",\":svg:filter^:svg:|\",\":svg:foreignObject^:svg:graphics|\",\":svg:g^:svg:graphics|\",\":svg:image^:svg:graphics|decoding\",\":svg:line^:svg:geometry|\",\":svg:linearGradient^:svg:gradient|\",\":svg:mpath^:svg:|\",\":svg:marker^:svg:|\",\":svg:mask^:svg:|\",\":svg:metadata^:svg:|\",\":svg:path^:svg:geometry|\",\":svg:pattern^:svg:|\",\":svg:polygon^:svg:geometry|\",\":svg:polyline^:svg:geometry|\",\":svg:radialGradient^:svg:gradient|\",\":svg:rect^:svg:geometry|\",\":svg:svg^:svg:graphics|#currentScale,#zoomAndPan\",\":svg:script^:svg:|type\",\":svg:set^:svg:animation|\",\":svg:stop^:svg:|\",\":svg:style^:svg:|!disabled,media,title,type\",\":svg:switch^:svg:graphics|\",\":svg:symbol^:svg:|\",\":svg:tspan^:svg:textPositioning|\",\":svg:text^:svg:textPositioning|\",\":svg:textPath^:svg:textContent|\",\":svg:title^:svg:|\",\":svg:use^:svg:graphics|\",\":svg:view^:svg:|#zoomAndPan\",\"data^[HTMLElement]|value\",\"keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name\",\"menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default\",\"summary^[HTMLElement]|\",\"time^[HTMLElement]|dateTime\",\":svg:cursor^:svg:|\",\":math:^[HTMLElement]|!autofocus,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforeinput,*beforematch,*beforetoggle,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contentvisibilityautostatechange,*contextlost,*contextmenu,*contextrestored,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*scrollend,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,%style,#tabIndex\",\":math:math^:math:|\",\":math:maction^:math:|\",\":math:menclose^:math:|\",\":math:merror^:math:|\",\":math:mfenced^:math:|\",\":math:mfrac^:math:|\",\":math:mi^:math:|\",\":math:mmultiscripts^:math:|\",\":math:mn^:math:|\",\":math:mo^:math:|\",\":math:mover^:math:|\",\":math:mpadded^:math:|\",\":math:mphantom^:math:|\",\":math:mroot^:math:|\",\":math:mrow^:math:|\",\":math:ms^:math:|\",\":math:mspace^:math:|\",\":math:msqrt^:math:|\",\":math:mstyle^:math:|\",\":math:msub^:math:|\",\":math:msubsup^:math:|\",\":math:msup^:math:|\",\":math:mtable^:math:|\",\":math:mtd^:math:|\",\":math:mtext^:math:|\",\":math:mtr^:math:|\",\":math:munder^:math:|\",\":math:munderover^:math:|\",\":math:semantics^:math:|\"],js=new Map(Object.entries({class:\"className\",for:\"htmlFor\",formaction:\"formAction\",innerHtml:\"innerHTML\",readonly:\"readOnly\",tabindex:\"tabIndex\"})),po=Array.from(js).reduce((t,[e,r])=>(t.set(e,r),t),new Map),Ut=class extends Vt{constructor(){super(),this._schema=new Map,this._eventSchema=new Map,co.forEach(e=>{let r=new Map,n=new Set,[s,i]=e.split(\"|\"),a=i.split(\",\"),[o,u]=s.split(\"^\");o.split(\",\").forEach(l=>{this._schema.set(l.toLowerCase(),r),this._eventSchema.set(l.toLowerCase(),n)});let p=u&&this._schema.get(u.toLowerCase());if(p){for(let[l,m]of p)r.set(l,m);for(let l of this._eventSchema.get(u.toLowerCase()))n.add(l)}a.forEach(l=>{if(l.length>0)switch(l[0]){case\"*\":n.add(l.substring(1));break;case\"!\":r.set(l.substring(1),ao);break;case\"#\":r.set(l.substring(1),oo);break;case\"%\":r.set(l.substring(1),lo);break;default:r.set(l,uo)}})})}hasProperty(e,r,n){if(n.some(i=>i.name===Pr.name))return!0;if(e.indexOf(\"-\")>-1){if(Nr(e)||Ir(e))return!1;if(n.some(i=>i.name===Fr.name))return!0}return(this._schema.get(e.toLowerCase())||this._schema.get(\"unknown\")).has(r)}hasElement(e,r){return r.some(n=>n.name===Pr.name)||e.indexOf(\"-\")>-1&&(Nr(e)||Ir(e)||r.some(n=>n.name===Fr.name))?!0:this._schema.has(e.toLowerCase())}securityContext(e,r,n){n&&(r=this.getMappedPropName(r)),e=e.toLowerCase(),r=r.toLowerCase();let s=Rr()[e+\"|\"+r];return s||(s=Rr()[\"*|\"+r],s||Z.NONE)}getMappedPropName(e){return js.get(e)??e}getDefaultComponentElementName(){return\"ng-component\"}validateProperty(e){return e.toLowerCase().startsWith(\"on\")?{error:!0,msg:`Binding to event property '${e}' is disallowed for security reasons, please use (${e.slice(2)})=...\nIf '${e}' is a directive input, make sure the directive is imported by the current module.`}:{error:!1}}validateAttribute(e){return e.toLowerCase().startsWith(\"on\")?{error:!0,msg:`Binding to event attribute '${e}' is disallowed for security reasons, please use (${e.slice(2)})=...`}:{error:!1}}allKnownElementNames(){return Array.from(this._schema.keys())}allKnownAttributesOfElement(e){let r=this._schema.get(e.toLowerCase())||this._schema.get(\"unknown\");return Array.from(r.keys()).map(n=>po.get(n)??n)}allKnownEventsOfElement(e){return Array.from(this._eventSchema.get(e.toLowerCase())??[])}normalizeAnimationStyleProperty(e){return Os(e)}normalizeAnimationStyleValue(e,r,n){let s=\"\",i=n.toString().trim(),a=null;if(ho(e)&&n!==0&&n!==\"0\")if(typeof n==\"number\")s=\"px\";else{let o=n.match(/^[+-]?[\\d\\.]+([a-z]*)$/);o&&o[1].length==0&&(a=`Please provide a CSS unit value for ${r}:${n}`)}return{error:a,value:i+s}}};function ho(t){switch(t){case\"width\":case\"height\":case\"minWidth\":case\"minHeight\":case\"maxWidth\":case\"maxHeight\":case\"left\":case\"top\":case\"bottom\":case\"right\":case\"fontSize\":case\"outlineWidth\":case\"outlineOffset\":case\"paddingTop\":case\"paddingLeft\":case\"paddingBottom\":case\"paddingRight\":case\"marginTop\":case\"marginLeft\":case\"marginBottom\":case\"marginRight\":case\"borderRadius\":case\"borderWidth\":case\"borderTopWidth\":case\"borderLeftWidth\":case\"borderRightWidth\":case\"borderBottomWidth\":case\"textIndent\":return!0;default:return!1}}var d=class{constructor({closedByChildren:e,implicitNamespacePrefix:r,contentType:n=N.PARSABLE_DATA,closedByParent:s=!1,isVoid:i=!1,ignoreFirstLf:a=!1,preventNamespaceInheritance:o=!1,canSelfClose:u=!1}={}){this.closedByChildren={},this.closedByParent=!1,e&&e.length>0&&e.forEach(p=>this.closedByChildren[p]=!0),this.isVoid=i,this.closedByParent=s||i,this.implicitNamespacePrefix=r||null,this.contentType=n,this.ignoreFirstLf=a,this.preventNamespaceInheritance=o,this.canSelfClose=u??i}isClosedByChild(e){return this.isVoid||e.toLowerCase()in this.closedByChildren}getContentType(e){return typeof this.contentType==\"object\"?(e===void 0?void 0:this.contentType[e])??this.contentType.default:this.contentType}},Ks,pt;function He(t){return pt||(Ks=new d({canSelfClose:!0}),pt=Object.assign(Object.create(null),{base:new d({isVoid:!0}),meta:new d({isVoid:!0}),area:new d({isVoid:!0}),embed:new d({isVoid:!0}),link:new d({isVoid:!0}),img:new d({isVoid:!0}),input:new d({isVoid:!0}),param:new d({isVoid:!0}),hr:new d({isVoid:!0}),br:new d({isVoid:!0}),source:new d({isVoid:!0}),track:new d({isVoid:!0}),wbr:new d({isVoid:!0}),p:new d({closedByChildren:[\"address\",\"article\",\"aside\",\"blockquote\",\"div\",\"dl\",\"fieldset\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"hgroup\",\"hr\",\"main\",\"nav\",\"ol\",\"p\",\"pre\",\"section\",\"table\",\"ul\"],closedByParent:!0}),thead:new d({closedByChildren:[\"tbody\",\"tfoot\"]}),tbody:new d({closedByChildren:[\"tbody\",\"tfoot\"],closedByParent:!0}),tfoot:new d({closedByChildren:[\"tbody\"],closedByParent:!0}),tr:new d({closedByChildren:[\"tr\"],closedByParent:!0}),td:new d({closedByChildren:[\"td\",\"th\"],closedByParent:!0}),th:new d({closedByChildren:[\"td\",\"th\"],closedByParent:!0}),col:new d({isVoid:!0}),svg:new d({implicitNamespacePrefix:\"svg\"}),foreignObject:new d({implicitNamespacePrefix:\"svg\",preventNamespaceInheritance:!0}),math:new d({implicitNamespacePrefix:\"math\"}),li:new d({closedByChildren:[\"li\"],closedByParent:!0}),dt:new d({closedByChildren:[\"dt\",\"dd\"]}),dd:new d({closedByChildren:[\"dt\",\"dd\"],closedByParent:!0}),rb:new d({closedByChildren:[\"rb\",\"rt\",\"rtc\",\"rp\"],closedByParent:!0}),rt:new d({closedByChildren:[\"rb\",\"rt\",\"rtc\",\"rp\"],closedByParent:!0}),rtc:new d({closedByChildren:[\"rb\",\"rtc\",\"rp\"],closedByParent:!0}),rp:new d({closedByChildren:[\"rb\",\"rt\",\"rtc\",\"rp\"],closedByParent:!0}),optgroup:new d({closedByChildren:[\"optgroup\"],closedByParent:!0}),option:new d({closedByChildren:[\"option\",\"optgroup\"],closedByParent:!0}),pre:new d({ignoreFirstLf:!0}),listing:new d({ignoreFirstLf:!0}),style:new d({contentType:N.RAW_TEXT}),script:new d({contentType:N.RAW_TEXT}),title:new d({contentType:{default:N.ESCAPABLE_RAW_TEXT,svg:N.PARSABLE_DATA}}),textarea:new d({contentType:N.ESCAPABLE_RAW_TEXT,ignoreFirstLf:!0})}),new Ut().allKnownElementNames().forEach(e=>{!pt[e]&&Me(e)===null&&(pt[e]=new d({canSelfClose:!1}))})),pt[t]??Ks}var ae=class{constructor(e,r){this.sourceSpan=e,this.i18n=r}},Wt=class extends ae{constructor(e,r,n,s){super(r,s),this.value=e,this.tokens=n,this.type=\"text\"}visit(e,r){return e.visitText(this,r)}},Gt=class extends ae{constructor(e,r,n,s){super(r,s),this.value=e,this.tokens=n,this.type=\"cdata\"}visit(e,r){return e.visitCdata(this,r)}},zt=class extends ae{constructor(e,r,n,s,i,a){super(s,a),this.switchValue=e,this.type=r,this.cases=n,this.switchValueSourceSpan=i}visit(e,r){return e.visitExpansion(this,r)}},Yt=class{constructor(e,r,n,s,i){this.value=e,this.expression=r,this.sourceSpan=n,this.valueSourceSpan=s,this.expSourceSpan=i,this.type=\"expansionCase\"}visit(e,r){return e.visitExpansionCase(this,r)}},jt=class extends ae{constructor(e,r,n,s,i,a,o){super(n,o),this.name=e,this.value=r,this.keySpan=s,this.valueSpan=i,this.valueTokens=a,this.type=\"attribute\"}visit(e,r){return e.visitAttribute(this,r)}get nameSpan(){return this.keySpan}},Y=class extends ae{constructor(e,r,n,s,i,a=null,o=null,u){super(s,u),this.name=e,this.attrs=r,this.children=n,this.startSourceSpan=i,this.endSourceSpan=a,this.nameSpan=o,this.type=\"element\"}visit(e,r){return e.visitElement(this,r)}},Kt=class{constructor(e,r){this.value=e,this.sourceSpan=r,this.type=\"comment\"}visit(e,r){return e.visitComment(this,r)}},Xt=class{constructor(e,r){this.value=e,this.sourceSpan=r,this.type=\"docType\"}visit(e,r){return e.visitDocType(this,r)}},ee=class extends ae{constructor(e,r,n,s,i,a,o=null,u){super(s,u),this.name=e,this.parameters=r,this.children=n,this.nameSpan=i,this.startSourceSpan=a,this.endSourceSpan=o,this.type=\"block\"}visit(e,r){return e.visitBlock(this,r)}},ht=class{constructor(e,r){this.expression=e,this.sourceSpan=r,this.type=\"blockParameter\",this.startSourceSpan=null,this.endSourceSpan=null}visit(e,r){return e.visitBlockParameter(this,r)}},mt=class{constructor(e,r,n,s,i){this.name=e,this.value=r,this.sourceSpan=n,this.nameSpan=s,this.valueSpan=i,this.type=\"letDeclaration\",this.startSourceSpan=null,this.endSourceSpan=null}visit(e,r){return e.visitLetDeclaration(this,r)}};function Qt(t,e,r=null){let n=[],s=t.visit?i=>t.visit(i,r)||i.visit(t,r):i=>i.visit(t,r);return e.forEach(i=>{let a=s(i);a&&n.push(a)}),n}var ft=class{constructor(){}visitElement(e,r){this.visitChildren(r,n=>{n(e.attrs),n(e.children)})}visitAttribute(e,r){}visitText(e,r){}visitCdata(e,r){}visitComment(e,r){}visitDocType(e,r){}visitExpansion(e,r){return this.visitChildren(r,n=>{n(e.cases)})}visitExpansionCase(e,r){}visitBlock(e,r){this.visitChildren(r,n=>{n(e.parameters),n(e.children)})}visitBlockParameter(e,r){}visitLetDeclaration(e,r){}visitChildren(e,r){let n=[],s=this;function i(a){a&&n.push(Qt(s,a,e))}return r(i),Array.prototype.concat.apply([],n)}};var Ve={AElig:\"\\xC6\",AMP:\"&\",amp:\"&\",Aacute:\"\\xC1\",Abreve:\"\\u0102\",Acirc:\"\\xC2\",Acy:\"\\u0410\",Afr:\"\\u{1D504}\",Agrave:\"\\xC0\",Alpha:\"\\u0391\",Amacr:\"\\u0100\",And:\"\\u2A53\",Aogon:\"\\u0104\",Aopf:\"\\u{1D538}\",ApplyFunction:\"\\u2061\",af:\"\\u2061\",Aring:\"\\xC5\",angst:\"\\xC5\",Ascr:\"\\u{1D49C}\",Assign:\"\\u2254\",colone:\"\\u2254\",coloneq:\"\\u2254\",Atilde:\"\\xC3\",Auml:\"\\xC4\",Backslash:\"\\u2216\",setminus:\"\\u2216\",setmn:\"\\u2216\",smallsetminus:\"\\u2216\",ssetmn:\"\\u2216\",Barv:\"\\u2AE7\",Barwed:\"\\u2306\",doublebarwedge:\"\\u2306\",Bcy:\"\\u0411\",Because:\"\\u2235\",becaus:\"\\u2235\",because:\"\\u2235\",Bernoullis:\"\\u212C\",Bscr:\"\\u212C\",bernou:\"\\u212C\",Beta:\"\\u0392\",Bfr:\"\\u{1D505}\",Bopf:\"\\u{1D539}\",Breve:\"\\u02D8\",breve:\"\\u02D8\",Bumpeq:\"\\u224E\",HumpDownHump:\"\\u224E\",bump:\"\\u224E\",CHcy:\"\\u0427\",COPY:\"\\xA9\",copy:\"\\xA9\",Cacute:\"\\u0106\",Cap:\"\\u22D2\",CapitalDifferentialD:\"\\u2145\",DD:\"\\u2145\",Cayleys:\"\\u212D\",Cfr:\"\\u212D\",Ccaron:\"\\u010C\",Ccedil:\"\\xC7\",Ccirc:\"\\u0108\",Cconint:\"\\u2230\",Cdot:\"\\u010A\",Cedilla:\"\\xB8\",cedil:\"\\xB8\",CenterDot:\"\\xB7\",centerdot:\"\\xB7\",middot:\"\\xB7\",Chi:\"\\u03A7\",CircleDot:\"\\u2299\",odot:\"\\u2299\",CircleMinus:\"\\u2296\",ominus:\"\\u2296\",CirclePlus:\"\\u2295\",oplus:\"\\u2295\",CircleTimes:\"\\u2297\",otimes:\"\\u2297\",ClockwiseContourIntegral:\"\\u2232\",cwconint:\"\\u2232\",CloseCurlyDoubleQuote:\"\\u201D\",rdquo:\"\\u201D\",rdquor:\"\\u201D\",CloseCurlyQuote:\"\\u2019\",rsquo:\"\\u2019\",rsquor:\"\\u2019\",Colon:\"\\u2237\",Proportion:\"\\u2237\",Colone:\"\\u2A74\",Congruent:\"\\u2261\",equiv:\"\\u2261\",Conint:\"\\u222F\",DoubleContourIntegral:\"\\u222F\",ContourIntegral:\"\\u222E\",conint:\"\\u222E\",oint:\"\\u222E\",Copf:\"\\u2102\",complexes:\"\\u2102\",Coproduct:\"\\u2210\",coprod:\"\\u2210\",CounterClockwiseContourIntegral:\"\\u2233\",awconint:\"\\u2233\",Cross:\"\\u2A2F\",Cscr:\"\\u{1D49E}\",Cup:\"\\u22D3\",CupCap:\"\\u224D\",asympeq:\"\\u224D\",DDotrahd:\"\\u2911\",DJcy:\"\\u0402\",DScy:\"\\u0405\",DZcy:\"\\u040F\",Dagger:\"\\u2021\",ddagger:\"\\u2021\",Darr:\"\\u21A1\",Dashv:\"\\u2AE4\",DoubleLeftTee:\"\\u2AE4\",Dcaron:\"\\u010E\",Dcy:\"\\u0414\",Del:\"\\u2207\",nabla:\"\\u2207\",Delta:\"\\u0394\",Dfr:\"\\u{1D507}\",DiacriticalAcute:\"\\xB4\",acute:\"\\xB4\",DiacriticalDot:\"\\u02D9\",dot:\"\\u02D9\",DiacriticalDoubleAcute:\"\\u02DD\",dblac:\"\\u02DD\",DiacriticalGrave:\"`\",grave:\"`\",DiacriticalTilde:\"\\u02DC\",tilde:\"\\u02DC\",Diamond:\"\\u22C4\",diam:\"\\u22C4\",diamond:\"\\u22C4\",DifferentialD:\"\\u2146\",dd:\"\\u2146\",Dopf:\"\\u{1D53B}\",Dot:\"\\xA8\",DoubleDot:\"\\xA8\",die:\"\\xA8\",uml:\"\\xA8\",DotDot:\"\\u20DC\",DotEqual:\"\\u2250\",doteq:\"\\u2250\",esdot:\"\\u2250\",DoubleDownArrow:\"\\u21D3\",Downarrow:\"\\u21D3\",dArr:\"\\u21D3\",DoubleLeftArrow:\"\\u21D0\",Leftarrow:\"\\u21D0\",lArr:\"\\u21D0\",DoubleLeftRightArrow:\"\\u21D4\",Leftrightarrow:\"\\u21D4\",hArr:\"\\u21D4\",iff:\"\\u21D4\",DoubleLongLeftArrow:\"\\u27F8\",Longleftarrow:\"\\u27F8\",xlArr:\"\\u27F8\",DoubleLongLeftRightArrow:\"\\u27FA\",Longleftrightarrow:\"\\u27FA\",xhArr:\"\\u27FA\",DoubleLongRightArrow:\"\\u27F9\",Longrightarrow:\"\\u27F9\",xrArr:\"\\u27F9\",DoubleRightArrow:\"\\u21D2\",Implies:\"\\u21D2\",Rightarrow:\"\\u21D2\",rArr:\"\\u21D2\",DoubleRightTee:\"\\u22A8\",vDash:\"\\u22A8\",DoubleUpArrow:\"\\u21D1\",Uparrow:\"\\u21D1\",uArr:\"\\u21D1\",DoubleUpDownArrow:\"\\u21D5\",Updownarrow:\"\\u21D5\",vArr:\"\\u21D5\",DoubleVerticalBar:\"\\u2225\",par:\"\\u2225\",parallel:\"\\u2225\",shortparallel:\"\\u2225\",spar:\"\\u2225\",DownArrow:\"\\u2193\",ShortDownArrow:\"\\u2193\",darr:\"\\u2193\",downarrow:\"\\u2193\",DownArrowBar:\"\\u2913\",DownArrowUpArrow:\"\\u21F5\",duarr:\"\\u21F5\",DownBreve:\"\\u0311\",DownLeftRightVector:\"\\u2950\",DownLeftTeeVector:\"\\u295E\",DownLeftVector:\"\\u21BD\",leftharpoondown:\"\\u21BD\",lhard:\"\\u21BD\",DownLeftVectorBar:\"\\u2956\",DownRightTeeVector:\"\\u295F\",DownRightVector:\"\\u21C1\",rhard:\"\\u21C1\",rightharpoondown:\"\\u21C1\",DownRightVectorBar:\"\\u2957\",DownTee:\"\\u22A4\",top:\"\\u22A4\",DownTeeArrow:\"\\u21A7\",mapstodown:\"\\u21A7\",Dscr:\"\\u{1D49F}\",Dstrok:\"\\u0110\",ENG:\"\\u014A\",ETH:\"\\xD0\",Eacute:\"\\xC9\",Ecaron:\"\\u011A\",Ecirc:\"\\xCA\",Ecy:\"\\u042D\",Edot:\"\\u0116\",Efr:\"\\u{1D508}\",Egrave:\"\\xC8\",Element:\"\\u2208\",in:\"\\u2208\",isin:\"\\u2208\",isinv:\"\\u2208\",Emacr:\"\\u0112\",EmptySmallSquare:\"\\u25FB\",EmptyVerySmallSquare:\"\\u25AB\",Eogon:\"\\u0118\",Eopf:\"\\u{1D53C}\",Epsilon:\"\\u0395\",Equal:\"\\u2A75\",EqualTilde:\"\\u2242\",eqsim:\"\\u2242\",esim:\"\\u2242\",Equilibrium:\"\\u21CC\",rightleftharpoons:\"\\u21CC\",rlhar:\"\\u21CC\",Escr:\"\\u2130\",expectation:\"\\u2130\",Esim:\"\\u2A73\",Eta:\"\\u0397\",Euml:\"\\xCB\",Exists:\"\\u2203\",exist:\"\\u2203\",ExponentialE:\"\\u2147\",ee:\"\\u2147\",exponentiale:\"\\u2147\",Fcy:\"\\u0424\",Ffr:\"\\u{1D509}\",FilledSmallSquare:\"\\u25FC\",FilledVerySmallSquare:\"\\u25AA\",blacksquare:\"\\u25AA\",squarf:\"\\u25AA\",squf:\"\\u25AA\",Fopf:\"\\u{1D53D}\",ForAll:\"\\u2200\",forall:\"\\u2200\",Fouriertrf:\"\\u2131\",Fscr:\"\\u2131\",GJcy:\"\\u0403\",GT:\">\",gt:\">\",Gamma:\"\\u0393\",Gammad:\"\\u03DC\",Gbreve:\"\\u011E\",Gcedil:\"\\u0122\",Gcirc:\"\\u011C\",Gcy:\"\\u0413\",Gdot:\"\\u0120\",Gfr:\"\\u{1D50A}\",Gg:\"\\u22D9\",ggg:\"\\u22D9\",Gopf:\"\\u{1D53E}\",GreaterEqual:\"\\u2265\",ge:\"\\u2265\",geq:\"\\u2265\",GreaterEqualLess:\"\\u22DB\",gel:\"\\u22DB\",gtreqless:\"\\u22DB\",GreaterFullEqual:\"\\u2267\",gE:\"\\u2267\",geqq:\"\\u2267\",GreaterGreater:\"\\u2AA2\",GreaterLess:\"\\u2277\",gl:\"\\u2277\",gtrless:\"\\u2277\",GreaterSlantEqual:\"\\u2A7E\",geqslant:\"\\u2A7E\",ges:\"\\u2A7E\",GreaterTilde:\"\\u2273\",gsim:\"\\u2273\",gtrsim:\"\\u2273\",Gscr:\"\\u{1D4A2}\",Gt:\"\\u226B\",NestedGreaterGreater:\"\\u226B\",gg:\"\\u226B\",HARDcy:\"\\u042A\",Hacek:\"\\u02C7\",caron:\"\\u02C7\",Hat:\"^\",Hcirc:\"\\u0124\",Hfr:\"\\u210C\",Poincareplane:\"\\u210C\",HilbertSpace:\"\\u210B\",Hscr:\"\\u210B\",hamilt:\"\\u210B\",Hopf:\"\\u210D\",quaternions:\"\\u210D\",HorizontalLine:\"\\u2500\",boxh:\"\\u2500\",Hstrok:\"\\u0126\",HumpEqual:\"\\u224F\",bumpe:\"\\u224F\",bumpeq:\"\\u224F\",IEcy:\"\\u0415\",IJlig:\"\\u0132\",IOcy:\"\\u0401\",Iacute:\"\\xCD\",Icirc:\"\\xCE\",Icy:\"\\u0418\",Idot:\"\\u0130\",Ifr:\"\\u2111\",Im:\"\\u2111\",image:\"\\u2111\",imagpart:\"\\u2111\",Igrave:\"\\xCC\",Imacr:\"\\u012A\",ImaginaryI:\"\\u2148\",ii:\"\\u2148\",Int:\"\\u222C\",Integral:\"\\u222B\",int:\"\\u222B\",Intersection:\"\\u22C2\",bigcap:\"\\u22C2\",xcap:\"\\u22C2\",InvisibleComma:\"\\u2063\",ic:\"\\u2063\",InvisibleTimes:\"\\u2062\",it:\"\\u2062\",Iogon:\"\\u012E\",Iopf:\"\\u{1D540}\",Iota:\"\\u0399\",Iscr:\"\\u2110\",imagline:\"\\u2110\",Itilde:\"\\u0128\",Iukcy:\"\\u0406\",Iuml:\"\\xCF\",Jcirc:\"\\u0134\",Jcy:\"\\u0419\",Jfr:\"\\u{1D50D}\",Jopf:\"\\u{1D541}\",Jscr:\"\\u{1D4A5}\",Jsercy:\"\\u0408\",Jukcy:\"\\u0404\",KHcy:\"\\u0425\",KJcy:\"\\u040C\",Kappa:\"\\u039A\",Kcedil:\"\\u0136\",Kcy:\"\\u041A\",Kfr:\"\\u{1D50E}\",Kopf:\"\\u{1D542}\",Kscr:\"\\u{1D4A6}\",LJcy:\"\\u0409\",LT:\"<\",lt:\"<\",Lacute:\"\\u0139\",Lambda:\"\\u039B\",Lang:\"\\u27EA\",Laplacetrf:\"\\u2112\",Lscr:\"\\u2112\",lagran:\"\\u2112\",Larr:\"\\u219E\",twoheadleftarrow:\"\\u219E\",Lcaron:\"\\u013D\",Lcedil:\"\\u013B\",Lcy:\"\\u041B\",LeftAngleBracket:\"\\u27E8\",lang:\"\\u27E8\",langle:\"\\u27E8\",LeftArrow:\"\\u2190\",ShortLeftArrow:\"\\u2190\",larr:\"\\u2190\",leftarrow:\"\\u2190\",slarr:\"\\u2190\",LeftArrowBar:\"\\u21E4\",larrb:\"\\u21E4\",LeftArrowRightArrow:\"\\u21C6\",leftrightarrows:\"\\u21C6\",lrarr:\"\\u21C6\",LeftCeiling:\"\\u2308\",lceil:\"\\u2308\",LeftDoubleBracket:\"\\u27E6\",lobrk:\"\\u27E6\",LeftDownTeeVector:\"\\u2961\",LeftDownVector:\"\\u21C3\",dharl:\"\\u21C3\",downharpoonleft:\"\\u21C3\",LeftDownVectorBar:\"\\u2959\",LeftFloor:\"\\u230A\",lfloor:\"\\u230A\",LeftRightArrow:\"\\u2194\",harr:\"\\u2194\",leftrightarrow:\"\\u2194\",LeftRightVector:\"\\u294E\",LeftTee:\"\\u22A3\",dashv:\"\\u22A3\",LeftTeeArrow:\"\\u21A4\",mapstoleft:\"\\u21A4\",LeftTeeVector:\"\\u295A\",LeftTriangle:\"\\u22B2\",vartriangleleft:\"\\u22B2\",vltri:\"\\u22B2\",LeftTriangleBar:\"\\u29CF\",LeftTriangleEqual:\"\\u22B4\",ltrie:\"\\u22B4\",trianglelefteq:\"\\u22B4\",LeftUpDownVector:\"\\u2951\",LeftUpTeeVector:\"\\u2960\",LeftUpVector:\"\\u21BF\",uharl:\"\\u21BF\",upharpoonleft:\"\\u21BF\",LeftUpVectorBar:\"\\u2958\",LeftVector:\"\\u21BC\",leftharpoonup:\"\\u21BC\",lharu:\"\\u21BC\",LeftVectorBar:\"\\u2952\",LessEqualGreater:\"\\u22DA\",leg:\"\\u22DA\",lesseqgtr:\"\\u22DA\",LessFullEqual:\"\\u2266\",lE:\"\\u2266\",leqq:\"\\u2266\",LessGreater:\"\\u2276\",lessgtr:\"\\u2276\",lg:\"\\u2276\",LessLess:\"\\u2AA1\",LessSlantEqual:\"\\u2A7D\",leqslant:\"\\u2A7D\",les:\"\\u2A7D\",LessTilde:\"\\u2272\",lesssim:\"\\u2272\",lsim:\"\\u2272\",Lfr:\"\\u{1D50F}\",Ll:\"\\u22D8\",Lleftarrow:\"\\u21DA\",lAarr:\"\\u21DA\",Lmidot:\"\\u013F\",LongLeftArrow:\"\\u27F5\",longleftarrow:\"\\u27F5\",xlarr:\"\\u27F5\",LongLeftRightArrow:\"\\u27F7\",longleftrightarrow:\"\\u27F7\",xharr:\"\\u27F7\",LongRightArrow:\"\\u27F6\",longrightarrow:\"\\u27F6\",xrarr:\"\\u27F6\",Lopf:\"\\u{1D543}\",LowerLeftArrow:\"\\u2199\",swarr:\"\\u2199\",swarrow:\"\\u2199\",LowerRightArrow:\"\\u2198\",searr:\"\\u2198\",searrow:\"\\u2198\",Lsh:\"\\u21B0\",lsh:\"\\u21B0\",Lstrok:\"\\u0141\",Lt:\"\\u226A\",NestedLessLess:\"\\u226A\",ll:\"\\u226A\",Map:\"\\u2905\",Mcy:\"\\u041C\",MediumSpace:\"\\u205F\",Mellintrf:\"\\u2133\",Mscr:\"\\u2133\",phmmat:\"\\u2133\",Mfr:\"\\u{1D510}\",MinusPlus:\"\\u2213\",mnplus:\"\\u2213\",mp:\"\\u2213\",Mopf:\"\\u{1D544}\",Mu:\"\\u039C\",NJcy:\"\\u040A\",Nacute:\"\\u0143\",Ncaron:\"\\u0147\",Ncedil:\"\\u0145\",Ncy:\"\\u041D\",NegativeMediumSpace:\"\\u200B\",NegativeThickSpace:\"\\u200B\",NegativeThinSpace:\"\\u200B\",NegativeVeryThinSpace:\"\\u200B\",ZeroWidthSpace:\"\\u200B\",NewLine:`\n`,Nfr:\"\\u{1D511}\",NoBreak:\"\\u2060\",NonBreakingSpace:\"\\xA0\",nbsp:\"\\xA0\",Nopf:\"\\u2115\",naturals:\"\\u2115\",Not:\"\\u2AEC\",NotCongruent:\"\\u2262\",nequiv:\"\\u2262\",NotCupCap:\"\\u226D\",NotDoubleVerticalBar:\"\\u2226\",npar:\"\\u2226\",nparallel:\"\\u2226\",nshortparallel:\"\\u2226\",nspar:\"\\u2226\",NotElement:\"\\u2209\",notin:\"\\u2209\",notinva:\"\\u2209\",NotEqual:\"\\u2260\",ne:\"\\u2260\",NotEqualTilde:\"\\u2242\\u0338\",nesim:\"\\u2242\\u0338\",NotExists:\"\\u2204\",nexist:\"\\u2204\",nexists:\"\\u2204\",NotGreater:\"\\u226F\",ngt:\"\\u226F\",ngtr:\"\\u226F\",NotGreaterEqual:\"\\u2271\",nge:\"\\u2271\",ngeq:\"\\u2271\",NotGreaterFullEqual:\"\\u2267\\u0338\",ngE:\"\\u2267\\u0338\",ngeqq:\"\\u2267\\u0338\",NotGreaterGreater:\"\\u226B\\u0338\",nGtv:\"\\u226B\\u0338\",NotGreaterLess:\"\\u2279\",ntgl:\"\\u2279\",NotGreaterSlantEqual:\"\\u2A7E\\u0338\",ngeqslant:\"\\u2A7E\\u0338\",nges:\"\\u2A7E\\u0338\",NotGreaterTilde:\"\\u2275\",ngsim:\"\\u2275\",NotHumpDownHump:\"\\u224E\\u0338\",nbump:\"\\u224E\\u0338\",NotHumpEqual:\"\\u224F\\u0338\",nbumpe:\"\\u224F\\u0338\",NotLeftTriangle:\"\\u22EA\",nltri:\"\\u22EA\",ntriangleleft:\"\\u22EA\",NotLeftTriangleBar:\"\\u29CF\\u0338\",NotLeftTriangleEqual:\"\\u22EC\",nltrie:\"\\u22EC\",ntrianglelefteq:\"\\u22EC\",NotLess:\"\\u226E\",nless:\"\\u226E\",nlt:\"\\u226E\",NotLessEqual:\"\\u2270\",nle:\"\\u2270\",nleq:\"\\u2270\",NotLessGreater:\"\\u2278\",ntlg:\"\\u2278\",NotLessLess:\"\\u226A\\u0338\",nLtv:\"\\u226A\\u0338\",NotLessSlantEqual:\"\\u2A7D\\u0338\",nleqslant:\"\\u2A7D\\u0338\",nles:\"\\u2A7D\\u0338\",NotLessTilde:\"\\u2274\",nlsim:\"\\u2274\",NotNestedGreaterGreater:\"\\u2AA2\\u0338\",NotNestedLessLess:\"\\u2AA1\\u0338\",NotPrecedes:\"\\u2280\",npr:\"\\u2280\",nprec:\"\\u2280\",NotPrecedesEqual:\"\\u2AAF\\u0338\",npre:\"\\u2AAF\\u0338\",npreceq:\"\\u2AAF\\u0338\",NotPrecedesSlantEqual:\"\\u22E0\",nprcue:\"\\u22E0\",NotReverseElement:\"\\u220C\",notni:\"\\u220C\",notniva:\"\\u220C\",NotRightTriangle:\"\\u22EB\",nrtri:\"\\u22EB\",ntriangleright:\"\\u22EB\",NotRightTriangleBar:\"\\u29D0\\u0338\",NotRightTriangleEqual:\"\\u22ED\",nrtrie:\"\\u22ED\",ntrianglerighteq:\"\\u22ED\",NotSquareSubset:\"\\u228F\\u0338\",NotSquareSubsetEqual:\"\\u22E2\",nsqsube:\"\\u22E2\",NotSquareSuperset:\"\\u2290\\u0338\",NotSquareSupersetEqual:\"\\u22E3\",nsqsupe:\"\\u22E3\",NotSubset:\"\\u2282\\u20D2\",nsubset:\"\\u2282\\u20D2\",vnsub:\"\\u2282\\u20D2\",NotSubsetEqual:\"\\u2288\",nsube:\"\\u2288\",nsubseteq:\"\\u2288\",NotSucceeds:\"\\u2281\",nsc:\"\\u2281\",nsucc:\"\\u2281\",NotSucceedsEqual:\"\\u2AB0\\u0338\",nsce:\"\\u2AB0\\u0338\",nsucceq:\"\\u2AB0\\u0338\",NotSucceedsSlantEqual:\"\\u22E1\",nsccue:\"\\u22E1\",NotSucceedsTilde:\"\\u227F\\u0338\",NotSuperset:\"\\u2283\\u20D2\",nsupset:\"\\u2283\\u20D2\",vnsup:\"\\u2283\\u20D2\",NotSupersetEqual:\"\\u2289\",nsupe:\"\\u2289\",nsupseteq:\"\\u2289\",NotTilde:\"\\u2241\",nsim:\"\\u2241\",NotTildeEqual:\"\\u2244\",nsime:\"\\u2244\",nsimeq:\"\\u2244\",NotTildeFullEqual:\"\\u2247\",ncong:\"\\u2247\",NotTildeTilde:\"\\u2249\",nap:\"\\u2249\",napprox:\"\\u2249\",NotVerticalBar:\"\\u2224\",nmid:\"\\u2224\",nshortmid:\"\\u2224\",nsmid:\"\\u2224\",Nscr:\"\\u{1D4A9}\",Ntilde:\"\\xD1\",Nu:\"\\u039D\",OElig:\"\\u0152\",Oacute:\"\\xD3\",Ocirc:\"\\xD4\",Ocy:\"\\u041E\",Odblac:\"\\u0150\",Ofr:\"\\u{1D512}\",Ograve:\"\\xD2\",Omacr:\"\\u014C\",Omega:\"\\u03A9\",ohm:\"\\u03A9\",Omicron:\"\\u039F\",Oopf:\"\\u{1D546}\",OpenCurlyDoubleQuote:\"\\u201C\",ldquo:\"\\u201C\",OpenCurlyQuote:\"\\u2018\",lsquo:\"\\u2018\",Or:\"\\u2A54\",Oscr:\"\\u{1D4AA}\",Oslash:\"\\xD8\",Otilde:\"\\xD5\",Otimes:\"\\u2A37\",Ouml:\"\\xD6\",OverBar:\"\\u203E\",oline:\"\\u203E\",OverBrace:\"\\u23DE\",OverBracket:\"\\u23B4\",tbrk:\"\\u23B4\",OverParenthesis:\"\\u23DC\",PartialD:\"\\u2202\",part:\"\\u2202\",Pcy:\"\\u041F\",Pfr:\"\\u{1D513}\",Phi:\"\\u03A6\",Pi:\"\\u03A0\",PlusMinus:\"\\xB1\",plusmn:\"\\xB1\",pm:\"\\xB1\",Popf:\"\\u2119\",primes:\"\\u2119\",Pr:\"\\u2ABB\",Precedes:\"\\u227A\",pr:\"\\u227A\",prec:\"\\u227A\",PrecedesEqual:\"\\u2AAF\",pre:\"\\u2AAF\",preceq:\"\\u2AAF\",PrecedesSlantEqual:\"\\u227C\",prcue:\"\\u227C\",preccurlyeq:\"\\u227C\",PrecedesTilde:\"\\u227E\",precsim:\"\\u227E\",prsim:\"\\u227E\",Prime:\"\\u2033\",Product:\"\\u220F\",prod:\"\\u220F\",Proportional:\"\\u221D\",prop:\"\\u221D\",propto:\"\\u221D\",varpropto:\"\\u221D\",vprop:\"\\u221D\",Pscr:\"\\u{1D4AB}\",Psi:\"\\u03A8\",QUOT:'\"',quot:'\"',Qfr:\"\\u{1D514}\",Qopf:\"\\u211A\",rationals:\"\\u211A\",Qscr:\"\\u{1D4AC}\",RBarr:\"\\u2910\",drbkarow:\"\\u2910\",REG:\"\\xAE\",circledR:\"\\xAE\",reg:\"\\xAE\",Racute:\"\\u0154\",Rang:\"\\u27EB\",Rarr:\"\\u21A0\",twoheadrightarrow:\"\\u21A0\",Rarrtl:\"\\u2916\",Rcaron:\"\\u0158\",Rcedil:\"\\u0156\",Rcy:\"\\u0420\",Re:\"\\u211C\",Rfr:\"\\u211C\",real:\"\\u211C\",realpart:\"\\u211C\",ReverseElement:\"\\u220B\",SuchThat:\"\\u220B\",ni:\"\\u220B\",niv:\"\\u220B\",ReverseEquilibrium:\"\\u21CB\",leftrightharpoons:\"\\u21CB\",lrhar:\"\\u21CB\",ReverseUpEquilibrium:\"\\u296F\",duhar:\"\\u296F\",Rho:\"\\u03A1\",RightAngleBracket:\"\\u27E9\",rang:\"\\u27E9\",rangle:\"\\u27E9\",RightArrow:\"\\u2192\",ShortRightArrow:\"\\u2192\",rarr:\"\\u2192\",rightarrow:\"\\u2192\",srarr:\"\\u2192\",RightArrowBar:\"\\u21E5\",rarrb:\"\\u21E5\",RightArrowLeftArrow:\"\\u21C4\",rightleftarrows:\"\\u21C4\",rlarr:\"\\u21C4\",RightCeiling:\"\\u2309\",rceil:\"\\u2309\",RightDoubleBracket:\"\\u27E7\",robrk:\"\\u27E7\",RightDownTeeVector:\"\\u295D\",RightDownVector:\"\\u21C2\",dharr:\"\\u21C2\",downharpoonright:\"\\u21C2\",RightDownVectorBar:\"\\u2955\",RightFloor:\"\\u230B\",rfloor:\"\\u230B\",RightTee:\"\\u22A2\",vdash:\"\\u22A2\",RightTeeArrow:\"\\u21A6\",map:\"\\u21A6\",mapsto:\"\\u21A6\",RightTeeVector:\"\\u295B\",RightTriangle:\"\\u22B3\",vartriangleright:\"\\u22B3\",vrtri:\"\\u22B3\",RightTriangleBar:\"\\u29D0\",RightTriangleEqual:\"\\u22B5\",rtrie:\"\\u22B5\",trianglerighteq:\"\\u22B5\",RightUpDownVector:\"\\u294F\",RightUpTeeVector:\"\\u295C\",RightUpVector:\"\\u21BE\",uharr:\"\\u21BE\",upharpoonright:\"\\u21BE\",RightUpVectorBar:\"\\u2954\",RightVector:\"\\u21C0\",rharu:\"\\u21C0\",rightharpoonup:\"\\u21C0\",RightVectorBar:\"\\u2953\",Ropf:\"\\u211D\",reals:\"\\u211D\",RoundImplies:\"\\u2970\",Rrightarrow:\"\\u21DB\",rAarr:\"\\u21DB\",Rscr:\"\\u211B\",realine:\"\\u211B\",Rsh:\"\\u21B1\",rsh:\"\\u21B1\",RuleDelayed:\"\\u29F4\",SHCHcy:\"\\u0429\",SHcy:\"\\u0428\",SOFTcy:\"\\u042C\",Sacute:\"\\u015A\",Sc:\"\\u2ABC\",Scaron:\"\\u0160\",Scedil:\"\\u015E\",Scirc:\"\\u015C\",Scy:\"\\u0421\",Sfr:\"\\u{1D516}\",ShortUpArrow:\"\\u2191\",UpArrow:\"\\u2191\",uarr:\"\\u2191\",uparrow:\"\\u2191\",Sigma:\"\\u03A3\",SmallCircle:\"\\u2218\",compfn:\"\\u2218\",Sopf:\"\\u{1D54A}\",Sqrt:\"\\u221A\",radic:\"\\u221A\",Square:\"\\u25A1\",squ:\"\\u25A1\",square:\"\\u25A1\",SquareIntersection:\"\\u2293\",sqcap:\"\\u2293\",SquareSubset:\"\\u228F\",sqsub:\"\\u228F\",sqsubset:\"\\u228F\",SquareSubsetEqual:\"\\u2291\",sqsube:\"\\u2291\",sqsubseteq:\"\\u2291\",SquareSuperset:\"\\u2290\",sqsup:\"\\u2290\",sqsupset:\"\\u2290\",SquareSupersetEqual:\"\\u2292\",sqsupe:\"\\u2292\",sqsupseteq:\"\\u2292\",SquareUnion:\"\\u2294\",sqcup:\"\\u2294\",Sscr:\"\\u{1D4AE}\",Star:\"\\u22C6\",sstarf:\"\\u22C6\",Sub:\"\\u22D0\",Subset:\"\\u22D0\",SubsetEqual:\"\\u2286\",sube:\"\\u2286\",subseteq:\"\\u2286\",Succeeds:\"\\u227B\",sc:\"\\u227B\",succ:\"\\u227B\",SucceedsEqual:\"\\u2AB0\",sce:\"\\u2AB0\",succeq:\"\\u2AB0\",SucceedsSlantEqual:\"\\u227D\",sccue:\"\\u227D\",succcurlyeq:\"\\u227D\",SucceedsTilde:\"\\u227F\",scsim:\"\\u227F\",succsim:\"\\u227F\",Sum:\"\\u2211\",sum:\"\\u2211\",Sup:\"\\u22D1\",Supset:\"\\u22D1\",Superset:\"\\u2283\",sup:\"\\u2283\",supset:\"\\u2283\",SupersetEqual:\"\\u2287\",supe:\"\\u2287\",supseteq:\"\\u2287\",THORN:\"\\xDE\",TRADE:\"\\u2122\",trade:\"\\u2122\",TSHcy:\"\\u040B\",TScy:\"\\u0426\",Tab:\"\t\",Tau:\"\\u03A4\",Tcaron:\"\\u0164\",Tcedil:\"\\u0162\",Tcy:\"\\u0422\",Tfr:\"\\u{1D517}\",Therefore:\"\\u2234\",there4:\"\\u2234\",therefore:\"\\u2234\",Theta:\"\\u0398\",ThickSpace:\"\\u205F\\u200A\",ThinSpace:\"\\u2009\",thinsp:\"\\u2009\",Tilde:\"\\u223C\",sim:\"\\u223C\",thicksim:\"\\u223C\",thksim:\"\\u223C\",TildeEqual:\"\\u2243\",sime:\"\\u2243\",simeq:\"\\u2243\",TildeFullEqual:\"\\u2245\",cong:\"\\u2245\",TildeTilde:\"\\u2248\",ap:\"\\u2248\",approx:\"\\u2248\",asymp:\"\\u2248\",thickapprox:\"\\u2248\",thkap:\"\\u2248\",Topf:\"\\u{1D54B}\",TripleDot:\"\\u20DB\",tdot:\"\\u20DB\",Tscr:\"\\u{1D4AF}\",Tstrok:\"\\u0166\",Uacute:\"\\xDA\",Uarr:\"\\u219F\",Uarrocir:\"\\u2949\",Ubrcy:\"\\u040E\",Ubreve:\"\\u016C\",Ucirc:\"\\xDB\",Ucy:\"\\u0423\",Udblac:\"\\u0170\",Ufr:\"\\u{1D518}\",Ugrave:\"\\xD9\",Umacr:\"\\u016A\",UnderBar:\"_\",lowbar:\"_\",UnderBrace:\"\\u23DF\",UnderBracket:\"\\u23B5\",bbrk:\"\\u23B5\",UnderParenthesis:\"\\u23DD\",Union:\"\\u22C3\",bigcup:\"\\u22C3\",xcup:\"\\u22C3\",UnionPlus:\"\\u228E\",uplus:\"\\u228E\",Uogon:\"\\u0172\",Uopf:\"\\u{1D54C}\",UpArrowBar:\"\\u2912\",UpArrowDownArrow:\"\\u21C5\",udarr:\"\\u21C5\",UpDownArrow:\"\\u2195\",updownarrow:\"\\u2195\",varr:\"\\u2195\",UpEquilibrium:\"\\u296E\",udhar:\"\\u296E\",UpTee:\"\\u22A5\",bot:\"\\u22A5\",bottom:\"\\u22A5\",perp:\"\\u22A5\",UpTeeArrow:\"\\u21A5\",mapstoup:\"\\u21A5\",UpperLeftArrow:\"\\u2196\",nwarr:\"\\u2196\",nwarrow:\"\\u2196\",UpperRightArrow:\"\\u2197\",nearr:\"\\u2197\",nearrow:\"\\u2197\",Upsi:\"\\u03D2\",upsih:\"\\u03D2\",Upsilon:\"\\u03A5\",Uring:\"\\u016E\",Uscr:\"\\u{1D4B0}\",Utilde:\"\\u0168\",Uuml:\"\\xDC\",VDash:\"\\u22AB\",Vbar:\"\\u2AEB\",Vcy:\"\\u0412\",Vdash:\"\\u22A9\",Vdashl:\"\\u2AE6\",Vee:\"\\u22C1\",bigvee:\"\\u22C1\",xvee:\"\\u22C1\",Verbar:\"\\u2016\",Vert:\"\\u2016\",VerticalBar:\"\\u2223\",mid:\"\\u2223\",shortmid:\"\\u2223\",smid:\"\\u2223\",VerticalLine:\"|\",verbar:\"|\",vert:\"|\",VerticalSeparator:\"\\u2758\",VerticalTilde:\"\\u2240\",wr:\"\\u2240\",wreath:\"\\u2240\",VeryThinSpace:\"\\u200A\",hairsp:\"\\u200A\",Vfr:\"\\u{1D519}\",Vopf:\"\\u{1D54D}\",Vscr:\"\\u{1D4B1}\",Vvdash:\"\\u22AA\",Wcirc:\"\\u0174\",Wedge:\"\\u22C0\",bigwedge:\"\\u22C0\",xwedge:\"\\u22C0\",Wfr:\"\\u{1D51A}\",Wopf:\"\\u{1D54E}\",Wscr:\"\\u{1D4B2}\",Xfr:\"\\u{1D51B}\",Xi:\"\\u039E\",Xopf:\"\\u{1D54F}\",Xscr:\"\\u{1D4B3}\",YAcy:\"\\u042F\",YIcy:\"\\u0407\",YUcy:\"\\u042E\",Yacute:\"\\xDD\",Ycirc:\"\\u0176\",Ycy:\"\\u042B\",Yfr:\"\\u{1D51C}\",Yopf:\"\\u{1D550}\",Yscr:\"\\u{1D4B4}\",Yuml:\"\\u0178\",ZHcy:\"\\u0416\",Zacute:\"\\u0179\",Zcaron:\"\\u017D\",Zcy:\"\\u0417\",Zdot:\"\\u017B\",Zeta:\"\\u0396\",Zfr:\"\\u2128\",zeetrf:\"\\u2128\",Zopf:\"\\u2124\",integers:\"\\u2124\",Zscr:\"\\u{1D4B5}\",aacute:\"\\xE1\",abreve:\"\\u0103\",ac:\"\\u223E\",mstpos:\"\\u223E\",acE:\"\\u223E\\u0333\",acd:\"\\u223F\",acirc:\"\\xE2\",acy:\"\\u0430\",aelig:\"\\xE6\",afr:\"\\u{1D51E}\",agrave:\"\\xE0\",alefsym:\"\\u2135\",aleph:\"\\u2135\",alpha:\"\\u03B1\",amacr:\"\\u0101\",amalg:\"\\u2A3F\",and:\"\\u2227\",wedge:\"\\u2227\",andand:\"\\u2A55\",andd:\"\\u2A5C\",andslope:\"\\u2A58\",andv:\"\\u2A5A\",ang:\"\\u2220\",angle:\"\\u2220\",ange:\"\\u29A4\",angmsd:\"\\u2221\",measuredangle:\"\\u2221\",angmsdaa:\"\\u29A8\",angmsdab:\"\\u29A9\",angmsdac:\"\\u29AA\",angmsdad:\"\\u29AB\",angmsdae:\"\\u29AC\",angmsdaf:\"\\u29AD\",angmsdag:\"\\u29AE\",angmsdah:\"\\u29AF\",angrt:\"\\u221F\",angrtvb:\"\\u22BE\",angrtvbd:\"\\u299D\",angsph:\"\\u2222\",angzarr:\"\\u237C\",aogon:\"\\u0105\",aopf:\"\\u{1D552}\",apE:\"\\u2A70\",apacir:\"\\u2A6F\",ape:\"\\u224A\",approxeq:\"\\u224A\",apid:\"\\u224B\",apos:\"'\",aring:\"\\xE5\",ascr:\"\\u{1D4B6}\",ast:\"*\",midast:\"*\",atilde:\"\\xE3\",auml:\"\\xE4\",awint:\"\\u2A11\",bNot:\"\\u2AED\",backcong:\"\\u224C\",bcong:\"\\u224C\",backepsilon:\"\\u03F6\",bepsi:\"\\u03F6\",backprime:\"\\u2035\",bprime:\"\\u2035\",backsim:\"\\u223D\",bsim:\"\\u223D\",backsimeq:\"\\u22CD\",bsime:\"\\u22CD\",barvee:\"\\u22BD\",barwed:\"\\u2305\",barwedge:\"\\u2305\",bbrktbrk:\"\\u23B6\",bcy:\"\\u0431\",bdquo:\"\\u201E\",ldquor:\"\\u201E\",bemptyv:\"\\u29B0\",beta:\"\\u03B2\",beth:\"\\u2136\",between:\"\\u226C\",twixt:\"\\u226C\",bfr:\"\\u{1D51F}\",bigcirc:\"\\u25EF\",xcirc:\"\\u25EF\",bigodot:\"\\u2A00\",xodot:\"\\u2A00\",bigoplus:\"\\u2A01\",xoplus:\"\\u2A01\",bigotimes:\"\\u2A02\",xotime:\"\\u2A02\",bigsqcup:\"\\u2A06\",xsqcup:\"\\u2A06\",bigstar:\"\\u2605\",starf:\"\\u2605\",bigtriangledown:\"\\u25BD\",xdtri:\"\\u25BD\",bigtriangleup:\"\\u25B3\",xutri:\"\\u25B3\",biguplus:\"\\u2A04\",xuplus:\"\\u2A04\",bkarow:\"\\u290D\",rbarr:\"\\u290D\",blacklozenge:\"\\u29EB\",lozf:\"\\u29EB\",blacktriangle:\"\\u25B4\",utrif:\"\\u25B4\",blacktriangledown:\"\\u25BE\",dtrif:\"\\u25BE\",blacktriangleleft:\"\\u25C2\",ltrif:\"\\u25C2\",blacktriangleright:\"\\u25B8\",rtrif:\"\\u25B8\",blank:\"\\u2423\",blk12:\"\\u2592\",blk14:\"\\u2591\",blk34:\"\\u2593\",block:\"\\u2588\",bne:\"=\\u20E5\",bnequiv:\"\\u2261\\u20E5\",bnot:\"\\u2310\",bopf:\"\\u{1D553}\",bowtie:\"\\u22C8\",boxDL:\"\\u2557\",boxDR:\"\\u2554\",boxDl:\"\\u2556\",boxDr:\"\\u2553\",boxH:\"\\u2550\",boxHD:\"\\u2566\",boxHU:\"\\u2569\",boxHd:\"\\u2564\",boxHu:\"\\u2567\",boxUL:\"\\u255D\",boxUR:\"\\u255A\",boxUl:\"\\u255C\",boxUr:\"\\u2559\",boxV:\"\\u2551\",boxVH:\"\\u256C\",boxVL:\"\\u2563\",boxVR:\"\\u2560\",boxVh:\"\\u256B\",boxVl:\"\\u2562\",boxVr:\"\\u255F\",boxbox:\"\\u29C9\",boxdL:\"\\u2555\",boxdR:\"\\u2552\",boxdl:\"\\u2510\",boxdr:\"\\u250C\",boxhD:\"\\u2565\",boxhU:\"\\u2568\",boxhd:\"\\u252C\",boxhu:\"\\u2534\",boxminus:\"\\u229F\",minusb:\"\\u229F\",boxplus:\"\\u229E\",plusb:\"\\u229E\",boxtimes:\"\\u22A0\",timesb:\"\\u22A0\",boxuL:\"\\u255B\",boxuR:\"\\u2558\",boxul:\"\\u2518\",boxur:\"\\u2514\",boxv:\"\\u2502\",boxvH:\"\\u256A\",boxvL:\"\\u2561\",boxvR:\"\\u255E\",boxvh:\"\\u253C\",boxvl:\"\\u2524\",boxvr:\"\\u251C\",brvbar:\"\\xA6\",bscr:\"\\u{1D4B7}\",bsemi:\"\\u204F\",bsol:\"\\\\\",bsolb:\"\\u29C5\",bsolhsub:\"\\u27C8\",bull:\"\\u2022\",bullet:\"\\u2022\",bumpE:\"\\u2AAE\",cacute:\"\\u0107\",cap:\"\\u2229\",capand:\"\\u2A44\",capbrcup:\"\\u2A49\",capcap:\"\\u2A4B\",capcup:\"\\u2A47\",capdot:\"\\u2A40\",caps:\"\\u2229\\uFE00\",caret:\"\\u2041\",ccaps:\"\\u2A4D\",ccaron:\"\\u010D\",ccedil:\"\\xE7\",ccirc:\"\\u0109\",ccups:\"\\u2A4C\",ccupssm:\"\\u2A50\",cdot:\"\\u010B\",cemptyv:\"\\u29B2\",cent:\"\\xA2\",cfr:\"\\u{1D520}\",chcy:\"\\u0447\",check:\"\\u2713\",checkmark:\"\\u2713\",chi:\"\\u03C7\",cir:\"\\u25CB\",cirE:\"\\u29C3\",circ:\"\\u02C6\",circeq:\"\\u2257\",cire:\"\\u2257\",circlearrowleft:\"\\u21BA\",olarr:\"\\u21BA\",circlearrowright:\"\\u21BB\",orarr:\"\\u21BB\",circledS:\"\\u24C8\",oS:\"\\u24C8\",circledast:\"\\u229B\",oast:\"\\u229B\",circledcirc:\"\\u229A\",ocir:\"\\u229A\",circleddash:\"\\u229D\",odash:\"\\u229D\",cirfnint:\"\\u2A10\",cirmid:\"\\u2AEF\",cirscir:\"\\u29C2\",clubs:\"\\u2663\",clubsuit:\"\\u2663\",colon:\":\",comma:\",\",commat:\"@\",comp:\"\\u2201\",complement:\"\\u2201\",congdot:\"\\u2A6D\",copf:\"\\u{1D554}\",copysr:\"\\u2117\",crarr:\"\\u21B5\",cross:\"\\u2717\",cscr:\"\\u{1D4B8}\",csub:\"\\u2ACF\",csube:\"\\u2AD1\",csup:\"\\u2AD0\",csupe:\"\\u2AD2\",ctdot:\"\\u22EF\",cudarrl:\"\\u2938\",cudarrr:\"\\u2935\",cuepr:\"\\u22DE\",curlyeqprec:\"\\u22DE\",cuesc:\"\\u22DF\",curlyeqsucc:\"\\u22DF\",cularr:\"\\u21B6\",curvearrowleft:\"\\u21B6\",cularrp:\"\\u293D\",cup:\"\\u222A\",cupbrcap:\"\\u2A48\",cupcap:\"\\u2A46\",cupcup:\"\\u2A4A\",cupdot:\"\\u228D\",cupor:\"\\u2A45\",cups:\"\\u222A\\uFE00\",curarr:\"\\u21B7\",curvearrowright:\"\\u21B7\",curarrm:\"\\u293C\",curlyvee:\"\\u22CE\",cuvee:\"\\u22CE\",curlywedge:\"\\u22CF\",cuwed:\"\\u22CF\",curren:\"\\xA4\",cwint:\"\\u2231\",cylcty:\"\\u232D\",dHar:\"\\u2965\",dagger:\"\\u2020\",daleth:\"\\u2138\",dash:\"\\u2010\",hyphen:\"\\u2010\",dbkarow:\"\\u290F\",rBarr:\"\\u290F\",dcaron:\"\\u010F\",dcy:\"\\u0434\",ddarr:\"\\u21CA\",downdownarrows:\"\\u21CA\",ddotseq:\"\\u2A77\",eDDot:\"\\u2A77\",deg:\"\\xB0\",delta:\"\\u03B4\",demptyv:\"\\u29B1\",dfisht:\"\\u297F\",dfr:\"\\u{1D521}\",diamondsuit:\"\\u2666\",diams:\"\\u2666\",digamma:\"\\u03DD\",gammad:\"\\u03DD\",disin:\"\\u22F2\",div:\"\\xF7\",divide:\"\\xF7\",divideontimes:\"\\u22C7\",divonx:\"\\u22C7\",djcy:\"\\u0452\",dlcorn:\"\\u231E\",llcorner:\"\\u231E\",dlcrop:\"\\u230D\",dollar:\"$\",dopf:\"\\u{1D555}\",doteqdot:\"\\u2251\",eDot:\"\\u2251\",dotminus:\"\\u2238\",minusd:\"\\u2238\",dotplus:\"\\u2214\",plusdo:\"\\u2214\",dotsquare:\"\\u22A1\",sdotb:\"\\u22A1\",drcorn:\"\\u231F\",lrcorner:\"\\u231F\",drcrop:\"\\u230C\",dscr:\"\\u{1D4B9}\",dscy:\"\\u0455\",dsol:\"\\u29F6\",dstrok:\"\\u0111\",dtdot:\"\\u22F1\",dtri:\"\\u25BF\",triangledown:\"\\u25BF\",dwangle:\"\\u29A6\",dzcy:\"\\u045F\",dzigrarr:\"\\u27FF\",eacute:\"\\xE9\",easter:\"\\u2A6E\",ecaron:\"\\u011B\",ecir:\"\\u2256\",eqcirc:\"\\u2256\",ecirc:\"\\xEA\",ecolon:\"\\u2255\",eqcolon:\"\\u2255\",ecy:\"\\u044D\",edot:\"\\u0117\",efDot:\"\\u2252\",fallingdotseq:\"\\u2252\",efr:\"\\u{1D522}\",eg:\"\\u2A9A\",egrave:\"\\xE8\",egs:\"\\u2A96\",eqslantgtr:\"\\u2A96\",egsdot:\"\\u2A98\",el:\"\\u2A99\",elinters:\"\\u23E7\",ell:\"\\u2113\",els:\"\\u2A95\",eqslantless:\"\\u2A95\",elsdot:\"\\u2A97\",emacr:\"\\u0113\",empty:\"\\u2205\",emptyset:\"\\u2205\",emptyv:\"\\u2205\",varnothing:\"\\u2205\",emsp13:\"\\u2004\",emsp14:\"\\u2005\",emsp:\"\\u2003\",eng:\"\\u014B\",ensp:\"\\u2002\",eogon:\"\\u0119\",eopf:\"\\u{1D556}\",epar:\"\\u22D5\",eparsl:\"\\u29E3\",eplus:\"\\u2A71\",epsi:\"\\u03B5\",epsilon:\"\\u03B5\",epsiv:\"\\u03F5\",straightepsilon:\"\\u03F5\",varepsilon:\"\\u03F5\",equals:\"=\",equest:\"\\u225F\",questeq:\"\\u225F\",equivDD:\"\\u2A78\",eqvparsl:\"\\u29E5\",erDot:\"\\u2253\",risingdotseq:\"\\u2253\",erarr:\"\\u2971\",escr:\"\\u212F\",eta:\"\\u03B7\",eth:\"\\xF0\",euml:\"\\xEB\",euro:\"\\u20AC\",excl:\"!\",fcy:\"\\u0444\",female:\"\\u2640\",ffilig:\"\\uFB03\",fflig:\"\\uFB00\",ffllig:\"\\uFB04\",ffr:\"\\u{1D523}\",filig:\"\\uFB01\",fjlig:\"fj\",flat:\"\\u266D\",fllig:\"\\uFB02\",fltns:\"\\u25B1\",fnof:\"\\u0192\",fopf:\"\\u{1D557}\",fork:\"\\u22D4\",pitchfork:\"\\u22D4\",forkv:\"\\u2AD9\",fpartint:\"\\u2A0D\",frac12:\"\\xBD\",half:\"\\xBD\",frac13:\"\\u2153\",frac14:\"\\xBC\",frac15:\"\\u2155\",frac16:\"\\u2159\",frac18:\"\\u215B\",frac23:\"\\u2154\",frac25:\"\\u2156\",frac34:\"\\xBE\",frac35:\"\\u2157\",frac38:\"\\u215C\",frac45:\"\\u2158\",frac56:\"\\u215A\",frac58:\"\\u215D\",frac78:\"\\u215E\",frasl:\"\\u2044\",frown:\"\\u2322\",sfrown:\"\\u2322\",fscr:\"\\u{1D4BB}\",gEl:\"\\u2A8C\",gtreqqless:\"\\u2A8C\",gacute:\"\\u01F5\",gamma:\"\\u03B3\",gap:\"\\u2A86\",gtrapprox:\"\\u2A86\",gbreve:\"\\u011F\",gcirc:\"\\u011D\",gcy:\"\\u0433\",gdot:\"\\u0121\",gescc:\"\\u2AA9\",gesdot:\"\\u2A80\",gesdoto:\"\\u2A82\",gesdotol:\"\\u2A84\",gesl:\"\\u22DB\\uFE00\",gesles:\"\\u2A94\",gfr:\"\\u{1D524}\",gimel:\"\\u2137\",gjcy:\"\\u0453\",glE:\"\\u2A92\",gla:\"\\u2AA5\",glj:\"\\u2AA4\",gnE:\"\\u2269\",gneqq:\"\\u2269\",gnap:\"\\u2A8A\",gnapprox:\"\\u2A8A\",gne:\"\\u2A88\",gneq:\"\\u2A88\",gnsim:\"\\u22E7\",gopf:\"\\u{1D558}\",gscr:\"\\u210A\",gsime:\"\\u2A8E\",gsiml:\"\\u2A90\",gtcc:\"\\u2AA7\",gtcir:\"\\u2A7A\",gtdot:\"\\u22D7\",gtrdot:\"\\u22D7\",gtlPar:\"\\u2995\",gtquest:\"\\u2A7C\",gtrarr:\"\\u2978\",gvertneqq:\"\\u2269\\uFE00\",gvnE:\"\\u2269\\uFE00\",hardcy:\"\\u044A\",harrcir:\"\\u2948\",harrw:\"\\u21AD\",leftrightsquigarrow:\"\\u21AD\",hbar:\"\\u210F\",hslash:\"\\u210F\",planck:\"\\u210F\",plankv:\"\\u210F\",hcirc:\"\\u0125\",hearts:\"\\u2665\",heartsuit:\"\\u2665\",hellip:\"\\u2026\",mldr:\"\\u2026\",hercon:\"\\u22B9\",hfr:\"\\u{1D525}\",hksearow:\"\\u2925\",searhk:\"\\u2925\",hkswarow:\"\\u2926\",swarhk:\"\\u2926\",hoarr:\"\\u21FF\",homtht:\"\\u223B\",hookleftarrow:\"\\u21A9\",larrhk:\"\\u21A9\",hookrightarrow:\"\\u21AA\",rarrhk:\"\\u21AA\",hopf:\"\\u{1D559}\",horbar:\"\\u2015\",hscr:\"\\u{1D4BD}\",hstrok:\"\\u0127\",hybull:\"\\u2043\",iacute:\"\\xED\",icirc:\"\\xEE\",icy:\"\\u0438\",iecy:\"\\u0435\",iexcl:\"\\xA1\",ifr:\"\\u{1D526}\",igrave:\"\\xEC\",iiiint:\"\\u2A0C\",qint:\"\\u2A0C\",iiint:\"\\u222D\",tint:\"\\u222D\",iinfin:\"\\u29DC\",iiota:\"\\u2129\",ijlig:\"\\u0133\",imacr:\"\\u012B\",imath:\"\\u0131\",inodot:\"\\u0131\",imof:\"\\u22B7\",imped:\"\\u01B5\",incare:\"\\u2105\",infin:\"\\u221E\",infintie:\"\\u29DD\",intcal:\"\\u22BA\",intercal:\"\\u22BA\",intlarhk:\"\\u2A17\",intprod:\"\\u2A3C\",iprod:\"\\u2A3C\",iocy:\"\\u0451\",iogon:\"\\u012F\",iopf:\"\\u{1D55A}\",iota:\"\\u03B9\",iquest:\"\\xBF\",iscr:\"\\u{1D4BE}\",isinE:\"\\u22F9\",isindot:\"\\u22F5\",isins:\"\\u22F4\",isinsv:\"\\u22F3\",itilde:\"\\u0129\",iukcy:\"\\u0456\",iuml:\"\\xEF\",jcirc:\"\\u0135\",jcy:\"\\u0439\",jfr:\"\\u{1D527}\",jmath:\"\\u0237\",jopf:\"\\u{1D55B}\",jscr:\"\\u{1D4BF}\",jsercy:\"\\u0458\",jukcy:\"\\u0454\",kappa:\"\\u03BA\",kappav:\"\\u03F0\",varkappa:\"\\u03F0\",kcedil:\"\\u0137\",kcy:\"\\u043A\",kfr:\"\\u{1D528}\",kgreen:\"\\u0138\",khcy:\"\\u0445\",kjcy:\"\\u045C\",kopf:\"\\u{1D55C}\",kscr:\"\\u{1D4C0}\",lAtail:\"\\u291B\",lBarr:\"\\u290E\",lEg:\"\\u2A8B\",lesseqqgtr:\"\\u2A8B\",lHar:\"\\u2962\",lacute:\"\\u013A\",laemptyv:\"\\u29B4\",lambda:\"\\u03BB\",langd:\"\\u2991\",lap:\"\\u2A85\",lessapprox:\"\\u2A85\",laquo:\"\\xAB\",larrbfs:\"\\u291F\",larrfs:\"\\u291D\",larrlp:\"\\u21AB\",looparrowleft:\"\\u21AB\",larrpl:\"\\u2939\",larrsim:\"\\u2973\",larrtl:\"\\u21A2\",leftarrowtail:\"\\u21A2\",lat:\"\\u2AAB\",latail:\"\\u2919\",late:\"\\u2AAD\",lates:\"\\u2AAD\\uFE00\",lbarr:\"\\u290C\",lbbrk:\"\\u2772\",lbrace:\"{\",lcub:\"{\",lbrack:\"[\",lsqb:\"[\",lbrke:\"\\u298B\",lbrksld:\"\\u298F\",lbrkslu:\"\\u298D\",lcaron:\"\\u013E\",lcedil:\"\\u013C\",lcy:\"\\u043B\",ldca:\"\\u2936\",ldrdhar:\"\\u2967\",ldrushar:\"\\u294B\",ldsh:\"\\u21B2\",le:\"\\u2264\",leq:\"\\u2264\",leftleftarrows:\"\\u21C7\",llarr:\"\\u21C7\",leftthreetimes:\"\\u22CB\",lthree:\"\\u22CB\",lescc:\"\\u2AA8\",lesdot:\"\\u2A7F\",lesdoto:\"\\u2A81\",lesdotor:\"\\u2A83\",lesg:\"\\u22DA\\uFE00\",lesges:\"\\u2A93\",lessdot:\"\\u22D6\",ltdot:\"\\u22D6\",lfisht:\"\\u297C\",lfr:\"\\u{1D529}\",lgE:\"\\u2A91\",lharul:\"\\u296A\",lhblk:\"\\u2584\",ljcy:\"\\u0459\",llhard:\"\\u296B\",lltri:\"\\u25FA\",lmidot:\"\\u0140\",lmoust:\"\\u23B0\",lmoustache:\"\\u23B0\",lnE:\"\\u2268\",lneqq:\"\\u2268\",lnap:\"\\u2A89\",lnapprox:\"\\u2A89\",lne:\"\\u2A87\",lneq:\"\\u2A87\",lnsim:\"\\u22E6\",loang:\"\\u27EC\",loarr:\"\\u21FD\",longmapsto:\"\\u27FC\",xmap:\"\\u27FC\",looparrowright:\"\\u21AC\",rarrlp:\"\\u21AC\",lopar:\"\\u2985\",lopf:\"\\u{1D55D}\",loplus:\"\\u2A2D\",lotimes:\"\\u2A34\",lowast:\"\\u2217\",loz:\"\\u25CA\",lozenge:\"\\u25CA\",lpar:\"(\",lparlt:\"\\u2993\",lrhard:\"\\u296D\",lrm:\"\\u200E\",lrtri:\"\\u22BF\",lsaquo:\"\\u2039\",lscr:\"\\u{1D4C1}\",lsime:\"\\u2A8D\",lsimg:\"\\u2A8F\",lsquor:\"\\u201A\",sbquo:\"\\u201A\",lstrok:\"\\u0142\",ltcc:\"\\u2AA6\",ltcir:\"\\u2A79\",ltimes:\"\\u22C9\",ltlarr:\"\\u2976\",ltquest:\"\\u2A7B\",ltrPar:\"\\u2996\",ltri:\"\\u25C3\",triangleleft:\"\\u25C3\",lurdshar:\"\\u294A\",luruhar:\"\\u2966\",lvertneqq:\"\\u2268\\uFE00\",lvnE:\"\\u2268\\uFE00\",mDDot:\"\\u223A\",macr:\"\\xAF\",strns:\"\\xAF\",male:\"\\u2642\",malt:\"\\u2720\",maltese:\"\\u2720\",marker:\"\\u25AE\",mcomma:\"\\u2A29\",mcy:\"\\u043C\",mdash:\"\\u2014\",mfr:\"\\u{1D52A}\",mho:\"\\u2127\",micro:\"\\xB5\",midcir:\"\\u2AF0\",minus:\"\\u2212\",minusdu:\"\\u2A2A\",mlcp:\"\\u2ADB\",models:\"\\u22A7\",mopf:\"\\u{1D55E}\",mscr:\"\\u{1D4C2}\",mu:\"\\u03BC\",multimap:\"\\u22B8\",mumap:\"\\u22B8\",nGg:\"\\u22D9\\u0338\",nGt:\"\\u226B\\u20D2\",nLeftarrow:\"\\u21CD\",nlArr:\"\\u21CD\",nLeftrightarrow:\"\\u21CE\",nhArr:\"\\u21CE\",nLl:\"\\u22D8\\u0338\",nLt:\"\\u226A\\u20D2\",nRightarrow:\"\\u21CF\",nrArr:\"\\u21CF\",nVDash:\"\\u22AF\",nVdash:\"\\u22AE\",nacute:\"\\u0144\",nang:\"\\u2220\\u20D2\",napE:\"\\u2A70\\u0338\",napid:\"\\u224B\\u0338\",napos:\"\\u0149\",natur:\"\\u266E\",natural:\"\\u266E\",ncap:\"\\u2A43\",ncaron:\"\\u0148\",ncedil:\"\\u0146\",ncongdot:\"\\u2A6D\\u0338\",ncup:\"\\u2A42\",ncy:\"\\u043D\",ndash:\"\\u2013\",neArr:\"\\u21D7\",nearhk:\"\\u2924\",nedot:\"\\u2250\\u0338\",nesear:\"\\u2928\",toea:\"\\u2928\",nfr:\"\\u{1D52B}\",nharr:\"\\u21AE\",nleftrightarrow:\"\\u21AE\",nhpar:\"\\u2AF2\",nis:\"\\u22FC\",nisd:\"\\u22FA\",njcy:\"\\u045A\",nlE:\"\\u2266\\u0338\",nleqq:\"\\u2266\\u0338\",nlarr:\"\\u219A\",nleftarrow:\"\\u219A\",nldr:\"\\u2025\",nopf:\"\\u{1D55F}\",not:\"\\xAC\",notinE:\"\\u22F9\\u0338\",notindot:\"\\u22F5\\u0338\",notinvb:\"\\u22F7\",notinvc:\"\\u22F6\",notnivb:\"\\u22FE\",notnivc:\"\\u22FD\",nparsl:\"\\u2AFD\\u20E5\",npart:\"\\u2202\\u0338\",npolint:\"\\u2A14\",nrarr:\"\\u219B\",nrightarrow:\"\\u219B\",nrarrc:\"\\u2933\\u0338\",nrarrw:\"\\u219D\\u0338\",nscr:\"\\u{1D4C3}\",nsub:\"\\u2284\",nsubE:\"\\u2AC5\\u0338\",nsubseteqq:\"\\u2AC5\\u0338\",nsup:\"\\u2285\",nsupE:\"\\u2AC6\\u0338\",nsupseteqq:\"\\u2AC6\\u0338\",ntilde:\"\\xF1\",nu:\"\\u03BD\",num:\"#\",numero:\"\\u2116\",numsp:\"\\u2007\",nvDash:\"\\u22AD\",nvHarr:\"\\u2904\",nvap:\"\\u224D\\u20D2\",nvdash:\"\\u22AC\",nvge:\"\\u2265\\u20D2\",nvgt:\">\\u20D2\",nvinfin:\"\\u29DE\",nvlArr:\"\\u2902\",nvle:\"\\u2264\\u20D2\",nvlt:\"<\\u20D2\",nvltrie:\"\\u22B4\\u20D2\",nvrArr:\"\\u2903\",nvrtrie:\"\\u22B5\\u20D2\",nvsim:\"\\u223C\\u20D2\",nwArr:\"\\u21D6\",nwarhk:\"\\u2923\",nwnear:\"\\u2927\",oacute:\"\\xF3\",ocirc:\"\\xF4\",ocy:\"\\u043E\",odblac:\"\\u0151\",odiv:\"\\u2A38\",odsold:\"\\u29BC\",oelig:\"\\u0153\",ofcir:\"\\u29BF\",ofr:\"\\u{1D52C}\",ogon:\"\\u02DB\",ograve:\"\\xF2\",ogt:\"\\u29C1\",ohbar:\"\\u29B5\",olcir:\"\\u29BE\",olcross:\"\\u29BB\",olt:\"\\u29C0\",omacr:\"\\u014D\",omega:\"\\u03C9\",omicron:\"\\u03BF\",omid:\"\\u29B6\",oopf:\"\\u{1D560}\",opar:\"\\u29B7\",operp:\"\\u29B9\",or:\"\\u2228\",vee:\"\\u2228\",ord:\"\\u2A5D\",order:\"\\u2134\",orderof:\"\\u2134\",oscr:\"\\u2134\",ordf:\"\\xAA\",ordm:\"\\xBA\",origof:\"\\u22B6\",oror:\"\\u2A56\",orslope:\"\\u2A57\",orv:\"\\u2A5B\",oslash:\"\\xF8\",osol:\"\\u2298\",otilde:\"\\xF5\",otimesas:\"\\u2A36\",ouml:\"\\xF6\",ovbar:\"\\u233D\",para:\"\\xB6\",parsim:\"\\u2AF3\",parsl:\"\\u2AFD\",pcy:\"\\u043F\",percnt:\"%\",period:\".\",permil:\"\\u2030\",pertenk:\"\\u2031\",pfr:\"\\u{1D52D}\",phi:\"\\u03C6\",phiv:\"\\u03D5\",straightphi:\"\\u03D5\",varphi:\"\\u03D5\",phone:\"\\u260E\",pi:\"\\u03C0\",piv:\"\\u03D6\",varpi:\"\\u03D6\",planckh:\"\\u210E\",plus:\"+\",plusacir:\"\\u2A23\",pluscir:\"\\u2A22\",plusdu:\"\\u2A25\",pluse:\"\\u2A72\",plussim:\"\\u2A26\",plustwo:\"\\u2A27\",pointint:\"\\u2A15\",popf:\"\\u{1D561}\",pound:\"\\xA3\",prE:\"\\u2AB3\",prap:\"\\u2AB7\",precapprox:\"\\u2AB7\",precnapprox:\"\\u2AB9\",prnap:\"\\u2AB9\",precneqq:\"\\u2AB5\",prnE:\"\\u2AB5\",precnsim:\"\\u22E8\",prnsim:\"\\u22E8\",prime:\"\\u2032\",profalar:\"\\u232E\",profline:\"\\u2312\",profsurf:\"\\u2313\",prurel:\"\\u22B0\",pscr:\"\\u{1D4C5}\",psi:\"\\u03C8\",puncsp:\"\\u2008\",qfr:\"\\u{1D52E}\",qopf:\"\\u{1D562}\",qprime:\"\\u2057\",qscr:\"\\u{1D4C6}\",quatint:\"\\u2A16\",quest:\"?\",rAtail:\"\\u291C\",rHar:\"\\u2964\",race:\"\\u223D\\u0331\",racute:\"\\u0155\",raemptyv:\"\\u29B3\",rangd:\"\\u2992\",range:\"\\u29A5\",raquo:\"\\xBB\",rarrap:\"\\u2975\",rarrbfs:\"\\u2920\",rarrc:\"\\u2933\",rarrfs:\"\\u291E\",rarrpl:\"\\u2945\",rarrsim:\"\\u2974\",rarrtl:\"\\u21A3\",rightarrowtail:\"\\u21A3\",rarrw:\"\\u219D\",rightsquigarrow:\"\\u219D\",ratail:\"\\u291A\",ratio:\"\\u2236\",rbbrk:\"\\u2773\",rbrace:\"}\",rcub:\"}\",rbrack:\"]\",rsqb:\"]\",rbrke:\"\\u298C\",rbrksld:\"\\u298E\",rbrkslu:\"\\u2990\",rcaron:\"\\u0159\",rcedil:\"\\u0157\",rcy:\"\\u0440\",rdca:\"\\u2937\",rdldhar:\"\\u2969\",rdsh:\"\\u21B3\",rect:\"\\u25AD\",rfisht:\"\\u297D\",rfr:\"\\u{1D52F}\",rharul:\"\\u296C\",rho:\"\\u03C1\",rhov:\"\\u03F1\",varrho:\"\\u03F1\",rightrightarrows:\"\\u21C9\",rrarr:\"\\u21C9\",rightthreetimes:\"\\u22CC\",rthree:\"\\u22CC\",ring:\"\\u02DA\",rlm:\"\\u200F\",rmoust:\"\\u23B1\",rmoustache:\"\\u23B1\",rnmid:\"\\u2AEE\",roang:\"\\u27ED\",roarr:\"\\u21FE\",ropar:\"\\u2986\",ropf:\"\\u{1D563}\",roplus:\"\\u2A2E\",rotimes:\"\\u2A35\",rpar:\")\",rpargt:\"\\u2994\",rppolint:\"\\u2A12\",rsaquo:\"\\u203A\",rscr:\"\\u{1D4C7}\",rtimes:\"\\u22CA\",rtri:\"\\u25B9\",triangleright:\"\\u25B9\",rtriltri:\"\\u29CE\",ruluhar:\"\\u2968\",rx:\"\\u211E\",sacute:\"\\u015B\",scE:\"\\u2AB4\",scap:\"\\u2AB8\",succapprox:\"\\u2AB8\",scaron:\"\\u0161\",scedil:\"\\u015F\",scirc:\"\\u015D\",scnE:\"\\u2AB6\",succneqq:\"\\u2AB6\",scnap:\"\\u2ABA\",succnapprox:\"\\u2ABA\",scnsim:\"\\u22E9\",succnsim:\"\\u22E9\",scpolint:\"\\u2A13\",scy:\"\\u0441\",sdot:\"\\u22C5\",sdote:\"\\u2A66\",seArr:\"\\u21D8\",sect:\"\\xA7\",semi:\";\",seswar:\"\\u2929\",tosa:\"\\u2929\",sext:\"\\u2736\",sfr:\"\\u{1D530}\",sharp:\"\\u266F\",shchcy:\"\\u0449\",shcy:\"\\u0448\",shy:\"\\xAD\",sigma:\"\\u03C3\",sigmaf:\"\\u03C2\",sigmav:\"\\u03C2\",varsigma:\"\\u03C2\",simdot:\"\\u2A6A\",simg:\"\\u2A9E\",simgE:\"\\u2AA0\",siml:\"\\u2A9D\",simlE:\"\\u2A9F\",simne:\"\\u2246\",simplus:\"\\u2A24\",simrarr:\"\\u2972\",smashp:\"\\u2A33\",smeparsl:\"\\u29E4\",smile:\"\\u2323\",ssmile:\"\\u2323\",smt:\"\\u2AAA\",smte:\"\\u2AAC\",smtes:\"\\u2AAC\\uFE00\",softcy:\"\\u044C\",sol:\"/\",solb:\"\\u29C4\",solbar:\"\\u233F\",sopf:\"\\u{1D564}\",spades:\"\\u2660\",spadesuit:\"\\u2660\",sqcaps:\"\\u2293\\uFE00\",sqcups:\"\\u2294\\uFE00\",sscr:\"\\u{1D4C8}\",star:\"\\u2606\",sub:\"\\u2282\",subset:\"\\u2282\",subE:\"\\u2AC5\",subseteqq:\"\\u2AC5\",subdot:\"\\u2ABD\",subedot:\"\\u2AC3\",submult:\"\\u2AC1\",subnE:\"\\u2ACB\",subsetneqq:\"\\u2ACB\",subne:\"\\u228A\",subsetneq:\"\\u228A\",subplus:\"\\u2ABF\",subrarr:\"\\u2979\",subsim:\"\\u2AC7\",subsub:\"\\u2AD5\",subsup:\"\\u2AD3\",sung:\"\\u266A\",sup1:\"\\xB9\",sup2:\"\\xB2\",sup3:\"\\xB3\",supE:\"\\u2AC6\",supseteqq:\"\\u2AC6\",supdot:\"\\u2ABE\",supdsub:\"\\u2AD8\",supedot:\"\\u2AC4\",suphsol:\"\\u27C9\",suphsub:\"\\u2AD7\",suplarr:\"\\u297B\",supmult:\"\\u2AC2\",supnE:\"\\u2ACC\",supsetneqq:\"\\u2ACC\",supne:\"\\u228B\",supsetneq:\"\\u228B\",supplus:\"\\u2AC0\",supsim:\"\\u2AC8\",supsub:\"\\u2AD4\",supsup:\"\\u2AD6\",swArr:\"\\u21D9\",swnwar:\"\\u292A\",szlig:\"\\xDF\",target:\"\\u2316\",tau:\"\\u03C4\",tcaron:\"\\u0165\",tcedil:\"\\u0163\",tcy:\"\\u0442\",telrec:\"\\u2315\",tfr:\"\\u{1D531}\",theta:\"\\u03B8\",thetasym:\"\\u03D1\",thetav:\"\\u03D1\",vartheta:\"\\u03D1\",thorn:\"\\xFE\",times:\"\\xD7\",timesbar:\"\\u2A31\",timesd:\"\\u2A30\",topbot:\"\\u2336\",topcir:\"\\u2AF1\",topf:\"\\u{1D565}\",topfork:\"\\u2ADA\",tprime:\"\\u2034\",triangle:\"\\u25B5\",utri:\"\\u25B5\",triangleq:\"\\u225C\",trie:\"\\u225C\",tridot:\"\\u25EC\",triminus:\"\\u2A3A\",triplus:\"\\u2A39\",trisb:\"\\u29CD\",tritime:\"\\u2A3B\",trpezium:\"\\u23E2\",tscr:\"\\u{1D4C9}\",tscy:\"\\u0446\",tshcy:\"\\u045B\",tstrok:\"\\u0167\",uHar:\"\\u2963\",uacute:\"\\xFA\",ubrcy:\"\\u045E\",ubreve:\"\\u016D\",ucirc:\"\\xFB\",ucy:\"\\u0443\",udblac:\"\\u0171\",ufisht:\"\\u297E\",ufr:\"\\u{1D532}\",ugrave:\"\\xF9\",uhblk:\"\\u2580\",ulcorn:\"\\u231C\",ulcorner:\"\\u231C\",ulcrop:\"\\u230F\",ultri:\"\\u25F8\",umacr:\"\\u016B\",uogon:\"\\u0173\",uopf:\"\\u{1D566}\",upsi:\"\\u03C5\",upsilon:\"\\u03C5\",upuparrows:\"\\u21C8\",uuarr:\"\\u21C8\",urcorn:\"\\u231D\",urcorner:\"\\u231D\",urcrop:\"\\u230E\",uring:\"\\u016F\",urtri:\"\\u25F9\",uscr:\"\\u{1D4CA}\",utdot:\"\\u22F0\",utilde:\"\\u0169\",uuml:\"\\xFC\",uwangle:\"\\u29A7\",vBar:\"\\u2AE8\",vBarv:\"\\u2AE9\",vangrt:\"\\u299C\",varsubsetneq:\"\\u228A\\uFE00\",vsubne:\"\\u228A\\uFE00\",varsubsetneqq:\"\\u2ACB\\uFE00\",vsubnE:\"\\u2ACB\\uFE00\",varsupsetneq:\"\\u228B\\uFE00\",vsupne:\"\\u228B\\uFE00\",varsupsetneqq:\"\\u2ACC\\uFE00\",vsupnE:\"\\u2ACC\\uFE00\",vcy:\"\\u0432\",veebar:\"\\u22BB\",veeeq:\"\\u225A\",vellip:\"\\u22EE\",vfr:\"\\u{1D533}\",vopf:\"\\u{1D567}\",vscr:\"\\u{1D4CB}\",vzigzag:\"\\u299A\",wcirc:\"\\u0175\",wedbar:\"\\u2A5F\",wedgeq:\"\\u2259\",weierp:\"\\u2118\",wp:\"\\u2118\",wfr:\"\\u{1D534}\",wopf:\"\\u{1D568}\",wscr:\"\\u{1D4CC}\",xfr:\"\\u{1D535}\",xi:\"\\u03BE\",xnis:\"\\u22FB\",xopf:\"\\u{1D569}\",xscr:\"\\u{1D4CD}\",yacute:\"\\xFD\",yacy:\"\\u044F\",ycirc:\"\\u0177\",ycy:\"\\u044B\",yen:\"\\xA5\",yfr:\"\\u{1D536}\",yicy:\"\\u0457\",yopf:\"\\u{1D56A}\",yscr:\"\\u{1D4CE}\",yucy:\"\\u044E\",yuml:\"\\xFF\",zacute:\"\\u017A\",zcaron:\"\\u017E\",zcy:\"\\u0437\",zdot:\"\\u017C\",zeta:\"\\u03B6\",zfr:\"\\u{1D537}\",zhcy:\"\\u0436\",zigrarr:\"\\u21DD\",zopf:\"\\u{1D56B}\",zscr:\"\\u{1D4CF}\",zwj:\"\\u200D\",zwnj:\"\\u200C\"},fo=\"\\uE500\";Ve.ngsp=fo;var go=[/@/,/^\\s*$/,/[<>]/,/^[{}]$/,/&(#|[a-z])/i,/^\\/\\//];function Xs(t,e){if(e!=null&&!(Array.isArray(e)&&e.length==2))throw new Error(`Expected '${t}' to be an array, [start, end].`);if(e!=null){let r=e[0],n=e[1];go.forEach(s=>{if(s.test(r)||s.test(n))throw new Error(`['${r}', '${n}'] contains unusable interpolation symbol.`)})}}var $r=class t{static fromArray(e){return e?(Xs(\"interpolation\",e),new t(e[0],e[1])):Or}constructor(e,r){this.start=e,this.end=r}},Or=new $r(\"{{\",\"}}\");var gt=class extends Oe{constructor(e,r,n){super(n,e),this.tokenType=r}},Ur=class{constructor(e,r,n){this.tokens=e,this.errors=r,this.nonNormalizedIcuExpressions=n}};function li(t,e,r,n={}){let s=new Wr(new ve(t,e),r,n);return s.tokenize(),new Ur(Vo(s.tokens),s.errors,s.nonNormalizedIcuExpressions)}var Io=/\\r\\n?/g;function Ue(t){return`Unexpected character \"${t===0?\"EOF\":String.fromCharCode(t)}\"`}function ti(t){return`Unknown entity \"${t}\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax`}function Ro(t,e){return`Unable to parse entity \"${e}\" - ${t} character reference entities must end with \";\"`}var rr;(function(t){t.HEX=\"hexadecimal\",t.DEC=\"decimal\"})(rr||(rr={}));var Ct=class{constructor(e){this.error=e}},Wr=class{constructor(e,r,n){this._getTagContentType=r,this._currentTokenStart=null,this._currentTokenType=null,this._expansionCaseStack=[],this._inInterpolation=!1,this._fullNameStack=[],this.tokens=[],this.errors=[],this.nonNormalizedIcuExpressions=[],this._tokenizeIcu=n.tokenizeExpansionForms||!1,this._interpolationConfig=n.interpolationConfig||Or,this._leadingTriviaCodePoints=n.leadingTriviaChars&&n.leadingTriviaChars.map(i=>i.codePointAt(0)||0),this._canSelfClose=n.canSelfClose||!1,this._allowHtmComponentClosingTags=n.allowHtmComponentClosingTags||!1;let s=n.range||{endPos:e.content.length,startPos:0,startLine:0,startCol:0};this._cursor=n.escapedString?new Gr(e,s):new nr(e,s),this._preserveLineEndings=n.preserveLineEndings||!1,this._i18nNormalizeLineEndingsInICUs=n.i18nNormalizeLineEndingsInICUs||!1,this._tokenizeBlocks=n.tokenizeBlocks??!0,this._tokenizeLet=n.tokenizeLet??!0;try{this._cursor.init()}catch(i){this.handleError(i)}}_processCarriageReturns(e){return this._preserveLineEndings?e:e.replace(Io,`\n`)}tokenize(){for(;this._cursor.peek()!==0;){let e=this._cursor.clone();try{if(this._attemptCharCode(60))if(this._attemptCharCode(33))this._attemptStr(\"[CDATA[\")?this._consumeCdata(e):this._attemptStr(\"--\")?this._consumeComment(e):this._attemptStrCaseInsensitive(\"doctype\")?this._consumeDocType(e):this._consumeBogusComment(e);else if(this._attemptCharCode(47))this._consumeTagClose(e);else{let r=this._cursor.clone();this._attemptCharCode(63)?(this._cursor=r,this._consumeBogusComment(e)):this._consumeTagOpen(e)}else this._tokenizeLet&&this._cursor.peek()===64&&!this._inInterpolation&&this._attemptStr(\"@let\")?this._consumeLetDeclaration(e):this._tokenizeBlocks&&this._attemptCharCode(64)?this._consumeBlockStart(e):this._tokenizeBlocks&&!this._inInterpolation&&!this._isInExpansionCase()&&!this._isInExpansionForm()&&this._attemptCharCode(125)?this._consumeBlockEnd(e):this._tokenizeIcu&&this._tokenizeExpansionForm()||this._consumeWithInterpolation(5,8,()=>this._isTextEnd(),()=>this._isTagStart())}catch(r){this.handleError(r)}}this._beginToken(34),this._endToken([])}_getBlockName(){let e=!1,r=this._cursor.clone();return this._attemptCharCodeUntilFn(n=>ut(n)?!e:si(n)?(e=!0,!1):!0),this._cursor.getChars(r).trim()}_consumeBlockStart(e){this._beginToken(25,e);let r=this._endToken([this._getBlockName()]);if(this._cursor.peek()===40)if(this._cursor.advance(),this._consumeBlockParameters(),this._attemptCharCodeUntilFn(b),this._attemptCharCode(41))this._attemptCharCodeUntilFn(b);else{r.type=29;return}this._attemptCharCode(123)?(this._beginToken(26),this._endToken([])):r.type=29}_consumeBlockEnd(e){this._beginToken(27,e),this._endToken([])}_consumeBlockParameters(){for(this._attemptCharCodeUntilFn(ii);this._cursor.peek()!==41&&this._cursor.peek()!==0;){this._beginToken(28);let e=this._cursor.clone(),r=null,n=0;for(;this._cursor.peek()!==59&&this._cursor.peek()!==0||r!==null;){let s=this._cursor.peek();if(s===92)this._cursor.advance();else if(s===r)r=null;else if(r===null&&Ot(s))r=s;else if(s===40&&r===null)n++;else if(s===41&&r===null){if(n===0)break;n>0&&n--}this._cursor.advance()}this._endToken([this._cursor.getChars(e)]),this._attemptCharCodeUntilFn(ii)}}_consumeLetDeclaration(e){if(this._beginToken(30,e),ut(this._cursor.peek()))this._attemptCharCodeUntilFn(b);else{let s=this._endToken([this._cursor.getChars(e)]);s.type=33;return}let r=this._endToken([this._getLetDeclarationName()]);if(this._attemptCharCodeUntilFn(b),!this._attemptCharCode(61)){r.type=33;return}this._attemptCharCodeUntilFn(s=>b(s)&&!$t(s)),this._consumeLetDeclarationValue(),this._cursor.peek()===59?(this._beginToken(32),this._endToken([]),this._cursor.advance()):(r.type=33,r.sourceSpan=this._cursor.getSpan(e))}_getLetDeclarationName(){let e=this._cursor.clone(),r=!1;return this._attemptCharCodeUntilFn(n=>lt(n)||n===36||n===95||r&&Rt(n)?(r=!0,!1):!0),this._cursor.getChars(e).trim()}_consumeLetDeclarationValue(){let e=this._cursor.clone();for(this._beginToken(31,e);this._cursor.peek()!==0;){let r=this._cursor.peek();if(r===59)break;Ot(r)&&(this._cursor.advance(),this._attemptCharCodeUntilFn(n=>n===92?(this._cursor.advance(),!1):n===r)),this._cursor.advance()}this._endToken([this._cursor.getChars(e)])}_tokenizeExpansionForm(){if(this.isExpansionFormStart())return this._consumeExpansionFormStart(),!0;if(qo(this._cursor.peek())&&this._isInExpansionForm())return this._consumeExpansionCaseStart(),!0;if(this._cursor.peek()===125){if(this._isInExpansionCase())return this._consumeExpansionCaseEnd(),!0;if(this._isInExpansionForm())return this._consumeExpansionFormEnd(),!0}return!1}_beginToken(e,r=this._cursor.clone()){this._currentTokenStart=r,this._currentTokenType=e}_endToken(e,r){if(this._currentTokenStart===null)throw new gt(\"Programming error - attempted to end a token when there was no start to the token\",this._currentTokenType,this._cursor.getSpan(r));if(this._currentTokenType===null)throw new gt(\"Programming error - attempted to end a token which has no token type\",null,this._cursor.getSpan(this._currentTokenStart));let n={type:this._currentTokenType,parts:e,sourceSpan:(r??this._cursor).getSpan(this._currentTokenStart,this._leadingTriviaCodePoints)};return this.tokens.push(n),this._currentTokenStart=null,this._currentTokenType=null,n}_createError(e,r){this._isInExpansionForm()&&(e+=` (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)`);let n=new gt(e,this._currentTokenType,r);return this._currentTokenStart=null,this._currentTokenType=null,new Ct(n)}handleError(e){if(e instanceof St&&(e=this._createError(e.msg,this._cursor.getSpan(e.cursor))),e instanceof Ct)this.errors.push(e.error);else throw e}_attemptCharCode(e){return this._cursor.peek()===e?(this._cursor.advance(),!0):!1}_attemptCharCodeCaseInsensitive(e){return Ho(this._cursor.peek(),e)?(this._cursor.advance(),!0):!1}_requireCharCode(e){let r=this._cursor.clone();if(!this._attemptCharCode(e))throw this._createError(Ue(this._cursor.peek()),this._cursor.getSpan(r))}_attemptStr(e){let r=e.length;if(this._cursor.charsLeft()<r)return!1;let n=this._cursor.clone();for(let s=0;s<r;s++)if(!this._attemptCharCode(e.charCodeAt(s)))return this._cursor=n,!1;return!0}_attemptStrCaseInsensitive(e){for(let r=0;r<e.length;r++)if(!this._attemptCharCodeCaseInsensitive(e.charCodeAt(r)))return!1;return!0}_requireStr(e){let r=this._cursor.clone();if(!this._attemptStr(e))throw this._createError(Ue(this._cursor.peek()),this._cursor.getSpan(r))}_requireStrCaseInsensitive(e){let r=this._cursor.clone();if(!this._attemptStrCaseInsensitive(e))throw this._createError(Ue(this._cursor.peek()),this._cursor.getSpan(r))}_attemptCharCodeUntilFn(e){for(;!e(this._cursor.peek());)this._cursor.advance()}_requireCharCodeUntilFn(e,r){let n=this._cursor.clone();if(this._attemptCharCodeUntilFn(e),this._cursor.diff(n)<r)throw this._createError(Ue(this._cursor.peek()),this._cursor.getSpan(n))}_attemptUntilChar(e){for(;this._cursor.peek()!==e;)this._cursor.advance()}_readChar(){let e=String.fromCodePoint(this._cursor.peek());return this._cursor.advance(),e}_consumeEntity(e){this._beginToken(9);let r=this._cursor.clone();if(this._cursor.advance(),this._attemptCharCode(35)){let n=this._attemptCharCode(120)||this._attemptCharCode(88),s=this._cursor.clone();if(this._attemptCharCodeUntilFn(Oo),this._cursor.peek()!=59){this._cursor.advance();let a=n?rr.HEX:rr.DEC;throw this._createError(Ro(a,this._cursor.getChars(r)),this._cursor.getSpan())}let i=this._cursor.getChars(s);this._cursor.advance();try{let a=parseInt(i,n?16:10);this._endToken([String.fromCharCode(a),this._cursor.getChars(r)])}catch{throw this._createError(ti(this._cursor.getChars(r)),this._cursor.getSpan())}}else{let n=this._cursor.clone();if(this._attemptCharCodeUntilFn(Mo),this._cursor.peek()!=59)this._beginToken(e,r),this._cursor=n,this._endToken([\"&\"]);else{let s=this._cursor.getChars(n);this._cursor.advance();let i=Ve[s];if(!i)throw this._createError(ti(s),this._cursor.getSpan(r));this._endToken([i,`&${s};`])}}}_consumeRawText(e,r){this._beginToken(e?6:7);let n=[];for(;;){let s=this._cursor.clone(),i=r();if(this._cursor=s,i)break;e&&this._cursor.peek()===38?(this._endToken([this._processCarriageReturns(n.join(\"\"))]),n.length=0,this._consumeEntity(6),this._beginToken(6)):n.push(this._readChar())}this._endToken([this._processCarriageReturns(n.join(\"\"))])}_consumeComment(e){this._beginToken(10,e),this._endToken([]),this._consumeRawText(!1,()=>this._attemptStr(\"-->\")),this._beginToken(11),this._requireStr(\"-->\"),this._endToken([])}_consumeBogusComment(e){this._beginToken(10,e),this._endToken([]),this._consumeRawText(!1,()=>this._cursor.peek()===62),this._beginToken(11),this._cursor.advance(),this._endToken([])}_consumeCdata(e){this._beginToken(12,e),this._endToken([]),this._consumeRawText(!1,()=>this._attemptStr(\"]]>\")),this._beginToken(13),this._requireStr(\"]]>\"),this._endToken([])}_consumeDocType(e){this._beginToken(18,e),this._endToken([]),this._consumeRawText(!1,()=>this._cursor.peek()===62),this._beginToken(19),this._cursor.advance(),this._endToken([])}_consumePrefixAndName(){let e=this._cursor.clone(),r=\"\";for(;this._cursor.peek()!==58&&!$o(this._cursor.peek());)this._cursor.advance();let n;this._cursor.peek()===58?(r=this._cursor.getChars(e),this._cursor.advance(),n=this._cursor.clone()):n=e,this._requireCharCodeUntilFn(ri,r===\"\"?0:1);let s=this._cursor.getChars(n);return[r,s]}_consumeTagOpen(e){let r,n,s,i=[];try{if(!lt(this._cursor.peek()))throw this._createError(Ue(this._cursor.peek()),this._cursor.getSpan(e));for(s=this._consumeTagOpenStart(e),n=s.parts[0],r=s.parts[1],this._attemptCharCodeUntilFn(b);this._cursor.peek()!==47&&this._cursor.peek()!==62&&this._cursor.peek()!==60&&this._cursor.peek()!==0;){let[o,u]=this._consumeAttributeName();if(this._attemptCharCodeUntilFn(b),this._attemptCharCode(61)){this._attemptCharCodeUntilFn(b);let p=this._consumeAttributeValue();i.push({prefix:o,name:u,value:p})}else i.push({prefix:o,name:u});this._attemptCharCodeUntilFn(b)}this._consumeTagOpenEnd()}catch(o){if(o instanceof Ct){s?s.type=4:(this._beginToken(5,e),this._endToken([\"<\"]));return}throw o}if(this._canSelfClose&&this.tokens[this.tokens.length-1].type===2)return;let a=this._getTagContentType(r,n,this._fullNameStack.length>0,i);this._handleFullNameStackForTagOpen(n,r),a===N.RAW_TEXT?this._consumeRawTextWithTagClose(n,r,!1):a===N.ESCAPABLE_RAW_TEXT&&this._consumeRawTextWithTagClose(n,r,!0)}_consumeRawTextWithTagClose(e,r,n){this._consumeRawText(n,()=>!this._attemptCharCode(60)||!this._attemptCharCode(47)||(this._attemptCharCodeUntilFn(b),!this._attemptStrCaseInsensitive(e?`${e}:${r}`:r))?!1:(this._attemptCharCodeUntilFn(b),this._attemptCharCode(62))),this._beginToken(3),this._requireCharCodeUntilFn(s=>s===62,3),this._cursor.advance(),this._endToken([e,r]),this._handleFullNameStackForTagClose(e,r)}_consumeTagOpenStart(e){this._beginToken(0,e);let r=this._consumePrefixAndName();return this._endToken(r)}_consumeAttributeName(){let e=this._cursor.peek();if(e===39||e===34)throw this._createError(Ue(e),this._cursor.getSpan());this._beginToken(14);let r=this._consumePrefixAndName();return this._endToken(r),r}_consumeAttributeValue(){let e;if(this._cursor.peek()===39||this._cursor.peek()===34){let r=this._cursor.peek();this._consumeQuote(r);let n=()=>this._cursor.peek()===r;e=this._consumeWithInterpolation(16,17,n,n),this._consumeQuote(r)}else{let r=()=>ri(this._cursor.peek());e=this._consumeWithInterpolation(16,17,r,r)}return e}_consumeQuote(e){this._beginToken(15),this._requireCharCode(e),this._endToken([String.fromCodePoint(e)])}_consumeTagOpenEnd(){let e=this._attemptCharCode(47)?2:1;this._beginToken(e),this._requireCharCode(62),this._endToken([])}_consumeTagClose(e){if(this._beginToken(3,e),this._attemptCharCodeUntilFn(b),this._allowHtmComponentClosingTags&&this._attemptCharCode(47))this._attemptCharCodeUntilFn(b),this._requireCharCode(62),this._endToken([]);else{let[r,n]=this._consumePrefixAndName();this._attemptCharCodeUntilFn(b),this._requireCharCode(62),this._endToken([r,n]),this._handleFullNameStackForTagClose(r,n)}}_consumeExpansionFormStart(){this._beginToken(20),this._requireCharCode(123),this._endToken([]),this._expansionCaseStack.push(20),this._beginToken(7);let e=this._readUntil(44),r=this._processCarriageReturns(e);if(this._i18nNormalizeLineEndingsInICUs)this._endToken([r]);else{let s=this._endToken([e]);r!==e&&this.nonNormalizedIcuExpressions.push(s)}this._requireCharCode(44),this._attemptCharCodeUntilFn(b),this._beginToken(7);let n=this._readUntil(44);this._endToken([n]),this._requireCharCode(44),this._attemptCharCodeUntilFn(b)}_consumeExpansionCaseStart(){this._beginToken(21);let e=this._readUntil(123).trim();this._endToken([e]),this._attemptCharCodeUntilFn(b),this._beginToken(22),this._requireCharCode(123),this._endToken([]),this._attemptCharCodeUntilFn(b),this._expansionCaseStack.push(22)}_consumeExpansionCaseEnd(){this._beginToken(23),this._requireCharCode(125),this._endToken([]),this._attemptCharCodeUntilFn(b),this._expansionCaseStack.pop()}_consumeExpansionFormEnd(){this._beginToken(24),this._requireCharCode(125),this._endToken([]),this._expansionCaseStack.pop()}_consumeWithInterpolation(e,r,n,s){this._beginToken(e);let i=[];for(;!n();){let o=this._cursor.clone();this._interpolationConfig&&this._attemptStr(this._interpolationConfig.start)?(this._endToken([this._processCarriageReturns(i.join(\"\"))],o),i.length=0,this._consumeInterpolation(r,o,s),this._beginToken(e)):this._cursor.peek()===38?(this._endToken([this._processCarriageReturns(i.join(\"\"))]),i.length=0,this._consumeEntity(e),this._beginToken(e)):i.push(this._readChar())}this._inInterpolation=!1;let a=this._processCarriageReturns(i.join(\"\"));return this._endToken([a]),a}_consumeInterpolation(e,r,n){let s=[];this._beginToken(e,r),s.push(this._interpolationConfig.start);let i=this._cursor.clone(),a=null,o=!1;for(;this._cursor.peek()!==0&&(n===null||!n());){let u=this._cursor.clone();if(this._isTagStart()){this._cursor=u,s.push(this._getProcessedChars(i,u)),this._endToken(s);return}if(a===null)if(this._attemptStr(this._interpolationConfig.end)){s.push(this._getProcessedChars(i,u)),s.push(this._interpolationConfig.end),this._endToken(s);return}else this._attemptStr(\"//\")&&(o=!0);let p=this._cursor.peek();this._cursor.advance(),p===92?this._cursor.advance():p===a?a=null:!o&&a===null&&Ot(p)&&(a=p)}s.push(this._getProcessedChars(i,this._cursor)),this._endToken(s)}_getProcessedChars(e,r){return this._processCarriageReturns(r.getChars(e))}_isTextEnd(){return!!(this._isTagStart()||this._cursor.peek()===0||this._tokenizeIcu&&!this._inInterpolation&&(this.isExpansionFormStart()||this._cursor.peek()===125&&this._isInExpansionCase())||this._tokenizeBlocks&&!this._inInterpolation&&!this._isInExpansion()&&(this._isBlockStart()||this._cursor.peek()===64||this._cursor.peek()===125))}_isTagStart(){if(this._cursor.peek()===60){let e=this._cursor.clone();e.advance();let r=e.peek();if(97<=r&&r<=122||65<=r&&r<=90||r===47||r===33)return!0}return!1}_isBlockStart(){if(this._tokenizeBlocks&&this._cursor.peek()===64){let e=this._cursor.clone();if(e.advance(),si(e.peek()))return!0}return!1}_readUntil(e){let r=this._cursor.clone();return this._attemptUntilChar(e),this._cursor.getChars(r)}_isInExpansion(){return this._isInExpansionCase()||this._isInExpansionForm()}_isInExpansionCase(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===22}_isInExpansionForm(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===20}isExpansionFormStart(){if(this._cursor.peek()!==123)return!1;if(this._interpolationConfig){let e=this._cursor.clone(),r=this._attemptStr(this._interpolationConfig.start);return this._cursor=e,!r}return!0}_handleFullNameStackForTagOpen(e,r){let n=qe(e,r);(this._fullNameStack.length===0||this._fullNameStack[this._fullNameStack.length-1]===n)&&this._fullNameStack.push(n)}_handleFullNameStackForTagClose(e,r){let n=qe(e,r);this._fullNameStack.length!==0&&this._fullNameStack[this._fullNameStack.length-1]===n&&this._fullNameStack.pop()}};function b(t){return!ut(t)||t===0}function ri(t){return ut(t)||t===62||t===60||t===47||t===39||t===34||t===61||t===0}function $o(t){return(t<97||122<t)&&(t<65||90<t)&&(t<48||t>57)}function Oo(t){return t===59||t===0||!Rs(t)}function Mo(t){return t===59||t===0||!lt(t)}function qo(t){return t!==125}function Ho(t,e){return ni(t)===ni(e)}function ni(t){return t>=97&&t<=122?t-97+65:t}function si(t){return lt(t)||Rt(t)||t===95}function ii(t){return t!==59&&b(t)}function Vo(t){let e=[],r;for(let n=0;n<t.length;n++){let s=t[n];r&&r.type===5&&s.type===5||r&&r.type===16&&s.type===16?(r.parts[0]+=s.parts[0],r.sourceSpan.end=s.sourceSpan.end):(r=s,e.push(r))}return e}var nr=class t{constructor(e,r){if(e instanceof t){this.file=e.file,this.input=e.input,this.end=e.end;let n=e.state;this.state={peek:n.peek,offset:n.offset,line:n.line,column:n.column}}else{if(!r)throw new Error(\"Programming error: the range argument must be provided with a file argument.\");this.file=e,this.input=e.content,this.end=r.endPos,this.state={peek:-1,offset:r.startPos,line:r.startLine,column:r.startCol}}}clone(){return new t(this)}peek(){return this.state.peek}charsLeft(){return this.end-this.state.offset}diff(e){return this.state.offset-e.state.offset}advance(){this.advanceState(this.state)}init(){this.updatePeek(this.state)}getSpan(e,r){e=e||this;let n=e;if(r)for(;this.diff(e)>0&&r.indexOf(e.peek())!==-1;)n===e&&(e=e.clone()),e.advance();let s=this.locationFromCursor(e),i=this.locationFromCursor(this),a=n!==e?this.locationFromCursor(n):s;return new h(s,i,a)}getChars(e){return this.input.substring(e.state.offset,this.state.offset)}charAt(e){return this.input.charCodeAt(e)}advanceState(e){if(e.offset>=this.end)throw this.state=e,new St('Unexpected character \"EOF\"',this);let r=this.charAt(e.offset);r===10?(e.line++,e.column=0):$t(r)||e.column++,e.offset++,this.updatePeek(e)}updatePeek(e){e.peek=e.offset>=this.end?0:this.charAt(e.offset)}locationFromCursor(e){return new ie(e.file,e.state.offset,e.state.line,e.state.column)}},Gr=class t extends nr{constructor(e,r){e instanceof t?(super(e),this.internalState={...e.internalState}):(super(e,r),this.internalState=this.state)}advance(){this.state=this.internalState,super.advance(),this.processEscapeSequence()}init(){super.init(),this.processEscapeSequence()}clone(){return new t(this)}getChars(e){let r=e.clone(),n=\"\";for(;r.internalState.offset<this.internalState.offset;)n+=String.fromCodePoint(r.peek()),r.advance();return n}processEscapeSequence(){let e=()=>this.internalState.peek;if(e()===92)if(this.internalState={...this.state},this.advanceState(this.internalState),e()===110)this.state.peek=10;else if(e()===114)this.state.peek=13;else if(e()===118)this.state.peek=11;else if(e()===116)this.state.peek=9;else if(e()===98)this.state.peek=8;else if(e()===102)this.state.peek=12;else if(e()===117)if(this.advanceState(this.internalState),e()===123){this.advanceState(this.internalState);let r=this.clone(),n=0;for(;e()!==125;)this.advanceState(this.internalState),n++;this.state.peek=this.decodeHexDigits(r,n)}else{let r=this.clone();this.advanceState(this.internalState),this.advanceState(this.internalState),this.advanceState(this.internalState),this.state.peek=this.decodeHexDigits(r,4)}else if(e()===120){this.advanceState(this.internalState);let r=this.clone();this.advanceState(this.internalState),this.state.peek=this.decodeHexDigits(r,2)}else if(Br(e())){let r=\"\",n=0,s=this.clone();for(;Br(e())&&n<3;)s=this.clone(),r+=String.fromCodePoint(e()),this.advanceState(this.internalState),n++;this.state.peek=parseInt(r,8),this.internalState=s.internalState}else $t(this.internalState.peek)?(this.advanceState(this.internalState),this.state=this.internalState):this.state.peek=this.internalState.peek}decodeHexDigits(e,r){let n=this.input.slice(e.internalState.offset,e.internalState.offset+r),s=parseInt(n,16);if(isNaN(s))throw e.state=e.internalState,new St(\"Invalid hexadecimal escape sequence\",e);return s}},St=class{constructor(e,r){this.msg=e,this.cursor=r}};var L=class t extends Oe{static create(e,r,n){return new t(e,r,n)}constructor(e,r,n){super(r,n),this.elementName=e}},jr=class{constructor(e,r){this.rootNodes=e,this.errors=r}},sr=class{constructor(e){this.getTagDefinition=e}parse(e,r,n,s=!1,i){let a=D=>(I,...F)=>D(I.toLowerCase(),...F),o=s?this.getTagDefinition:a(this.getTagDefinition),u=D=>o(D).getContentType(),p=s?i:a(i),m=li(e,r,i?(D,I,F,c)=>{let g=p(D,I,F,c);return g!==void 0?g:u(D)}:u,n),f=n&&n.canSelfClose||!1,C=n&&n.allowHtmComponentClosingTags||!1,A=new Kr(m.tokens,o,f,C,s);return A.build(),new jr(A.rootNodes,m.errors.concat(A.errors))}},Kr=class t{constructor(e,r,n,s,i){this.tokens=e,this.getTagDefinition=r,this.canSelfClose=n,this.allowHtmComponentClosingTags=s,this.isTagNameCaseSensitive=i,this._index=-1,this._containerStack=[],this.rootNodes=[],this.errors=[],this._advance()}build(){for(;this._peek.type!==34;)this._peek.type===0||this._peek.type===4?this._consumeStartTag(this._advance()):this._peek.type===3?(this._closeVoidElement(),this._consumeEndTag(this._advance())):this._peek.type===12?(this._closeVoidElement(),this._consumeCdata(this._advance())):this._peek.type===10?(this._closeVoidElement(),this._consumeComment(this._advance())):this._peek.type===5||this._peek.type===7||this._peek.type===6?(this._closeVoidElement(),this._consumeText(this._advance())):this._peek.type===20?this._consumeExpansion(this._advance()):this._peek.type===25?(this._closeVoidElement(),this._consumeBlockOpen(this._advance())):this._peek.type===27?(this._closeVoidElement(),this._consumeBlockClose(this._advance())):this._peek.type===29?(this._closeVoidElement(),this._consumeIncompleteBlock(this._advance())):this._peek.type===30?(this._closeVoidElement(),this._consumeLet(this._advance())):this._peek.type===18?this._consumeDocType(this._advance()):this._peek.type===33?(this._closeVoidElement(),this._consumeIncompleteLet(this._advance())):this._advance();for(let e of this._containerStack)e instanceof ee&&this.errors.push(L.create(e.name,e.sourceSpan,`Unclosed block \"${e.name}\"`))}_advance(){let e=this._peek;return this._index<this.tokens.length-1&&this._index++,this._peek=this.tokens[this._index],e}_advanceIf(e){return this._peek.type===e?this._advance():null}_consumeCdata(e){let r=this._advance(),n=this._getText(r),s=this._advanceIf(13);this._addToParent(new Gt(n,new h(e.sourceSpan.start,(s||r).sourceSpan.end),[r]))}_consumeComment(e){let r=this._advanceIf(7),n=this._advanceIf(11),s=r!=null?r.parts[0].trim():null,i=n==null?e.sourceSpan:new h(e.sourceSpan.start,n.sourceSpan.end,e.sourceSpan.fullStart);this._addToParent(new Kt(s,i))}_consumeDocType(e){let r=this._advanceIf(7),n=this._advanceIf(19),s=r!=null?r.parts[0].trim():null,i=new h(e.sourceSpan.start,(n||r||e).sourceSpan.end);this._addToParent(new Xt(s,i))}_consumeExpansion(e){let r=this._advance(),n=this._advance(),s=[];for(;this._peek.type===21;){let a=this._parseExpansionCase();if(!a)return;s.push(a)}if(this._peek.type!==24){this.errors.push(L.create(null,this._peek.sourceSpan,\"Invalid ICU message. Missing '}'.\"));return}let i=new h(e.sourceSpan.start,this._peek.sourceSpan.end,e.sourceSpan.fullStart);this._addToParent(new zt(r.parts[0],n.parts[0],s,i,r.sourceSpan)),this._advance()}_parseExpansionCase(){let e=this._advance();if(this._peek.type!==22)return this.errors.push(L.create(null,this._peek.sourceSpan,\"Invalid ICU message. Missing '{'.\")),null;let r=this._advance(),n=this._collectExpansionExpTokens(r);if(!n)return null;let s=this._advance();n.push({type:34,parts:[],sourceSpan:s.sourceSpan});let i=new t(n,this.getTagDefinition,this.canSelfClose,this.allowHtmComponentClosingTags,this.isTagNameCaseSensitive);if(i.build(),i.errors.length>0)return this.errors=this.errors.concat(i.errors),null;let a=new h(e.sourceSpan.start,s.sourceSpan.end,e.sourceSpan.fullStart),o=new h(r.sourceSpan.start,s.sourceSpan.end,r.sourceSpan.fullStart);return new Yt(e.parts[0],i.rootNodes,a,e.sourceSpan,o)}_collectExpansionExpTokens(e){let r=[],n=[22];for(;;){if((this._peek.type===20||this._peek.type===22)&&n.push(this._peek.type),this._peek.type===23)if(ci(n,22)){if(n.pop(),n.length===0)return r}else return this.errors.push(L.create(null,e.sourceSpan,\"Invalid ICU message. Missing '}'.\")),null;if(this._peek.type===24)if(ci(n,20))n.pop();else return this.errors.push(L.create(null,e.sourceSpan,\"Invalid ICU message. Missing '}'.\")),null;if(this._peek.type===34)return this.errors.push(L.create(null,e.sourceSpan,\"Invalid ICU message. Missing '}'.\")),null;r.push(this._advance())}}_getText(e){let r=e.parts[0];if(r.length>0&&r[0]==`\n`){let n=this._getClosestParentElement();n!=null&&n.children.length==0&&this.getTagDefinition(n.name).ignoreFirstLf&&(r=r.substring(1))}return r}_consumeText(e){let r=[e],n=e.sourceSpan,s=e.parts[0];if(s.length>0&&s[0]===`\n`){let i=this._getContainer();i!=null&&i.children.length===0&&this.getTagDefinition(i.name).ignoreFirstLf&&(s=s.substring(1),r[0]={type:e.type,sourceSpan:e.sourceSpan,parts:[s]})}for(;this._peek.type===8||this._peek.type===5||this._peek.type===9;)e=this._advance(),r.push(e),e.type===8?s+=e.parts.join(\"\").replace(/&([^;]+);/g,pi):e.type===9?s+=e.parts[0]:s+=e.parts.join(\"\");if(s.length>0){let i=e.sourceSpan;this._addToParent(new Wt(s,new h(n.start,i.end,n.fullStart,n.details),r))}}_closeVoidElement(){let e=this._getContainer();e instanceof Y&&this.getTagDefinition(e.name).isVoid&&this._containerStack.pop()}_consumeStartTag(e){let[r,n]=e.parts,s=[];for(;this._peek.type===14;)s.push(this._consumeAttr(this._advance()));let i=this._getElementFullName(r,n,this._getClosestParentElement()),a=!1;if(this._peek.type===2){this._advance(),a=!0;let C=this.getTagDefinition(i);this.canSelfClose||C.canSelfClose||Me(i)!==null||C.isVoid||this.errors.push(L.create(i,e.sourceSpan,`Only void, custom and foreign elements can be self closed \"${e.parts[1]}\"`))}else this._peek.type===1&&(this._advance(),a=!1);let o=this._peek.sourceSpan.fullStart,u=new h(e.sourceSpan.start,o,e.sourceSpan.fullStart),p=new h(e.sourceSpan.start,o,e.sourceSpan.fullStart),l=new h(e.sourceSpan.start.moveBy(1),e.sourceSpan.end),m=new Y(i,s,[],u,p,void 0,l),f=this._getContainer();this._pushContainer(m,f instanceof Y&&this.getTagDefinition(f.name).isClosedByChild(m.name)),a?this._popContainer(i,Y,u):e.type===4&&(this._popContainer(i,Y,null),this.errors.push(L.create(i,u,`Opening tag \"${i}\" not terminated.`)))}_pushContainer(e,r){r&&this._containerStack.pop(),this._addToParent(e),this._containerStack.push(e)}_consumeEndTag(e){let r=this.allowHtmComponentClosingTags&&e.parts.length===0?null:this._getElementFullName(e.parts[0],e.parts[1],this._getClosestParentElement());if(r&&this.getTagDefinition(r).isVoid)this.errors.push(L.create(r,e.sourceSpan,`Void elements do not have end tags \"${e.parts[1]}\"`));else if(!this._popContainer(r,Y,e.sourceSpan)){let n=`Unexpected closing tag \"${r}\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;this.errors.push(L.create(r,e.sourceSpan,n))}}_popContainer(e,r,n){let s=!1;for(let i=this._containerStack.length-1;i>=0;i--){let a=this._containerStack[i];if(Me(a.name)?a.name===e:(e==null||a.name.toLowerCase()===e.toLowerCase())&&a instanceof r)return a.endSourceSpan=n,a.sourceSpan.end=n!==null?n.end:a.sourceSpan.end,this._containerStack.splice(i,this._containerStack.length-i),!s;(a instanceof ee||a instanceof Y&&!this.getTagDefinition(a.name).closedByParent)&&(s=!0)}return!1}_consumeAttr(e){let r=qe(e.parts[0],e.parts[1]),n=e.sourceSpan.end,s;this._peek.type===15&&(s=this._advance());let i=\"\",a=[],o,u;if(this._peek.type===16)for(o=this._peek.sourceSpan,u=this._peek.sourceSpan.end;this._peek.type===16||this._peek.type===17||this._peek.type===9;){let m=this._advance();a.push(m),m.type===17?i+=m.parts.join(\"\").replace(/&([^;]+);/g,pi):m.type===9?i+=m.parts[0]:i+=m.parts.join(\"\"),u=n=m.sourceSpan.end}this._peek.type===15&&(u=n=this._advance().sourceSpan.end);let l=o&&u&&new h((s==null?void 0:s.sourceSpan.start)??o.start,u,(s==null?void 0:s.sourceSpan.fullStart)??o.fullStart);return new jt(r,i,new h(e.sourceSpan.start,n,e.sourceSpan.fullStart),e.sourceSpan,l,a.length>0?a:void 0,void 0)}_consumeBlockOpen(e){let r=[];for(;this._peek.type===28;){let o=this._advance();r.push(new ht(o.parts[0],o.sourceSpan))}this._peek.type===26&&this._advance();let n=this._peek.sourceSpan.fullStart,s=new h(e.sourceSpan.start,n,e.sourceSpan.fullStart),i=new h(e.sourceSpan.start,n,e.sourceSpan.fullStart),a=new ee(e.parts[0],r,[],s,e.sourceSpan,i);this._pushContainer(a,!1)}_consumeBlockClose(e){this._popContainer(null,ee,e.sourceSpan)||this.errors.push(L.create(null,e.sourceSpan,'Unexpected closing block. The block may have been closed earlier. If you meant to write the } character, you should use the \"&#125;\" HTML entity instead.'))}_consumeIncompleteBlock(e){let r=[];for(;this._peek.type===28;){let o=this._advance();r.push(new ht(o.parts[0],o.sourceSpan))}let n=this._peek.sourceSpan.fullStart,s=new h(e.sourceSpan.start,n,e.sourceSpan.fullStart),i=new h(e.sourceSpan.start,n,e.sourceSpan.fullStart),a=new ee(e.parts[0],r,[],s,e.sourceSpan,i);this._pushContainer(a,!1),this._popContainer(null,ee,null),this.errors.push(L.create(e.parts[0],s,`Incomplete block \"${e.parts[0]}\". If you meant to write the @ character, you should use the \"&#64;\" HTML entity instead.`))}_consumeLet(e){let r=e.parts[0],n,s;if(this._peek.type!==31){this.errors.push(L.create(e.parts[0],e.sourceSpan,`Invalid @let declaration \"${r}\". Declaration must have a value.`));return}else n=this._advance();if(this._peek.type!==32){this.errors.push(L.create(e.parts[0],e.sourceSpan,`Unterminated @let declaration \"${r}\". Declaration must be terminated with a semicolon.`));return}else s=this._advance();let i=s.sourceSpan.fullStart,a=new h(e.sourceSpan.start,i,e.sourceSpan.fullStart),o=e.sourceSpan.toString().lastIndexOf(r),u=e.sourceSpan.start.moveBy(o),p=new h(u,e.sourceSpan.end),l=new mt(r,n.parts[0],a,p,n.sourceSpan);this._addToParent(l)}_consumeIncompleteLet(e){let r=e.parts[0]??\"\",n=r?` \"${r}\"`:\"\";if(r.length>0){let s=e.sourceSpan.toString().lastIndexOf(r),i=e.sourceSpan.start.moveBy(s),a=new h(i,e.sourceSpan.end),o=new h(e.sourceSpan.start,e.sourceSpan.start.moveBy(0)),u=new mt(r,\"\",e.sourceSpan,a,o);this._addToParent(u)}this.errors.push(L.create(e.parts[0],e.sourceSpan,`Incomplete @let declaration${n}. @let declarations must be written as \\`@let <name> = <value>;\\``))}_getContainer(){return this._containerStack.length>0?this._containerStack[this._containerStack.length-1]:null}_getClosestParentElement(){for(let e=this._containerStack.length-1;e>-1;e--)if(this._containerStack[e]instanceof Y)return this._containerStack[e];return null}_addToParent(e){let r=this._getContainer();r===null?this.rootNodes.push(e):r.children.push(e)}_getElementFullName(e,r,n){if(e===\"\"&&(e=this.getTagDefinition(r).implicitNamespacePrefix||\"\",e===\"\"&&n!=null)){let s=ct(n.name)[1];this.getTagDefinition(s).preventNamespaceInheritance||(e=Me(n.name))}return qe(e,r)}};function ci(t,e){return t.length>0&&t[t.length-1]===e}function pi(t,e){return Ve[e]!==void 0?Ve[e]||t:/^#x[a-f0-9]+$/i.test(e)?String.fromCodePoint(parseInt(e.slice(2),16)):/^#\\d+$/.test(e)?String.fromCodePoint(parseInt(e.slice(1),10)):t}var ir=class extends sr{constructor(){super(He)}parse(e,r,n,s=!1,i){return super.parse(e,r,n,s,i)}};var Xr=null,Uo=()=>(Xr||(Xr=new ir),Xr);function Qr(t,e={}){let{canSelfClose:r=!1,allowHtmComponentClosingTags:n=!1,isTagNameCaseSensitive:s=!1,getTagContentType:i,tokenizeAngularBlocks:a=!1,tokenizeAngularLetDeclaration:o=!1}=e;return Uo().parse(t,\"angular-html-parser\",{tokenizeExpansionForms:a,interpolationConfig:void 0,canSelfClose:r,allowHtmComponentClosingTags:n,tokenizeBlocks:a,tokenizeLet:o},s,i)}function Wo(t,e){let r=new SyntaxError(t+\" (\"+e.loc.start.line+\":\"+e.loc.start.column+\")\");return Object.assign(r,e)}var hi=Wo;var _t=3;function Go(t){let e=t.slice(0,_t);if(e!==\"---\"&&e!==\"+++\")return;let r=t.indexOf(`\n`,_t);if(r===-1)return;let n=t.slice(_t,r).trim(),s=t.indexOf(`\n${e}`,r),i=n;if(i||(i=e===\"+++\"?\"toml\":\"yaml\"),s===-1&&e===\"---\"&&i===\"yaml\"&&(s=t.indexOf(`\n...`,r)),s===-1)return;let a=s+1+_t,o=t.charAt(a+1);if(!/\\s?/u.test(o))return;let u=t.slice(0,a);return{type:\"front-matter\",language:i,explicitLanguage:n,value:t.slice(r+1,s),startDelimiter:e,endDelimiter:u.slice(-_t),raw:u}}function zo(t){let e=Go(t);if(!e)return{content:t};let{raw:r}=e;return{frontMatter:e,content:w(!1,r,/[^\\n]/gu,\" \")+t.slice(r.length)}}var mi=zo;var ar={attrs:!0,children:!0,cases:!0,expression:!0},fi=new Set([\"parent\"]),le,Jr,Zr,Ge=class Ge{constructor(e={}){At(this,le);lr(this,\"type\");lr(this,\"parent\");for(let r of new Set([...fi,...Object.keys(e)]))this.setProperty(r,e[r])}setProperty(e,r){if(this[e]!==r){if(e in ar&&(r=r.map(n=>this.createChild(n))),!fi.has(e)){this[e]=r;return}Object.defineProperty(this,e,{value:r,enumerable:!1,configurable:!0})}}map(e){let r;for(let n in ar){let s=this[n];if(s){let i=Yo(s,a=>a.map(e));r!==s&&(r||(r=new Ge({parent:this.parent})),r.setProperty(n,i))}}if(r)for(let n in this)n in ar||(r[n]=this[n]);return e(r||this)}walk(e){for(let r in ar){let n=this[r];if(n)for(let s=0;s<n.length;s++)n[s].walk(e)}e(this)}createChild(e){let r=e instanceof Ge?e.clone():new Ge(e);return r.setProperty(\"parent\",this),r}insertChildBefore(e,r){let n=this.$children;n.splice(n.indexOf(e),0,this.createChild(r))}removeChild(e){let r=this.$children;r.splice(r.indexOf(e),1)}replaceChild(e,r){let n=this.$children;n[n.indexOf(e)]=this.createChild(r)}clone(){return new Ge(this)}get $children(){return this[R(this,le,Jr)]}set $children(e){this[R(this,le,Jr)]=e}get firstChild(){var e;return(e=this.$children)==null?void 0:e[0]}get lastChild(){return K(!0,this.$children,-1)}get prev(){let e=R(this,le,Zr);return e[e.indexOf(this)-1]}get next(){let e=R(this,le,Zr);return e[e.indexOf(this)+1]}get rawName(){return this.hasExplicitNamespace?this.fullName:this.name}get fullName(){return this.namespace?this.namespace+\":\"+this.name:this.name}get attrMap(){return Object.fromEntries(this.attrs.map(e=>[e.fullName,e.value]))}};le=new WeakSet,Jr=function(){return this.type===\"angularIcuCase\"?\"expression\":this.type===\"angularIcuExpression\"?\"cases\":\"children\"},Zr=function(){var e;return((e=this.parent)==null?void 0:e.$children)??[]};var or=Ge;function Yo(t,e){let r=t.map(e);return r.some((n,s)=>n!==t[s])?r:t}var jo=[{regex:/^(\\[if([^\\]]*)\\]>)(.*?)<!\\s*\\[endif\\]$/su,parse:Ko},{regex:/^\\[if([^\\]]*)\\]><!$/u,parse:Xo},{regex:/^<!\\s*\\[endif\\]$/u,parse:Qo}];function di(t,e){if(t.value)for(let{regex:r,parse:n}of jo){let s=t.value.match(r);if(s)return n(t,e,s)}return null}function Ko(t,e,r){let[,n,s,i]=r,a=4+n.length,o=t.sourceSpan.start.moveBy(a),u=o.moveBy(i.length),[p,l]=(()=>{try{return[!0,e(i,o).children]}catch{return[!1,[{type:\"text\",value:i,sourceSpan:new h(o,u)}]]}})();return{type:\"ieConditionalComment\",complete:p,children:l,condition:w(!1,s.trim(),/\\s+/gu,\" \"),sourceSpan:t.sourceSpan,startSourceSpan:new h(t.sourceSpan.start,o),endSourceSpan:new h(u,t.sourceSpan.end)}}function Xo(t,e,r){let[,n]=r;return{type:\"ieConditionalStartComment\",condition:w(!1,n.trim(),/\\s+/gu,\" \"),sourceSpan:t.sourceSpan}}function Qo(t){return{type:\"ieConditionalEndComment\",sourceSpan:t.sourceSpan}}var ur=new Map([[\"*\",new Set([\"accesskey\",\"autocapitalize\",\"autofocus\",\"class\",\"contenteditable\",\"dir\",\"draggable\",\"enterkeyhint\",\"hidden\",\"id\",\"inert\",\"inputmode\",\"is\",\"itemid\",\"itemprop\",\"itemref\",\"itemscope\",\"itemtype\",\"lang\",\"nonce\",\"popover\",\"slot\",\"spellcheck\",\"style\",\"tabindex\",\"title\",\"translate\",\"writingsuggestions\"])],[\"a\",new Set([\"charset\",\"coords\",\"download\",\"href\",\"hreflang\",\"name\",\"ping\",\"referrerpolicy\",\"rel\",\"rev\",\"shape\",\"target\",\"type\"])],[\"applet\",new Set([\"align\",\"alt\",\"archive\",\"code\",\"codebase\",\"height\",\"hspace\",\"name\",\"object\",\"vspace\",\"width\"])],[\"area\",new Set([\"alt\",\"coords\",\"download\",\"href\",\"hreflang\",\"nohref\",\"ping\",\"referrerpolicy\",\"rel\",\"shape\",\"target\",\"type\"])],[\"audio\",new Set([\"autoplay\",\"controls\",\"crossorigin\",\"loop\",\"muted\",\"preload\",\"src\"])],[\"base\",new Set([\"href\",\"target\"])],[\"basefont\",new Set([\"color\",\"face\",\"size\"])],[\"blockquote\",new Set([\"cite\"])],[\"body\",new Set([\"alink\",\"background\",\"bgcolor\",\"link\",\"text\",\"vlink\"])],[\"br\",new Set([\"clear\"])],[\"button\",new Set([\"disabled\",\"form\",\"formaction\",\"formenctype\",\"formmethod\",\"formnovalidate\",\"formtarget\",\"name\",\"popovertarget\",\"popovertargetaction\",\"type\",\"value\"])],[\"canvas\",new Set([\"height\",\"width\"])],[\"caption\",new Set([\"align\"])],[\"col\",new Set([\"align\",\"char\",\"charoff\",\"span\",\"valign\",\"width\"])],[\"colgroup\",new Set([\"align\",\"char\",\"charoff\",\"span\",\"valign\",\"width\"])],[\"data\",new Set([\"value\"])],[\"del\",new Set([\"cite\",\"datetime\"])],[\"details\",new Set([\"name\",\"open\"])],[\"dialog\",new Set([\"open\"])],[\"dir\",new Set([\"compact\"])],[\"div\",new Set([\"align\"])],[\"dl\",new Set([\"compact\"])],[\"embed\",new Set([\"height\",\"src\",\"type\",\"width\"])],[\"fieldset\",new Set([\"disabled\",\"form\",\"name\"])],[\"font\",new Set([\"color\",\"face\",\"size\"])],[\"form\",new Set([\"accept\",\"accept-charset\",\"action\",\"autocomplete\",\"enctype\",\"method\",\"name\",\"novalidate\",\"target\"])],[\"frame\",new Set([\"frameborder\",\"longdesc\",\"marginheight\",\"marginwidth\",\"name\",\"noresize\",\"scrolling\",\"src\"])],[\"frameset\",new Set([\"cols\",\"rows\"])],[\"h1\",new Set([\"align\"])],[\"h2\",new Set([\"align\"])],[\"h3\",new Set([\"align\"])],[\"h4\",new Set([\"align\"])],[\"h5\",new Set([\"align\"])],[\"h6\",new Set([\"align\"])],[\"head\",new Set([\"profile\"])],[\"hr\",new Set([\"align\",\"noshade\",\"size\",\"width\"])],[\"html\",new Set([\"manifest\",\"version\"])],[\"iframe\",new Set([\"align\",\"allow\",\"allowfullscreen\",\"allowpaymentrequest\",\"allowusermedia\",\"frameborder\",\"height\",\"loading\",\"longdesc\",\"marginheight\",\"marginwidth\",\"name\",\"referrerpolicy\",\"sandbox\",\"scrolling\",\"src\",\"srcdoc\",\"width\"])],[\"img\",new Set([\"align\",\"alt\",\"border\",\"crossorigin\",\"decoding\",\"fetchpriority\",\"height\",\"hspace\",\"ismap\",\"loading\",\"longdesc\",\"name\",\"referrerpolicy\",\"sizes\",\"src\",\"srcset\",\"usemap\",\"vspace\",\"width\"])],[\"input\",new Set([\"accept\",\"align\",\"alt\",\"autocomplete\",\"checked\",\"dirname\",\"disabled\",\"form\",\"formaction\",\"formenctype\",\"formmethod\",\"formnovalidate\",\"formtarget\",\"height\",\"ismap\",\"list\",\"max\",\"maxlength\",\"min\",\"minlength\",\"multiple\",\"name\",\"pattern\",\"placeholder\",\"popovertarget\",\"popovertargetaction\",\"readonly\",\"required\",\"size\",\"src\",\"step\",\"type\",\"usemap\",\"value\",\"width\"])],[\"ins\",new Set([\"cite\",\"datetime\"])],[\"isindex\",new Set([\"prompt\"])],[\"label\",new Set([\"for\",\"form\"])],[\"legend\",new Set([\"align\"])],[\"li\",new Set([\"type\",\"value\"])],[\"link\",new Set([\"as\",\"blocking\",\"charset\",\"color\",\"crossorigin\",\"disabled\",\"fetchpriority\",\"href\",\"hreflang\",\"imagesizes\",\"imagesrcset\",\"integrity\",\"media\",\"referrerpolicy\",\"rel\",\"rev\",\"sizes\",\"target\",\"type\"])],[\"map\",new Set([\"name\"])],[\"menu\",new Set([\"compact\"])],[\"meta\",new Set([\"charset\",\"content\",\"http-equiv\",\"media\",\"name\",\"scheme\"])],[\"meter\",new Set([\"high\",\"low\",\"max\",\"min\",\"optimum\",\"value\"])],[\"object\",new Set([\"align\",\"archive\",\"border\",\"classid\",\"codebase\",\"codetype\",\"data\",\"declare\",\"form\",\"height\",\"hspace\",\"name\",\"standby\",\"type\",\"typemustmatch\",\"usemap\",\"vspace\",\"width\"])],[\"ol\",new Set([\"compact\",\"reversed\",\"start\",\"type\"])],[\"optgroup\",new Set([\"disabled\",\"label\"])],[\"option\",new Set([\"disabled\",\"label\",\"selected\",\"value\"])],[\"output\",new Set([\"for\",\"form\",\"name\"])],[\"p\",new Set([\"align\"])],[\"param\",new Set([\"name\",\"type\",\"value\",\"valuetype\"])],[\"pre\",new Set([\"width\"])],[\"progress\",new Set([\"max\",\"value\"])],[\"q\",new Set([\"cite\"])],[\"script\",new Set([\"async\",\"blocking\",\"charset\",\"crossorigin\",\"defer\",\"fetchpriority\",\"integrity\",\"language\",\"nomodule\",\"referrerpolicy\",\"src\",\"type\"])],[\"select\",new Set([\"autocomplete\",\"disabled\",\"form\",\"multiple\",\"name\",\"required\",\"size\"])],[\"slot\",new Set([\"name\"])],[\"source\",new Set([\"height\",\"media\",\"sizes\",\"src\",\"srcset\",\"type\",\"width\"])],[\"style\",new Set([\"blocking\",\"media\",\"type\"])],[\"table\",new Set([\"align\",\"bgcolor\",\"border\",\"cellpadding\",\"cellspacing\",\"frame\",\"rules\",\"summary\",\"width\"])],[\"tbody\",new Set([\"align\",\"char\",\"charoff\",\"valign\"])],[\"td\",new Set([\"abbr\",\"align\",\"axis\",\"bgcolor\",\"char\",\"charoff\",\"colspan\",\"headers\",\"height\",\"nowrap\",\"rowspan\",\"scope\",\"valign\",\"width\"])],[\"template\",new Set([\"shadowrootclonable\",\"shadowrootdelegatesfocus\",\"shadowrootmode\"])],[\"textarea\",new Set([\"autocomplete\",\"cols\",\"dirname\",\"disabled\",\"form\",\"maxlength\",\"minlength\",\"name\",\"placeholder\",\"readonly\",\"required\",\"rows\",\"wrap\"])],[\"tfoot\",new Set([\"align\",\"char\",\"charoff\",\"valign\"])],[\"th\",new Set([\"abbr\",\"align\",\"axis\",\"bgcolor\",\"char\",\"charoff\",\"colspan\",\"headers\",\"height\",\"nowrap\",\"rowspan\",\"scope\",\"valign\",\"width\"])],[\"thead\",new Set([\"align\",\"char\",\"charoff\",\"valign\"])],[\"time\",new Set([\"datetime\"])],[\"tr\",new Set([\"align\",\"bgcolor\",\"char\",\"charoff\",\"valign\"])],[\"track\",new Set([\"default\",\"kind\",\"label\",\"src\",\"srclang\"])],[\"ul\",new Set([\"compact\",\"type\"])],[\"video\",new Set([\"autoplay\",\"controls\",\"crossorigin\",\"height\",\"loop\",\"muted\",\"playsinline\",\"poster\",\"preload\",\"src\",\"width\"])]]);var gi=new Set([\"a\",\"abbr\",\"acronym\",\"address\",\"applet\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"base\",\"basefont\",\"bdi\",\"bdo\",\"bgsound\",\"big\",\"blink\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"center\",\"cite\",\"code\",\"col\",\"colgroup\",\"command\",\"content\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"dir\",\"div\",\"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"font\",\"footer\",\"form\",\"frame\",\"frameset\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\",\"image\",\"img\",\"input\",\"ins\",\"isindex\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"listing\",\"main\",\"map\",\"mark\",\"marquee\",\"math\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"multicol\",\"nav\",\"nextid\",\"nobr\",\"noembed\",\"noframes\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"picture\",\"plaintext\",\"pre\",\"progress\",\"q\",\"rb\",\"rbc\",\"rp\",\"rt\",\"rtc\",\"ruby\",\"s\",\"samp\",\"script\",\"search\",\"section\",\"select\",\"shadow\",\"slot\",\"small\",\"source\",\"spacer\",\"span\",\"strike\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"svg\",\"table\",\"tbody\",\"td\",\"template\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"title\",\"tr\",\"track\",\"tt\",\"u\",\"ul\",\"var\",\"video\",\"wbr\",\"xmp\"]);function Jo(t){if(t.type===\"block\"){if(t.name=w(!1,t.name.toLowerCase(),/\\s+/gu,\" \").trim(),t.type=\"angularControlFlowBlock\",!me(t.parameters)){delete t.parameters;return}for(let e of t.parameters)e.type=\"angularControlFlowBlockParameter\";t.parameters={type:\"angularControlFlowBlockParameters\",children:t.parameters,sourceSpan:new h(t.parameters[0].sourceSpan.start,K(!1,t.parameters,-1).sourceSpan.end)}}}function Zo(t){t.type===\"letDeclaration\"&&(t.type=\"angularLetDeclaration\",t.id=t.name,t.init={type:\"angularLetDeclarationInitializer\",sourceSpan:new h(t.valueSpan.start,t.valueSpan.end),value:t.value},delete t.name,delete t.value)}function eu(t){(t.type===\"plural\"||t.type===\"select\")&&(t.clause=t.type,t.type=\"angularIcuExpression\"),t.type===\"expansionCase\"&&(t.type=\"angularIcuCase\")}function Si(t,e,r){let{name:n,canSelfClose:s=!0,normalizeTagName:i=!1,normalizeAttributeName:a=!1,allowHtmComponentClosingTags:o=!1,isTagNameCaseSensitive:u=!1,shouldParseAsRawText:p}=e,{rootNodes:l,errors:m}=Qr(t,{canSelfClose:s,allowHtmComponentClosingTags:o,isTagNameCaseSensitive:u,getTagContentType:p?(...c)=>p(...c)?N.RAW_TEXT:void 0:void 0,tokenizeAngularBlocks:n===\"angular\"?!0:void 0,tokenizeAngularLetDeclaration:n===\"angular\"?!0:void 0});if(n===\"vue\"){if(l.some(x=>x.type===\"docType\"&&x.value===\"html\"||x.type===\"element\"&&x.name.toLowerCase()===\"html\"))return Si(t,en,r);let g,y=()=>g??(g=Qr(t,{canSelfClose:s,allowHtmComponentClosingTags:o,isTagNameCaseSensitive:u})),q=x=>y().rootNodes.find(({startSourceSpan:U})=>U&&U.start.offset===x.startSourceSpan.start.offset)??x;for(let[x,U]of l.entries()){let{endSourceSpan:nn,startSourceSpan:Ei}=U;if(nn===null)m=y().errors,l[x]=q(U);else if(tu(U,r)){let sn=y().errors.find(an=>an.span.start.offset>Ei.start.offset&&an.span.start.offset<nn.end.offset);sn&&Ci(sn),l[x]=q(U)}}}m.length>0&&Ci(m[0]);let f=c=>{let g=c.name.startsWith(\":\")?c.name.slice(1).split(\":\")[0]:null,y=c.nameSpan.toString(),q=g!==null&&y.startsWith(`${g}:`),x=q?y.slice(g.length+1):y;c.name=x,c.namespace=g,c.hasExplicitNamespace=q},C=c=>{switch(c.type){case\"element\":f(c);for(let g of c.attrs)f(g),g.valueSpan?(g.value=g.valueSpan.toString(),/[\"']/u.test(g.value[0])&&(g.value=g.value.slice(1,-1))):g.value=null;break;case\"comment\":c.value=c.sourceSpan.toString().slice(4,-3);break;case\"text\":c.value=c.sourceSpan.toString();break}},A=(c,g)=>{let y=c.toLowerCase();return g(y)?y:c},D=c=>{if(c.type===\"element\"&&(i&&(!c.namespace||c.namespace===c.tagDefinition.implicitNamespacePrefix||fe(c))&&(c.name=A(c.name,g=>gi.has(g))),a))for(let g of c.attrs)g.namespace||(g.name=A(g.name,y=>ur.has(c.name)&&(ur.get(\"*\").has(y)||ur.get(c.name).has(y))))},I=c=>{c.sourceSpan&&c.endSourceSpan&&(c.sourceSpan=new h(c.sourceSpan.start,c.endSourceSpan.end))},F=c=>{if(c.type===\"element\"){let g=He(u?c.name:c.name.toLowerCase());!c.namespace||c.namespace===g.implicitNamespacePrefix||fe(c)?c.tagDefinition=g:c.tagDefinition=He(\"\")}};return Qt(new class extends ft{visitExpansionCase(c,g){n===\"angular\"&&this.visitChildren(g,y=>{y(c.expression)})}visit(c){C(c),F(c),D(c),I(c)}},l),l}function tu(t,e){var n;if(t.type!==\"element\"||t.name!==\"template\")return!1;let r=(n=t.attrs.find(s=>s.name===\"lang\"))==null?void 0:n.value;return!r||Ne(e,{language:r})===\"html\"}function Ci(t){let{msg:e,span:{start:r,end:n}}=t;throw hi(e,{loc:{start:{line:r.line+1,column:r.col+1},end:{line:n.line+1,column:n.col+1}},cause:t})}function _i(t,e,r={},n=!0){let{frontMatter:s,content:i}=n?mi(t):{frontMatter:null,content:t},a=new ve(t,r.filepath),o=new ie(a,0,0,0),u=o.moveBy(t.length),p={type:\"root\",sourceSpan:new h(o,u),children:Si(i,e,r)};if(s){let f=new ie(a,0,0,0),C=f.moveBy(s.raw.length);s.sourceSpan=new h(f,C),p.children.unshift(s)}let l=new or(p),m=(f,C)=>{let{offset:A}=C,D=w(!1,t.slice(0,A),/[^\\n\\r]/gu,\" \"),F=_i(D+f,e,r,!1);F.sourceSpan=new h(C,K(!1,F.children,-1).sourceSpan.end);let c=F.children[0];return c.length===A?F.children.shift():(c.sourceSpan=new h(c.sourceSpan.start.moveBy(A),c.sourceSpan.end),c.value=c.value.slice(A)),F};return l.walk(f=>{if(f.type===\"comment\"){let C=di(f,m);C&&f.parent.replaceChild(f,C)}Jo(f),Zo(f),eu(f)}),l}function Et(t){return{parse:(e,r)=>_i(e,t,r),hasPragma:ws,hasIgnorePragma:bs,astFormat:\"html\",locStart:J,locEnd:se}}var en={name:\"html\",normalizeTagName:!0,normalizeAttributeName:!0,allowHtmComponentClosingTags:!0},ru=Et(en),nu=new Set([\"mj-style\",\"mj-raw\"]),su=Et({...en,name:\"mjml\",shouldParseAsRawText:t=>nu.has(t)}),iu=Et({name:\"angular\"}),au=Et({name:\"vue\",isTagNameCaseSensitive:!0,shouldParseAsRawText(t,e,r,n){return t.toLowerCase()!==\"html\"&&!r&&(t!==\"template\"||n.some(({name:s,value:i})=>s===\"lang\"&&i!==\"html\"&&i!==\"\"&&i!==void 0))}}),ou=Et({name:\"lwc\",canSelfClose:!1});var uu={html:qs};var ym=rn;export{ym as default,Hs as languages,Us as options,tn as parsers,uu as printers};\n",
    "var Fu=Object.create;var pt=Object.defineProperty;var pu=Object.getOwnPropertyDescriptor;var du=Object.getOwnPropertyNames;var mu=Object.getPrototypeOf,Eu=Object.prototype.hasOwnProperty;var er=e=>{throw TypeError(e)};var Cu=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),dt=(e,t)=>{for(var r in t)pt(e,r,{get:t[r],enumerable:!0})},hu=(e,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let u of du(t))!Eu.call(e,u)&&u!==r&&pt(e,u,{get:()=>t[u],enumerable:!(n=pu(t,u))||n.enumerable});return e};var gu=(e,t,r)=>(r=e!=null?Fu(mu(e)):{},hu(t||!e||!e.__esModule?pt(r,\"default\",{value:e,enumerable:!0}):r,e));var yu=(e,t,r)=>t.has(e)||er(\"Cannot \"+r);var tr=(e,t,r)=>t.has(e)?er(\"Cannot add the same private member more than once\"):t instanceof WeakSet?t.add(e):t.set(e,r);var fe=(e,t,r)=>(yu(e,t,\"access private method\"),r);var Pn=Cu(Mt=>{\"use strict\";Object.defineProperty(Mt,\"__esModule\",{value:!0});function Co(){return new Proxy({},{get:()=>e=>e})}var On=/\\r\\n|[\\n\\r\\u2028\\u2029]/;function ho(e,t,r){let n=Object.assign({column:0,line:-1},e.start),u=Object.assign({},n,e.end),{linesAbove:o=2,linesBelow:i=3}=r||{},s=n.line,a=n.column,c=u.line,D=u.column,p=Math.max(s-(o+1),0),l=Math.min(t.length,c+i);s===-1&&(p=0),c===-1&&(l=t.length);let F=c-s,f={};if(F)for(let d=0;d<=F;d++){let m=d+s;if(!a)f[m]=!0;else if(d===0){let C=t[m-1].length;f[m]=[a,C-a+1]}else if(d===F)f[m]=[0,D];else{let C=t[m-d].length;f[m]=[0,C]}}else a===D?a?f[s]=[a,0]:f[s]=!0:f[s]=[a,D-a];return{start:p,end:l,markerLines:f}}function go(e,t,r={}){let u=Co(!1),o=e.split(On),{start:i,end:s,markerLines:a}=ho(t,o,r),c=t.start&&typeof t.start.column==\"number\",D=String(s).length,l=e.split(On,s).slice(i,s).map((F,f)=>{let d=i+1+f,C=` ${` ${d}`.slice(-D)} |`,E=a[d],h=!a[d+1];if(E){let x=\"\";if(Array.isArray(E)){let A=F.slice(0,Math.max(E[0]-1,0)).replace(/[^\\t]/g,\" \"),$=E[1]||1;x=[`\n `,u.gutter(C.replace(/\\d/g,\" \")),\" \",A,u.marker(\"^\").repeat($)].join(\"\"),h&&r.message&&(x+=\" \"+u.message(r.message))}return[u.marker(\">\"),u.gutter(C),F.length>0?` ${F}`:\"\",x].join(\"\")}else return` ${u.gutter(C)}${F.length>0?` ${F}`:\"\"}`}).join(`\n`);return r.message&&!c&&(l=`${\" \".repeat(D+1)}${r.message}\n${l}`),l}Mt.codeFrameColumns=go});var Zt={};dt(Zt,{__debug:()=>ui,check:()=>ri,doc:()=>qt,format:()=>fu,formatWithCursor:()=>cu,getSupportInfo:()=>ni,util:()=>Qt,version:()=>tu});var Au=(e,t,r,n)=>{if(!(e&&t==null))return t.replaceAll?t.replaceAll(r,n):r.global?t.replace(r,n):t.split(r).join(n)},te=Au;var _e=class{diff(t,r,n={}){let u;typeof n==\"function\"?(u=n,n={}):\"callback\"in n&&(u=n.callback);let o=this.castInput(t,n),i=this.castInput(r,n),s=this.removeEmpty(this.tokenize(o,n)),a=this.removeEmpty(this.tokenize(i,n));return this.diffWithOptionsObj(s,a,n,u)}diffWithOptionsObj(t,r,n,u){var o;let i=E=>{if(E=this.postProcess(E,n),u){setTimeout(function(){u(E)},0);return}else return E},s=r.length,a=t.length,c=1,D=s+a;n.maxEditLength!=null&&(D=Math.min(D,n.maxEditLength));let p=(o=n.timeout)!==null&&o!==void 0?o:1/0,l=Date.now()+p,F=[{oldPos:-1,lastComponent:void 0}],f=this.extractCommon(F[0],r,t,0,n);if(F[0].oldPos+1>=a&&f+1>=s)return i(this.buildValues(F[0].lastComponent,r,t));let d=-1/0,m=1/0,C=()=>{for(let E=Math.max(d,-c);E<=Math.min(m,c);E+=2){let h,x=F[E-1],A=F[E+1];x&&(F[E-1]=void 0);let $=!1;if(A){let Be=A.oldPos-E;$=A&&0<=Be&&Be<s}let ue=x&&x.oldPos+1<a;if(!$&&!ue){F[E]=void 0;continue}if(!ue||$&&x.oldPos<A.oldPos?h=this.addToPath(A,!0,!1,0,n):h=this.addToPath(x,!1,!0,1,n),f=this.extractCommon(h,r,t,E,n),h.oldPos+1>=a&&f+1>=s)return i(this.buildValues(h.lastComponent,r,t))||!0;F[E]=h,h.oldPos+1>=a&&(m=Math.min(m,E-1)),f+1>=s&&(d=Math.max(d,E+1))}c++};if(u)(function E(){setTimeout(function(){if(c>D||Date.now()>l)return u(void 0);C()||E()},0)})();else for(;c<=D&&Date.now()<=l;){let E=C();if(E)return E}}addToPath(t,r,n,u,o){let i=t.lastComponent;return i&&!o.oneChangePerToken&&i.added===r&&i.removed===n?{oldPos:t.oldPos+u,lastComponent:{count:i.count+1,added:r,removed:n,previousComponent:i.previousComponent}}:{oldPos:t.oldPos+u,lastComponent:{count:1,added:r,removed:n,previousComponent:i}}}extractCommon(t,r,n,u,o){let i=r.length,s=n.length,a=t.oldPos,c=a-u,D=0;for(;c+1<i&&a+1<s&&this.equals(n[a+1],r[c+1],o);)c++,a++,D++,o.oneChangePerToken&&(t.lastComponent={count:1,previousComponent:t.lastComponent,added:!1,removed:!1});return D&&!o.oneChangePerToken&&(t.lastComponent={count:D,previousComponent:t.lastComponent,added:!1,removed:!1}),t.oldPos=a,c}equals(t,r,n){return n.comparator?n.comparator(t,r):t===r||!!n.ignoreCase&&t.toLowerCase()===r.toLowerCase()}removeEmpty(t){let r=[];for(let n=0;n<t.length;n++)t[n]&&r.push(t[n]);return r}castInput(t,r){return t}tokenize(t,r){return Array.from(t)}join(t){return t.join(\"\")}postProcess(t,r){return t}get useLongestToken(){return!1}buildValues(t,r,n){let u=[],o;for(;t;)u.push(t),o=t.previousComponent,delete t.previousComponent,t=o;u.reverse();let i=u.length,s=0,a=0,c=0;for(;s<i;s++){let D=u[s];if(D.removed)D.value=this.join(n.slice(c,c+D.count)),c+=D.count;else{if(!D.added&&this.useLongestToken){let p=r.slice(a,a+D.count);p=p.map(function(l,F){let f=n[c+F];return f.length>l.length?f:l}),D.value=this.join(p)}else D.value=this.join(r.slice(a,a+D.count));a+=D.count,D.added||(c+=D.count)}}return u}};var mt=class extends _e{tokenize(t){return t.slice()}join(t){return t}removeEmpty(t){return t}},rr=new mt;function Et(e,t,r){return rr.diff(e,t,r)}function nr(e){let t=e.indexOf(\"\\r\");return t!==-1?e.charAt(t+1)===`\n`?\"crlf\":\"cr\":\"lf\"}function xe(e){switch(e){case\"cr\":return\"\\r\";case\"crlf\":return`\\r\n`;default:return`\n`}}function Ct(e,t){let r;switch(t){case`\n`:r=/\\n/gu;break;case\"\\r\":r=/\\r/gu;break;case`\\r\n`:r=/\\r\\n/gu;break;default:throw new Error(`Unexpected \"eol\" ${JSON.stringify(t)}.`)}let n=e.match(r);return n?n.length:0}function ur(e){return te(!1,e,/\\r\\n?/gu,`\n`)}var W=\"string\",Y=\"array\",j=\"cursor\",N=\"indent\",O=\"align\",P=\"trim\",B=\"group\",k=\"fill\",_=\"if-break\",v=\"indent-if-break\",L=\"line-suffix\",I=\"line-suffix-boundary\",g=\"line\",S=\"label\",w=\"break-parent\",Ue=new Set([j,N,O,P,B,k,_,v,L,I,g,S,w]);var Bu=(e,t,r)=>{if(!(e&&t==null))return Array.isArray(t)||typeof t==\"string\"?t[r<0?t.length+r:r]:t.at(r)},y=Bu;function or(e){let t=e.length;for(;t>0&&(e[t-1]===\"\\r\"||e[t-1]===`\n`);)t--;return t<e.length?e.slice(0,t):e}function _u(e){if(typeof e==\"string\")return W;if(Array.isArray(e))return Y;if(!e)return;let{type:t}=e;if(Ue.has(t))return t}var M=_u;var xu=e=>new Intl.ListFormat(\"en-US\",{type:\"disjunction\"}).format(e);function wu(e){let t=e===null?\"null\":typeof e;if(t!==\"string\"&&t!==\"object\")return`Unexpected doc '${t}', \nExpected it to be 'string' or 'object'.`;if(M(e))throw new Error(\"doc is valid.\");let r=Object.prototype.toString.call(e);if(r!==\"[object Object]\")return`Unexpected doc '${r}'.`;let n=xu([...Ue].map(u=>`'${u}'`));return`Unexpected doc.type '${e.type}'.\nExpected it to be ${n}.`}var ht=class extends Error{name=\"InvalidDocError\";constructor(t){super(wu(t)),this.doc=t}},q=ht;var ir={};function bu(e,t,r,n){let u=[e];for(;u.length>0;){let o=u.pop();if(o===ir){r(u.pop());continue}r&&u.push(o,ir);let i=M(o);if(!i)throw new q(o);if((t==null?void 0:t(o))!==!1)switch(i){case Y:case k:{let s=i===Y?o:o.parts;for(let a=s.length,c=a-1;c>=0;--c)u.push(s[c]);break}case _:u.push(o.flatContents,o.breakContents);break;case B:if(n&&o.expandedStates)for(let s=o.expandedStates.length,a=s-1;a>=0;--a)u.push(o.expandedStates[a]);else u.push(o.contents);break;case O:case N:case v:case S:case L:u.push(o.contents);break;case W:case j:case P:case I:case g:case w:break;default:throw new q(o)}}}var le=bu;function be(e,t){if(typeof e==\"string\")return t(e);let r=new Map;return n(e);function n(o){if(r.has(o))return r.get(o);let i=u(o);return r.set(o,i),i}function u(o){switch(M(o)){case Y:return t(o.map(n));case k:return t({...o,parts:o.parts.map(n)});case _:return t({...o,breakContents:n(o.breakContents),flatContents:n(o.flatContents)});case B:{let{expandedStates:i,contents:s}=o;return i?(i=i.map(n),s=i[0]):s=n(s),t({...o,contents:s,expandedStates:i})}case O:case N:case v:case S:case L:return t({...o,contents:n(o.contents)});case W:case j:case P:case I:case g:case w:return t(o);default:throw new q(o)}}}function Ve(e,t,r){let n=r,u=!1;function o(i){if(u)return!1;let s=t(i);s!==void 0&&(u=!0,n=s)}return le(e,o),n}function ku(e){if(e.type===B&&e.break||e.type===g&&e.hard||e.type===w)return!0}function Dr(e){return Ve(e,ku,!1)}function sr(e){if(e.length>0){let t=y(!1,e,-1);!t.expandedStates&&!t.break&&(t.break=\"propagated\")}return null}function cr(e){let t=new Set,r=[];function n(o){if(o.type===w&&sr(r),o.type===B){if(r.push(o),t.has(o))return!1;t.add(o)}}function u(o){o.type===B&&r.pop().break&&sr(r)}le(e,n,u,!0)}function Su(e){return e.type===g&&!e.hard?e.soft?\"\":\" \":e.type===_?e.flatContents:e}function fr(e){return be(e,Su)}function ar(e){for(e=[...e];e.length>=2&&y(!1,e,-2).type===g&&y(!1,e,-1).type===w;)e.length-=2;if(e.length>0){let t=we(y(!1,e,-1));e[e.length-1]=t}return e}function we(e){switch(M(e)){case N:case v:case B:case L:case S:{let t=we(e.contents);return{...e,contents:t}}case _:return{...e,breakContents:we(e.breakContents),flatContents:we(e.flatContents)};case k:return{...e,parts:ar(e.parts)};case Y:return ar(e);case W:return or(e);case O:case j:case P:case I:case g:case w:break;default:throw new q(e)}return e}function $e(e){return we(Nu(e))}function Tu(e){switch(M(e)){case k:if(e.parts.every(t=>t===\"\"))return\"\";break;case B:if(!e.contents&&!e.id&&!e.break&&!e.expandedStates)return\"\";if(e.contents.type===B&&e.contents.id===e.id&&e.contents.break===e.break&&e.contents.expandedStates===e.expandedStates)return e.contents;break;case O:case N:case v:case L:if(!e.contents)return\"\";break;case _:if(!e.flatContents&&!e.breakContents)return\"\";break;case Y:{let t=[];for(let r of e){if(!r)continue;let[n,...u]=Array.isArray(r)?r:[r];typeof n==\"string\"&&typeof y(!1,t,-1)==\"string\"?t[t.length-1]+=n:t.push(n),t.push(...u)}return t.length===0?\"\":t.length===1?t[0]:t}case W:case j:case P:case I:case g:case S:case w:break;default:throw new q(e)}return e}function Nu(e){return be(e,t=>Tu(t))}function lr(e,t=We){return be(e,r=>typeof r==\"string\"?ke(t,r.split(`\n`)):r)}function Ou(e){if(e.type===g)return!0}function Fr(e){return Ve(e,Ou,!1)}function Fe(e,t){return e.type===S?{...e,contents:t(e.contents)}:t(e)}var gt=()=>{},K=gt,yt=gt,pr=gt;function ie(e){return K(e),{type:N,contents:e}}function oe(e,t){return K(t),{type:O,contents:t,n:e}}function At(e,t={}){return K(e),yt(t.expandedStates,!0),{type:B,id:t.id,contents:e,break:!!t.shouldBreak,expandedStates:t.expandedStates}}function dr(e){return oe(Number.NEGATIVE_INFINITY,e)}function mr(e){return oe({type:\"root\"},e)}function Er(e){return oe(-1,e)}function Cr(e,t){return At(e[0],{...t,expandedStates:e})}function hr(e){return pr(e),{type:k,parts:e}}function gr(e,t=\"\",r={}){return K(e),t!==\"\"&&K(t),{type:_,breakContents:e,flatContents:t,groupId:r.groupId}}function yr(e,t){return K(e),{type:v,contents:e,groupId:t.groupId,negate:t.negate}}function Se(e){return K(e),{type:L,contents:e}}var Ar={type:I},pe={type:w},Br={type:P},Te={type:g,hard:!0},Bt={type:g,hard:!0,literal:!0},Me={type:g},_r={type:g,soft:!0},z=[Te,pe],We=[Bt,pe],X={type:j};function ke(e,t){K(e),yt(t);let r=[];for(let n=0;n<t.length;n++)n!==0&&r.push(e),r.push(t[n]);return r}function Ge(e,t,r){K(e);let n=e;if(t>0){for(let u=0;u<Math.floor(t/r);++u)n=ie(n);n=oe(t%r,n),n=oe(Number.NEGATIVE_INFINITY,n)}return n}function xr(e,t){return K(t),e?{type:S,label:e,contents:t}:t}function Q(e){var t;if(!e)return\"\";if(Array.isArray(e)){let r=[];for(let n of e)if(Array.isArray(n))r.push(...Q(n));else{let u=Q(n);u!==\"\"&&r.push(u)}return r}return e.type===_?{...e,breakContents:Q(e.breakContents),flatContents:Q(e.flatContents)}:e.type===B?{...e,contents:Q(e.contents),expandedStates:(t=e.expandedStates)==null?void 0:t.map(Q)}:e.type===k?{type:\"fill\",parts:e.parts.map(Q)}:e.contents?{...e,contents:Q(e.contents)}:e}function wr(e){let t=Object.create(null),r=new Set;return n(Q(e));function n(o,i,s){var a,c;if(typeof o==\"string\")return JSON.stringify(o);if(Array.isArray(o)){let D=o.map(n).filter(Boolean);return D.length===1?D[0]:`[${D.join(\", \")}]`}if(o.type===g){let D=((a=s==null?void 0:s[i+1])==null?void 0:a.type)===w;return o.literal?D?\"literalline\":\"literallineWithoutBreakParent\":o.hard?D?\"hardline\":\"hardlineWithoutBreakParent\":o.soft?\"softline\":\"line\"}if(o.type===w)return((c=s==null?void 0:s[i-1])==null?void 0:c.type)===g&&s[i-1].hard?void 0:\"breakParent\";if(o.type===P)return\"trim\";if(o.type===N)return\"indent(\"+n(o.contents)+\")\";if(o.type===O)return o.n===Number.NEGATIVE_INFINITY?\"dedentToRoot(\"+n(o.contents)+\")\":o.n<0?\"dedent(\"+n(o.contents)+\")\":o.n.type===\"root\"?\"markAsRoot(\"+n(o.contents)+\")\":\"align(\"+JSON.stringify(o.n)+\", \"+n(o.contents)+\")\";if(o.type===_)return\"ifBreak(\"+n(o.breakContents)+(o.flatContents?\", \"+n(o.flatContents):\"\")+(o.groupId?(o.flatContents?\"\":', \"\"')+`, { groupId: ${u(o.groupId)} }`:\"\")+\")\";if(o.type===v){let D=[];o.negate&&D.push(\"negate: true\"),o.groupId&&D.push(`groupId: ${u(o.groupId)}`);let p=D.length>0?`, { ${D.join(\", \")} }`:\"\";return`indentIfBreak(${n(o.contents)}${p})`}if(o.type===B){let D=[];o.break&&o.break!==\"propagated\"&&D.push(\"shouldBreak: true\"),o.id&&D.push(`id: ${u(o.id)}`);let p=D.length>0?`, { ${D.join(\", \")} }`:\"\";return o.expandedStates?`conditionalGroup([${o.expandedStates.map(l=>n(l)).join(\",\")}]${p})`:`group(${n(o.contents)}${p})`}if(o.type===k)return`fill([${o.parts.map(D=>n(D)).join(\", \")}])`;if(o.type===L)return\"lineSuffix(\"+n(o.contents)+\")\";if(o.type===I)return\"lineSuffixBoundary\";if(o.type===S)return`label(${JSON.stringify(o.label)}, ${n(o.contents)})`;if(o.type===j)return\"cursor\";throw new Error(\"Unknown doc type \"+o.type)}function u(o){if(typeof o!=\"symbol\")return JSON.stringify(String(o));if(o in t)return t[o];let i=o.description||\"symbol\";for(let s=0;;s++){let a=i+(s>0?` #${s}`:\"\");if(!r.has(a))return r.add(a),t[o]=`Symbol.for(${JSON.stringify(a)})`}}}var br=()=>/[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26D3\\uFE0F?(?:\\u200D\\uD83D\\uDCA5)?|\\u26F9(?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF43\\uDF45-\\uDF4A\\uDF4C-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDF44(?:\\u200D\\uD83D\\uDFEB)?|\\uDF4B(?:\\u200D\\uD83D\\uDFE9)?|\\uDFC3(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4\\uDEB5](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE41\\uDE43\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC08(?:\\u200D\\u2B1B)?|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC26(?:\\u200D(?:\\u2B1B|\\uD83D\\uDD25))?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uD83C[\\uDFFB-\\uDFFF]|\\uFE0F)?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?|\\uDE42(?:\\u200D[\\u2194\\u2195]\\uFE0F?)?|\\uDEB6(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE89\\uDE8F-\\uDEC2\\uDEC6\\uDECE-\\uDEDC\\uDEDF-\\uDEE9]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDCE(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1|\\uDDD1\\u200D\\uD83E\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?|\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;function kr(e){return e===12288||e>=65281&&e<=65376||e>=65504&&e<=65510}function Sr(e){return e>=4352&&e<=4447||e===8986||e===8987||e===9001||e===9002||e>=9193&&e<=9196||e===9200||e===9203||e===9725||e===9726||e===9748||e===9749||e>=9776&&e<=9783||e>=9800&&e<=9811||e===9855||e>=9866&&e<=9871||e===9875||e===9889||e===9898||e===9899||e===9917||e===9918||e===9924||e===9925||e===9934||e===9940||e===9962||e===9970||e===9971||e===9973||e===9978||e===9981||e===9989||e===9994||e===9995||e===10024||e===10060||e===10062||e>=10067&&e<=10069||e===10071||e>=10133&&e<=10135||e===10160||e===10175||e===11035||e===11036||e===11088||e===11093||e>=11904&&e<=11929||e>=11931&&e<=12019||e>=12032&&e<=12245||e>=12272&&e<=12287||e>=12289&&e<=12350||e>=12353&&e<=12438||e>=12441&&e<=12543||e>=12549&&e<=12591||e>=12593&&e<=12686||e>=12688&&e<=12773||e>=12783&&e<=12830||e>=12832&&e<=12871||e>=12880&&e<=42124||e>=42128&&e<=42182||e>=43360&&e<=43388||e>=44032&&e<=55203||e>=63744&&e<=64255||e>=65040&&e<=65049||e>=65072&&e<=65106||e>=65108&&e<=65126||e>=65128&&e<=65131||e>=94176&&e<=94180||e===94192||e===94193||e>=94208&&e<=100343||e>=100352&&e<=101589||e>=101631&&e<=101640||e>=110576&&e<=110579||e>=110581&&e<=110587||e===110589||e===110590||e>=110592&&e<=110882||e===110898||e>=110928&&e<=110930||e===110933||e>=110948&&e<=110951||e>=110960&&e<=111355||e>=119552&&e<=119638||e>=119648&&e<=119670||e===126980||e===127183||e===127374||e>=127377&&e<=127386||e>=127488&&e<=127490||e>=127504&&e<=127547||e>=127552&&e<=127560||e===127568||e===127569||e>=127584&&e<=127589||e>=127744&&e<=127776||e>=127789&&e<=127797||e>=127799&&e<=127868||e>=127870&&e<=127891||e>=127904&&e<=127946||e>=127951&&e<=127955||e>=127968&&e<=127984||e===127988||e>=127992&&e<=128062||e===128064||e>=128066&&e<=128252||e>=128255&&e<=128317||e>=128331&&e<=128334||e>=128336&&e<=128359||e===128378||e===128405||e===128406||e===128420||e>=128507&&e<=128591||e>=128640&&e<=128709||e===128716||e>=128720&&e<=128722||e>=128725&&e<=128727||e>=128732&&e<=128735||e===128747||e===128748||e>=128756&&e<=128764||e>=128992&&e<=129003||e===129008||e>=129292&&e<=129338||e>=129340&&e<=129349||e>=129351&&e<=129535||e>=129648&&e<=129660||e>=129664&&e<=129673||e>=129679&&e<=129734||e>=129742&&e<=129756||e>=129759&&e<=129769||e>=129776&&e<=129784||e>=131072&&e<=196605||e>=196608&&e<=262141}var Tr=e=>!(kr(e)||Sr(e));var Pu=/[^\\x20-\\x7F]/u;function vu(e){if(!e)return 0;if(!Pu.test(e))return e.length;e=e.replace(br(),\"  \");let t=0;for(let r of e){let n=r.codePointAt(0);n<=31||n>=127&&n<=159||n>=768&&n<=879||(t+=Tr(n)?1:2)}return t}var Ne=vu;var R=Symbol(\"MODE_BREAK\"),H=Symbol(\"MODE_FLAT\"),de=Symbol(\"cursor\"),_t=Symbol(\"DOC_FILL_PRINTED_LENGTH\");function Nr(){return{value:\"\",length:0,queue:[]}}function Lu(e,t){return xt(e,{type:\"indent\"},t)}function Iu(e,t,r){return t===Number.NEGATIVE_INFINITY?e.root||Nr():t<0?xt(e,{type:\"dedent\"},r):t?t.type===\"root\"?{...e,root:e}:xt(e,{type:typeof t==\"string\"?\"stringAlign\":\"numberAlign\",n:t},r):e}function xt(e,t,r){let n=t.type===\"dedent\"?e.queue.slice(0,-1):[...e.queue,t],u=\"\",o=0,i=0,s=0;for(let f of n)switch(f.type){case\"indent\":D(),r.useTabs?a(1):c(r.tabWidth);break;case\"stringAlign\":D(),u+=f.n,o+=f.n.length;break;case\"numberAlign\":i+=1,s+=f.n;break;default:throw new Error(`Unexpected type '${f.type}'`)}return l(),{...e,value:u,length:o,queue:n};function a(f){u+=\"\t\".repeat(f),o+=r.tabWidth*f}function c(f){u+=\" \".repeat(f),o+=f}function D(){r.useTabs?p():l()}function p(){i>0&&a(i),F()}function l(){s>0&&c(s),F()}function F(){i=0,s=0}}function wt(e){let t=0,r=0,n=e.length;e:for(;n--;){let u=e[n];if(u===de){r++;continue}for(let o=u.length-1;o>=0;o--){let i=u[o];if(i===\" \"||i===\"\t\")t++;else{e[n]=u.slice(0,o+1);break e}}}if(t>0||r>0)for(e.length=n+1;r-- >0;)e.push(de);return t}function Ke(e,t,r,n,u,o){if(r===Number.POSITIVE_INFINITY)return!0;let i=t.length,s=[e],a=[];for(;r>=0;){if(s.length===0){if(i===0)return!0;s.push(t[--i]);continue}let{mode:c,doc:D}=s.pop(),p=M(D);switch(p){case W:a.push(D),r-=Ne(D);break;case Y:case k:{let l=p===Y?D:D.parts,F=D[_t]??0;for(let f=l.length-1;f>=F;f--)s.push({mode:c,doc:l[f]});break}case N:case O:case v:case S:s.push({mode:c,doc:D.contents});break;case P:r+=wt(a);break;case B:{if(o&&D.break)return!1;let l=D.break?R:c,F=D.expandedStates&&l===R?y(!1,D.expandedStates,-1):D.contents;s.push({mode:l,doc:F});break}case _:{let F=(D.groupId?u[D.groupId]||H:c)===R?D.breakContents:D.flatContents;F&&s.push({mode:c,doc:F});break}case g:if(c===R||D.hard)return!0;D.soft||(a.push(\" \"),r--);break;case L:n=!0;break;case I:if(n)return!1;break}}return!1}function me(e,t){let r={},n=t.printWidth,u=xe(t.endOfLine),o=0,i=[{ind:Nr(),mode:R,doc:e}],s=[],a=!1,c=[],D=0;for(cr(e);i.length>0;){let{ind:l,mode:F,doc:f}=i.pop();switch(M(f)){case W:{let d=u!==`\n`?te(!1,f,`\n`,u):f;s.push(d),i.length>0&&(o+=Ne(d));break}case Y:for(let d=f.length-1;d>=0;d--)i.push({ind:l,mode:F,doc:f[d]});break;case j:if(D>=2)throw new Error(\"There are too many 'cursor' in doc.\");s.push(de),D++;break;case N:i.push({ind:Lu(l,t),mode:F,doc:f.contents});break;case O:i.push({ind:Iu(l,f.n,t),mode:F,doc:f.contents});break;case P:o-=wt(s);break;case B:switch(F){case H:if(!a){i.push({ind:l,mode:f.break?R:H,doc:f.contents});break}case R:{a=!1;let d={ind:l,mode:H,doc:f.contents},m=n-o,C=c.length>0;if(!f.break&&Ke(d,i,m,C,r))i.push(d);else if(f.expandedStates){let E=y(!1,f.expandedStates,-1);if(f.break){i.push({ind:l,mode:R,doc:E});break}else for(let h=1;h<f.expandedStates.length+1;h++)if(h>=f.expandedStates.length){i.push({ind:l,mode:R,doc:E});break}else{let x=f.expandedStates[h],A={ind:l,mode:H,doc:x};if(Ke(A,i,m,C,r)){i.push(A);break}}}else i.push({ind:l,mode:R,doc:f.contents});break}}f.id&&(r[f.id]=y(!1,i,-1).mode);break;case k:{let d=n-o,m=f[_t]??0,{parts:C}=f,E=C.length-m;if(E===0)break;let h=C[m+0],x=C[m+1],A={ind:l,mode:H,doc:h},$={ind:l,mode:R,doc:h},ue=Ke(A,[],d,c.length>0,r,!0);if(E===1){ue?i.push(A):i.push($);break}let Be={ind:l,mode:H,doc:x},lt={ind:l,mode:R,doc:x};if(E===2){ue?i.push(Be,A):i.push(lt,$);break}let lu=C[m+2],Ft={ind:l,mode:F,doc:{...f,[_t]:m+2}};Ke({ind:l,mode:H,doc:[h,x,lu]},[],d,c.length>0,r,!0)?i.push(Ft,Be,A):ue?i.push(Ft,lt,A):i.push(Ft,lt,$);break}case _:case v:{let d=f.groupId?r[f.groupId]:F;if(d===R){let m=f.type===_?f.breakContents:f.negate?f.contents:ie(f.contents);m&&i.push({ind:l,mode:F,doc:m})}if(d===H){let m=f.type===_?f.flatContents:f.negate?ie(f.contents):f.contents;m&&i.push({ind:l,mode:F,doc:m})}break}case L:c.push({ind:l,mode:F,doc:f.contents});break;case I:c.length>0&&i.push({ind:l,mode:F,doc:Te});break;case g:switch(F){case H:if(f.hard)a=!0;else{f.soft||(s.push(\" \"),o+=1);break}case R:if(c.length>0){i.push({ind:l,mode:F,doc:f},...c.reverse()),c.length=0;break}f.literal?l.root?(s.push(u,l.root.value),o=l.root.length):(s.push(u),o=0):(o-=wt(s),s.push(u+l.value),o=l.length);break}break;case S:i.push({ind:l,mode:F,doc:f.contents});break;case w:break;default:throw new q(f)}i.length===0&&c.length>0&&(i.push(...c.reverse()),c.length=0)}let p=s.indexOf(de);if(p!==-1){let l=s.indexOf(de,p+1);if(l===-1)return{formatted:s.filter(m=>m!==de).join(\"\")};let F=s.slice(0,p).join(\"\"),f=s.slice(p+1,l).join(\"\"),d=s.slice(l+1).join(\"\");return{formatted:F+f+d,cursorNodeStart:F.length,cursorNodeText:f}}return{formatted:s.join(\"\")}}function Ru(e,t,r=0){let n=0;for(let u=r;u<e.length;++u)e[u]===\"\t\"?n=n+t-n%t:n++;return n}var Ee=Ru;var Z,kt,ze,bt=class{constructor(t){tr(this,Z);this.stack=[t]}get key(){let{stack:t,siblings:r}=this;return y(!1,t,r===null?-2:-4)??null}get index(){return this.siblings===null?null:y(!1,this.stack,-2)}get node(){return y(!1,this.stack,-1)}get parent(){return this.getNode(1)}get grandparent(){return this.getNode(2)}get isInArray(){return this.siblings!==null}get siblings(){let{stack:t}=this,r=y(!1,t,-3);return Array.isArray(r)?r:null}get next(){let{siblings:t}=this;return t===null?null:t[this.index+1]}get previous(){let{siblings:t}=this;return t===null?null:t[this.index-1]}get isFirst(){return this.index===0}get isLast(){let{siblings:t,index:r}=this;return t!==null&&r===t.length-1}get isRoot(){return this.stack.length===1}get root(){return this.stack[0]}get ancestors(){return[...fe(this,Z,ze).call(this)]}getName(){let{stack:t}=this,{length:r}=t;return r>1?y(!1,t,-2):null}getValue(){return y(!1,this.stack,-1)}getNode(t=0){let r=fe(this,Z,kt).call(this,t);return r===-1?null:this.stack[r]}getParentNode(t=0){return this.getNode(t+1)}call(t,...r){let{stack:n}=this,{length:u}=n,o=y(!1,n,-1);for(let i of r)o=o[i],n.push(i,o);try{return t(this)}finally{n.length=u}}callParent(t,r=0){let n=fe(this,Z,kt).call(this,r+1),u=this.stack.splice(n+1);try{return t(this)}finally{this.stack.push(...u)}}each(t,...r){let{stack:n}=this,{length:u}=n,o=y(!1,n,-1);for(let i of r)o=o[i],n.push(i,o);try{for(let i=0;i<o.length;++i)n.push(i,o[i]),t(this,i,o),n.length-=2}finally{n.length=u}}map(t,...r){let n=[];return this.each((u,o,i)=>{n[o]=t(u,o,i)},...r),n}match(...t){let r=this.stack.length-1,n=null,u=this.stack[r--];for(let o of t){if(u===void 0)return!1;let i=null;if(typeof n==\"number\"&&(i=n,n=this.stack[r--],u=this.stack[r--]),o&&!o(u,n,i))return!1;n=this.stack[r--],u=this.stack[r--]}return!0}findAncestor(t){for(let r of fe(this,Z,ze).call(this))if(t(r))return r}hasAncestor(t){for(let r of fe(this,Z,ze).call(this))if(t(r))return!0;return!1}};Z=new WeakSet,kt=function(t){let{stack:r}=this;for(let n=r.length-1;n>=0;n-=2)if(!Array.isArray(r[n])&&--t<0)return n;return-1},ze=function*(){let{stack:t}=this;for(let r=t.length-3;r>=0;r-=2){let n=t[r];Array.isArray(n)||(yield n)}};var Or=bt;var Pr=new Proxy(()=>{},{get:()=>Pr}),Oe=Pr;function Yu(e){return e!==null&&typeof e==\"object\"}var vr=Yu;function*Ce(e,t){let{getVisitorKeys:r,filter:n=()=>!0}=t,u=o=>vr(o)&&n(o);for(let o of r(e)){let i=e[o];if(Array.isArray(i))for(let s of i)u(s)&&(yield s);else u(i)&&(yield i)}}function*Lr(e,t){let r=[e];for(let n=0;n<r.length;n++){let u=r[n];for(let o of Ce(u,t))yield o,r.push(o)}}function Ir(e,t){return Ce(e,t).next().done}function he(e){return(t,r,n)=>{let u=!!(n!=null&&n.backwards);if(r===!1)return!1;let{length:o}=t,i=r;for(;i>=0&&i<o;){let s=t.charAt(i);if(e instanceof RegExp){if(!e.test(s))return i}else if(!e.includes(s))return i;u?i--:i++}return i===-1||i===o?i:!1}}var Rr=he(/\\s/u),T=he(\" \t\"),He=he(\",; \t\"),Je=he(/[^\\n\\r]/u);function ju(e,t,r){let n=!!(r!=null&&r.backwards);if(t===!1)return!1;let u=e.charAt(t);if(n){if(e.charAt(t-1)===\"\\r\"&&u===`\n`)return t-2;if(u===`\n`||u===\"\\r\"||u===\"\\u2028\"||u===\"\\u2029\")return t-1}else{if(u===\"\\r\"&&e.charAt(t+1)===`\n`)return t+2;if(u===`\n`||u===\"\\r\"||u===\"\\u2028\"||u===\"\\u2029\")return t+1}return t}var U=ju;function Uu(e,t,r={}){let n=T(e,r.backwards?t-1:t,r),u=U(e,n,r);return n!==u}var G=Uu;function Vu(e){return Array.isArray(e)&&e.length>0}var qe=Vu;var Yr=new Set([\"tokens\",\"comments\",\"parent\",\"enclosingNode\",\"precedingNode\",\"followingNode\"]),$u=e=>Object.keys(e).filter(t=>!Yr.has(t));function Wu(e){return e?t=>e(t,Yr):$u}var J=Wu;function Mu(e){let t=e.type||e.kind||\"(unknown type)\",r=String(e.name||e.id&&(typeof e.id==\"object\"?e.id.name:e.id)||e.key&&(typeof e.key==\"object\"?e.key.name:e.key)||e.value&&(typeof e.value==\"object\"?\"\":String(e.value))||e.operator||\"\");return r.length>20&&(r=r.slice(0,19)+\"\\u2026\"),t+(r?\" \"+r:\"\")}function St(e,t){(e.comments??(e.comments=[])).push(t),t.printed=!1,t.nodeDescription=Mu(e)}function se(e,t){t.leading=!0,t.trailing=!1,St(e,t)}function ee(e,t,r){t.leading=!1,t.trailing=!1,r&&(t.marker=r),St(e,t)}function ae(e,t){t.leading=!1,t.trailing=!0,St(e,t)}var Tt=new WeakMap;function Xe(e,t){if(Tt.has(e))return Tt.get(e);let{printer:{getCommentChildNodes:r,canAttachComment:n,getVisitorKeys:u},locStart:o,locEnd:i}=t;if(!n)return[];let s=((r==null?void 0:r(e,t))??[...Ce(e,{getVisitorKeys:J(u)})]).flatMap(a=>n(a)?[a]:Xe(a,t));return s.sort((a,c)=>o(a)-o(c)||i(a)-i(c)),Tt.set(e,s),s}function Ur(e,t,r,n){let{locStart:u,locEnd:o}=r,i=u(t),s=o(t),a=Xe(e,r),c,D,p=0,l=a.length;for(;p<l;){let F=p+l>>1,f=a[F],d=u(f),m=o(f);if(d<=i&&s<=m)return Ur(f,t,r,f);if(m<=i){c=f,p=F+1;continue}if(s<=d){D=f,l=F;continue}throw new Error(\"Comment location overlaps with node location\")}if((n==null?void 0:n.type)===\"TemplateLiteral\"){let{quasis:F}=n,f=Ot(F,t,r);c&&Ot(F,c,r)!==f&&(c=null),D&&Ot(F,D,r)!==f&&(D=null)}return{enclosingNode:n,precedingNode:c,followingNode:D}}var Nt=()=>!1;function Vr(e,t){let{comments:r}=e;if(delete e.comments,!qe(r)||!t.printer.canAttachComment)return;let n=[],{printer:{experimentalFeatures:{avoidAstMutation:u=!1}={},handleComments:o={}},originalText:i}=t,{ownLine:s=Nt,endOfLine:a=Nt,remaining:c=Nt}=o,D=r.map((p,l)=>({...Ur(e,p,t),comment:p,text:i,options:t,ast:e,isLastComment:r.length-1===l}));for(let[p,l]of D.entries()){let{comment:F,precedingNode:f,enclosingNode:d,followingNode:m,text:C,options:E,ast:h,isLastComment:x}=l,A;if(u?A=[l]:(F.enclosingNode=d,F.precedingNode=f,F.followingNode=m,A=[F,C,E,h,x]),Gu(C,E,D,p))F.placement=\"ownLine\",s(...A)||(m?se(m,F):f?ae(f,F):d?ee(d,F):ee(h,F));else if(Ku(C,E,D,p))F.placement=\"endOfLine\",a(...A)||(f?ae(f,F):m?se(m,F):d?ee(d,F):ee(h,F));else if(F.placement=\"remaining\",!c(...A))if(f&&m){let $=n.length;$>0&&n[$-1].followingNode!==m&&jr(n,E),n.push(l)}else f?ae(f,F):m?se(m,F):d?ee(d,F):ee(h,F)}if(jr(n,t),!u)for(let p of r)delete p.precedingNode,delete p.enclosingNode,delete p.followingNode}var $r=e=>!/[\\S\\n\\u2028\\u2029]/u.test(e);function Gu(e,t,r,n){let{comment:u,precedingNode:o}=r[n],{locStart:i,locEnd:s}=t,a=i(u);if(o)for(let c=n-1;c>=0;c--){let{comment:D,precedingNode:p}=r[c];if(p!==o||!$r(e.slice(s(D),a)))break;a=i(D)}return G(e,a,{backwards:!0})}function Ku(e,t,r,n){let{comment:u,followingNode:o}=r[n],{locStart:i,locEnd:s}=t,a=s(u);if(o)for(let c=n+1;c<r.length;c++){let{comment:D,followingNode:p}=r[c];if(p!==o||!$r(e.slice(a,i(D))))break;a=s(D)}return G(e,a)}function jr(e,t){var s,a;let r=e.length;if(r===0)return;let{precedingNode:n,followingNode:u}=e[0],o=t.locStart(u),i;for(i=r;i>0;--i){let{comment:c,precedingNode:D,followingNode:p}=e[i-1];Oe.strictEqual(D,n),Oe.strictEqual(p,u);let l=t.originalText.slice(t.locEnd(c),o);if(((a=(s=t.printer).isGap)==null?void 0:a.call(s,l,t))??/^[\\s(]*$/u.test(l))o=t.locStart(c);else break}for(let[c,{comment:D}]of e.entries())c<i?ae(n,D):se(u,D);for(let c of[n,u])c.comments&&c.comments.length>1&&c.comments.sort((D,p)=>t.locStart(D)-t.locStart(p));e.length=0}function Ot(e,t,r){let n=r.locStart(t)-1;for(let u=1;u<e.length;++u)if(n<r.locStart(e[u]))return u-1;return 0}function zu(e,t){let r=t-1;r=T(e,r,{backwards:!0}),r=U(e,r,{backwards:!0}),r=T(e,r,{backwards:!0});let n=U(e,r,{backwards:!0});return r!==n}var Pe=zu;function Wr(e,t){let r=e.node;return r.printed=!0,t.printer.printComment(e,t)}function Hu(e,t){var D;let r=e.node,n=[Wr(e,t)],{printer:u,originalText:o,locStart:i,locEnd:s}=t;if((D=u.isBlockComment)==null?void 0:D.call(u,r)){let p=G(o,s(r))?G(o,i(r),{backwards:!0})?z:Me:\" \";n.push(p)}else n.push(z);let c=U(o,T(o,s(r)));return c!==!1&&G(o,c)&&n.push(z),n}function Ju(e,t,r){var c;let n=e.node,u=Wr(e,t),{printer:o,originalText:i,locStart:s}=t,a=(c=o.isBlockComment)==null?void 0:c.call(o,n);if(r!=null&&r.hasLineSuffix&&!(r!=null&&r.isBlock)||G(i,s(n),{backwards:!0})){let D=Pe(i,s(n));return{doc:Se([z,D?z:\"\",u]),isBlock:a,hasLineSuffix:!0}}return!a||r!=null&&r.hasLineSuffix?{doc:[Se([\" \",u]),pe],isBlock:a,hasLineSuffix:!0}:{doc:[\" \",u],isBlock:a,hasLineSuffix:!1}}function qu(e,t){let r=e.node;if(!r)return{};let n=t[Symbol.for(\"printedComments\")];if((r.comments||[]).filter(a=>!n.has(a)).length===0)return{leading:\"\",trailing:\"\"};let o=[],i=[],s;return e.each(()=>{let a=e.node;if(n!=null&&n.has(a))return;let{leading:c,trailing:D}=a;c?o.push(Hu(e,t)):D&&(s=Ju(e,t,s),i.push(s.doc))},\"comments\"),{leading:o,trailing:i}}function Mr(e,t,r){let{leading:n,trailing:u}=qu(e,r);return!n&&!u?t:Fe(t,o=>[n,o,u])}function Gr(e){let{[Symbol.for(\"comments\")]:t,[Symbol.for(\"printedComments\")]:r}=e;for(let n of t){if(!n.printed&&!r.has(n))throw new Error('Comment \"'+n.value.trim()+'\" was not printed. Please report this error!');delete n.printed}}function Xu(e){return()=>{}}var Kr=Xu;var ve=class extends Error{name=\"ConfigError\"},Le=class extends Error{name=\"UndefinedParserError\"};var zr={checkIgnorePragma:{category:\"Special\",type:\"boolean\",default:!1,description:\"Check whether the file's first docblock comment contains '@noprettier' or '@noformat' to determine if it should be formatted.\",cliCategory:\"Other\"},cursorOffset:{category:\"Special\",type:\"int\",default:-1,range:{start:-1,end:1/0,step:1},description:\"Print (to stderr) where a cursor at the given position would move to after formatting.\",cliCategory:\"Editor\"},endOfLine:{category:\"Global\",type:\"choice\",default:\"lf\",description:\"Which end of line characters to apply.\",choices:[{value:\"lf\",description:\"Line Feed only (\\\\n), common on Linux and macOS as well as inside git repos\"},{value:\"crlf\",description:\"Carriage Return + Line Feed characters (\\\\r\\\\n), common on Windows\"},{value:\"cr\",description:\"Carriage Return character only (\\\\r), used very rarely\"},{value:\"auto\",description:`Maintain existing\n(mixed values within one file are normalised by looking at what's used after the first line)`}]},filepath:{category:\"Special\",type:\"path\",description:\"Specify the input filepath. This will be used to do parser inference.\",cliName:\"stdin-filepath\",cliCategory:\"Other\",cliDescription:\"Path to the file to pretend that stdin comes from.\"},insertPragma:{category:\"Special\",type:\"boolean\",default:!1,description:\"Insert @format pragma into file's first docblock comment.\",cliCategory:\"Other\"},parser:{category:\"Global\",type:\"choice\",default:void 0,description:\"Which parser to use.\",exception:e=>typeof e==\"string\"||typeof e==\"function\",choices:[{value:\"flow\",description:\"Flow\"},{value:\"babel\",description:\"JavaScript\"},{value:\"babel-flow\",description:\"Flow\"},{value:\"babel-ts\",description:\"TypeScript\"},{value:\"typescript\",description:\"TypeScript\"},{value:\"acorn\",description:\"JavaScript\"},{value:\"espree\",description:\"JavaScript\"},{value:\"meriyah\",description:\"JavaScript\"},{value:\"css\",description:\"CSS\"},{value:\"less\",description:\"Less\"},{value:\"scss\",description:\"SCSS\"},{value:\"json\",description:\"JSON\"},{value:\"json5\",description:\"JSON5\"},{value:\"jsonc\",description:\"JSON with Comments\"},{value:\"json-stringify\",description:\"JSON.stringify\"},{value:\"graphql\",description:\"GraphQL\"},{value:\"markdown\",description:\"Markdown\"},{value:\"mdx\",description:\"MDX\"},{value:\"vue\",description:\"Vue\"},{value:\"yaml\",description:\"YAML\"},{value:\"glimmer\",description:\"Ember / Handlebars\"},{value:\"html\",description:\"HTML\"},{value:\"angular\",description:\"Angular\"},{value:\"lwc\",description:\"Lightning Web Components\"},{value:\"mjml\",description:\"MJML\"}]},plugins:{type:\"path\",array:!0,default:[{value:[]}],category:\"Global\",description:\"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.\",exception:e=>typeof e==\"string\"||typeof e==\"object\",cliName:\"plugin\",cliCategory:\"Config\"},printWidth:{category:\"Global\",type:\"int\",default:80,description:\"The line length where Prettier will try wrap.\",range:{start:0,end:1/0,step:1}},rangeEnd:{category:\"Special\",type:\"int\",default:1/0,range:{start:0,end:1/0,step:1},description:`Format code ending at a given character offset (exclusive).\nThe range will extend forwards to the end of the selected statement.`,cliCategory:\"Editor\"},rangeStart:{category:\"Special\",type:\"int\",default:0,range:{start:0,end:1/0,step:1},description:`Format code starting at a given character offset.\nThe range will extend backwards to the start of the first line containing the selected statement.`,cliCategory:\"Editor\"},requirePragma:{category:\"Special\",type:\"boolean\",default:!1,description:\"Require either '@prettier' or '@format' to be present in the file's first docblock comment in order for it to be formatted.\",cliCategory:\"Other\"},tabWidth:{type:\"int\",category:\"Global\",default:2,description:\"Number of spaces per indentation level.\",range:{start:0,end:1/0,step:1}},useTabs:{category:\"Global\",type:\"boolean\",default:!1,description:\"Indent with tabs instead of spaces.\"},embeddedLanguageFormatting:{category:\"Global\",type:\"choice\",default:\"auto\",description:\"Control how Prettier formats quoted code embedded in the file.\",choices:[{value:\"auto\",description:\"Format embedded code if Prettier can automatically identify it.\"},{value:\"off\",description:\"Never automatically format embedded code.\"}]}};function Qe({plugins:e=[],showDeprecated:t=!1}={}){let r=e.flatMap(u=>u.languages??[]),n=[];for(let u of Zu(Object.assign({},...e.map(({options:o})=>o),zr)))!t&&u.deprecated||(Array.isArray(u.choices)&&(t||(u.choices=u.choices.filter(o=>!o.deprecated)),u.name===\"parser\"&&(u.choices=[...u.choices,...Qu(u.choices,r,e)])),u.pluginDefaults=Object.fromEntries(e.filter(o=>{var i;return((i=o.defaultOptions)==null?void 0:i[u.name])!==void 0}).map(o=>[o.name,o.defaultOptions[u.name]])),n.push(u));return{languages:r,options:n}}function*Qu(e,t,r){let n=new Set(e.map(u=>u.value));for(let u of t)if(u.parsers){for(let o of u.parsers)if(!n.has(o)){n.add(o);let i=r.find(a=>a.parsers&&Object.prototype.hasOwnProperty.call(a.parsers,o)),s=u.name;i!=null&&i.name&&(s+=` (plugin: ${i.name})`),yield{value:o,description:s}}}}function Zu(e){let t=[];for(let[r,n]of Object.entries(e)){let u={name:r,...n};Array.isArray(u.default)&&(u.default=y(!1,u.default,-1).value),t.push(u)}return t}var eo=(e,t)=>{if(!(e&&t==null))return t.toReversed||!Array.isArray(t)?t.toReversed():[...t].reverse()},Hr=eo;var Jr,qr,Xr,Qr,Zr,to=((Jr=globalThis.Deno)==null?void 0:Jr.build.os)===\"windows\"||((Xr=(qr=globalThis.navigator)==null?void 0:qr.platform)==null?void 0:Xr.startsWith(\"Win\"))||((Zr=(Qr=globalThis.process)==null?void 0:Qr.platform)==null?void 0:Zr.startsWith(\"win\"))||!1;function en(e){if(e=e instanceof URL?e:new URL(e),e.protocol!==\"file:\")throw new TypeError(`URL must be a file URL: received \"${e.protocol}\"`);return e}function ro(e){return e=en(e),decodeURIComponent(e.pathname.replace(/%(?![0-9A-Fa-f]{2})/g,\"%25\"))}function no(e){e=en(e);let t=decodeURIComponent(e.pathname.replace(/\\//g,\"\\\\\").replace(/%(?![0-9A-Fa-f]{2})/g,\"%25\")).replace(/^\\\\*([A-Za-z]:)(\\\\|$)/,\"$1\\\\\");return e.hostname!==\"\"&&(t=`\\\\\\\\${e.hostname}${t}`),t}function tn(e){return to?no(e):ro(e)}var rn=tn;var uo=e=>String(e).split(/[/\\\\]/u).pop();function nn(e,t){if(!t)return;let r=uo(t).toLowerCase();return e.find(({filenames:n})=>n==null?void 0:n.some(u=>u.toLowerCase()===r))??e.find(({extensions:n})=>n==null?void 0:n.some(u=>r.endsWith(u)))}function oo(e,t){if(t)return e.find(({name:r})=>r.toLowerCase()===t)??e.find(({aliases:r})=>r==null?void 0:r.includes(t))??e.find(({extensions:r})=>r==null?void 0:r.includes(`.${t}`))}function un(e,t){if(t){if(String(t).startsWith(\"file:\"))try{t=rn(t)}catch{return}if(typeof t==\"string\")return e.find(({isSupported:r})=>r==null?void 0:r({filepath:t}))}}function io(e,t){let r=Hr(!1,e.plugins).flatMap(u=>u.languages??[]),n=oo(r,t.language)??nn(r,t.physicalFile)??nn(r,t.file)??un(r,t.physicalFile)??un(r,t.file)??(t.physicalFile,void 0);return n==null?void 0:n.parsers[0]}var on=io;var re={key:e=>/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e)?e:JSON.stringify(e),value(e){if(e===null||typeof e!=\"object\")return JSON.stringify(e);if(Array.isArray(e))return`[${e.map(r=>re.value(r)).join(\", \")}]`;let t=Object.keys(e);return t.length===0?\"{}\":`{ ${t.map(r=>`${re.key(r)}: ${re.value(e[r])}`).join(\", \")} }`},pair:({key:e,value:t})=>re.value({[e]:t})};var sn=new Proxy(String,{get:()=>sn}),V=sn;var an=(e,t,{descriptor:r})=>{let n=[`${V.yellow(typeof e==\"string\"?r.key(e):r.pair(e))} is deprecated`];return t&&n.push(`we now treat it as ${V.blue(typeof t==\"string\"?r.key(t):r.pair(t))}`),n.join(\"; \")+\".\"};var Ze=Symbol.for(\"vnopts.VALUE_NOT_EXIST\"),ge=Symbol.for(\"vnopts.VALUE_UNCHANGED\");var Dn=\" \".repeat(2),fn=(e,t,r)=>{let{text:n,list:u}=r.normalizeExpectedResult(r.schemas[e].expected(r)),o=[];return n&&o.push(cn(e,t,n,r.descriptor)),u&&o.push([cn(e,t,u.title,r.descriptor)].concat(u.values.map(i=>ln(i,r.loggerPrintWidth))).join(`\n`)),Fn(o,r.loggerPrintWidth)};function cn(e,t,r,n){return[`Invalid ${V.red(n.key(e))} value.`,`Expected ${V.blue(r)},`,`but received ${t===Ze?V.gray(\"nothing\"):V.red(n.value(t))}.`].join(\" \")}function ln({text:e,list:t},r){let n=[];return e&&n.push(`- ${V.blue(e)}`),t&&n.push([`- ${V.blue(t.title)}:`].concat(t.values.map(u=>ln(u,r-Dn.length).replace(/^|\\n/g,`$&${Dn}`))).join(`\n`)),Fn(n,r)}function Fn(e,t){if(e.length===1)return e[0];let[r,n]=e,[u,o]=e.map(i=>i.split(`\n`,1)[0].length);return u>t&&u>o?n:r}var Pt=[],pn=[];function vt(e,t){if(e===t)return 0;let r=e;e.length>t.length&&(e=t,t=r);let n=e.length,u=t.length;for(;n>0&&e.charCodeAt(~-n)===t.charCodeAt(~-u);)n--,u--;let o=0;for(;o<n&&e.charCodeAt(o)===t.charCodeAt(o);)o++;if(n-=o,u-=o,n===0)return u;let i,s,a,c,D=0,p=0;for(;D<n;)pn[D]=e.charCodeAt(o+D),Pt[D]=++D;for(;p<u;)for(i=t.charCodeAt(o+p),a=p++,s=p,D=0;D<n;D++)c=i===pn[D]?a:a+1,a=Pt[D],s=Pt[D]=a>s?c>s?s+1:c:c>a?a+1:c;return s}var et=(e,t,{descriptor:r,logger:n,schemas:u})=>{let o=[`Ignored unknown option ${V.yellow(r.pair({key:e,value:t}))}.`],i=Object.keys(u).sort().find(s=>vt(e,s)<3);i&&o.push(`Did you mean ${V.blue(r.key(i))}?`),n.warn(o.join(\" \"))};var so=[\"default\",\"expected\",\"validate\",\"deprecated\",\"forward\",\"redirect\",\"overlap\",\"preprocess\",\"postprocess\"];function ao(e,t){let r=new e(t),n=Object.create(r);for(let u of so)u in t&&(n[u]=Do(t[u],r,b.prototype[u].length));return n}var b=class{static create(t){return ao(this,t)}constructor(t){this.name=t.name}default(t){}expected(t){return\"nothing\"}validate(t,r){return!1}deprecated(t,r){return!1}forward(t,r){}redirect(t,r){}overlap(t,r,n){return t}preprocess(t,r){return t}postprocess(t,r){return ge}};function Do(e,t,r){return typeof e==\"function\"?(...n)=>e(...n.slice(0,r-1),t,...n.slice(r-1)):()=>e}var tt=class extends b{constructor(t){super(t),this._sourceName=t.sourceName}expected(t){return t.schemas[this._sourceName].expected(t)}validate(t,r){return r.schemas[this._sourceName].validate(t,r)}redirect(t,r){return this._sourceName}};var rt=class extends b{expected(){return\"anything\"}validate(){return!0}};var nt=class extends b{constructor({valueSchema:t,name:r=t.name,...n}){super({...n,name:r}),this._valueSchema=t}expected(t){let{text:r,list:n}=t.normalizeExpectedResult(this._valueSchema.expected(t));return{text:r&&`an array of ${r}`,list:n&&{title:\"an array of the following values\",values:[{list:n}]}}}validate(t,r){if(!Array.isArray(t))return!1;let n=[];for(let u of t){let o=r.normalizeValidateResult(this._valueSchema.validate(u,r),u);o!==!0&&n.push(o.value)}return n.length===0?!0:{value:n}}deprecated(t,r){let n=[];for(let u of t){let o=r.normalizeDeprecatedResult(this._valueSchema.deprecated(u,r),u);o!==!1&&n.push(...o.map(({value:i})=>({value:[i]})))}return n}forward(t,r){let n=[];for(let u of t){let o=r.normalizeForwardResult(this._valueSchema.forward(u,r),u);n.push(...o.map(dn))}return n}redirect(t,r){let n=[],u=[];for(let o of t){let i=r.normalizeRedirectResult(this._valueSchema.redirect(o,r),o);\"remain\"in i&&n.push(i.remain),u.push(...i.redirect.map(dn))}return n.length===0?{redirect:u}:{redirect:u,remain:n}}overlap(t,r){return t.concat(r)}};function dn({from:e,to:t}){return{from:[e],to:t}}var ut=class extends b{expected(){return\"true or false\"}validate(t){return typeof t==\"boolean\"}};function En(e,t){let r=Object.create(null);for(let n of e){let u=n[t];if(r[u])throw new Error(`Duplicate ${t} ${JSON.stringify(u)}`);r[u]=n}return r}function Cn(e,t){let r=new Map;for(let n of e){let u=n[t];if(r.has(u))throw new Error(`Duplicate ${t} ${JSON.stringify(u)}`);r.set(u,n)}return r}function hn(){let e=Object.create(null);return t=>{let r=JSON.stringify(t);return e[r]?!0:(e[r]=!0,!1)}}function gn(e,t){let r=[],n=[];for(let u of e)t(u)?r.push(u):n.push(u);return[r,n]}function yn(e){return e===Math.floor(e)}function An(e,t){if(e===t)return 0;let r=typeof e,n=typeof t,u=[\"undefined\",\"object\",\"boolean\",\"number\",\"string\"];return r!==n?u.indexOf(r)-u.indexOf(n):r!==\"string\"?Number(e)-Number(t):e.localeCompare(t)}function Bn(e){return(...t)=>{let r=e(...t);return typeof r==\"string\"?new Error(r):r}}function Lt(e){return e===void 0?{}:e}function It(e){if(typeof e==\"string\")return{text:e};let{text:t,list:r}=e;return co((t||r)!==void 0,\"Unexpected `expected` result, there should be at least one field.\"),r?{text:t,list:{title:r.title,values:r.values.map(It)}}:{text:t}}function Rt(e,t){return e===!0?!0:e===!1?{value:t}:e}function Yt(e,t,r=!1){return e===!1?!1:e===!0?r?!0:[{value:t}]:\"value\"in e?[e]:e.length===0?!1:e}function mn(e,t){return typeof e==\"string\"||\"key\"in e?{from:t,to:e}:\"from\"in e?{from:e.from,to:e.to}:{from:t,to:e.to}}function ot(e,t){return e===void 0?[]:Array.isArray(e)?e.map(r=>mn(r,t)):[mn(e,t)]}function jt(e,t){let r=ot(typeof e==\"object\"&&\"redirect\"in e?e.redirect:e,t);return r.length===0?{remain:t,redirect:r}:typeof e==\"object\"&&\"remain\"in e?{remain:e.remain,redirect:r}:{redirect:r}}function co(e,t){if(!e)throw new Error(t)}var it=class extends b{constructor(t){super(t),this._choices=Cn(t.choices.map(r=>r&&typeof r==\"object\"?r:{value:r}),\"value\")}expected({descriptor:t}){let r=Array.from(this._choices.keys()).map(i=>this._choices.get(i)).filter(({hidden:i})=>!i).map(i=>i.value).sort(An).map(t.value),n=r.slice(0,-2),u=r.slice(-2);return{text:n.concat(u.join(\" or \")).join(\", \"),list:{title:\"one of the following values\",values:r}}}validate(t){return this._choices.has(t)}deprecated(t){let r=this._choices.get(t);return r&&r.deprecated?{value:t}:!1}forward(t){let r=this._choices.get(t);return r?r.forward:void 0}redirect(t){let r=this._choices.get(t);return r?r.redirect:void 0}};var st=class extends b{expected(){return\"a number\"}validate(t,r){return typeof t==\"number\"}};var at=class extends st{expected(){return\"an integer\"}validate(t,r){return r.normalizeValidateResult(super.validate(t,r),t)===!0&&yn(t)}};var Ie=class extends b{expected(){return\"a string\"}validate(t){return typeof t==\"string\"}};var _n=re,xn=et,wn=fn,bn=an;var Dt=class{constructor(t,r){let{logger:n=console,loggerPrintWidth:u=80,descriptor:o=_n,unknown:i=xn,invalid:s=wn,deprecated:a=bn,missing:c=()=>!1,required:D=()=>!1,preprocess:p=F=>F,postprocess:l=()=>ge}=r||{};this._utils={descriptor:o,logger:n||{warn:()=>{}},loggerPrintWidth:u,schemas:En(t,\"name\"),normalizeDefaultResult:Lt,normalizeExpectedResult:It,normalizeDeprecatedResult:Yt,normalizeForwardResult:ot,normalizeRedirectResult:jt,normalizeValidateResult:Rt},this._unknownHandler=i,this._invalidHandler=Bn(s),this._deprecatedHandler=a,this._identifyMissing=(F,f)=>!(F in f)||c(F,f),this._identifyRequired=D,this._preprocess=p,this._postprocess=l,this.cleanHistory()}cleanHistory(){this._hasDeprecationWarned=hn()}normalize(t){let r={},u=[this._preprocess(t,this._utils)],o=()=>{for(;u.length!==0;){let i=u.shift(),s=this._applyNormalization(i,r);u.push(...s)}};o();for(let i of Object.keys(this._utils.schemas)){let s=this._utils.schemas[i];if(!(i in r)){let a=Lt(s.default(this._utils));\"value\"in a&&u.push({[i]:a.value})}}o();for(let i of Object.keys(this._utils.schemas)){if(!(i in r))continue;let s=this._utils.schemas[i],a=r[i],c=s.postprocess(a,this._utils);c!==ge&&(this._applyValidation(c,i,s),r[i]=c)}return this._applyPostprocess(r),this._applyRequiredCheck(r),r}_applyNormalization(t,r){let n=[],{knownKeys:u,unknownKeys:o}=this._partitionOptionKeys(t);for(let i of u){let s=this._utils.schemas[i],a=s.preprocess(t[i],this._utils);this._applyValidation(a,i,s);let c=({from:F,to:f})=>{n.push(typeof f==\"string\"?{[f]:F}:{[f.key]:f.value})},D=({value:F,redirectTo:f})=>{let d=Yt(s.deprecated(F,this._utils),a,!0);if(d!==!1)if(d===!0)this._hasDeprecationWarned(i)||this._utils.logger.warn(this._deprecatedHandler(i,f,this._utils));else for(let{value:m}of d){let C={key:i,value:m};if(!this._hasDeprecationWarned(C)){let E=typeof f==\"string\"?{key:f,value:m}:f;this._utils.logger.warn(this._deprecatedHandler(C,E,this._utils))}}};ot(s.forward(a,this._utils),a).forEach(c);let l=jt(s.redirect(a,this._utils),a);if(l.redirect.forEach(c),\"remain\"in l){let F=l.remain;r[i]=i in r?s.overlap(r[i],F,this._utils):F,D({value:F})}for(let{from:F,to:f}of l.redirect)D({value:F,redirectTo:f})}for(let i of o){let s=t[i];this._applyUnknownHandler(i,s,r,(a,c)=>{n.push({[a]:c})})}return n}_applyRequiredCheck(t){for(let r of Object.keys(this._utils.schemas))if(this._identifyMissing(r,t)&&this._identifyRequired(r))throw this._invalidHandler(r,Ze,this._utils)}_partitionOptionKeys(t){let[r,n]=gn(Object.keys(t).filter(u=>!this._identifyMissing(u,t)),u=>u in this._utils.schemas);return{knownKeys:r,unknownKeys:n}}_applyValidation(t,r,n){let u=Rt(n.validate(t,this._utils),t);if(u!==!0)throw this._invalidHandler(r,u.value,this._utils)}_applyUnknownHandler(t,r,n,u){let o=this._unknownHandler(t,r,this._utils);if(o)for(let i of Object.keys(o)){if(this._identifyMissing(i,o))continue;let s=o[i];i in this._utils.schemas?u(i,s):n[i]=s}}_applyPostprocess(t){let r=this._postprocess(t,this._utils);if(r!==ge){if(r.delete)for(let n of r.delete)delete t[n];if(r.override){let{knownKeys:n,unknownKeys:u}=this._partitionOptionKeys(r.override);for(let o of n){let i=r.override[o];this._applyValidation(i,o,this._utils.schemas[o]),t[o]=i}for(let o of u){let i=r.override[o];this._applyUnknownHandler(o,i,t,(s,a)=>{let c=this._utils.schemas[s];this._applyValidation(a,s,c),t[s]=a})}}}}};var Ut;function lo(e,t,{logger:r=!1,isCLI:n=!1,passThrough:u=!1,FlagSchema:o,descriptor:i}={}){if(n){if(!o)throw new Error(\"'FlagSchema' option is required.\");if(!i)throw new Error(\"'descriptor' option is required.\")}else i=re;let s=u?Array.isArray(u)?(l,F)=>u.includes(l)?{[l]:F}:void 0:(l,F)=>({[l]:F}):(l,F,f)=>{let{_:d,...m}=f.schemas;return et(l,F,{...f,schemas:m})},a=Fo(t,{isCLI:n,FlagSchema:o}),c=new Dt(a,{logger:r,unknown:s,descriptor:i}),D=r!==!1;D&&Ut&&(c._hasDeprecationWarned=Ut);let p=c.normalize(e);return D&&(Ut=c._hasDeprecationWarned),p}function Fo(e,{isCLI:t,FlagSchema:r}){let n=[];t&&n.push(rt.create({name:\"_\"}));for(let u of e)n.push(po(u,{isCLI:t,optionInfos:e,FlagSchema:r})),u.alias&&t&&n.push(tt.create({name:u.alias,sourceName:u.name}));return n}function po(e,{isCLI:t,optionInfos:r,FlagSchema:n}){let{name:u}=e,o={name:u},i,s={};switch(e.type){case\"int\":i=at,t&&(o.preprocess=Number);break;case\"string\":i=Ie;break;case\"choice\":i=it,o.choices=e.choices.map(a=>a!=null&&a.redirect?{...a,redirect:{to:{key:e.name,value:a.redirect}}}:a);break;case\"boolean\":i=ut;break;case\"flag\":i=n,o.flags=r.flatMap(a=>[a.alias,a.description&&a.name,a.oppositeDescription&&`no-${a.name}`].filter(Boolean));break;case\"path\":i=Ie;break;default:throw new Error(`Unexpected type ${e.type}`)}if(e.exception?o.validate=(a,c,D)=>e.exception(a)||c.validate(a,D):o.validate=(a,c,D)=>a===void 0||c.validate(a,D),e.redirect&&(s.redirect=a=>a?{to:typeof e.redirect==\"string\"?e.redirect:{key:e.redirect.option,value:e.redirect.value}}:void 0),e.deprecated&&(s.deprecated=!0),t&&!e.array){let a=o.preprocess||(c=>c);o.preprocess=(c,D,p)=>D.preprocess(a(Array.isArray(c)?y(!1,c,-1):c),p)}return e.array?nt.create({...t?{preprocess:a=>Array.isArray(a)?a:[a]}:{},...s,valueSchema:i.create(o)}):i.create({...o,...s})}var kn=lo;var mo=(e,t,r)=>{if(!(e&&t==null)){if(t.findLast)return t.findLast(r);for(let n=t.length-1;n>=0;n--){let u=t[n];if(r(u,n,t))return u}}},Vt=mo;function $t(e,t){if(!t)throw new Error(\"parserName is required.\");let r=Vt(!1,e,u=>u.parsers&&Object.prototype.hasOwnProperty.call(u.parsers,t));if(r)return r;let n=`Couldn't resolve parser \"${t}\".`;throw n+=\" Plugins must be explicitly added to the standalone bundle.\",new ve(n)}function Sn(e,t){if(!t)throw new Error(\"astFormat is required.\");let r=Vt(!1,e,u=>u.printers&&Object.prototype.hasOwnProperty.call(u.printers,t));if(r)return r;let n=`Couldn't find plugin for AST format \"${t}\".`;throw n+=\" Plugins must be explicitly added to the standalone bundle.\",new ve(n)}function Re({plugins:e,parser:t}){let r=$t(e,t);return Wt(r,t)}function Wt(e,t){let r=e.parsers[t];return typeof r==\"function\"?r():r}function Tn(e,t){let r=e.printers[t];return typeof r==\"function\"?r():r}var Nn={astFormat:\"estree\",printer:{},originalText:void 0,locStart:null,locEnd:null};async function Eo(e,t={}){var p;let r={...e};if(!r.parser)if(r.filepath){if(r.parser=on(r,{physicalFile:r.filepath}),!r.parser)throw new Le(`No parser could be inferred for file \"${r.filepath}\".`)}else throw new Le(\"No parser and no file path given, couldn't infer a parser.\");let n=Qe({plugins:e.plugins,showDeprecated:!0}).options,u={...Nn,...Object.fromEntries(n.filter(l=>l.default!==void 0).map(l=>[l.name,l.default]))},o=$t(r.plugins,r.parser),i=await Wt(o,r.parser);r.astFormat=i.astFormat,r.locEnd=i.locEnd,r.locStart=i.locStart;let s=(p=o.printers)!=null&&p[i.astFormat]?o:Sn(r.plugins,i.astFormat),a=await Tn(s,i.astFormat);r.printer=a;let c=s.defaultOptions?Object.fromEntries(Object.entries(s.defaultOptions).filter(([,l])=>l!==void 0)):{},D={...u,...c};for(let[l,F]of Object.entries(D))(r[l]===null||r[l]===void 0)&&(r[l]=F);return r.parser===\"json\"&&(r.trailingComma=\"none\"),kn(r,n,{passThrough:Object.keys(Nn),...t})}var ne=Eo;var vn=gu(Pn(),1);async function yo(e,t){let r=await Re(t),n=r.preprocess?r.preprocess(e,t):e;t.originalText=n;let u;try{u=await r.parse(n,t,t)}catch(o){Ao(o,e)}return{text:n,ast:u}}function Ao(e,t){let{loc:r}=e;if(r){let n=(0,vn.codeFrameColumns)(t,r,{highlightCode:!0});throw e.message+=`\n`+n,e.codeFrame=n,e}throw e}var De=yo;async function Ln(e,t,r,n,u){let{embeddedLanguageFormatting:o,printer:{embed:i,hasPrettierIgnore:s=()=>!1,getVisitorKeys:a}}=r;if(!i||o!==\"auto\")return;if(i.length>2)throw new Error(\"printer.embed has too many parameters. The API changed in Prettier v3. Please update your plugin. See https://prettier.io/docs/plugins#optional-embed\");let c=J(i.getVisitorKeys??a),D=[];F();let p=e.stack;for(let{print:f,node:d,pathStack:m}of D)try{e.stack=m;let C=await f(l,t,e,r);C&&u.set(d,C)}catch(C){if(globalThis.PRETTIER_DEBUG)throw C}e.stack=p;function l(f,d){return Bo(f,d,r,n)}function F(){let{node:f}=e;if(f===null||typeof f!=\"object\"||s(e))return;for(let m of c(f))Array.isArray(f[m])?e.each(F,m):e.call(F,m);let d=i(e,r);if(d){if(typeof d==\"function\"){D.push({print:d,node:f,pathStack:[...e.stack]});return}u.set(f,d)}}}async function Bo(e,t,r,n){let u=await ne({...r,...t,parentParser:r.parser,originalText:e,cursorOffset:void 0,rangeStart:void 0,rangeEnd:void 0},{passThrough:!0}),{ast:o}=await De(e,u),i=await n(o,u);return $e(i)}function _o(e,t){let{originalText:r,[Symbol.for(\"comments\")]:n,locStart:u,locEnd:o,[Symbol.for(\"printedComments\")]:i}=t,{node:s}=e,a=u(s),c=o(s);for(let D of n)u(D)>=a&&o(D)<=c&&i.add(D);return r.slice(a,c)}var In=_o;async function Ye(e,t){({ast:e}=await Gt(e,t));let r=new Map,n=new Or(e),u=Kr(t),o=new Map;await Ln(n,s,t,Ye,o);let i=await Rn(n,t,s,void 0,o);if(Gr(t),t.cursorOffset>=0){if(t.nodeAfterCursor&&!t.nodeBeforeCursor)return[X,i];if(t.nodeBeforeCursor&&!t.nodeAfterCursor)return[i,X]}return i;function s(c,D){return c===void 0||c===n?a(D):Array.isArray(c)?n.call(()=>a(D),...c):n.call(()=>a(D),c)}function a(c){u(n);let D=n.node;if(D==null)return\"\";let p=D&&typeof D==\"object\"&&c===void 0;if(p&&r.has(D))return r.get(D);let l=Rn(n,t,s,c,o);return p&&r.set(D,l),l}}function Rn(e,t,r,n,u){var a;let{node:o}=e,{printer:i}=t,s;switch((a=i.hasPrettierIgnore)!=null&&a.call(i,e)?s=In(e,t):u.has(o)?s=u.get(o):s=i.print(e,t,r,n),o){case t.cursorNode:s=Fe(s,c=>[X,c,X]);break;case t.nodeBeforeCursor:s=Fe(s,c=>[c,X]);break;case t.nodeAfterCursor:s=Fe(s,c=>[X,c]);break}return i.printComment&&(!i.willPrintOwnComments||!i.willPrintOwnComments(e,t))&&(s=Mr(e,s,t)),s}async function Gt(e,t){let r=e.comments??[];t[Symbol.for(\"comments\")]=r,t[Symbol.for(\"printedComments\")]=new Set,Vr(e,t);let{printer:{preprocess:n}}=t;return e=n?await n(e,t):e,{ast:e,comments:r}}function xo(e,t){let{cursorOffset:r,locStart:n,locEnd:u}=t,o=J(t.printer.getVisitorKeys),i=F=>n(F)<=r&&u(F)>=r,s=e,a=[e];for(let F of Lr(e,{getVisitorKeys:o,filter:i}))a.push(F),s=F;if(Ir(s,{getVisitorKeys:o}))return{cursorNode:s};let c,D,p=-1,l=Number.POSITIVE_INFINITY;for(;a.length>0&&(c===void 0||D===void 0);){s=a.pop();let F=c!==void 0,f=D!==void 0;for(let d of Ce(s,{getVisitorKeys:o})){if(!F){let m=u(d);m<=r&&m>p&&(c=d,p=m)}if(!f){let m=n(d);m>=r&&m<l&&(D=d,l=m)}}}return{nodeBeforeCursor:c,nodeAfterCursor:D}}var Kt=xo;function wo(e,t){let{printer:{massageAstNode:r,getVisitorKeys:n}}=t;if(!r)return e;let u=J(n),o=r.ignoredProperties??new Set;return i(e);function i(s,a){if(!(s!==null&&typeof s==\"object\"))return s;if(Array.isArray(s))return s.map(l=>i(l,a)).filter(Boolean);let c={},D=new Set(u(s));for(let l in s)!Object.prototype.hasOwnProperty.call(s,l)||o.has(l)||(D.has(l)?c[l]=i(s[l],s):c[l]=s[l]);let p=r(s,c,a);if(p!==null)return p??c}}var Yn=wo;var bo=(e,t,r)=>{if(!(e&&t==null)){if(t.findLastIndex)return t.findLastIndex(r);for(let n=t.length-1;n>=0;n--){let u=t[n];if(r(u,n,t))return n}return-1}},jn=bo;var ko=({parser:e})=>e===\"json\"||e===\"json5\"||e===\"jsonc\"||e===\"json-stringify\";function So(e,t){let r=[e.node,...e.parentNodes],n=new Set([t.node,...t.parentNodes]);return r.find(u=>$n.has(u.type)&&n.has(u))}function Un(e){let t=jn(!1,e,r=>r.type!==\"Program\"&&r.type!==\"File\");return t===-1?e:e.slice(0,t+1)}function To(e,t,{locStart:r,locEnd:n}){let u=e.node,o=t.node;if(u===o)return{startNode:u,endNode:o};let i=r(e.node);for(let a of Un(t.parentNodes))if(r(a)>=i)o=a;else break;let s=n(t.node);for(let a of Un(e.parentNodes)){if(n(a)<=s)u=a;else break;if(u===o)break}return{startNode:u,endNode:o}}function zt(e,t,r,n,u=[],o){let{locStart:i,locEnd:s}=r,a=i(e),c=s(e);if(!(t>c||t<a||o===\"rangeEnd\"&&t===a||o===\"rangeStart\"&&t===c)){for(let D of Xe(e,r)){let p=zt(D,t,r,n,[e,...u],o);if(p)return p}if(!n||n(e,u[0]))return{node:e,parentNodes:u}}}function No(e,t){return t!==\"DeclareExportDeclaration\"&&e!==\"TypeParameterDeclaration\"&&(e===\"Directive\"||e===\"TypeAlias\"||e===\"TSExportAssignment\"||e.startsWith(\"Declare\")||e.startsWith(\"TSDeclare\")||e.endsWith(\"Statement\")||e.endsWith(\"Declaration\"))}var $n=new Set([\"JsonRoot\",\"ObjectExpression\",\"ArrayExpression\",\"StringLiteral\",\"NumericLiteral\",\"BooleanLiteral\",\"NullLiteral\",\"UnaryExpression\",\"TemplateLiteral\"]),Oo=new Set([\"OperationDefinition\",\"FragmentDefinition\",\"VariableDefinition\",\"TypeExtensionDefinition\",\"ObjectTypeDefinition\",\"FieldDefinition\",\"DirectiveDefinition\",\"EnumTypeDefinition\",\"EnumValueDefinition\",\"InputValueDefinition\",\"InputObjectTypeDefinition\",\"SchemaDefinition\",\"OperationTypeDefinition\",\"InterfaceTypeDefinition\",\"UnionTypeDefinition\",\"ScalarTypeDefinition\"]);function Vn(e,t,r){if(!t)return!1;switch(e.parser){case\"flow\":case\"hermes\":case\"babel\":case\"babel-flow\":case\"babel-ts\":case\"typescript\":case\"acorn\":case\"espree\":case\"meriyah\":case\"oxc\":case\"oxc-ts\":case\"__babel_estree\":return No(t.type,r==null?void 0:r.type);case\"json\":case\"json5\":case\"jsonc\":case\"json-stringify\":return $n.has(t.type);case\"graphql\":return Oo.has(t.kind);case\"vue\":return t.tag!==\"root\"}return!1}function Wn(e,t,r){let{rangeStart:n,rangeEnd:u,locStart:o,locEnd:i}=t;Oe.ok(u>n);let s=e.slice(n,u).search(/\\S/u),a=s===-1;if(!a)for(n+=s;u>n&&!/\\S/u.test(e[u-1]);--u);let c=zt(r,n,t,(F,f)=>Vn(t,F,f),[],\"rangeStart\"),D=a?c:zt(r,u,t,F=>Vn(t,F),[],\"rangeEnd\");if(!c||!D)return{rangeStart:0,rangeEnd:0};let p,l;if(ko(t)){let F=So(c,D);p=F,l=F}else({startNode:p,endNode:l}=To(c,D,t));return{rangeStart:Math.min(o(p),o(l)),rangeEnd:Math.max(i(p),i(l))}}var zn=\"\\uFEFF\",Mn=Symbol(\"cursor\");async function Hn(e,t,r=0){if(!e||e.trim().length===0)return{formatted:\"\",cursorOffset:-1,comments:[]};let{ast:n,text:u}=await De(e,t);t.cursorOffset>=0&&(t={...t,...Kt(n,t)});let o=await Ye(n,t,r);r>0&&(o=Ge([z,o],r,t.tabWidth));let i=me(o,t);if(r>0){let a=i.formatted.trim();i.cursorNodeStart!==void 0&&(i.cursorNodeStart-=i.formatted.indexOf(a),i.cursorNodeStart<0&&(i.cursorNodeStart=0,i.cursorNodeText=i.cursorNodeText.trimStart()),i.cursorNodeStart+i.cursorNodeText.length>a.length&&(i.cursorNodeText=i.cursorNodeText.trimEnd())),i.formatted=a+xe(t.endOfLine)}let s=t[Symbol.for(\"comments\")];if(t.cursorOffset>=0){let a,c,D,p;if((t.cursorNode||t.nodeBeforeCursor||t.nodeAfterCursor)&&i.cursorNodeText)if(D=i.cursorNodeStart,p=i.cursorNodeText,t.cursorNode)a=t.locStart(t.cursorNode),c=u.slice(a,t.locEnd(t.cursorNode));else{if(!t.nodeBeforeCursor&&!t.nodeAfterCursor)throw new Error(\"Cursor location must contain at least one of cursorNode, nodeBeforeCursor, nodeAfterCursor\");a=t.nodeBeforeCursor?t.locEnd(t.nodeBeforeCursor):0;let C=t.nodeAfterCursor?t.locStart(t.nodeAfterCursor):u.length;c=u.slice(a,C)}else a=0,c=u,D=0,p=i.formatted;let l=t.cursorOffset-a;if(c===p)return{formatted:i.formatted,cursorOffset:D+l,comments:s};let F=c.split(\"\");F.splice(l,0,Mn);let f=p.split(\"\"),d=Et(F,f),m=D;for(let C of d)if(C.removed){if(C.value.includes(Mn))break}else m+=C.count;return{formatted:i.formatted,cursorOffset:m,comments:s}}return{formatted:i.formatted,cursorOffset:-1,comments:s}}async function Po(e,t){let{ast:r,text:n}=await De(e,t),{rangeStart:u,rangeEnd:o}=Wn(n,t,r),i=n.slice(u,o),s=Math.min(u,n.lastIndexOf(`\n`,u)+1),a=n.slice(s,u).match(/^\\s*/u)[0],c=Ee(a,t.tabWidth),D=await Hn(i,{...t,rangeStart:0,rangeEnd:Number.POSITIVE_INFINITY,cursorOffset:t.cursorOffset>u&&t.cursorOffset<=o?t.cursorOffset-u:-1,endOfLine:\"lf\"},c),p=D.formatted.trimEnd(),{cursorOffset:l}=t;l>o?l+=p.length-i.length:D.cursorOffset>=0&&(l=D.cursorOffset+u);let F=n.slice(0,u)+p+n.slice(o);if(t.endOfLine!==\"lf\"){let f=xe(t.endOfLine);l>=0&&f===`\\r\n`&&(l+=Ct(F.slice(0,l),`\n`)),F=te(!1,F,`\n`,f)}return{formatted:F,cursorOffset:l,comments:D.comments}}function Ht(e,t,r){return typeof t!=\"number\"||Number.isNaN(t)||t<0||t>e.length?r:t}function Gn(e,t){let{cursorOffset:r,rangeStart:n,rangeEnd:u}=t;return r=Ht(e,r,-1),n=Ht(e,n,0),u=Ht(e,u,e.length),{...t,cursorOffset:r,rangeStart:n,rangeEnd:u}}function Jn(e,t){let{cursorOffset:r,rangeStart:n,rangeEnd:u,endOfLine:o}=Gn(e,t),i=e.charAt(0)===zn;if(i&&(e=e.slice(1),r--,n--,u--),o===\"auto\"&&(o=nr(e)),e.includes(\"\\r\")){let s=a=>Ct(e.slice(0,Math.max(a,0)),`\\r\n`);r-=s(r),n-=s(n),u-=s(u),e=ur(e)}return{hasBOM:i,text:e,options:Gn(e,{...t,cursorOffset:r,rangeStart:n,rangeEnd:u,endOfLine:o})}}async function Kn(e,t){let r=await Re(t);return!r.hasPragma||r.hasPragma(e)}async function vo(e,t){var n;let r=await Re(t);return(n=r.hasIgnorePragma)==null?void 0:n.call(r,e)}async function Jt(e,t){let{hasBOM:r,text:n,options:u}=Jn(e,await ne(t));if(u.rangeStart>=u.rangeEnd&&n!==\"\"||u.requirePragma&&!await Kn(n,u)||u.checkIgnorePragma&&await vo(n,u))return{formatted:e,cursorOffset:t.cursorOffset,comments:[]};let o;return u.rangeStart>0||u.rangeEnd<n.length?o=await Po(n,u):(!u.requirePragma&&u.insertPragma&&u.printer.insertPragma&&!await Kn(n,u)&&(n=u.printer.insertPragma(n)),o=await Hn(n,u)),r&&(o.formatted=zn+o.formatted,o.cursorOffset>=0&&o.cursorOffset++),o}async function qn(e,t,r){let{text:n,options:u}=Jn(e,await ne(t)),o=await De(n,u);return r&&(r.preprocessForPrint&&(o.ast=await Gt(o.ast,u)),r.massage&&(o.ast=Yn(o.ast,u))),o}async function Xn(e,t){t=await ne(t);let r=await Ye(e,t);return me(r,t)}async function Qn(e,t){let r=wr(e),{formatted:n}=await Jt(r,{...t,parser:\"__js_expression\"});return n}async function Zn(e,t){t=await ne(t);let{ast:r}=await De(e,t);return t.cursorOffset>=0&&(t={...t,...Kt(r,t)}),Ye(r,t)}async function eu(e,t){return me(e,await ne(t))}var qt={};dt(qt,{builders:()=>Io,printer:()=>Ro,utils:()=>Yo});var Io={join:ke,line:Me,softline:_r,hardline:z,literalline:We,group:At,conditionalGroup:Cr,fill:hr,lineSuffix:Se,lineSuffixBoundary:Ar,cursor:X,breakParent:pe,ifBreak:gr,trim:Br,indent:ie,indentIfBreak:yr,align:oe,addAlignmentToDoc:Ge,markAsRoot:mr,dedentToRoot:dr,dedent:Er,hardlineWithoutBreakParent:Te,literallineWithoutBreakParent:Bt,label:xr,concat:e=>e},Ro={printDocToString:me},Yo={willBreak:Dr,traverseDoc:le,findInDoc:Ve,mapDoc:be,removeLines:fr,stripTrailingHardline:$e,replaceEndOfLine:lr,canBreak:Fr};var tu=\"3.6.2\";var Qt={};dt(Qt,{addDanglingComment:()=>ee,addLeadingComment:()=>se,addTrailingComment:()=>ae,getAlignmentSize:()=>Ee,getIndentSize:()=>ru,getMaxContinuousCount:()=>nu,getNextNonSpaceNonCommentCharacter:()=>uu,getNextNonSpaceNonCommentCharacterIndex:()=>Xo,getPreferredQuote:()=>iu,getStringWidth:()=>Ne,hasNewline:()=>G,hasNewlineInRange:()=>su,hasSpaces:()=>au,isNextLineEmpty:()=>ti,isNextLineEmptyAfterIndex:()=>ct,isPreviousLineEmpty:()=>Zo,makeString:()=>Du,skip:()=>he,skipEverythingButNewLine:()=>Je,skipInlineComment:()=>ye,skipNewline:()=>U,skipSpaces:()=>T,skipToLineEnd:()=>He,skipTrailingComment:()=>Ae,skipWhitespace:()=>Rr});function jo(e,t){if(t===!1)return!1;if(e.charAt(t)===\"/\"&&e.charAt(t+1)===\"*\"){for(let r=t+2;r<e.length;++r)if(e.charAt(r)===\"*\"&&e.charAt(r+1)===\"/\")return r+2}return t}var ye=jo;function Uo(e,t){return t===!1?!1:e.charAt(t)===\"/\"&&e.charAt(t+1)===\"/\"?Je(e,t):t}var Ae=Uo;function Vo(e,t){let r=null,n=t;for(;n!==r;)r=n,n=T(e,n),n=ye(e,n),n=Ae(e,n),n=U(e,n);return n}var je=Vo;function $o(e,t){let r=null,n=t;for(;n!==r;)r=n,n=He(e,n),n=ye(e,n),n=T(e,n);return n=Ae(e,n),n=U(e,n),n!==!1&&G(e,n)}var ct=$o;function Wo(e,t){let r=e.lastIndexOf(`\n`);return r===-1?0:Ee(e.slice(r+1).match(/^[\\t ]*/u)[0],t)}var ru=Wo;function Xt(e){if(typeof e!=\"string\")throw new TypeError(\"Expected a string\");return e.replace(/[|\\\\{}()[\\]^$+*?.]/g,\"\\\\$&\").replace(/-/g,\"\\\\x2d\")}function Mo(e,t){let r=e.match(new RegExp(`(${Xt(t)})+`,\"gu\"));return r===null?0:r.reduce((n,u)=>Math.max(n,u.length/t.length),0)}var nu=Mo;function Go(e,t){let r=je(e,t);return r===!1?\"\":e.charAt(r)}var uu=Go;var ft=\"'\",ou='\"';function Ko(e,t){let r=t===!0||t===ft?ft:ou,n=r===ft?ou:ft,u=0,o=0;for(let i of e)i===r?u++:i===n&&o++;return u>o?n:r}var iu=Ko;function zo(e,t,r){for(let n=t;n<r;++n)if(e.charAt(n)===`\n`)return!0;return!1}var su=zo;function Ho(e,t,r={}){return T(e,r.backwards?t-1:t,r)!==t}var au=Ho;function Jo(e,t,r){let n=t==='\"'?\"'\":'\"',o=te(!1,e,/\\\\(.)|([\"'])/gsu,(i,s,a)=>s===n?s:a===t?\"\\\\\"+a:a||(r&&/^[^\\n\\r\"'0-7\\\\bfnrt-vx\\u2028\\u2029]$/u.test(s)?s:\"\\\\\"+s));return t+o+t}var Du=Jo;function qo(e,t,r){return je(e,r(t))}function Xo(e,t){return arguments.length===2||typeof t==\"number\"?je(e,t):qo(...arguments)}function Qo(e,t,r){return Pe(e,r(t))}function Zo(e,t){return arguments.length===2||typeof t==\"number\"?Pe(e,t):Qo(...arguments)}function ei(e,t,r){return ct(e,r(t))}function ti(e,t){return arguments.length===2||typeof t==\"number\"?ct(e,t):ei(...arguments)}function ce(e,t=1){return async(...r)=>{let n=r[t]??{},u=n.plugins??[];return r[t]={...n,plugins:Array.isArray(u)?u:Object.values(u)},e(...r)}}var cu=ce(Jt);async function fu(e,t){let{formatted:r}=await cu(e,{...t,cursorOffset:-1});return r}async function ri(e,t){return await fu(e,t)===e}var ni=ce(Qe,0),ui={parse:ce(qn),formatAST:ce(Xn),formatDoc:ce(Qn),printToDoc:ce(Zn),printDocToString:ce(eu)};var xf=Zt;export{ui as __debug,ri as check,xf as default,qt as doc,fu as format,cu as formatWithCursor,ni as getSupportInfo,Qt as util,tu as version};\n",
    "/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n",
    "import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n",
    "import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction, } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nexport class DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nexport default DomHandler;\n",
    "const e=/\\n/g;function n(n){const o=[...n.matchAll(e)].map((e=>e.index||0));o.unshift(-1);const s=t(o,0,o.length);return e=>r(s,e)}function t(e,n,r){if(r-n==1)return{offset:e[n],index:n+1};const o=Math.ceil((n+r)/2),s=t(e,n,o),l=t(e,o,r);return{offset:s.offset,low:s,high:l}}function r(e,n){return function(e){return Object.prototype.hasOwnProperty.call(e,\"index\")}(e)?{line:e.index,column:n-e.offset}:r(e.high.offset<n?e.high:e.low,n)}function o(e,t=\"\",r={}){const o=\"string\"!=typeof t?t:r,l=\"string\"==typeof t?t:\"\",c=e.map(s),f=!!o.lineNumbers;return function(e,t=0){const r=f?n(e):()=>({line:0,column:0});let o=t;const s=[];e:for(;o<e.length;){let n=!1;for(const t of c){t.regex.lastIndex=o;const c=t.regex.exec(e);if(c&&c[0].length>0){if(!t.discard){const e=r(o),n=\"string\"==typeof t.replace?c[0].replace(new RegExp(t.regex.source,t.regex.flags),t.replace):c[0];s.push({state:l,name:t.name,text:n,offset:o,len:c[0].length,line:e.line,column:e.column})}if(o=t.regex.lastIndex,n=!0,t.push){const n=t.push(e,o);s.push(...n.tokens),o=n.offset}if(t.pop)break e;break}}if(!n)break}return{tokens:s,offset:o,complete:e.length<=o}}}function s(e,n){return{...e,regex:l(e,n)}}function l(e,n){if(0===e.name.length)throw new Error(`Rule #${n} has empty name, which is not allowed.`);if(function(e){return Object.prototype.hasOwnProperty.call(e,\"regex\")}(e))return function(e){if(e.global)throw new Error(`Regular expression /${e.source}/${e.flags} contains the global flag, which is not allowed.`);return e.sticky?e:new RegExp(e.source,e.flags+\"y\")}(e.regex);if(function(e){return Object.prototype.hasOwnProperty.call(e,\"str\")}(e)){if(0===e.str.length)throw new Error(`Rule #${n} (\"${e.name}\") has empty \"str\" property, which is not allowed.`);return new RegExp(c(e.str),\"y\")}return new RegExp(c(e.name),\"y\")}function c(e){return e.replace(/[-[\\]{}()*+!<=:?./\\\\^$|#\\s,]/g,\"\\\\$&\")}export{o as createLexer};\n",
    "import { clamp, escapeWhitespace } from './util.mjs';\n\nfunction emit(value) {\n    return (data, i) => ({\n        matched: true,\n        position: i,\n        value: value\n    });\n}\nfunction make(\nf) {\n    return (data, i) => ({\n        matched: true,\n        position: i,\n        value: f(data, i)\n    });\n}\nfunction action(\nf) {\n    return (data, i) => {\n        f(data, i);\n        return {\n            matched: true,\n            position: i,\n            value: null\n        };\n    };\n}\nfunction fail(\ndata, i) {\n    return { matched: false };\n}\nfunction error(message) {\n    return (data, i) => {\n        throw new Error((message instanceof Function) ? message(data, i) : message);\n    };\n}\nfunction token(\nonToken,\nonEnd) {\n    return (data, i) => {\n        let position = i;\n        let value = undefined;\n        if (i < data.tokens.length) {\n            value = onToken(data.tokens[i], data, i);\n            if (value !== undefined) {\n                position++;\n            }\n        }\n        else {\n            onEnd?.(data, i);\n        }\n        return (value === undefined)\n            ? { matched: false }\n            : {\n                matched: true,\n                position: position,\n                value: value\n            };\n    };\n}\nfunction any(data, i) {\n    return (i < data.tokens.length)\n        ? {\n            matched: true,\n            position: i + 1,\n            value: data.tokens[i]\n        }\n        : { matched: false };\n}\nfunction satisfy(\ntest) {\n    return (data, i) => (i < data.tokens.length && test(data.tokens[i], data, i))\n        ? {\n            matched: true,\n            position: i + 1,\n            value: data.tokens[i]\n        }\n        : { matched: false };\n}\nfunction mapInner(r, f) {\n    return (r.matched) ? ({\n        matched: true,\n        position: r.position,\n        value: f(r.value, r.position)\n    }) : r;\n}\nfunction mapOuter(r, f) {\n    return (r.matched) ? f(r) : r;\n}\nfunction map(p, mapper) {\n    return (data, i) => mapInner(p(data, i), (v, j) => mapper(v, data, i, j));\n}\nfunction map1(p,\nmapper) {\n    return (data, i) => mapOuter(p(data, i), (m) => mapper(m, data, i));\n}\nfunction peek(p, f) {\n    return (data, i) => {\n        const r = p(data, i);\n        f(r, data, i);\n        return r;\n    };\n}\nfunction option(p, def) {\n    return (data, i) => {\n        const r = p(data, i);\n        return (r.matched)\n            ? r\n            : {\n                matched: true,\n                position: i,\n                value: def\n            };\n    };\n}\nfunction not(p) {\n    return (data, i) => {\n        const r = p(data, i);\n        return (r.matched)\n            ? { matched: false }\n            : {\n                matched: true,\n                position: i,\n                value: true\n            };\n    };\n}\nfunction choice(...ps) {\n    return (data, i) => {\n        for (const p of ps) {\n            const result = p(data, i);\n            if (result.matched) {\n                return result;\n            }\n        }\n        return { matched: false };\n    };\n}\nfunction otherwise(pa, pb) {\n    return (data, i) => {\n        const r1 = pa(data, i);\n        return (r1.matched)\n            ? r1\n            : pb(data, i);\n    };\n}\nfunction longest(...ps) {\n    return (data, i) => {\n        let match = undefined;\n        for (const p of ps) {\n            const result = p(data, i);\n            if (result.matched && (!match || match.position < result.position)) {\n                match = result;\n            }\n        }\n        return match || { matched: false };\n    };\n}\nfunction takeWhile(p,\ntest) {\n    return (data, i) => {\n        const values = [];\n        let success = true;\n        do {\n            const r = p(data, i);\n            if (r.matched && test(r.value, values.length + 1, data, i, r.position)) {\n                values.push(r.value);\n                i = r.position;\n            }\n            else {\n                success = false;\n            }\n        } while (success);\n        return {\n            matched: true,\n            position: i,\n            value: values\n        };\n    };\n}\nfunction takeUntil(p,\ntest) {\n    return takeWhile(p, (value, n, data, i, j) => !test(value, n, data, i, j));\n}\nfunction takeWhileP(pValue, pTest) {\n    return takeWhile(pValue, (value, n, data, i) => pTest(data, i).matched);\n}\nfunction takeUntilP(pValue, pTest) {\n    return takeWhile(pValue, (value, n, data, i) => !pTest(data, i).matched);\n}\nfunction many(p) {\n    return takeWhile(p, () => true);\n}\nfunction many1(p) {\n    return ab(p, many(p), (head, tail) => [head, ...tail]);\n}\nfunction ab(pa, pb, join) {\n    return (data, i) => mapOuter(pa(data, i), (ma) => mapInner(pb(data, ma.position), (vb, j) => join(ma.value, vb, data, i, j)));\n}\nfunction left(pa, pb) {\n    return ab(pa, pb, (va) => va);\n}\nfunction right(pa, pb) {\n    return ab(pa, pb, (va, vb) => vb);\n}\nfunction abc(pa, pb, pc, join) {\n    return (data, i) => mapOuter(pa(data, i), (ma) => mapOuter(pb(data, ma.position), (mb) => mapInner(pc(data, mb.position), (vc, j) => join(ma.value, mb.value, vc, data, i, j))));\n}\nfunction middle(pa, pb, pc) {\n    return abc(pa, pb, pc, (ra, rb) => rb);\n}\nfunction all(...ps) {\n    return (data, i) => {\n        const result = [];\n        let position = i;\n        for (const p of ps) {\n            const r1 = p(data, position);\n            if (r1.matched) {\n                result.push(r1.value);\n                position = r1.position;\n            }\n            else {\n                return { matched: false };\n            }\n        }\n        return {\n            matched: true,\n            position: position,\n            value: result\n        };\n    };\n}\nfunction skip(...ps) {\n    return map(all(...ps), () => null);\n}\nfunction flatten(...ps) {\n    return flatten1(all(...ps));\n}\nfunction flatten1(p) {\n    return map(p, (vs) => vs.flatMap((v) => v));\n}\nfunction sepBy1(pValue, pSep) {\n    return ab(pValue, many(right(pSep, pValue)), (head, tail) => [head, ...tail]);\n}\nfunction sepBy(pValue, pSep) {\n    return otherwise(sepBy1(pValue, pSep), emit([]));\n}\nfunction chainReduce(acc,\nf) {\n    return (data, i) => {\n        let loop = true;\n        let acc1 = acc;\n        let pos = i;\n        do {\n            const r = f(acc1, data, pos)(data, pos);\n            if (r.matched) {\n                acc1 = r.value;\n                pos = r.position;\n            }\n            else {\n                loop = false;\n            }\n        } while (loop);\n        return {\n            matched: true,\n            position: pos,\n            value: acc1\n        };\n    };\n}\nfunction reduceLeft(acc, p,\nreducer) {\n    return chainReduce(acc, (acc) => map(p, (v, data, i, j) => reducer(acc, v, data, i, j)));\n}\nfunction reduceRight(p, acc,\nreducer) {\n    return map(many(p), (vs, data, i, j) => vs.reduceRight((acc, v) => reducer(v, acc, data, i, j), acc));\n}\nfunction leftAssoc1(pLeft, pOper) {\n    return chain(pLeft, (v0) => reduceLeft(v0, pOper, (acc, f) => f(acc)));\n}\nfunction rightAssoc1(pOper, pRight) {\n    return ab(reduceRight(pOper, (y) => y, (f, acc) => (y) => f(acc(y))), pRight, (f, v) => f(v));\n}\nfunction leftAssoc2(pLeft, pOper, pRight) {\n    return chain(pLeft, (v0) => reduceLeft(v0, ab(pOper, pRight, (f, y) => [f, y]), (acc, [f, y]) => f(acc, y)));\n}\nfunction rightAssoc2(pLeft, pOper, pRight) {\n    return ab(reduceRight(ab(pLeft, pOper, (x, f) => [x, f]), (y) => y, ([x, f], acc) => (y) => f(x, acc(y))), pRight, (f, v) => f(v));\n}\nfunction condition(cond, pTrue, pFalse) {\n    return (data, i) => (cond(data, i))\n        ? pTrue(data, i)\n        : pFalse(data, i);\n}\nfunction decide(p) {\n    return (data, i) => mapOuter(p(data, i), (m1) => m1.value(data, m1.position));\n}\nfunction chain(p,\nf) {\n    return (data, i) => mapOuter(p(data, i), (m1) => f(m1.value, data, i, m1.position)(data, m1.position));\n}\nfunction ahead(p) {\n    return (data, i) => mapOuter(p(data, i), (m1) => ({\n        matched: true,\n        position: i,\n        value: m1.value\n    }));\n}\nfunction recursive(f) {\n    return function (data, i) {\n        return f()(data, i);\n    };\n}\nfunction start(data, i) {\n    return (i !== 0)\n        ? { matched: false }\n        : {\n            matched: true,\n            position: i,\n            value: true\n        };\n}\nfunction end(data, i) {\n    return (i < data.tokens.length)\n        ? { matched: false }\n        : {\n            matched: true,\n            position: i,\n            value: true\n        };\n}\nfunction remainingTokensNumber(data, i) {\n    return data.tokens.length - i;\n}\nfunction parserPosition(data, i, formatToken, contextTokens = 3) {\n    const len = data.tokens.length;\n    const lowIndex = clamp(0, i - contextTokens, len - contextTokens);\n    const highIndex = clamp(contextTokens, i + 1 + contextTokens, len);\n    const tokensSlice = data.tokens.slice(lowIndex, highIndex);\n    const lines = [];\n    const indexWidth = String(highIndex - 1).length + 1;\n    if (i < 0) {\n        lines.push(`${String(i).padStart(indexWidth)} >>`);\n    }\n    if (0 < lowIndex) {\n        lines.push('...'.padStart(indexWidth + 6));\n    }\n    for (let j = 0; j < tokensSlice.length; j++) {\n        const index = lowIndex + j;\n        lines.push(`${String(index).padStart(indexWidth)} ${(index === i ? '>' : ' ')} ${escapeWhitespace(formatToken(tokensSlice[j]))}`);\n    }\n    if (highIndex < len) {\n        lines.push('...'.padStart(indexWidth + 6));\n    }\n    if (len <= i) {\n        lines.push(`${String(i).padStart(indexWidth)} >>`);\n    }\n    return lines.join('\\n');\n}\nfunction parse(parser, tokens, options, formatToken = JSON.stringify) {\n    const data = { tokens: tokens, options: options };\n    const result = parser(data, 0);\n    if (!result.matched) {\n        throw new Error('No match');\n    }\n    if (result.position < data.tokens.length) {\n        throw new Error(`Partial match. Parsing stopped at:\\n${parserPosition(data, result.position, formatToken)}`);\n    }\n    return result.value;\n}\nfunction tryParse(parser, tokens, options) {\n    const result = parser({ tokens: tokens, options: options }, 0);\n    return (result.matched)\n        ? result.value\n        : undefined;\n}\nfunction match(matcher, tokens, options) {\n    const result = matcher({ tokens: tokens, options: options }, 0);\n    return result.value;\n}\n\nexport { ab, abc, action, ahead, all, all as and, any, chain, chainReduce, choice, condition, decide, skip as discard, otherwise as eitherOr, emit, end, end as eof, error, fail, flatten, flatten1, left, leftAssoc1, leftAssoc2, longest, ahead as lookAhead, make, many, many1, map, map1, match, middle, not, emit as of, option, choice as or, otherwise, parse, parserPosition, peek, recursive, reduceLeft, reduceRight, remainingTokensNumber, right, rightAssoc1, rightAssoc2, satisfy, sepBy, sepBy1, skip, many1 as some, start, takeUntil, takeUntilP, takeWhile, takeWhileP, token, tryParse };\n",
    "import { createLexer } from 'leac';\nimport * as p from 'peberminta';\n\nvar ast = /*#__PURE__*/Object.freeze({\n    __proto__: null\n});\n\nconst ws = `(?:[ \\\\t\\\\r\\\\n\\\\f]*)`;\nconst nl = `(?:\\\\n|\\\\r\\\\n|\\\\r|\\\\f)`;\nconst nonascii = `[^\\\\x00-\\\\x7F]`;\nconst unicode = `(?:\\\\\\\\[0-9a-f]{1,6}(?:\\\\r\\\\n|[ \\\\n\\\\r\\\\t\\\\f])?)`;\nconst escape = `(?:\\\\\\\\[^\\\\n\\\\r\\\\f0-9a-f])`;\nconst nmstart = `(?:[_a-z]|${nonascii}|${unicode}|${escape})`;\nconst nmchar = `(?:[_a-z0-9-]|${nonascii}|${unicode}|${escape})`;\nconst name = `(?:${nmchar}+)`;\nconst ident = `(?:[-]?${nmstart}${nmchar}*)`;\nconst string1 = `'([^\\\\n\\\\r\\\\f\\\\\\\\']|\\\\\\\\${nl}|${nonascii}|${unicode}|${escape})*'`;\nconst string2 = `\"([^\\\\n\\\\r\\\\f\\\\\\\\\"]|\\\\\\\\${nl}|${nonascii}|${unicode}|${escape})*\"`;\nconst lexSelector = createLexer([\n    { name: 'ws', regex: new RegExp(ws) },\n    { name: 'hash', regex: new RegExp(`#${name}`, 'i') },\n    { name: 'ident', regex: new RegExp(ident, 'i') },\n    { name: 'str1', regex: new RegExp(string1, 'i') },\n    { name: 'str2', regex: new RegExp(string2, 'i') },\n    { name: '*' },\n    { name: '.' },\n    { name: ',' },\n    { name: '[' },\n    { name: ']' },\n    { name: '=' },\n    { name: '>' },\n    { name: '|' },\n    { name: '+' },\n    { name: '~' },\n    { name: '^' },\n    { name: '$' },\n]);\nconst lexEscapedString = createLexer([\n    { name: 'unicode', regex: new RegExp(unicode, 'i') },\n    { name: 'escape', regex: new RegExp(escape, 'i') },\n    { name: 'any', regex: new RegExp('[\\\\s\\\\S]', 'i') }\n]);\nfunction sumSpec([a0, a1, a2], [b0, b1, b2]) {\n    return [a0 + b0, a1 + b1, a2 + b2];\n}\nfunction sumAllSpec(ss) {\n    return ss.reduce(sumSpec, [0, 0, 0]);\n}\nconst unicodeEscapedSequence_ = p.token((t) => t.name === 'unicode' ? String.fromCodePoint(parseInt(t.text.slice(1), 16)) : undefined);\nconst escapedSequence_ = p.token((t) => t.name === 'escape' ? t.text.slice(1) : undefined);\nconst anyChar_ = p.token((t) => t.name === 'any' ? t.text : undefined);\nconst escapedString_ = p.map(p.many(p.or(unicodeEscapedSequence_, escapedSequence_, anyChar_)), (cs) => cs.join(''));\nfunction unescape(escapedString) {\n    const lexerResult = lexEscapedString(escapedString);\n    const result = escapedString_({ tokens: lexerResult.tokens, options: undefined }, 0);\n    return result.value;\n}\nfunction literal(name) {\n    return p.token((t) => t.name === name ? true : undefined);\n}\nconst whitespace_ = p.token((t) => t.name === 'ws' ? null : undefined);\nconst optionalWhitespace_ = p.option(whitespace_, null);\nfunction optionallySpaced(parser) {\n    return p.middle(optionalWhitespace_, parser, optionalWhitespace_);\n}\nconst identifier_ = p.token((t) => t.name === 'ident' ? unescape(t.text) : undefined);\nconst hashId_ = p.token((t) => t.name === 'hash' ? unescape(t.text.slice(1)) : undefined);\nconst string_ = p.token((t) => t.name.startsWith('str') ? unescape(t.text.slice(1, -1)) : undefined);\nconst namespace_ = p.left(p.option(identifier_, ''), literal('|'));\nconst qualifiedName_ = p.eitherOr(p.ab(namespace_, identifier_, (ns, name) => ({ name: name, namespace: ns })), p.map(identifier_, (name) => ({ name: name, namespace: null })));\nconst uniSelector_ = p.eitherOr(p.ab(namespace_, literal('*'), (ns) => ({ type: 'universal', namespace: ns, specificity: [0, 0, 0] })), p.map(literal('*'), () => ({ type: 'universal', namespace: null, specificity: [0, 0, 0] })));\nconst tagSelector_ = p.map(qualifiedName_, ({ name, namespace }) => ({\n    type: 'tag',\n    name: name,\n    namespace: namespace,\n    specificity: [0, 0, 1]\n}));\nconst classSelector_ = p.ab(literal('.'), identifier_, (fullstop, name) => ({\n    type: 'class',\n    name: name,\n    specificity: [0, 1, 0]\n}));\nconst idSelector_ = p.map(hashId_, (name) => ({\n    type: 'id',\n    name: name,\n    specificity: [1, 0, 0]\n}));\nconst attrModifier_ = p.token((t) => {\n    if (t.name === 'ident') {\n        if (t.text === 'i' || t.text === 'I') {\n            return 'i';\n        }\n        if (t.text === 's' || t.text === 'S') {\n            return 's';\n        }\n    }\n    return undefined;\n});\nconst attrValue_ = p.eitherOr(p.ab(string_, p.option(p.right(optionalWhitespace_, attrModifier_), null), (v, mod) => ({ value: v, modifier: mod })), p.ab(identifier_, p.option(p.right(whitespace_, attrModifier_), null), (v, mod) => ({ value: v, modifier: mod })));\nconst attrMatcher_ = p.choice(p.map(literal('='), () => '='), p.ab(literal('~'), literal('='), () => '~='), p.ab(literal('|'), literal('='), () => '|='), p.ab(literal('^'), literal('='), () => '^='), p.ab(literal('$'), literal('='), () => '$='), p.ab(literal('*'), literal('='), () => '*='));\nconst attrPresenceSelector_ = p.abc(literal('['), optionallySpaced(qualifiedName_), literal(']'), (lbr, { name, namespace }) => ({\n    type: 'attrPresence',\n    name: name,\n    namespace: namespace,\n    specificity: [0, 1, 0]\n}));\nconst attrValueSelector_ = p.middle(literal('['), p.abc(optionallySpaced(qualifiedName_), attrMatcher_, optionallySpaced(attrValue_), ({ name, namespace }, matcher, { value, modifier }) => ({\n    type: 'attrValue',\n    name: name,\n    namespace: namespace,\n    matcher: matcher,\n    value: value,\n    modifier: modifier,\n    specificity: [0, 1, 0]\n})), literal(']'));\nconst attrSelector_ = p.eitherOr(attrPresenceSelector_, attrValueSelector_);\nconst typeSelector_ = p.eitherOr(uniSelector_, tagSelector_);\nconst subclassSelector_ = p.choice(idSelector_, classSelector_, attrSelector_);\nconst compoundSelector_ = p.map(p.eitherOr(p.flatten(typeSelector_, p.many(subclassSelector_)), p.many1(subclassSelector_)), (ss) => {\n    return {\n        type: 'compound',\n        list: ss,\n        specificity: sumAllSpec(ss.map(s => s.specificity))\n    };\n});\nconst combinator_ = p.choice(p.map(literal('>'), () => '>'), p.map(literal('+'), () => '+'), p.map(literal('~'), () => '~'), p.ab(literal('|'), literal('|'), () => '||'));\nconst combinatorSeparator_ = p.eitherOr(optionallySpaced(combinator_), p.map(whitespace_, () => ' '));\nconst complexSelector_ = p.leftAssoc2(compoundSelector_, p.map(combinatorSeparator_, (c) => (left, right) => ({\n    type: 'compound',\n    list: [...right.list, { type: 'combinator', combinator: c, left: left, specificity: left.specificity }],\n    specificity: sumSpec(left.specificity, right.specificity)\n})), compoundSelector_);\nconst listSelector_ = p.leftAssoc2(p.map(complexSelector_, (s) => ({ type: 'list', list: [s] })), p.map(optionallySpaced(literal(',')), () => (acc, next) => ({ type: 'list', list: [...acc.list, next] })), complexSelector_);\nfunction parse_(parser, str) {\n    if (!(typeof str === 'string' || str instanceof String)) {\n        throw new Error('Expected a selector string. Actual input is not a string!');\n    }\n    const lexerResult = lexSelector(str);\n    if (!lexerResult.complete) {\n        throw new Error(`The input \"${str}\" was only partially tokenized, stopped at offset ${lexerResult.offset}!\\n` +\n            prettyPrintPosition(str, lexerResult.offset));\n    }\n    const result = optionallySpaced(parser)({ tokens: lexerResult.tokens, options: undefined }, 0);\n    if (!result.matched) {\n        throw new Error(`No match for \"${str}\" input!`);\n    }\n    if (result.position < lexerResult.tokens.length) {\n        const token = lexerResult.tokens[result.position];\n        throw new Error(`The input \"${str}\" was only partially parsed, stopped at offset ${token.offset}!\\n` +\n            prettyPrintPosition(str, token.offset, token.len));\n    }\n    return result.value;\n}\nfunction prettyPrintPosition(str, offset, len = 1) {\n    return `${str.replace(/(\\t)|(\\r)|(\\n)/g, (m, t, r) => t ? '\\u2409' : r ? '\\u240d' : '\\u240a')}\\n${''.padEnd(offset)}${'^'.repeat(len)}`;\n}\nfunction parse(str) {\n    return parse_(listSelector_, str);\n}\nfunction parse1(str) {\n    return parse_(complexSelector_, str);\n}\n\nfunction serialize(selector) {\n    if (!selector.type) {\n        throw new Error('This is not an AST node.');\n    }\n    switch (selector.type) {\n        case 'universal':\n            return _serNs(selector.namespace) + '*';\n        case 'tag':\n            return _serNs(selector.namespace) + _serIdent(selector.name);\n        case 'class':\n            return '.' + _serIdent(selector.name);\n        case 'id':\n            return '#' + _serIdent(selector.name);\n        case 'attrPresence':\n            return `[${_serNs(selector.namespace)}${_serIdent(selector.name)}]`;\n        case 'attrValue':\n            return `[${_serNs(selector.namespace)}${_serIdent(selector.name)}${selector.matcher}\"${_serStr(selector.value)}\"${(selector.modifier ? selector.modifier : '')}]`;\n        case 'combinator':\n            return serialize(selector.left) + selector.combinator;\n        case 'compound':\n            return selector.list.reduce((acc, node) => {\n                if (node.type === 'combinator') {\n                    return serialize(node) + acc;\n                }\n                else {\n                    return acc + serialize(node);\n                }\n            }, '');\n        case 'list':\n            return selector.list.map(serialize).join(',');\n    }\n}\nfunction _serNs(ns) {\n    return (ns || ns === '')\n        ? _serIdent(ns) + '|'\n        : '';\n}\nfunction _codePoint(char) {\n    return `\\\\${char.codePointAt(0).toString(16)} `;\n}\nfunction _serIdent(str) {\n    return str.replace(\n    /(^[0-9])|(^-[0-9])|(^-$)|([-0-9a-zA-Z_]|[^\\x00-\\x7F])|(\\x00)|([\\x01-\\x1f]|\\x7f)|([\\s\\S])/g, (m, d1, d2, hy, safe, nl, ctrl, other) => d1 ? _codePoint(d1) :\n        d2 ? '-' + _codePoint(d2.slice(1)) :\n            hy ? '\\\\-' :\n                safe ? safe :\n                    nl ? '\\ufffd' :\n                        ctrl ? _codePoint(ctrl) :\n                            '\\\\' + other);\n}\nfunction _serStr(str) {\n    return str.replace(\n    /(\")|(\\\\)|(\\x00)|([\\x01-\\x1f]|\\x7f)/g, (m, dq, bs, nl, ctrl) => dq ? '\\\\\"' :\n        bs ? '\\\\\\\\' :\n            nl ? '\\ufffd' :\n                _codePoint(ctrl));\n}\nfunction normalize(selector) {\n    if (!selector.type) {\n        throw new Error('This is not an AST node.');\n    }\n    switch (selector.type) {\n        case 'compound': {\n            selector.list.forEach(normalize);\n            selector.list.sort((a, b) => _compareArrays(_getSelectorPriority(a), _getSelectorPriority(b)));\n            break;\n        }\n        case 'combinator': {\n            normalize(selector.left);\n            break;\n        }\n        case 'list': {\n            selector.list.forEach(normalize);\n            selector.list.sort((a, b) => (serialize(a) < serialize(b)) ? -1 : 1);\n            break;\n        }\n    }\n    return selector;\n}\nfunction _getSelectorPriority(selector) {\n    switch (selector.type) {\n        case 'universal':\n            return [1];\n        case 'tag':\n            return [1];\n        case 'id':\n            return [2];\n        case 'class':\n            return [3, selector.name];\n        case 'attrPresence':\n            return [4, serialize(selector)];\n        case 'attrValue':\n            return [5, serialize(selector)];\n        case 'combinator':\n            return [15, serialize(selector)];\n    }\n}\nfunction compareSelectors(a, b) {\n    return _compareArrays(a.specificity, b.specificity);\n}\nfunction compareSpecificity(a, b) {\n    return _compareArrays(a, b);\n}\nfunction _compareArrays(a, b) {\n    if (!Array.isArray(a) || !Array.isArray(b)) {\n        throw new Error('Arguments must be arrays.');\n    }\n    const shorter = (a.length < b.length) ? a.length : b.length;\n    for (let i = 0; i < shorter; i++) {\n        if (a[i] === b[i]) {\n            continue;\n        }\n        return (a[i] < b[i]) ? -1 : 1;\n    }\n    return a.length - b.length;\n}\n\nexport { ast as Ast, compareSelectors, compareSpecificity, normalize, parse, parse1, serialize };\n",
    "import * as parseley from 'parseley';\nimport { compareSpecificity } from 'parseley';\n\nvar Ast = /*#__PURE__*/Object.freeze({\n    __proto__: null\n});\n\nvar Types = /*#__PURE__*/Object.freeze({\n    __proto__: null\n});\n\nconst treeify = (nodes) => '▽\\n' + treeifyArray(nodes, thinLines);\nconst thinLines = [['├─', '│ '], ['└─', '  ']];\nconst heavyLines = [['┠─', '┃ '], ['┖─', '  ']];\nconst doubleLines = [['╟─', '║ '], ['╙─', '  ']];\nfunction treeifyArray(nodes, tpl = heavyLines) {\n    return prefixItems(tpl, nodes.map(n => treeifyNode(n)));\n}\nfunction treeifyNode(node) {\n    switch (node.type) {\n        case 'terminal': {\n            const vctr = node.valueContainer;\n            return `◁ #${vctr.index} ${JSON.stringify(vctr.specificity)} ${vctr.value}`;\n        }\n        case 'tagName':\n            return `◻ Tag name\\n${treeifyArray(node.variants, doubleLines)}`;\n        case 'attrValue':\n            return `▣ Attr value: ${node.name}\\n${treeifyArray(node.matchers, doubleLines)}`;\n        case 'attrPresence':\n            return `◨ Attr presence: ${node.name}\\n${treeifyArray(node.cont)}`;\n        case 'pushElement':\n            return `◉ Push element: ${node.combinator}\\n${treeifyArray(node.cont, thinLines)}`;\n        case 'popElement':\n            return `◌ Pop element\\n${treeifyArray(node.cont, thinLines)}`;\n        case 'variant':\n            return `◇ = ${node.value}\\n${treeifyArray(node.cont)}`;\n        case 'matcher':\n            return `◈ ${node.matcher} \"${node.value}\"${node.modifier || ''}\\n${treeifyArray(node.cont)}`;\n    }\n}\nfunction prefixItems(tpl, items) {\n    return items\n        .map((item, i, { length }) => prefixItem(tpl, item, i === length - 1))\n        .join('\\n');\n}\nfunction prefixItem(tpl, item, tail = true) {\n    const tpl1 = tpl[tail ? 1 : 0];\n    return tpl1[0] + item.split('\\n').join('\\n' + tpl1[1]);\n}\n\nvar TreeifyBuilder = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    treeify: treeify\n});\n\nclass DecisionTree {\n    constructor(input) {\n        this.branches = weave(toAstTerminalPairs(input));\n    }\n    build(builder) {\n        return builder(this.branches);\n    }\n}\nfunction toAstTerminalPairs(array) {\n    const len = array.length;\n    const results = new Array(len);\n    for (let i = 0; i < len; i++) {\n        const [selectorString, val] = array[i];\n        const ast = preprocess(parseley.parse1(selectorString));\n        results[i] = {\n            ast: ast,\n            terminal: {\n                type: 'terminal',\n                valueContainer: { index: i, value: val, specificity: ast.specificity }\n            }\n        };\n    }\n    return results;\n}\nfunction preprocess(ast) {\n    reduceSelectorVariants(ast);\n    parseley.normalize(ast);\n    return ast;\n}\nfunction reduceSelectorVariants(ast) {\n    const newList = [];\n    ast.list.forEach(sel => {\n        switch (sel.type) {\n            case 'class':\n                newList.push({\n                    matcher: '~=',\n                    modifier: null,\n                    name: 'class',\n                    namespace: null,\n                    specificity: sel.specificity,\n                    type: 'attrValue',\n                    value: sel.name,\n                });\n                break;\n            case 'id':\n                newList.push({\n                    matcher: '=',\n                    modifier: null,\n                    name: 'id',\n                    namespace: null,\n                    specificity: sel.specificity,\n                    type: 'attrValue',\n                    value: sel.name,\n                });\n                break;\n            case 'combinator':\n                reduceSelectorVariants(sel.left);\n                newList.push(sel);\n                break;\n            case 'universal':\n                break;\n            default:\n                newList.push(sel);\n                break;\n        }\n    });\n    ast.list = newList;\n}\nfunction weave(items) {\n    const branches = [];\n    while (items.length) {\n        const topKind = findTopKey(items, (sel) => true, getSelectorKind);\n        const { matches, nonmatches, empty } = breakByKind(items, topKind);\n        items = nonmatches;\n        if (matches.length) {\n            branches.push(branchOfKind(topKind, matches));\n        }\n        if (empty.length) {\n            branches.push(...terminate(empty));\n        }\n    }\n    return branches;\n}\nfunction terminate(items) {\n    const results = [];\n    for (const item of items) {\n        const terminal = item.terminal;\n        if (terminal.type === 'terminal') {\n            results.push(terminal);\n        }\n        else {\n            const { matches, rest } = partition(terminal.cont, (node) => node.type === 'terminal');\n            matches.forEach((node) => results.push(node));\n            if (rest.length) {\n                terminal.cont = rest;\n                results.push(terminal);\n            }\n        }\n    }\n    return results;\n}\nfunction breakByKind(items, selectedKind) {\n    const matches = [];\n    const nonmatches = [];\n    const empty = [];\n    for (const item of items) {\n        const simpsels = item.ast.list;\n        if (simpsels.length) {\n            const isMatch = simpsels.some(node => getSelectorKind(node) === selectedKind);\n            (isMatch ? matches : nonmatches).push(item);\n        }\n        else {\n            empty.push(item);\n        }\n    }\n    return { matches, nonmatches, empty };\n}\nfunction getSelectorKind(sel) {\n    switch (sel.type) {\n        case 'attrPresence':\n            return `attrPresence ${sel.name}`;\n        case 'attrValue':\n            return `attrValue ${sel.name}`;\n        case 'combinator':\n            return `combinator ${sel.combinator}`;\n        default:\n            return sel.type;\n    }\n}\nfunction branchOfKind(kind, items) {\n    if (kind === 'tag') {\n        return tagNameBranch(items);\n    }\n    if (kind.startsWith('attrValue ')) {\n        return attrValueBranch(kind.substring(10), items);\n    }\n    if (kind.startsWith('attrPresence ')) {\n        return attrPresenceBranch(kind.substring(13), items);\n    }\n    if (kind === 'combinator >') {\n        return combinatorBranch('>', items);\n    }\n    if (kind === 'combinator +') {\n        return combinatorBranch('+', items);\n    }\n    throw new Error(`Unsupported selector kind: ${kind}`);\n}\nfunction tagNameBranch(items) {\n    const groups = spliceAndGroup(items, (x) => x.type === 'tag', (x) => x.name);\n    const variants = Object.entries(groups).map(([name, group]) => ({\n        type: 'variant',\n        value: name,\n        cont: weave(group.items)\n    }));\n    return {\n        type: 'tagName',\n        variants: variants\n    };\n}\nfunction attrPresenceBranch(name, items) {\n    for (const item of items) {\n        spliceSimpleSelector(item, (x) => (x.type === 'attrPresence') && (x.name === name));\n    }\n    return {\n        type: 'attrPresence',\n        name: name,\n        cont: weave(items)\n    };\n}\nfunction attrValueBranch(name, items) {\n    const groups = spliceAndGroup(items, (x) => (x.type === 'attrValue') && (x.name === name), (x) => `${x.matcher} ${x.modifier || ''} ${x.value}`);\n    const matchers = [];\n    for (const group of Object.values(groups)) {\n        const sel = group.oneSimpleSelector;\n        const predicate = getAttrPredicate(sel);\n        const continuation = weave(group.items);\n        matchers.push({\n            type: 'matcher',\n            matcher: sel.matcher,\n            modifier: sel.modifier,\n            value: sel.value,\n            predicate: predicate,\n            cont: continuation\n        });\n    }\n    return {\n        type: 'attrValue',\n        name: name,\n        matchers: matchers\n    };\n}\nfunction getAttrPredicate(sel) {\n    if (sel.modifier === 'i') {\n        const expected = sel.value.toLowerCase();\n        switch (sel.matcher) {\n            case '=':\n                return (actual) => expected === actual.toLowerCase();\n            case '~=':\n                return (actual) => actual.toLowerCase().split(/[ \\t]+/).includes(expected);\n            case '^=':\n                return (actual) => actual.toLowerCase().startsWith(expected);\n            case '$=':\n                return (actual) => actual.toLowerCase().endsWith(expected);\n            case '*=':\n                return (actual) => actual.toLowerCase().includes(expected);\n            case '|=':\n                return (actual) => {\n                    const lower = actual.toLowerCase();\n                    return (expected === lower) || (lower.startsWith(expected) && lower[expected.length] === '-');\n                };\n        }\n    }\n    else {\n        const expected = sel.value;\n        switch (sel.matcher) {\n            case '=':\n                return (actual) => expected === actual;\n            case '~=':\n                return (actual) => actual.split(/[ \\t]+/).includes(expected);\n            case '^=':\n                return (actual) => actual.startsWith(expected);\n            case '$=':\n                return (actual) => actual.endsWith(expected);\n            case '*=':\n                return (actual) => actual.includes(expected);\n            case '|=':\n                return (actual) => (expected === actual) || (actual.startsWith(expected) && actual[expected.length] === '-');\n        }\n    }\n}\nfunction combinatorBranch(combinator, items) {\n    const groups = spliceAndGroup(items, (x) => (x.type === 'combinator') && (x.combinator === combinator), (x) => parseley.serialize(x.left));\n    const leftItems = [];\n    for (const group of Object.values(groups)) {\n        const rightCont = weave(group.items);\n        const leftAst = group.oneSimpleSelector.left;\n        leftItems.push({\n            ast: leftAst,\n            terminal: { type: 'popElement', cont: rightCont }\n        });\n    }\n    return {\n        type: 'pushElement',\n        combinator: combinator,\n        cont: weave(leftItems)\n    };\n}\nfunction spliceAndGroup(items, predicate, keyCallback) {\n    const groups = {};\n    while (items.length) {\n        const bestKey = findTopKey(items, predicate, keyCallback);\n        const bestKeyPredicate = (sel) => predicate(sel) && keyCallback(sel) === bestKey;\n        const hasBestKeyPredicate = (item) => item.ast.list.some(bestKeyPredicate);\n        const { matches, rest } = partition1(items, hasBestKeyPredicate);\n        let oneSimpleSelector = null;\n        for (const item of matches) {\n            const splicedNode = spliceSimpleSelector(item, bestKeyPredicate);\n            if (!oneSimpleSelector) {\n                oneSimpleSelector = splicedNode;\n            }\n        }\n        if (oneSimpleSelector == null) {\n            throw new Error('No simple selector is found.');\n        }\n        groups[bestKey] = { oneSimpleSelector: oneSimpleSelector, items: matches };\n        items = rest;\n    }\n    return groups;\n}\nfunction spliceSimpleSelector(item, predicate) {\n    const simpsels = item.ast.list;\n    const matches = new Array(simpsels.length);\n    let firstIndex = -1;\n    for (let i = simpsels.length; i-- > 0;) {\n        if (predicate(simpsels[i])) {\n            matches[i] = true;\n            firstIndex = i;\n        }\n    }\n    if (firstIndex == -1) {\n        throw new Error(`Couldn't find the required simple selector.`);\n    }\n    const result = simpsels[firstIndex];\n    item.ast.list = simpsels.filter((sel, i) => !matches[i]);\n    return result;\n}\nfunction findTopKey(items, predicate, keyCallback) {\n    const candidates = {};\n    for (const item of items) {\n        const candidates1 = {};\n        for (const node of item.ast.list.filter(predicate)) {\n            candidates1[keyCallback(node)] = true;\n        }\n        for (const key of Object.keys(candidates1)) {\n            if (candidates[key]) {\n                candidates[key]++;\n            }\n            else {\n                candidates[key] = 1;\n            }\n        }\n    }\n    let topKind = '';\n    let topCounter = 0;\n    for (const entry of Object.entries(candidates)) {\n        if (entry[1] > topCounter) {\n            topKind = entry[0];\n            topCounter = entry[1];\n        }\n    }\n    return topKind;\n}\nfunction partition(src, predicate) {\n    const matches = [];\n    const rest = [];\n    for (const x of src) {\n        if (predicate(x)) {\n            matches.push(x);\n        }\n        else {\n            rest.push(x);\n        }\n    }\n    return { matches, rest };\n}\nfunction partition1(src, predicate) {\n    const matches = [];\n    const rest = [];\n    for (const x of src) {\n        if (predicate(x)) {\n            matches.push(x);\n        }\n        else {\n            rest.push(x);\n        }\n    }\n    return { matches, rest };\n}\n\nclass Picker {\n    constructor(f) {\n        this.f = f;\n    }\n    pickAll(el) {\n        return this.f(el);\n    }\n    pick1(el, preferFirst = false) {\n        const results = this.f(el);\n        const len = results.length;\n        if (len === 0) {\n            return null;\n        }\n        if (len === 1) {\n            return results[0].value;\n        }\n        const comparator = (preferFirst)\n            ? comparatorPreferFirst\n            : comparatorPreferLast;\n        let result = results[0];\n        for (let i = 1; i < len; i++) {\n            const next = results[i];\n            if (comparator(result, next)) {\n                result = next;\n            }\n        }\n        return result.value;\n    }\n}\nfunction comparatorPreferFirst(acc, next) {\n    const diff = compareSpecificity(next.specificity, acc.specificity);\n    return diff > 0 || (diff === 0 && next.index < acc.index);\n}\nfunction comparatorPreferLast(acc, next) {\n    const diff = compareSpecificity(next.specificity, acc.specificity);\n    return diff > 0 || (diff === 0 && next.index > acc.index);\n}\n\nexport { Ast, DecisionTree, Picker, TreeifyBuilder as Treeify, Types };\n",
    "import { isTag } from 'domhandler';\nimport { Picker } from 'selderee';\n\nfunction hp2Builder(nodes) {\n    return new Picker(handleArray(nodes));\n}\nfunction handleArray(nodes) {\n    const matchers = nodes.map(handleNode);\n    return (el, ...tail) => matchers.flatMap(m => m(el, ...tail));\n}\nfunction handleNode(node) {\n    switch (node.type) {\n        case 'terminal': {\n            const result = [node.valueContainer];\n            return (el, ...tail) => result;\n        }\n        case 'tagName':\n            return handleTagName(node);\n        case 'attrValue':\n            return handleAttrValueName(node);\n        case 'attrPresence':\n            return handleAttrPresenceName(node);\n        case 'pushElement':\n            return handlePushElementNode(node);\n        case 'popElement':\n            return handlePopElementNode(node);\n    }\n}\nfunction handleTagName(node) {\n    const variants = {};\n    for (const variant of node.variants) {\n        variants[variant.value] = handleArray(variant.cont);\n    }\n    return (el, ...tail) => {\n        const continuation = variants[el.name];\n        return (continuation) ? continuation(el, ...tail) : [];\n    };\n}\nfunction handleAttrPresenceName(node) {\n    const attrName = node.name;\n    const continuation = handleArray(node.cont);\n    return (el, ...tail) => (Object.prototype.hasOwnProperty.call(el.attribs, attrName))\n        ? continuation(el, ...tail)\n        : [];\n}\nfunction handleAttrValueName(node) {\n    const callbacks = [];\n    for (const matcher of node.matchers) {\n        const predicate = matcher.predicate;\n        const continuation = handleArray(matcher.cont);\n        callbacks.push((attr, el, ...tail) => (predicate(attr) ? continuation(el, ...tail) : []));\n    }\n    const attrName = node.name;\n    return (el, ...tail) => {\n        const attr = el.attribs[attrName];\n        return (attr || attr === '')\n            ? callbacks.flatMap(cb => cb(attr, el, ...tail))\n            : [];\n    };\n}\nfunction handlePushElementNode(node) {\n    const continuation = handleArray(node.cont);\n    const leftElementGetter = (node.combinator === '+')\n        ? getPrecedingElement\n        : getParentElement;\n    return (el, ...tail) => {\n        const next = leftElementGetter(el);\n        if (next === null) {\n            return [];\n        }\n        return continuation(next, el, ...tail);\n    };\n}\nconst getPrecedingElement = (el) => {\n    const prev = el.prev;\n    if (prev === null) {\n        return null;\n    }\n    return (isTag(prev)) ? prev : getPrecedingElement(prev);\n};\nconst getParentElement = (el) => {\n    const parent = el.parent;\n    return (parent && isTag(parent)) ? parent : null;\n};\nfunction handlePopElementNode(node) {\n    const continuation = handleArray(node.cont);\n    return (el, next, ...tail) => continuation(next, ...tail);\n}\n\nexport { hp2Builder };\n",
    "// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map",
    "// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map",
    "// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map",
    "import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map",
    "import { htmlDecodeTree, xmlDecodeTree, BinTrieFlags, determineBranch, replaceCodePoint, } from \"entities/lib/decode.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"SpecialStartSequence\"] = 23] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 24] = \"InSpecialTag\";\n    State[State[\"BeforeEntity\"] = 25] = \"BeforeEntity\";\n    State[State[\"BeforeNumericEntity\"] = 26] = \"BeforeNumericEntity\";\n    State[State[\"InNamedEntity\"] = 27] = \"InNamedEntity\";\n    State[State[\"InNumericEntity\"] = 28] = \"InNumericEntity\";\n    State[State[\"InHexEntity\"] = 29] = \"InHexEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isNumber(c) {\n    return c >= CharCodes.Zero && c <= CharCodes.Nine;\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nfunction isHexDigit(c) {\n    return ((c >= CharCodes.UpperA && c <= CharCodes.UpperF) ||\n        (c >= CharCodes.LowerA && c <= CharCodes.LowerF));\n}\nexport var QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n};\nexport default class Tokenizer {\n    constructor({ xmlMode = false, decodeEntities = true, }, cbs) {\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.trieIndex = 0;\n        this.trieCurrent = 0;\n        /** For named entities, the index of the value. For numeric entities, the code point. */\n        this.entityResult = 0;\n        this.entityExcess = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityTrie = xmlMode ? xmlDecodeTree : htmlDecodeTree;\n    }\n    reset() {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running)\n            this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    }\n    /**\n     * The current index within all of the written data.\n     */\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * The start of the current section.\n     */\n    getSectionStart() {\n        return this.sectionStart;\n    }\n    stateText(c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.state = State.BeforeEntity;\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    }\n    stateCDATASequence(c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    fastForwardTo(c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    isTagStartChar(c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {\n                this.startSpecial(Sequences.TitleEnd, 3);\n            }\n            else {\n                this.state =\n                    !this.xmlMode && lower === Sequences.ScriptEnd[2]\n                        ? State.BeforeSpecialS\n                        : State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if (isWhitespace(c)) {\n            // Ignore\n        }\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.baseState = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.baseState = this.state;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.baseState = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    }\n    stateInDeclaration(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    }\n    stateInSpecialComment(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    stateBeforeEntity(c) {\n        // Start excess with 1 to include the '&'\n        this.entityExcess = 1;\n        this.entityResult = 0;\n        if (c === CharCodes.Number) {\n            this.state = State.BeforeNumericEntity;\n        }\n        else if (c === CharCodes.Amp) {\n            // We have two `&` characters in a row. Stay in the current state.\n        }\n        else {\n            this.trieIndex = 0;\n            this.trieCurrent = this.entityTrie[0];\n            this.state = State.InNamedEntity;\n            this.stateInNamedEntity(c);\n        }\n    }\n    stateInNamedEntity(c) {\n        this.entityExcess += 1;\n        this.trieIndex = determineBranch(this.entityTrie, this.trieCurrent, this.trieIndex + 1, c);\n        if (this.trieIndex < 0) {\n            this.emitNamedEntity();\n            this.index--;\n            return;\n        }\n        this.trieCurrent = this.entityTrie[this.trieIndex];\n        const masked = this.trieCurrent & BinTrieFlags.VALUE_LENGTH;\n        // If the branch is a value, store it and continue\n        if (masked) {\n            // The mask is the number of bytes of the value, including the current byte.\n            const valueLength = (masked >> 14) - 1;\n            // If we have a legacy entity while parsing strictly, just skip the number of bytes\n            if (!this.allowLegacyEntity() && c !== CharCodes.Semi) {\n                this.trieIndex += valueLength;\n            }\n            else {\n                // Add 1 as we have already incremented the excess\n                const entityStart = this.index - this.entityExcess + 1;\n                if (entityStart > this.sectionStart) {\n                    this.emitPartial(this.sectionStart, entityStart);\n                }\n                // If this is a surrogate pair, consume the next two bytes\n                this.entityResult = this.trieIndex;\n                this.trieIndex += valueLength;\n                this.entityExcess = 0;\n                this.sectionStart = this.index + 1;\n                if (valueLength === 0) {\n                    this.emitNamedEntity();\n                }\n            }\n        }\n    }\n    emitNamedEntity() {\n        this.state = this.baseState;\n        if (this.entityResult === 0) {\n            return;\n        }\n        const valueLength = (this.entityTrie[this.entityResult] & BinTrieFlags.VALUE_LENGTH) >>\n            14;\n        switch (valueLength) {\n            case 1: {\n                this.emitCodePoint(this.entityTrie[this.entityResult] &\n                    ~BinTrieFlags.VALUE_LENGTH);\n                break;\n            }\n            case 2: {\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                break;\n            }\n            case 3: {\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                this.emitCodePoint(this.entityTrie[this.entityResult + 2]);\n            }\n        }\n    }\n    stateBeforeNumericEntity(c) {\n        if ((c | 0x20) === CharCodes.LowerX) {\n            this.entityExcess++;\n            this.state = State.InHexEntity;\n        }\n        else {\n            this.state = State.InNumericEntity;\n            this.stateInNumericEntity(c);\n        }\n    }\n    emitNumericEntity(strict) {\n        const entityStart = this.index - this.entityExcess - 1;\n        const numberStart = entityStart + 2 + Number(this.state === State.InHexEntity);\n        if (numberStart !== this.index) {\n            // Emit leading data if any\n            if (entityStart > this.sectionStart) {\n                this.emitPartial(this.sectionStart, entityStart);\n            }\n            this.sectionStart = this.index + Number(strict);\n            this.emitCodePoint(replaceCodePoint(this.entityResult));\n        }\n        this.state = this.baseState;\n    }\n    stateInNumericEntity(c) {\n        if (c === CharCodes.Semi) {\n            this.emitNumericEntity(true);\n        }\n        else if (isNumber(c)) {\n            this.entityResult = this.entityResult * 10 + (c - CharCodes.Zero);\n            this.entityExcess++;\n        }\n        else {\n            if (this.allowLegacyEntity()) {\n                this.emitNumericEntity(false);\n            }\n            else {\n                this.state = this.baseState;\n            }\n            this.index--;\n        }\n    }\n    stateInHexEntity(c) {\n        if (c === CharCodes.Semi) {\n            this.emitNumericEntity(true);\n        }\n        else if (isNumber(c)) {\n            this.entityResult = this.entityResult * 16 + (c - CharCodes.Zero);\n            this.entityExcess++;\n        }\n        else if (isHexDigit(c)) {\n            this.entityResult =\n                this.entityResult * 16 + ((c | 0x20) - CharCodes.LowerA + 10);\n            this.entityExcess++;\n        }\n        else {\n            if (this.allowLegacyEntity()) {\n                this.emitNumericEntity(false);\n            }\n            else {\n                this.state = this.baseState;\n            }\n            this.index--;\n        }\n    }\n    allowLegacyEntity() {\n        return (!this.xmlMode &&\n            (this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag));\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    parse() {\n        while (this.shouldContinue()) {\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InNamedEntity: {\n                    this.stateInNamedEntity(c);\n                    break;\n                }\n                case State.BeforeEntity: {\n                    this.stateBeforeEntity(c);\n                    break;\n                }\n                case State.InHexEntity: {\n                    this.stateInHexEntity(c);\n                    break;\n                }\n                case State.InNumericEntity: {\n                    this.stateInNumericEntity(c);\n                    break;\n                }\n                default: {\n                    // `this._state === State.BeforeNumericEntity`\n                    this.stateBeforeNumericEntity(c);\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === State.InNamedEntity) {\n            this.emitNamedEntity();\n        }\n        // If there is remaining data, emit it in a reasonable way\n        if (this.sectionStart < this.index) {\n            this.handleTrailingData();\n        }\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n    handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InNumericEntity &&\n            this.allowLegacyEntity()) {\n            this.emitNumericEntity(false);\n            // All trailing data will have been consumed\n        }\n        else if (this.state === State.InHexEntity &&\n            this.allowLegacyEntity()) {\n            this.emitNumericEntity(false);\n            // All trailing data will have been consumed\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) {\n            /*\n             * If we are currently in an opening or closing tag, us not calling the\n             * respective callback signals that the tag should be ignored.\n             */\n        }\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    }\n    emitPartial(start, endIndex) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            this.cbs.onattribdata(start, endIndex);\n        }\n        else {\n            this.cbs.ontext(start, endIndex);\n        }\n    }\n    emitCodePoint(cp) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            this.cbs.ontextentity(cp);\n        }\n    }\n}\n//# sourceMappingURL=Tokenizer.js.map",
    "import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nconst voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n    constructor(cbs, options = {}) {\n        var _a, _b, _c, _d, _e;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.foreignContext = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */\n        this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */\n        this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;\n        this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer)(this.options, this);\n        (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */\n    ontextentity(cp) {\n        var _a, _b;\n        /*\n         * Entities can be emitted on the character, or directly after.\n         * We use the section start here to get accurate indices.\n         */\n        const index = this.tokenizer.getSectionStart();\n        this.endIndex = index - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n        this.startIndex = index;\n    }\n    isVoidElement(name) {\n        return !this.options.xmlMode && voidElements.has(name);\n    }\n    /** @internal */\n    onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = !this.options.xmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 &&\n                impliesClose.has(this.stack[this.stack.length - 1])) {\n                const element = this.stack.pop();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.push(name);\n            if (foreignContextElements.has(name)) {\n                this.foreignContext.push(true);\n            }\n            else if (htmlIntegrationElements.has(name)) {\n                this.foreignContext.push(false);\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    }\n    /** @internal */\n    onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (foreignContextElements.has(name) ||\n            htmlIntegrationElements.has(name)) {\n            this.foreignContext.pop();\n        }\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.lastIndexOf(name);\n            if (pos !== -1) {\n                if (this.cbs.onclosetag) {\n                    let count = this.stack.length - pos;\n                    while (count--) {\n                        // We know the stack has sufficient elements.\n                        this.cbs.onclosetag(this.stack.pop(), count !== 0);\n                    }\n                }\n                else\n                    this.stack.length = pos;\n            }\n            else if (!this.options.xmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (!this.options.xmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, \"br\");\n            (_d = (_c = this.cbs).onopentag) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\", {}, true);\n            (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.options.xmlMode ||\n            this.options.recognizeSelfClosing ||\n            this.foreignContext[this.foreignContext.length - 1]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend(endIndex);\n        }\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[this.stack.length - 1] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.pop();\n        }\n    }\n    /** @internal */\n    onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames\n            ? name.toLowerCase()\n            : name;\n    }\n    /** @internal */\n    onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n    onattribentity(cp) {\n        this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n    onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double\n            ? '\"'\n            : quote === QuoteType.Single\n                ? \"'\"\n                : quote === QuoteType.NoValue\n                    ? undefined\n                    : null);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search(reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    }\n    /** @internal */\n    ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (this.options.xmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (let index = this.stack.length; index > 0; this.cbs.onclosetag(this.stack[--index], true))\n                ;\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        this.buffers.length = 0;\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while (start - this.bufferOffset >= this.buffers[0].length) {\n            this.shiftBuffer();\n        }\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while (end - this.bufferOffset > this.buffers[0].length) {\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk)\n            this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    resume() {\n        this.tokenizer.resume();\n        while (this.tokenizer.running &&\n            this.writeIndex < this.buffers.length) {\n            this.tokenizer.write(this.buffers[this.writeIndex++]);\n        }\n        if (this.ended)\n            this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    done(chunk) {\n        this.end(chunk);\n    }\n}\n//# sourceMappingURL=Parser.js.map",
    "export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map",
    "import { decodeXML, decodeHTML, DecodingMode } from \"./decode.js\";\nimport { encodeHTML, encodeNonAsciiHTML } from \"./encode.js\";\nimport { encodeXML, escapeUTF8, escapeAttribute, escapeText, } from \"./escape.js\";\n/** The level of entities to support. */\nexport var EntityLevel;\n(function (EntityLevel) {\n    /** Support only XML entities. */\n    EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n    /** Support HTML entities, which are a superset of XML entities. */\n    EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})(EntityLevel || (EntityLevel = {}));\nexport var EncodingMode;\n(function (EncodingMode) {\n    /**\n     * The output is UTF-8 encoded. Only characters that need escaping within\n     * XML will be escaped.\n     */\n    EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n    /**\n     * The output consists only of ASCII characters. Characters that need\n     * escaping within HTML, and characters that aren't ASCII characters will\n     * be escaped.\n     */\n    EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n    /**\n     * Encode all characters that have an equivalent entity, as well as all\n     * characters that are not ASCII characters.\n     */\n    EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n    /**\n     * Encode all characters that have to be escaped in HTML attributes,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n    /**\n     * Encode all characters that have to be escaped in HTML text,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})(EncodingMode || (EncodingMode = {}));\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n */\nexport function decode(data, options = EntityLevel.XML) {\n    const level = typeof options === \"number\" ? options : options.level;\n    if (level === EntityLevel.HTML) {\n        const mode = typeof options === \"object\" ? options.mode : undefined;\n        return decodeHTML(data, mode);\n    }\n    return decodeXML(data);\n}\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n * @deprecated Use `decode` with the `mode` set to `Strict`.\n */\nexport function decodeStrict(data, options = EntityLevel.XML) {\n    var _a;\n    const opts = typeof options === \"number\" ? { level: options } : options;\n    (_a = opts.mode) !== null && _a !== void 0 ? _a : (opts.mode = DecodingMode.Strict);\n    return decode(data, opts);\n}\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param options Encoding options.\n */\nexport function encode(data, options = EntityLevel.XML) {\n    const opts = typeof options === \"number\" ? { level: options } : options;\n    // Mode `UTF8` just escapes XML entities\n    if (opts.mode === EncodingMode.UTF8)\n        return escapeUTF8(data);\n    if (opts.mode === EncodingMode.Attribute)\n        return escapeAttribute(data);\n    if (opts.mode === EncodingMode.Text)\n        return escapeText(data);\n    if (opts.level === EntityLevel.HTML) {\n        if (opts.mode === EncodingMode.ASCII) {\n            return encodeNonAsciiHTML(data);\n        }\n        return encodeHTML(data);\n    }\n    // ASCII and Extensive are equivalent\n    return encodeXML(data);\n}\nexport { encodeXML, escape, escapeUTF8, escapeAttribute, escapeText, } from \"./escape.js\";\nexport { encodeHTML, encodeNonAsciiHTML, \n// Legacy aliases (deprecated)\nencodeHTML as encodeHTML4, encodeHTML as encodeHTML5, } from \"./encode.js\";\nexport { EntityDecoder, DecodingMode, decodeXML, decodeHTML, decodeHTMLStrict, decodeHTMLAttribute, \n// Legacy aliases (deprecated)\ndecodeHTML as decodeHTML4, decodeHTML as decodeHTML5, decodeHTMLStrict as decodeHTML4Strict, decodeHTMLStrict as decodeHTML5Strict, decodeXML as decodeXMLStrict, } from \"./decode.js\";\n//# sourceMappingURL=index.js.map",
    "export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n",
    "/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n",
    "import { Parser } from \"./Parser.js\";\nexport { Parser } from \"./Parser.js\";\nimport { DomHandler, } from \"domhandler\";\nexport { DomHandler, \n// Old name for DomHandler\nDomHandler as DefaultHandler, } from \"domhandler\";\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM builder.\n */\nexport function parseDocument(data, options) {\n    const handler = new DomHandler(undefined, options);\n    new Parser(handler, options).end(data);\n    return handler.root;\n}\n/**\n * Parses data, returns an array of the root nodes.\n *\n * Note that the root nodes still have a `Document` node as their parent.\n * Use `parseDocument` to get the `Document` node instead.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM builder.\n * @deprecated Use `parseDocument` instead.\n */\nexport function parseDOM(data, options) {\n    return parseDocument(data, options).children;\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed.\n * @param options Optional options for the parser and DOM builder.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n */\nexport function createDomStream(callback, options, elementCallback) {\n    const handler = new DomHandler(callback, options, elementCallback);\n    return new Parser(handler, options);\n}\nexport { default as Tokenizer, } from \"./Tokenizer.js\";\n/*\n * All of the following exports exist for backwards-compatibility.\n * They should probably be removed eventually.\n */\nexport * as ElementType from \"domelementtype\";\nimport { getFeed } from \"domutils\";\nexport { getFeed } from \"domutils\";\nconst parseFeedDefaultOptions = { xmlMode: true };\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.\n */\nexport function parseFeed(feed, options = parseFeedDefaultOptions) {\n    return getFeed(parseDOM(feed, options));\n}\nexport * as DomUtils from \"domutils\";\n//# sourceMappingURL=index.js.map",
    "import { hp2Builder } from '@selderee/plugin-htmlparser2';\nimport { parseDocument } from 'htmlparser2';\nimport { DecisionTree } from 'selderee';\nimport merge from 'deepmerge';\nimport { render } from 'dom-serializer';\n\n/**\n * Make a recursive function that will only run to a given depth\n * and switches to an alternative function at that depth. \\\n * No limitation if `n` is `undefined` (Just wraps `f` in that case).\n *\n * @param   { number | undefined } n   Allowed depth of recursion. `undefined` for no limitation.\n * @param   { Function }           f   Function that accepts recursive callback as the first argument.\n * @param   { Function }           [g] Function to run instead, when maximum depth was reached. Do nothing by default.\n * @returns { Function }\n */\nfunction limitedDepthRecursive (n, f, g = () => undefined) {\n  if (n === undefined) {\n    const f1 = function (...args) { return f(f1, ...args); };\n    return f1;\n  }\n  if (n >= 0) {\n    return function (...args) { return f(limitedDepthRecursive(n - 1, f, g), ...args); };\n  }\n  return g;\n}\n\n/**\n * Return the same string or a substring with\n * the given character occurrences removed from each side.\n *\n * @param   { string } str  A string to trim.\n * @param   { string } char A character to be trimmed.\n * @returns { string }\n */\nfunction trimCharacter (str, char) {\n  let start = 0;\n  let end = str.length;\n  while (start < end && str[start] === char) { ++start; }\n  while (end > start && str[end - 1] === char) { --end; }\n  return (start > 0 || end < str.length)\n    ? str.substring(start, end)\n    : str;\n}\n\n/**\n * Return the same string or a substring with\n * the given character occurrences removed from the end only.\n *\n * @param   { string } str  A string to trim.\n * @param   { string } char A character to be trimmed.\n * @returns { string }\n */\nfunction trimCharacterEnd (str, char) {\n  let end = str.length;\n  while (end > 0 && str[end - 1] === char) { --end; }\n  return (end < str.length)\n    ? str.substring(0, end)\n    : str;\n}\n\n/**\n * Return a new string will all characters replaced with unicode escape sequences.\n * This extreme kind of escaping can used to be safely compose regular expressions.\n *\n * @param { string } str A string to escape.\n * @returns { string } A string of unicode escape sequences.\n */\nfunction unicodeEscape (str) {\n  return str.replace(/[\\s\\S]/g, c => '\\\\u' + c.charCodeAt().toString(16).padStart(4, '0'));\n}\n\n/**\n * Deduplicate an array by a given key callback.\n * Item properties are merged recursively and with the preference for last defined values.\n * Of items with the same key, merged item takes the place of the last item,\n * others are omitted.\n *\n * @param { any[] } items An array to deduplicate.\n * @param { (x: any) => string } getKey Callback to get a value that distinguishes unique items.\n * @returns { any[] }\n */\nfunction mergeDuplicatesPreferLast (items, getKey) {\n  const map = new Map();\n  for (let i = items.length; i-- > 0;) {\n    const item = items[i];\n    const key = getKey(item);\n    map.set(\n      key,\n      (map.has(key))\n        ? merge(item, map.get(key), { arrayMerge: overwriteMerge$1 })\n        : item\n    );\n  }\n  return [...map.values()].reverse();\n}\n\nconst overwriteMerge$1 = (acc, src, options) => [...src];\n\n/**\n * Get a nested property from an object.\n *\n * @param   { object }   obj  The object to query for the value.\n * @param   { string[] } path The path to the property.\n * @returns { any }\n */\nfunction get (obj, path) {\n  for (const key of path) {\n    if (!obj) { return undefined; }\n    obj = obj[key];\n  }\n  return obj;\n}\n\n/**\n * Convert a number into alphabetic sequence representation (Sequence without zeroes).\n *\n * For example: `a, ..., z, aa, ..., zz, aaa, ...`.\n *\n * @param   { number } num              Number to convert. Must be >= 1.\n * @param   { string } [baseChar = 'a'] Character for 1 in the sequence.\n * @param   { number } [base = 26]      Number of characters in the sequence.\n * @returns { string }\n */\nfunction numberToLetterSequence (num, baseChar = 'a', base = 26) {\n  const digits = [];\n  do {\n    num -= 1;\n    digits.push(num % base);\n    num = (num / base) >> 0; // quick `floor`\n  } while (num > 0);\n  const baseCode = baseChar.charCodeAt(0);\n  return digits\n    .reverse()\n    .map(n => String.fromCharCode(baseCode + n))\n    .join('');\n}\n\nconst I = ['I', 'X', 'C', 'M'];\nconst V = ['V', 'L', 'D'];\n\n/**\n * Convert a number to it's Roman representation. No large numbers extension.\n *\n * @param   { number } num Number to convert. `0 < num <= 3999`.\n * @returns { string }\n */\nfunction numberToRoman (num) {\n  return [...(num) + '']\n    .map(n => +n)\n    .reverse()\n    .map((v, i) => ((v % 5 < 4)\n      ? (v < 5 ? '' : V[i]) + I[i].repeat(v % 5)\n      : I[i] + (v < 5 ? V[i] : I[i + 1])))\n    .reverse()\n    .join('');\n}\n\n/**\n * Helps to build text from words.\n */\nclass InlineTextBuilder {\n  /**\n   * Creates an instance of InlineTextBuilder.\n   *\n   * If `maxLineLength` is not provided then it is either `options.wordwrap` or unlimited.\n   *\n   * @param { Options } options           HtmlToText options.\n   * @param { number }  [ maxLineLength ] This builder will try to wrap text to fit this line length.\n   */\n  constructor (options, maxLineLength = undefined) {\n    /** @type { string[][] } */\n    this.lines = [];\n    /** @type { string[] }   */\n    this.nextLineWords = [];\n    this.maxLineLength = maxLineLength || options.wordwrap || Number.MAX_VALUE;\n    this.nextLineAvailableChars = this.maxLineLength;\n    this.wrapCharacters = get(options, ['longWordSplit', 'wrapCharacters']) || [];\n    this.forceWrapOnLimit = get(options, ['longWordSplit', 'forceWrapOnLimit']) || false;\n\n    this.stashedSpace = false;\n    this.wordBreakOpportunity = false;\n  }\n\n  /**\n   * Add a new word.\n   *\n   * @param { string } word A word to add.\n   * @param { boolean } [noWrap] Don't wrap text even if the line is too long.\n   */\n  pushWord (word, noWrap = false) {\n    if (this.nextLineAvailableChars <= 0 && !noWrap) {\n      this.startNewLine();\n    }\n    const isLineStart = this.nextLineWords.length === 0;\n    const cost = word.length + (isLineStart ? 0 : 1);\n    if ((cost <= this.nextLineAvailableChars) || noWrap) { // Fits into available budget\n\n      this.nextLineWords.push(word);\n      this.nextLineAvailableChars -= cost;\n\n    } else { // Does not fit - try to split the word\n\n      // The word is moved to a new line - prefer to wrap between words.\n      const [first, ...rest] = this.splitLongWord(word);\n      if (!isLineStart) { this.startNewLine(); }\n      this.nextLineWords.push(first);\n      this.nextLineAvailableChars -= first.length;\n      for (const part of rest) {\n        this.startNewLine();\n        this.nextLineWords.push(part);\n        this.nextLineAvailableChars -= part.length;\n      }\n\n    }\n  }\n\n  /**\n   * Pop a word from the currently built line.\n   * This doesn't affect completed lines.\n   *\n   * @returns { string }\n   */\n  popWord () {\n    const lastWord = this.nextLineWords.pop();\n    if (lastWord !== undefined) {\n      const isLineStart = this.nextLineWords.length === 0;\n      const cost = lastWord.length + (isLineStart ? 0 : 1);\n      this.nextLineAvailableChars += cost;\n    }\n    return lastWord;\n  }\n\n  /**\n   * Concat a word to the last word already in the builder.\n   * Adds a new word in case there are no words yet in the last line.\n   *\n   * @param { string } word A word to be concatenated.\n   * @param { boolean } [noWrap] Don't wrap text even if the line is too long.\n   */\n  concatWord (word, noWrap = false) {\n    if (this.wordBreakOpportunity && word.length > this.nextLineAvailableChars) {\n      this.pushWord(word, noWrap);\n      this.wordBreakOpportunity = false;\n    } else {\n      const lastWord = this.popWord();\n      this.pushWord((lastWord) ? lastWord.concat(word) : word, noWrap);\n    }\n  }\n\n  /**\n   * Add current line (and more empty lines if provided argument > 1) to the list of complete lines and start a new one.\n   *\n   * @param { number } n Number of line breaks that will be added to the resulting string.\n   */\n  startNewLine (n = 1) {\n    this.lines.push(this.nextLineWords);\n    if (n > 1) {\n      this.lines.push(...Array.from({ length: n - 1 }, () => []));\n    }\n    this.nextLineWords = [];\n    this.nextLineAvailableChars = this.maxLineLength;\n  }\n\n  /**\n   * No words in this builder.\n   *\n   * @returns { boolean }\n   */\n  isEmpty () {\n    return this.lines.length === 0\n        && this.nextLineWords.length === 0;\n  }\n\n  clear () {\n    this.lines.length = 0;\n    this.nextLineWords.length = 0;\n    this.nextLineAvailableChars = this.maxLineLength;\n  }\n\n  /**\n   * Join all lines of words inside the InlineTextBuilder into a complete string.\n   *\n   * @returns { string }\n   */\n  toString () {\n    return [...this.lines, this.nextLineWords]\n      .map(words => words.join(' '))\n      .join('\\n');\n  }\n\n  /**\n   * Split a long word up to fit within the word wrap limit.\n   * Use either a character to split looking back from the word wrap limit,\n   * or truncate to the word wrap limit.\n   *\n   * @param   { string }   word Input word.\n   * @returns { string[] }      Parts of the word.\n   */\n  splitLongWord (word) {\n    const parts = [];\n    let idx = 0;\n    while (word.length > this.maxLineLength) {\n\n      const firstLine = word.substring(0, this.maxLineLength);\n      const remainingChars = word.substring(this.maxLineLength);\n\n      const splitIndex = firstLine.lastIndexOf(this.wrapCharacters[idx]);\n\n      if (splitIndex > -1) { // Found a character to split on\n\n        word = firstLine.substring(splitIndex + 1) + remainingChars;\n        parts.push(firstLine.substring(0, splitIndex + 1));\n\n      } else { // Not found a character to split on\n\n        idx++;\n        if (idx < this.wrapCharacters.length) { // There is next character to try\n\n          word = firstLine + remainingChars;\n\n        } else { // No more characters to try\n\n          if (this.forceWrapOnLimit) {\n            parts.push(firstLine);\n            word = remainingChars;\n            if (word.length > this.maxLineLength) {\n              continue;\n            }\n          } else {\n            word = firstLine + remainingChars;\n          }\n          break;\n\n        }\n\n      }\n\n    }\n    parts.push(word); // Add remaining part to array\n    return parts;\n  }\n}\n\n/* eslint-disable max-classes-per-file */\n\n\nclass StackItem {\n  constructor (next = null) { this.next = next; }\n\n  getRoot () { return (this.next) ? this.next : this; }\n}\n\nclass BlockStackItem extends StackItem {\n  constructor (options, next = null, leadingLineBreaks = 1, maxLineLength = undefined) {\n    super(next);\n    this.leadingLineBreaks = leadingLineBreaks;\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxLineLength);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n    this.isNoWrap = next && next.isNoWrap;\n  }\n}\n\nclass ListStackItem extends BlockStackItem {\n  constructor (\n    options,\n    next = null,\n    {\n      interRowLineBreaks = 1,\n      leadingLineBreaks = 2,\n      maxLineLength = undefined,\n      maxPrefixLength = 0,\n      prefixAlign = 'left',\n    } = {}\n  ) {\n    super(options, next, leadingLineBreaks, maxLineLength);\n    this.maxPrefixLength = maxPrefixLength;\n    this.prefixAlign = prefixAlign;\n    this.interRowLineBreaks = interRowLineBreaks;\n  }\n}\n\nclass ListItemStackItem extends BlockStackItem {\n  constructor (\n    options,\n    next = null,\n    {\n      leadingLineBreaks = 1,\n      maxLineLength = undefined,\n      prefix = '',\n    } = {}\n  ) {\n    super(options, next, leadingLineBreaks, maxLineLength);\n    this.prefix = prefix;\n  }\n}\n\nclass TableStackItem extends StackItem {\n  constructor (next = null) {\n    super(next);\n    this.rows = [];\n    this.isPre = next && next.isPre;\n    this.isNoWrap = next && next.isNoWrap;\n  }\n}\n\nclass TableRowStackItem extends StackItem {\n  constructor (next = null) {\n    super(next);\n    this.cells = [];\n    this.isPre = next && next.isPre;\n    this.isNoWrap = next && next.isNoWrap;\n  }\n}\n\nclass TableCellStackItem extends StackItem {\n  constructor (options, next = null, maxColumnWidth = undefined) {\n    super(next);\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxColumnWidth);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n    this.isNoWrap = next && next.isNoWrap;\n  }\n}\n\nclass TransformerStackItem extends StackItem {\n  constructor (next = null, transform) {\n    super(next);\n    this.transform = transform;\n  }\n}\n\nfunction charactersToCodes (str) {\n  return [...str]\n    .map(c => '\\\\u' + c.charCodeAt(0).toString(16).padStart(4, '0'))\n    .join('');\n}\n\n/**\n * Helps to handle HTML whitespaces.\n *\n * @class WhitespaceProcessor\n */\nclass WhitespaceProcessor {\n\n  /**\n   * Creates an instance of WhitespaceProcessor.\n   *\n   * @param { Options } options    HtmlToText options.\n   * @memberof WhitespaceProcessor\n   */\n  constructor (options) {\n    this.whitespaceChars = (options.preserveNewlines)\n      ? options.whitespaceCharacters.replace(/\\n/g, '')\n      : options.whitespaceCharacters;\n    const whitespaceCodes = charactersToCodes(this.whitespaceChars);\n    this.leadingWhitespaceRe = new RegExp(`^[${whitespaceCodes}]`);\n    this.trailingWhitespaceRe = new RegExp(`[${whitespaceCodes}]$`);\n    this.allWhitespaceOrEmptyRe = new RegExp(`^[${whitespaceCodes}]*$`);\n    this.newlineOrNonWhitespaceRe = new RegExp(`(\\\\n|[^\\\\n${whitespaceCodes}])`, 'g');\n    this.newlineOrNonNewlineStringRe = new RegExp(`(\\\\n|[^\\\\n]+)`, 'g');\n\n    if (options.preserveNewlines) {\n\n      const wordOrNewlineRe = new RegExp(`\\\\n|[^\\\\n${whitespaceCodes}]+`, 'gm');\n\n      /**\n       * Shrink whitespaces and wrap text, add to the builder.\n       *\n       * @param { string }                  text              Input text.\n       * @param { InlineTextBuilder }       inlineTextBuilder A builder to receive processed text.\n       * @param { (str: string) => string } [ transform ]     A transform to be applied to words.\n       * @param { boolean }                 [noWrap] Don't wrap text even if the line is too long.\n       */\n      this.shrinkWrapAdd = function (text, inlineTextBuilder, transform = (str => str), noWrap = false) {\n        if (!text) { return; }\n        const previouslyStashedSpace = inlineTextBuilder.stashedSpace;\n        let anyMatch = false;\n        let m = wordOrNewlineRe.exec(text);\n        if (m) {\n          anyMatch = true;\n          if (m[0] === '\\n') {\n            inlineTextBuilder.startNewLine();\n          } else if (previouslyStashedSpace || this.testLeadingWhitespace(text)) {\n            inlineTextBuilder.pushWord(transform(m[0]), noWrap);\n          } else {\n            inlineTextBuilder.concatWord(transform(m[0]), noWrap);\n          }\n          while ((m = wordOrNewlineRe.exec(text)) !== null) {\n            if (m[0] === '\\n') {\n              inlineTextBuilder.startNewLine();\n            } else {\n              inlineTextBuilder.pushWord(transform(m[0]), noWrap);\n            }\n          }\n        }\n        inlineTextBuilder.stashedSpace = (previouslyStashedSpace && !anyMatch) || (this.testTrailingWhitespace(text));\n        // No need to stash a space in case last added item was a new line,\n        // but that won't affect anything later anyway.\n      };\n\n    } else {\n\n      const wordRe = new RegExp(`[^${whitespaceCodes}]+`, 'g');\n\n      this.shrinkWrapAdd = function (text, inlineTextBuilder, transform = (str => str), noWrap = false) {\n        if (!text) { return; }\n        const previouslyStashedSpace = inlineTextBuilder.stashedSpace;\n        let anyMatch = false;\n        let m = wordRe.exec(text);\n        if (m) {\n          anyMatch = true;\n          if (previouslyStashedSpace || this.testLeadingWhitespace(text)) {\n            inlineTextBuilder.pushWord(transform(m[0]), noWrap);\n          } else {\n            inlineTextBuilder.concatWord(transform(m[0]), noWrap);\n          }\n          while ((m = wordRe.exec(text)) !== null) {\n            inlineTextBuilder.pushWord(transform(m[0]), noWrap);\n          }\n        }\n        inlineTextBuilder.stashedSpace = (previouslyStashedSpace && !anyMatch) || this.testTrailingWhitespace(text);\n      };\n\n    }\n  }\n\n  /**\n   * Add text with only minimal processing.\n   * Everything between newlines considered a single word.\n   * No whitespace is trimmed.\n   * Not affected by preserveNewlines option - `\\n` always starts a new line.\n   *\n   * `noWrap` argument is `true` by default - this won't start a new line\n   * even if there is not enough space left in the current line.\n   *\n   * @param { string }            text              Input text.\n   * @param { InlineTextBuilder } inlineTextBuilder A builder to receive processed text.\n   * @param { boolean }           [noWrap] Don't wrap text even if the line is too long.\n   */\n  addLiteral (text, inlineTextBuilder, noWrap = true) {\n    if (!text) { return; }\n    const previouslyStashedSpace = inlineTextBuilder.stashedSpace;\n    let anyMatch = false;\n    let m = this.newlineOrNonNewlineStringRe.exec(text);\n    if (m) {\n      anyMatch = true;\n      if (m[0] === '\\n') {\n        inlineTextBuilder.startNewLine();\n      } else if (previouslyStashedSpace) {\n        inlineTextBuilder.pushWord(m[0], noWrap);\n      } else {\n        inlineTextBuilder.concatWord(m[0], noWrap);\n      }\n      while ((m = this.newlineOrNonNewlineStringRe.exec(text)) !== null) {\n        if (m[0] === '\\n') {\n          inlineTextBuilder.startNewLine();\n        } else {\n          inlineTextBuilder.pushWord(m[0], noWrap);\n        }\n      }\n    }\n    inlineTextBuilder.stashedSpace = (previouslyStashedSpace && !anyMatch);\n  }\n\n  /**\n   * Test whether the given text starts with HTML whitespace character.\n   *\n   * @param   { string }  text  The string to test.\n   * @returns { boolean }\n   */\n  testLeadingWhitespace (text) {\n    return this.leadingWhitespaceRe.test(text);\n  }\n\n  /**\n   * Test whether the given text ends with HTML whitespace character.\n   *\n   * @param   { string }  text  The string to test.\n   * @returns { boolean }\n   */\n  testTrailingWhitespace (text) {\n    return this.trailingWhitespaceRe.test(text);\n  }\n\n  /**\n   * Test whether the given text contains any non-whitespace characters.\n   *\n   * @param   { string }  text  The string to test.\n   * @returns { boolean }\n   */\n  testContainsWords (text) {\n    return !this.allWhitespaceOrEmptyRe.test(text);\n  }\n\n  /**\n   * Return the number of newlines if there are no words.\n   *\n   * If any word is found then return zero regardless of the actual number of newlines.\n   *\n   * @param   { string }  text  Input string.\n   * @returns { number }\n   */\n  countNewlinesNoWords (text) {\n    this.newlineOrNonWhitespaceRe.lastIndex = 0;\n    let counter = 0;\n    let match;\n    while ((match = this.newlineOrNonWhitespaceRe.exec(text)) !== null) {\n      if (match[0] === '\\n') {\n        counter++;\n      } else {\n        return 0;\n      }\n    }\n    return counter;\n  }\n\n}\n\n/**\n * Helps to build text from inline and block elements.\n *\n * @class BlockTextBuilder\n */\nclass BlockTextBuilder {\n\n  /**\n   * Creates an instance of BlockTextBuilder.\n   *\n   * @param { Options } options HtmlToText options.\n   * @param { import('selderee').Picker<DomNode, TagDefinition> } picker Selectors decision tree picker.\n   * @param { any} [metadata] Optional metadata for HTML document, for use in formatters.\n   */\n  constructor (options, picker, metadata = undefined) {\n    this.options = options;\n    this.picker = picker;\n    this.metadata = metadata;\n    this.whitespaceProcessor = new WhitespaceProcessor(options);\n    /** @type { StackItem } */\n    this._stackItem = new BlockStackItem(options);\n    /** @type { TransformerStackItem } */\n    this._wordTransformer = undefined;\n  }\n\n  /**\n   * Put a word-by-word transform function onto the transformations stack.\n   *\n   * Mainly used for uppercasing. Can be bypassed to add unformatted text such as URLs.\n   *\n   * Word transformations applied before wrapping.\n   *\n   * @param { (str: string) => string } wordTransform Word transformation function.\n   */\n  pushWordTransform (wordTransform) {\n    this._wordTransformer = new TransformerStackItem(this._wordTransformer, wordTransform);\n  }\n\n  /**\n   * Remove a function from the word transformations stack.\n   *\n   * @returns { (str: string) => string } A function that was removed.\n   */\n  popWordTransform () {\n    if (!this._wordTransformer) { return undefined; }\n    const transform = this._wordTransformer.transform;\n    this._wordTransformer = this._wordTransformer.next;\n    return transform;\n  }\n\n  /**\n   * Ignore wordwrap option in followup inline additions and disable automatic wrapping.\n   */\n  startNoWrap () {\n    this._stackItem.isNoWrap = true;\n  }\n\n  /**\n   * Return automatic wrapping to behavior defined by options.\n   */\n  stopNoWrap () {\n    this._stackItem.isNoWrap = false;\n  }\n\n  /** @returns { (str: string) => string } */\n  _getCombinedWordTransformer () {\n    const wt = (this._wordTransformer)\n      ? ((str) => applyTransformer(str, this._wordTransformer))\n      : undefined;\n    const ce = this.options.encodeCharacters;\n    return (wt)\n      ? ((ce) ? (str) => ce(wt(str)) : wt)\n      : ce;\n  }\n\n  _popStackItem () {\n    const item = this._stackItem;\n    this._stackItem = item.next;\n    return item;\n  }\n\n  /**\n   * Add a line break into currently built block.\n   */\n  addLineBreak () {\n    if (!(\n      this._stackItem instanceof BlockStackItem\n      || this._stackItem instanceof ListItemStackItem\n      || this._stackItem instanceof TableCellStackItem\n    )) { return; }\n    if (this._stackItem.isPre) {\n      this._stackItem.rawText += '\\n';\n    } else {\n      this._stackItem.inlineTextBuilder.startNewLine();\n    }\n  }\n\n  /**\n   * Allow to break line in case directly following text will not fit.\n   */\n  addWordBreakOpportunity () {\n    if (\n      this._stackItem instanceof BlockStackItem\n      || this._stackItem instanceof ListItemStackItem\n      || this._stackItem instanceof TableCellStackItem\n    ) {\n      this._stackItem.inlineTextBuilder.wordBreakOpportunity = true;\n    }\n  }\n\n  /**\n   * Add a node inline into the currently built block.\n   *\n   * @param { string } str\n   * Text content of a node to add.\n   *\n   * @param { object } [param1]\n   * Object holding the parameters of the operation.\n   *\n   * @param { boolean } [param1.noWordTransform]\n   * Ignore word transformers if there are any.\n   * Don't encode characters as well.\n   * (Use this for things like URL addresses).\n   */\n  addInline (str, { noWordTransform = false } = {}) {\n    if (!(\n      this._stackItem instanceof BlockStackItem\n      || this._stackItem instanceof ListItemStackItem\n      || this._stackItem instanceof TableCellStackItem\n    )) { return; }\n\n    if (this._stackItem.isPre) {\n      this._stackItem.rawText += str;\n      return;\n    }\n\n    if (\n      str.length === 0 || // empty string\n      (\n        this._stackItem.stashedLineBreaks && // stashed linebreaks make whitespace irrelevant\n        !this.whitespaceProcessor.testContainsWords(str) // no words to add\n      )\n    ) { return; }\n\n    if (this.options.preserveNewlines) {\n      const newlinesNumber = this.whitespaceProcessor.countNewlinesNoWords(str);\n      if (newlinesNumber > 0) {\n        this._stackItem.inlineTextBuilder.startNewLine(newlinesNumber);\n        // keep stashedLineBreaks unchanged\n        return;\n      }\n    }\n\n    if (this._stackItem.stashedLineBreaks) {\n      this._stackItem.inlineTextBuilder.startNewLine(this._stackItem.stashedLineBreaks);\n    }\n    this.whitespaceProcessor.shrinkWrapAdd(\n      str,\n      this._stackItem.inlineTextBuilder,\n      (noWordTransform) ? undefined : this._getCombinedWordTransformer(),\n      this._stackItem.isNoWrap\n    );\n    this._stackItem.stashedLineBreaks = 0; // inline text doesn't introduce line breaks\n  }\n\n  /**\n   * Add a string inline into the currently built block.\n   *\n   * Use this for markup elements that don't have to adhere\n   * to text layout rules.\n   *\n   * @param { string } str Text to add.\n   */\n  addLiteral (str) {\n    if (!(\n      this._stackItem instanceof BlockStackItem\n      || this._stackItem instanceof ListItemStackItem\n      || this._stackItem instanceof TableCellStackItem\n    )) { return; }\n\n    if (str.length === 0) { return; }\n\n    if (this._stackItem.isPre) {\n      this._stackItem.rawText += str;\n      return;\n    }\n\n    if (this._stackItem.stashedLineBreaks) {\n      this._stackItem.inlineTextBuilder.startNewLine(this._stackItem.stashedLineBreaks);\n    }\n    this.whitespaceProcessor.addLiteral(\n      str,\n      this._stackItem.inlineTextBuilder,\n      this._stackItem.isNoWrap\n    );\n    this._stackItem.stashedLineBreaks = 0;\n  }\n\n  /**\n   * Start building a new block.\n   *\n   * @param { object } [param0]\n   * Object holding the parameters of the block.\n   *\n   * @param { number } [param0.leadingLineBreaks]\n   * This block should have at least this number of line breaks to separate it from any preceding block.\n   *\n   * @param { number }  [param0.reservedLineLength]\n   * Reserve this number of characters on each line for block markup.\n   *\n   * @param { boolean } [param0.isPre]\n   * Should HTML whitespace be preserved inside this block.\n   */\n  openBlock ({ leadingLineBreaks = 1, reservedLineLength = 0, isPre = false } = {}) {\n    const maxLineLength = Math.max(20, this._stackItem.inlineTextBuilder.maxLineLength - reservedLineLength);\n    this._stackItem = new BlockStackItem(\n      this.options,\n      this._stackItem,\n      leadingLineBreaks,\n      maxLineLength\n    );\n    if (isPre) { this._stackItem.isPre = true; }\n  }\n\n  /**\n   * Finalize currently built block, add it's content to the parent block.\n   *\n   * @param { object } [param0]\n   * Object holding the parameters of the block.\n   *\n   * @param { number } [param0.trailingLineBreaks]\n   * This block should have at least this number of line breaks to separate it from any following block.\n   *\n   * @param { (str: string) => string } [param0.blockTransform]\n   * A function to transform the block text before adding to the parent block.\n   * This happens after word wrap and should be used in combination with reserved line length\n   * in order to keep line lengths correct.\n   * Used for whole block markup.\n   */\n  closeBlock ({ trailingLineBreaks = 1, blockTransform = undefined } = {}) {\n    const block = this._popStackItem();\n    const blockText = (blockTransform) ? blockTransform(getText(block)) : getText(block);\n    addText(this._stackItem, blockText, block.leadingLineBreaks, Math.max(block.stashedLineBreaks, trailingLineBreaks));\n  }\n\n  /**\n   * Start building a new list.\n   *\n   * @param { object } [param0]\n   * Object holding the parameters of the list.\n   *\n   * @param { number } [param0.maxPrefixLength]\n   * Length of the longest list item prefix.\n   * If not supplied or too small then list items won't be aligned properly.\n   *\n   * @param { 'left' | 'right' } [param0.prefixAlign]\n   * Specify how prefixes of different lengths have to be aligned\n   * within a column.\n   *\n   * @param { number } [param0.interRowLineBreaks]\n   * Minimum number of line breaks between list items.\n   *\n   * @param { number } [param0.leadingLineBreaks]\n   * This list should have at least this number of line breaks to separate it from any preceding block.\n   */\n  openList ({ maxPrefixLength = 0, prefixAlign = 'left', interRowLineBreaks = 1, leadingLineBreaks = 2 } = {}) {\n    this._stackItem = new ListStackItem(this.options, this._stackItem, {\n      interRowLineBreaks: interRowLineBreaks,\n      leadingLineBreaks: leadingLineBreaks,\n      maxLineLength: this._stackItem.inlineTextBuilder.maxLineLength,\n      maxPrefixLength: maxPrefixLength,\n      prefixAlign: prefixAlign\n    });\n  }\n\n  /**\n   * Start building a new list item.\n   *\n   * @param {object} param0\n   * Object holding the parameters of the list item.\n   *\n   * @param { string } [param0.prefix]\n   * Prefix for this list item (item number, bullet point, etc).\n   */\n  openListItem ({ prefix = '' } = {}) {\n    if (!(this._stackItem instanceof ListStackItem)) {\n      throw new Error('Can\\'t add a list item to something that is not a list! Check the formatter.');\n    }\n    const list = this._stackItem;\n    const prefixLength = Math.max(prefix.length, list.maxPrefixLength);\n    const maxLineLength = Math.max(20, list.inlineTextBuilder.maxLineLength - prefixLength);\n    this._stackItem = new ListItemStackItem(this.options, list, {\n      prefix: prefix,\n      maxLineLength: maxLineLength,\n      leadingLineBreaks: list.interRowLineBreaks\n    });\n  }\n\n  /**\n   * Finalize currently built list item, add it's content to the parent list.\n   */\n  closeListItem () {\n    const listItem = this._popStackItem();\n    const list = listItem.next;\n\n    const prefixLength = Math.max(listItem.prefix.length, list.maxPrefixLength);\n    const spacing = '\\n' + ' '.repeat(prefixLength);\n    const prefix = (list.prefixAlign === 'right')\n      ? listItem.prefix.padStart(prefixLength)\n      : listItem.prefix.padEnd(prefixLength);\n    const text = prefix + getText(listItem).replace(/\\n/g, spacing);\n\n    addText(\n      list,\n      text,\n      listItem.leadingLineBreaks,\n      Math.max(listItem.stashedLineBreaks, list.interRowLineBreaks)\n    );\n  }\n\n  /**\n   * Finalize currently built list, add it's content to the parent block.\n   *\n   * @param { object } param0\n   * Object holding the parameters of the list.\n   *\n   * @param { number } [param0.trailingLineBreaks]\n   * This list should have at least this number of line breaks to separate it from any following block.\n   */\n  closeList ({ trailingLineBreaks = 2 } = {}) {\n    const list = this._popStackItem();\n    const text = getText(list);\n    if (text) {\n      addText(this._stackItem, text, list.leadingLineBreaks, trailingLineBreaks);\n    }\n  }\n\n  /**\n   * Start building a table.\n   */\n  openTable () {\n    this._stackItem = new TableStackItem(this._stackItem);\n  }\n\n  /**\n   * Start building a table row.\n   */\n  openTableRow () {\n    if (!(this._stackItem instanceof TableStackItem)) {\n      throw new Error('Can\\'t add a table row to something that is not a table! Check the formatter.');\n    }\n    this._stackItem = new TableRowStackItem(this._stackItem);\n  }\n\n  /**\n   * Start building a table cell.\n   *\n   * @param { object } [param0]\n   * Object holding the parameters of the cell.\n   *\n   * @param { number } [param0.maxColumnWidth]\n   * Wrap cell content to this width. Fall back to global wordwrap value if undefined.\n   */\n  openTableCell ({ maxColumnWidth = undefined } = {}) {\n    if (!(this._stackItem instanceof TableRowStackItem)) {\n      throw new Error('Can\\'t add a table cell to something that is not a table row! Check the formatter.');\n    }\n    this._stackItem = new TableCellStackItem(this.options, this._stackItem, maxColumnWidth);\n  }\n\n  /**\n   * Finalize currently built table cell and add it to parent table row's cells.\n   *\n   * @param { object } [param0]\n   * Object holding the parameters of the cell.\n   *\n   * @param { number } [param0.colspan] How many columns this cell should occupy.\n   * @param { number } [param0.rowspan] How many rows this cell should occupy.\n   */\n  closeTableCell ({ colspan = 1, rowspan = 1 } = {}) {\n    const cell = this._popStackItem();\n    const text = trimCharacter(getText(cell), '\\n');\n    cell.next.cells.push({ colspan: colspan, rowspan: rowspan, text: text });\n  }\n\n  /**\n   * Finalize currently built table row and add it to parent table's rows.\n   */\n  closeTableRow () {\n    const row = this._popStackItem();\n    row.next.rows.push(row.cells);\n  }\n\n  /**\n   * Finalize currently built table and add the rendered text to the parent block.\n   *\n   * @param { object } param0\n   * Object holding the parameters of the table.\n   *\n   * @param { TablePrinter } param0.tableToString\n   * A function to convert a table of stringified cells into a complete table.\n   *\n   * @param { number } [param0.leadingLineBreaks]\n   * This table should have at least this number of line breaks to separate if from any preceding block.\n   *\n   * @param { number } [param0.trailingLineBreaks]\n   * This table should have at least this number of line breaks to separate it from any following block.\n   */\n  closeTable ({ tableToString, leadingLineBreaks = 2, trailingLineBreaks = 2 }) {\n    const table = this._popStackItem();\n    const output = tableToString(table.rows);\n    if (output) {\n      addText(this._stackItem, output, leadingLineBreaks, trailingLineBreaks);\n    }\n  }\n\n  /**\n   * Return the rendered text content of this builder.\n   *\n   * @returns { string }\n   */\n  toString () {\n    return getText(this._stackItem.getRoot());\n    // There should only be the root item if everything is closed properly.\n  }\n\n}\n\nfunction getText (stackItem) {\n  if (!(\n    stackItem instanceof BlockStackItem\n    || stackItem instanceof ListItemStackItem\n    || stackItem instanceof TableCellStackItem\n  )) {\n    throw new Error('Only blocks, list items and table cells can be requested for text contents.');\n  }\n  return (stackItem.inlineTextBuilder.isEmpty())\n    ? stackItem.rawText\n    : stackItem.rawText + stackItem.inlineTextBuilder.toString();\n}\n\nfunction addText (stackItem, text, leadingLineBreaks, trailingLineBreaks) {\n  if (!(\n    stackItem instanceof BlockStackItem\n    || stackItem instanceof ListItemStackItem\n    || stackItem instanceof TableCellStackItem\n  )) {\n    throw new Error('Only blocks, list items and table cells can contain text.');\n  }\n  const parentText = getText(stackItem);\n  const lineBreaks = Math.max(stackItem.stashedLineBreaks, leadingLineBreaks);\n  stackItem.inlineTextBuilder.clear();\n  if (parentText) {\n    stackItem.rawText = parentText + '\\n'.repeat(lineBreaks) + text;\n  } else {\n    stackItem.rawText = text;\n    stackItem.leadingLineBreaks = lineBreaks;\n  }\n  stackItem.stashedLineBreaks = trailingLineBreaks;\n}\n\n/**\n * @param { string } str A string to transform.\n * @param { TransformerStackItem } transformer A transformer item (with possible continuation).\n * @returns { string }\n */\nfunction applyTransformer (str, transformer) {\n  return ((transformer) ? applyTransformer(transformer.transform(str), transformer.next) : str);\n}\n\n/**\n * Compile selectors into a decision tree,\n * return a function intended for batch processing.\n *\n * @param   { Options } [options = {}]   HtmlToText options (defaults, formatters, user options merged, deduplicated).\n * @returns { (html: string, metadata?: any) => string } Pre-configured converter function.\n * @static\n */\nfunction compile$1 (options = {}) {\n  const selectorsWithoutFormat = options.selectors.filter(s => !s.format);\n  if (selectorsWithoutFormat.length) {\n    throw new Error(\n      'Following selectors have no specified format: ' +\n      selectorsWithoutFormat.map(s => `\\`${s.selector}\\``).join(', ')\n    );\n  }\n  const picker = new DecisionTree(\n    options.selectors.map(s => [s.selector, s])\n  ).build(hp2Builder);\n\n  if (typeof options.encodeCharacters !== 'function') {\n    options.encodeCharacters = makeReplacerFromDict(options.encodeCharacters);\n  }\n\n  const baseSelectorsPicker = new DecisionTree(\n    options.baseElements.selectors.map((s, i) => [s, i + 1])\n  ).build(hp2Builder);\n  function findBaseElements (dom) {\n    return findBases(dom, options, baseSelectorsPicker);\n  }\n\n  const limitedWalk = limitedDepthRecursive(\n    options.limits.maxDepth,\n    recursiveWalk,\n    function (dom, builder) {\n      builder.addInline(options.limits.ellipsis || '');\n    }\n  );\n\n  return function (html, metadata = undefined) {\n    return process(html, metadata, options, picker, findBaseElements, limitedWalk);\n  };\n}\n\n\n/**\n * Convert given HTML according to preprocessed options.\n *\n * @param { string } html HTML content to convert.\n * @param { any } metadata Optional metadata for HTML document, for use in formatters.\n * @param { Options } options HtmlToText options (preprocessed).\n * @param { import('selderee').Picker<DomNode, TagDefinition> } picker\n * Tag definition picker for DOM nodes processing.\n * @param { (dom: DomNode[]) => DomNode[] } findBaseElements\n * Function to extract elements from HTML DOM\n * that will only be present in the output text.\n * @param { RecursiveCallback } walk Recursive callback.\n * @returns { string }\n */\nfunction process (html, metadata, options, picker, findBaseElements, walk) {\n  const maxInputLength = options.limits.maxInputLength;\n  if (maxInputLength && html && html.length > maxInputLength) {\n    console.warn(\n      `Input length ${html.length} is above allowed limit of ${maxInputLength}. Truncating without ellipsis.`\n    );\n    html = html.substring(0, maxInputLength);\n  }\n\n  const document = parseDocument(html, { decodeEntities: options.decodeEntities });\n  const bases = findBaseElements(document.children);\n  const builder = new BlockTextBuilder(options, picker, metadata);\n  walk(bases, builder);\n  return builder.toString();\n}\n\n\nfunction findBases (dom, options, baseSelectorsPicker) {\n  const results = [];\n\n  function recursiveWalk (walk, /** @type { DomNode[] } */ dom) {\n    dom = dom.slice(0, options.limits.maxChildNodes);\n    for (const elem of dom) {\n      if (elem.type !== 'tag') {\n        continue;\n      }\n      const pickedSelectorIndex = baseSelectorsPicker.pick1(elem);\n      if (pickedSelectorIndex > 0) {\n        results.push({ selectorIndex: pickedSelectorIndex, element: elem });\n      } else if (elem.children) {\n        walk(elem.children);\n      }\n      if (results.length >= options.limits.maxBaseElements) {\n        return;\n      }\n    }\n  }\n\n  const limitedWalk = limitedDepthRecursive(\n    options.limits.maxDepth,\n    recursiveWalk\n  );\n  limitedWalk(dom);\n\n  if (options.baseElements.orderBy !== 'occurrence') { // 'selectors'\n    results.sort((a, b) => a.selectorIndex - b.selectorIndex);\n  }\n  return (options.baseElements.returnDomByDefault && results.length === 0)\n    ? dom\n    : results.map(x => x.element);\n}\n\n/**\n * Function to walk through DOM nodes and accumulate their string representations.\n *\n * @param   { RecursiveCallback } walk    Recursive callback.\n * @param   { DomNode[] }         [dom]   Nodes array to process.\n * @param   { BlockTextBuilder }  builder Passed around to accumulate output text.\n * @private\n */\nfunction recursiveWalk (walk, dom, builder) {\n  if (!dom) { return; }\n\n  const options = builder.options;\n\n  const tooManyChildNodes = dom.length > options.limits.maxChildNodes;\n  if (tooManyChildNodes) {\n    dom = dom.slice(0, options.limits.maxChildNodes);\n    dom.push({\n      data: options.limits.ellipsis,\n      type: 'text'\n    });\n  }\n\n  for (const elem of dom) {\n    switch (elem.type) {\n      case 'text': {\n        builder.addInline(elem.data);\n        break;\n      }\n      case 'tag': {\n        const tagDefinition = builder.picker.pick1(elem);\n        const format = options.formatters[tagDefinition.format];\n        format(elem, walk, builder, tagDefinition.options || {});\n        break;\n      }\n    }\n  }\n\n  return;\n}\n\n/**\n * @param { Object<string,string | false> } dict\n * A dictionary where keys are characters to replace\n * and values are replacement strings.\n *\n * First code point from dict keys is used.\n * Compound emojis with ZWJ are not supported (not until Node 16).\n *\n * @returns { ((str: string) => string) | undefined }\n */\nfunction makeReplacerFromDict (dict) {\n  if (!dict || Object.keys(dict).length === 0) {\n    return undefined;\n  }\n  /** @type { [string, string][] } */\n  const entries = Object.entries(dict).filter(([, v]) => v !== false);\n  const regex = new RegExp(\n    entries\n      .map(([c]) => `(${unicodeEscape([...c][0])})`)\n      .join('|'),\n    'g'\n  );\n  const values = entries.map(([, v]) => v);\n  const replacer = (m, ...cgs) => values[cgs.findIndex(cg => cg)];\n  return (str) => str.replace(regex, replacer);\n}\n\n/**\n * Dummy formatter that discards the input and does nothing.\n *\n * @type { FormatCallback }\n */\nfunction formatSkip (elem, walk, builder, formatOptions) {\n  /* do nothing */\n}\n\n/**\n * Insert the given string literal inline instead of a tag.\n *\n * @type { FormatCallback }\n */\nfunction formatInlineString (elem, walk, builder, formatOptions) {\n  builder.addLiteral(formatOptions.string || '');\n}\n\n/**\n * Insert a block with the given string literal instead of a tag.\n *\n * @type { FormatCallback }\n */\nfunction formatBlockString (elem, walk, builder, formatOptions) {\n  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });\n  builder.addLiteral(formatOptions.string || '');\n  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });\n}\n\n/**\n * Process an inline-level element.\n *\n * @type { FormatCallback }\n */\nfunction formatInline (elem, walk, builder, formatOptions) {\n  walk(elem.children, builder);\n}\n\n/**\n * Process a block-level container.\n *\n * @type { FormatCallback }\n */\nfunction formatBlock$1 (elem, walk, builder, formatOptions) {\n  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });\n  walk(elem.children, builder);\n  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });\n}\n\nfunction renderOpenTag (elem) {\n  const attrs = (elem.attribs && elem.attribs.length)\n    ? ' ' + Object.entries(elem.attribs)\n      .map(([k, v]) => ((v === '') ? k : `${k}=${v.replace(/\"/g, '&quot;')}`))\n      .join(' ')\n    : '';\n  return `<${elem.name}${attrs}>`;\n}\n\nfunction renderCloseTag (elem) {\n  return `</${elem.name}>`;\n}\n\n/**\n * Render an element as inline HTML tag, walk through it's children.\n *\n * @type { FormatCallback }\n */\nfunction formatInlineTag (elem, walk, builder, formatOptions) {\n  builder.startNoWrap();\n  builder.addLiteral(renderOpenTag(elem));\n  builder.stopNoWrap();\n  walk(elem.children, builder);\n  builder.startNoWrap();\n  builder.addLiteral(renderCloseTag(elem));\n  builder.stopNoWrap();\n}\n\n/**\n * Render an element as HTML block bag, walk through it's children.\n *\n * @type { FormatCallback }\n */\nfunction formatBlockTag (elem, walk, builder, formatOptions) {\n  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });\n  builder.startNoWrap();\n  builder.addLiteral(renderOpenTag(elem));\n  builder.stopNoWrap();\n  walk(elem.children, builder);\n  builder.startNoWrap();\n  builder.addLiteral(renderCloseTag(elem));\n  builder.stopNoWrap();\n  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });\n}\n\n/**\n * Render an element with all it's children as inline HTML.\n *\n * @type { FormatCallback }\n */\nfunction formatInlineHtml (elem, walk, builder, formatOptions) {\n  builder.startNoWrap();\n  builder.addLiteral(\n    render(elem, { decodeEntities: builder.options.decodeEntities })\n  );\n  builder.stopNoWrap();\n}\n\n/**\n * Render an element with all it's children as HTML block.\n *\n * @type { FormatCallback }\n */\nfunction formatBlockHtml (elem, walk, builder, formatOptions) {\n  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });\n  builder.startNoWrap();\n  builder.addLiteral(\n    render(elem, { decodeEntities: builder.options.decodeEntities })\n  );\n  builder.stopNoWrap();\n  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });\n}\n\n/**\n * Render inline element wrapped with given strings.\n *\n * @type { FormatCallback }\n */\nfunction formatInlineSurround (elem, walk, builder, formatOptions) {\n  builder.addLiteral(formatOptions.prefix || '');\n  walk(elem.children, builder);\n  builder.addLiteral(formatOptions.suffix || '');\n}\n\nvar genericFormatters = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  block: formatBlock$1,\n  blockHtml: formatBlockHtml,\n  blockString: formatBlockString,\n  blockTag: formatBlockTag,\n  inline: formatInline,\n  inlineHtml: formatInlineHtml,\n  inlineString: formatInlineString,\n  inlineSurround: formatInlineSurround,\n  inlineTag: formatInlineTag,\n  skip: formatSkip\n});\n\nfunction getRow (matrix, j) {\n  if (!matrix[j]) { matrix[j] = []; }\n  return matrix[j];\n}\n\nfunction findFirstVacantIndex (row, x = 0) {\n  while (row[x]) { x++; }\n  return x;\n}\n\nfunction transposeInPlace (matrix, maxSize) {\n  for (let i = 0; i < maxSize; i++) {\n    const rowI = getRow(matrix, i);\n    for (let j = 0; j < i; j++) {\n      const rowJ = getRow(matrix, j);\n      if (rowI[j] || rowJ[i]) {\n        const temp = rowI[j];\n        rowI[j] = rowJ[i];\n        rowJ[i] = temp;\n      }\n    }\n  }\n}\n\nfunction putCellIntoLayout (cell, layout, baseRow, baseCol) {\n  for (let r = 0; r < cell.rowspan; r++) {\n    const layoutRow = getRow(layout, baseRow + r);\n    for (let c = 0; c < cell.colspan; c++) {\n      layoutRow[baseCol + c] = cell;\n    }\n  }\n}\n\nfunction getOrInitOffset (offsets, index) {\n  if (offsets[index] === undefined) {\n    offsets[index] = (index === 0) ? 0 : 1 + getOrInitOffset(offsets, index - 1);\n  }\n  return offsets[index];\n}\n\nfunction updateOffset (offsets, base, span, value) {\n  offsets[base + span] = Math.max(\n    getOrInitOffset(offsets, base + span),\n    getOrInitOffset(offsets, base) + value\n  );\n}\n\n/**\n * Render a table into a string.\n * Cells can contain multiline text and span across multiple rows and columns.\n *\n * Modifies cells to add lines array.\n *\n * @param { TablePrinterCell[][] } tableRows Table to render.\n * @param { number } rowSpacing Number of spaces between columns.\n * @param { number } colSpacing Number of empty lines between rows.\n * @returns { string }\n */\nfunction tableToString (tableRows, rowSpacing, colSpacing) {\n  const layout = [];\n  let colNumber = 0;\n  const rowNumber = tableRows.length;\n  const rowOffsets = [0];\n  // Fill the layout table and row offsets row-by-row.\n  for (let j = 0; j < rowNumber; j++) {\n    const layoutRow = getRow(layout, j);\n    const cells = tableRows[j];\n    let x = 0;\n    for (let i = 0; i < cells.length; i++) {\n      const cell = cells[i];\n      x = findFirstVacantIndex(layoutRow, x);\n      putCellIntoLayout(cell, layout, j, x);\n      x += cell.colspan;\n      cell.lines = cell.text.split('\\n');\n      const cellHeight = cell.lines.length;\n      updateOffset(rowOffsets, j, cell.rowspan, cellHeight + rowSpacing);\n    }\n    colNumber = (layoutRow.length > colNumber) ? layoutRow.length : colNumber;\n  }\n\n  transposeInPlace(layout, (rowNumber > colNumber) ? rowNumber : colNumber);\n\n  const outputLines = [];\n  const colOffsets = [0];\n  // Fill column offsets and output lines column-by-column.\n  for (let x = 0; x < colNumber; x++) {\n    let y = 0;\n    let cell;\n    const rowsInThisColumn = Math.min(rowNumber, layout[x].length);\n    while (y < rowsInThisColumn) {\n      cell = layout[x][y];\n      if (cell) {\n        if (!cell.rendered) {\n          let cellWidth = 0;\n          for (let j = 0; j < cell.lines.length; j++) {\n            const line = cell.lines[j];\n            const lineOffset = rowOffsets[y] + j;\n            outputLines[lineOffset] = (outputLines[lineOffset] || '').padEnd(colOffsets[x]) + line;\n            cellWidth = (line.length > cellWidth) ? line.length : cellWidth;\n          }\n          updateOffset(colOffsets, x, cell.colspan, cellWidth + colSpacing);\n          cell.rendered = true;\n        }\n        y += cell.rowspan;\n      } else {\n        const lineOffset = rowOffsets[y];\n        outputLines[lineOffset] = (outputLines[lineOffset] || '');\n        y++;\n      }\n    }\n  }\n\n  return outputLines.join('\\n');\n}\n\n/**\n * Process a line-break.\n *\n * @type { FormatCallback }\n */\nfunction formatLineBreak (elem, walk, builder, formatOptions) {\n  builder.addLineBreak();\n}\n\n/**\n * Process a `wbr` tag (word break opportunity).\n *\n * @type { FormatCallback }\n */\nfunction formatWbr (elem, walk, builder, formatOptions) {\n  builder.addWordBreakOpportunity();\n}\n\n/**\n * Process a horizontal line.\n *\n * @type { FormatCallback }\n */\nfunction formatHorizontalLine (elem, walk, builder, formatOptions) {\n  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });\n  builder.addInline('-'.repeat(formatOptions.length || builder.options.wordwrap || 40));\n  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });\n}\n\n/**\n * Process a paragraph.\n *\n * @type { FormatCallback }\n */\nfunction formatParagraph (elem, walk, builder, formatOptions) {\n  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });\n  walk(elem.children, builder);\n  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });\n}\n\n/**\n * Process a preformatted content.\n *\n * @type { FormatCallback }\n */\nfunction formatPre (elem, walk, builder, formatOptions) {\n  builder.openBlock({\n    isPre: true,\n    leadingLineBreaks: formatOptions.leadingLineBreaks || 2\n  });\n  walk(elem.children, builder);\n  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });\n}\n\n/**\n * Process a heading.\n *\n * @type { FormatCallback }\n */\nfunction formatHeading (elem, walk, builder, formatOptions) {\n  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks || 2 });\n  if (formatOptions.uppercase !== false) {\n    builder.pushWordTransform(str => str.toUpperCase());\n    walk(elem.children, builder);\n    builder.popWordTransform();\n  } else {\n    walk(elem.children, builder);\n  }\n  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks || 2 });\n}\n\n/**\n * Process a blockquote.\n *\n * @type { FormatCallback }\n */\nfunction formatBlockquote (elem, walk, builder, formatOptions) {\n  builder.openBlock({\n    leadingLineBreaks: formatOptions.leadingLineBreaks || 2,\n    reservedLineLength: 2\n  });\n  walk(elem.children, builder);\n  builder.closeBlock({\n    trailingLineBreaks: formatOptions.trailingLineBreaks || 2,\n    blockTransform: str => ((formatOptions.trimEmptyLines !== false) ? trimCharacter(str, '\\n') : str)\n      .split('\\n')\n      .map(line => '> ' + line)\n      .join('\\n')\n  });\n}\n\nfunction withBrackets (str, brackets) {\n  if (!brackets) { return str; }\n\n  const lbr = (typeof brackets[0] === 'string')\n    ? brackets[0]\n    : '[';\n  const rbr = (typeof brackets[1] === 'string')\n    ? brackets[1]\n    : ']';\n  return lbr + str + rbr;\n}\n\nfunction pathRewrite (path, rewriter, baseUrl, metadata, elem) {\n  const modifiedPath = (typeof rewriter === 'function')\n    ? rewriter(path, metadata, elem)\n    : path;\n  return (modifiedPath[0] === '/' && baseUrl)\n    ? trimCharacterEnd(baseUrl, '/') + modifiedPath\n    : modifiedPath;\n}\n\n/**\n * Process an image.\n *\n * @type { FormatCallback }\n */\nfunction formatImage (elem, walk, builder, formatOptions) {\n  const attribs = elem.attribs || {};\n  const alt = (attribs.alt)\n    ? attribs.alt\n    : '';\n  const src = (!attribs.src)\n    ? ''\n    : pathRewrite(attribs.src, formatOptions.pathRewrite, formatOptions.baseUrl, builder.metadata, elem);\n  const text = (!src)\n    ? alt\n    : (!alt)\n      ? withBrackets(src, formatOptions.linkBrackets)\n      : alt + ' ' + withBrackets(src, formatOptions.linkBrackets);\n\n  builder.addInline(text, { noWordTransform: true });\n}\n\n// a img baseUrl\n// a img pathRewrite\n// a img linkBrackets\n\n// a     ignoreHref: false\n//            ignoreText ?\n// a     noAnchorUrl: true\n//            can be replaced with selector\n// a     hideLinkHrefIfSameAsText: false\n//            how to compare, what to show (text, href, normalized) ?\n// a     mailto protocol removed without options\n\n// a     protocols: mailto, tel, ...\n//            can be matched with selector?\n\n// anchors, protocols - only if no pathRewrite fn is provided\n\n// normalize-url ?\n\n// a\n// a[href^=\"#\"] - format:skip by default\n// a[href^=\"mailto:\"] - ?\n\n/**\n * Process an anchor.\n *\n * @type { FormatCallback }\n */\nfunction formatAnchor (elem, walk, builder, formatOptions) {\n  function getHref () {\n    if (formatOptions.ignoreHref) { return ''; }\n    if (!elem.attribs || !elem.attribs.href) { return ''; }\n    let href = elem.attribs.href.replace(/^mailto:/, '');\n    if (formatOptions.noAnchorUrl && href[0] === '#') { return ''; }\n    href = pathRewrite(href, formatOptions.pathRewrite, formatOptions.baseUrl, builder.metadata, elem);\n    return href;\n  }\n  const href = getHref();\n  if (!href) {\n    walk(elem.children, builder);\n  } else {\n    let text = '';\n    builder.pushWordTransform(\n      str => {\n        if (str) { text += str; }\n        return str;\n      }\n    );\n    walk(elem.children, builder);\n    builder.popWordTransform();\n\n    const hideSameLink = formatOptions.hideLinkHrefIfSameAsText && href === text;\n    if (!hideSameLink) {\n      builder.addInline(\n        (!text)\n          ? href\n          : ' ' + withBrackets(href, formatOptions.linkBrackets),\n        { noWordTransform: true }\n      );\n    }\n  }\n}\n\n/**\n * @param { DomNode }           elem               List items with their prefixes.\n * @param { RecursiveCallback } walk               Recursive callback to process child nodes.\n * @param { BlockTextBuilder }  builder            Passed around to accumulate output text.\n * @param { FormatOptions }     formatOptions      Options specific to a formatter.\n * @param { () => string }      nextPrefixCallback Function that returns increasing index each time it is called.\n */\nfunction formatList (elem, walk, builder, formatOptions, nextPrefixCallback) {\n  const isNestedList = get(elem, ['parent', 'name']) === 'li';\n\n  // With Roman numbers, index length is not as straightforward as with Arabic numbers or letters,\n  // so the dumb length comparison is the most robust way to get the correct value.\n  let maxPrefixLength = 0;\n  const listItems = (elem.children || [])\n    // it might be more accurate to check only for html spaces here, but no significant benefit\n    .filter(child => child.type !== 'text' || !/^\\s*$/.test(child.data))\n    .map(function (child) {\n      if (child.name !== 'li') {\n        return { node: child, prefix: '' };\n      }\n      const prefix = (isNestedList)\n        ? nextPrefixCallback().trimStart()\n        : nextPrefixCallback();\n      if (prefix.length > maxPrefixLength) { maxPrefixLength = prefix.length; }\n      return { node: child, prefix: prefix };\n    });\n  if (!listItems.length) { return; }\n\n  builder.openList({\n    interRowLineBreaks: 1,\n    leadingLineBreaks: isNestedList ? 1 : (formatOptions.leadingLineBreaks || 2),\n    maxPrefixLength: maxPrefixLength,\n    prefixAlign: 'left'\n  });\n\n  for (const { node, prefix } of listItems) {\n    builder.openListItem({ prefix: prefix });\n    walk([node], builder);\n    builder.closeListItem();\n  }\n\n  builder.closeList({ trailingLineBreaks: isNestedList ? 1 : (formatOptions.trailingLineBreaks || 2) });\n}\n\n/**\n * Process an unordered list.\n *\n * @type { FormatCallback }\n */\nfunction formatUnorderedList (elem, walk, builder, formatOptions) {\n  const prefix = formatOptions.itemPrefix || ' * ';\n  return formatList(elem, walk, builder, formatOptions, () => prefix);\n}\n\n/**\n * Process an ordered list.\n *\n * @type { FormatCallback }\n */\nfunction formatOrderedList (elem, walk, builder, formatOptions) {\n  let nextIndex = Number(elem.attribs.start || '1');\n  const indexFunction = getOrderedListIndexFunction(elem.attribs.type);\n  const nextPrefixCallback = () => ' ' + indexFunction(nextIndex++) + '. ';\n  return formatList(elem, walk, builder, formatOptions, nextPrefixCallback);\n}\n\n/**\n * Return a function that can be used to generate index markers of a specified format.\n *\n * @param   { string } [olType='1'] Marker type.\n * @returns { (i: number) => string }\n */\nfunction getOrderedListIndexFunction (olType = '1') {\n  switch (olType) {\n    case 'a': return (i) => numberToLetterSequence(i, 'a');\n    case 'A': return (i) => numberToLetterSequence(i, 'A');\n    case 'i': return (i) => numberToRoman(i).toLowerCase();\n    case 'I': return (i) => numberToRoman(i);\n    case '1':\n    default: return (i) => (i).toString();\n  }\n}\n\n/**\n * Given a list of class and ID selectors (prefixed with '.' and '#'),\n * return them as separate lists of names without prefixes.\n *\n * @param { string[] } selectors Class and ID selectors (`[\".class\", \"#id\"]` etc).\n * @returns { { classes: string[], ids: string[] } }\n */\nfunction splitClassesAndIds (selectors) {\n  const classes = [];\n  const ids = [];\n  for (const selector of selectors) {\n    if (selector.startsWith('.')) {\n      classes.push(selector.substring(1));\n    } else if (selector.startsWith('#')) {\n      ids.push(selector.substring(1));\n    }\n  }\n  return { classes: classes, ids: ids };\n}\n\nfunction isDataTable (attr, tables) {\n  if (tables === true) { return true; }\n  if (!attr) { return false; }\n\n  const { classes, ids } = splitClassesAndIds(tables);\n  const attrClasses = (attr['class'] || '').split(' ');\n  const attrIds = (attr['id'] || '').split(' ');\n\n  return attrClasses.some(x => classes.includes(x)) || attrIds.some(x => ids.includes(x));\n}\n\n/**\n * Process a table (either as a container or as a data table, depending on options).\n *\n * @type { FormatCallback }\n */\nfunction formatTable (elem, walk, builder, formatOptions) {\n  return isDataTable(elem.attribs, builder.options.tables)\n    ? formatDataTable(elem, walk, builder, formatOptions)\n    : formatBlock(elem, walk, builder, formatOptions);\n}\n\nfunction formatBlock (elem, walk, builder, formatOptions) {\n  builder.openBlock({ leadingLineBreaks: formatOptions.leadingLineBreaks });\n  walk(elem.children, builder);\n  builder.closeBlock({ trailingLineBreaks: formatOptions.trailingLineBreaks });\n}\n\n/**\n * Process a data table.\n *\n * @type { FormatCallback }\n */\nfunction formatDataTable (elem, walk, builder, formatOptions) {\n  builder.openTable();\n  elem.children.forEach(walkTable);\n  builder.closeTable({\n    tableToString: (rows) => tableToString(rows, formatOptions.rowSpacing ?? 0, formatOptions.colSpacing ?? 3),\n    leadingLineBreaks: formatOptions.leadingLineBreaks,\n    trailingLineBreaks: formatOptions.trailingLineBreaks\n  });\n\n  function formatCell (cellNode) {\n    const colspan = +get(cellNode, ['attribs', 'colspan']) || 1;\n    const rowspan = +get(cellNode, ['attribs', 'rowspan']) || 1;\n    builder.openTableCell({ maxColumnWidth: formatOptions.maxColumnWidth });\n    walk(cellNode.children, builder);\n    builder.closeTableCell({ colspan: colspan, rowspan: rowspan });\n  }\n\n  function walkTable (elem) {\n    if (elem.type !== 'tag') { return; }\n\n    const formatHeaderCell = (formatOptions.uppercaseHeaderCells !== false)\n      ? (cellNode) => {\n        builder.pushWordTransform(str => str.toUpperCase());\n        formatCell(cellNode);\n        builder.popWordTransform();\n      }\n      : formatCell;\n\n    switch (elem.name) {\n      case 'thead':\n      case 'tbody':\n      case 'tfoot':\n      case 'center':\n        elem.children.forEach(walkTable);\n        return;\n\n      case 'tr': {\n        builder.openTableRow();\n        for (const childOfTr of elem.children) {\n          if (childOfTr.type !== 'tag') { continue; }\n          switch (childOfTr.name) {\n            case 'th': {\n              formatHeaderCell(childOfTr);\n              break;\n            }\n            case 'td': {\n              formatCell(childOfTr);\n              break;\n            }\n              // do nothing\n          }\n        }\n        builder.closeTableRow();\n        break;\n      }\n        // do nothing\n    }\n  }\n}\n\nvar textFormatters = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  anchor: formatAnchor,\n  blockquote: formatBlockquote,\n  dataTable: formatDataTable,\n  heading: formatHeading,\n  horizontalLine: formatHorizontalLine,\n  image: formatImage,\n  lineBreak: formatLineBreak,\n  orderedList: formatOrderedList,\n  paragraph: formatParagraph,\n  pre: formatPre,\n  table: formatTable,\n  unorderedList: formatUnorderedList,\n  wbr: formatWbr\n});\n\n/**\n * Default options.\n *\n * @constant\n * @type { Options }\n * @default\n * @private\n */\nconst DEFAULT_OPTIONS = {\n  baseElements: {\n    selectors: [ 'body' ],\n    orderBy: 'selectors', // 'selectors' | 'occurrence'\n    returnDomByDefault: true\n  },\n  decodeEntities: true,\n  encodeCharacters: {},\n  formatters: {},\n  limits: {\n    ellipsis: '...',\n    maxBaseElements: undefined,\n    maxChildNodes: undefined,\n    maxDepth: undefined,\n    maxInputLength: (1 << 24) // 16_777_216\n  },\n  longWordSplit: {\n    forceWrapOnLimit: false,\n    wrapCharacters: []\n  },\n  preserveNewlines: false,\n  selectors: [\n    { selector: '*', format: 'inline' },\n    {\n      selector: 'a',\n      format: 'anchor',\n      options: {\n        baseUrl: null,\n        hideLinkHrefIfSameAsText: false,\n        ignoreHref: false,\n        linkBrackets: ['[', ']'],\n        noAnchorUrl: true\n      }\n    },\n    { selector: 'article', format: 'block', options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },\n    { selector: 'aside', format: 'block', options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },\n    {\n      selector: 'blockquote',\n      format: 'blockquote',\n      options: { leadingLineBreaks: 2, trailingLineBreaks: 2, trimEmptyLines: true }\n    },\n    { selector: 'br', format: 'lineBreak' },\n    { selector: 'div', format: 'block', options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },\n    { selector: 'footer', format: 'block', options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },\n    { selector: 'form', format: 'block', options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },\n    { selector: 'h1', format: 'heading', options: { leadingLineBreaks: 3, trailingLineBreaks: 2, uppercase: true } },\n    { selector: 'h2', format: 'heading', options: { leadingLineBreaks: 3, trailingLineBreaks: 2, uppercase: true } },\n    { selector: 'h3', format: 'heading', options: { leadingLineBreaks: 3, trailingLineBreaks: 2, uppercase: true } },\n    { selector: 'h4', format: 'heading', options: { leadingLineBreaks: 2, trailingLineBreaks: 2, uppercase: true } },\n    { selector: 'h5', format: 'heading', options: { leadingLineBreaks: 2, trailingLineBreaks: 2, uppercase: true } },\n    { selector: 'h6', format: 'heading', options: { leadingLineBreaks: 2, trailingLineBreaks: 2, uppercase: true } },\n    { selector: 'header', format: 'block', options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },\n    {\n      selector: 'hr',\n      format: 'horizontalLine',\n      options: { leadingLineBreaks: 2, length: undefined, trailingLineBreaks: 2 }\n    },\n    {\n      selector: 'img',\n      format: 'image',\n      options: { baseUrl: null, linkBrackets: ['[', ']'] }\n    },\n    { selector: 'main', format: 'block', options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },\n    { selector: 'nav', format: 'block', options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },\n    {\n      selector: 'ol',\n      format: 'orderedList',\n      options: { leadingLineBreaks: 2, trailingLineBreaks: 2 }\n    },\n    { selector: 'p', format: 'paragraph', options: { leadingLineBreaks: 2, trailingLineBreaks: 2 } },\n    { selector: 'pre', format: 'pre', options: { leadingLineBreaks: 2, trailingLineBreaks: 2 } },\n    { selector: 'section', format: 'block', options: { leadingLineBreaks: 1, trailingLineBreaks: 1 } },\n    {\n      selector: 'table',\n      format: 'table',\n      options: {\n        colSpacing: 3,\n        leadingLineBreaks: 2,\n        maxColumnWidth: 60,\n        rowSpacing: 0,\n        trailingLineBreaks: 2,\n        uppercaseHeaderCells: true\n      }\n    },\n    {\n      selector: 'ul',\n      format: 'unorderedList',\n      options: { itemPrefix: ' * ', leadingLineBreaks: 2, trailingLineBreaks: 2 }\n    },\n    { selector: 'wbr', format: 'wbr' },\n  ],\n  tables: [], // deprecated\n  whitespaceCharacters: ' \\t\\r\\n\\f\\u200b',\n  wordwrap: 80\n};\n\nconst concatMerge = (acc, src, options) => [...acc, ...src];\nconst overwriteMerge = (acc, src, options) => [...src];\nconst selectorsMerge = (acc, src, options) => (\n  (acc.some(s => typeof s === 'object'))\n    ? concatMerge(acc, src) // selectors\n    : overwriteMerge(acc, src) // baseElements.selectors\n);\n\n/**\n * Preprocess options, compile selectors into a decision tree,\n * return a function intended for batch processing.\n *\n * @param   { Options } [options = {}]   HtmlToText options.\n * @returns { (html: string, metadata?: any) => string } Pre-configured converter function.\n * @static\n */\nfunction compile (options = {}) {\n  options = merge(\n    DEFAULT_OPTIONS,\n    options,\n    {\n      arrayMerge: overwriteMerge,\n      customMerge: (key) => ((key === 'selectors') ? selectorsMerge : undefined)\n    }\n  );\n  options.formatters = Object.assign({}, genericFormatters, textFormatters, options.formatters);\n  options.selectors = mergeDuplicatesPreferLast(options.selectors, (s => s.selector));\n\n  handleDeprecatedOptions(options);\n\n  return compile$1(options);\n}\n\n/**\n * Convert given HTML content to plain text string.\n *\n * @param   { string }  html           HTML content to convert.\n * @param   { Options } [options = {}] HtmlToText options.\n * @param   { any }     [metadata]     Optional metadata for HTML document, for use in formatters.\n * @returns { string }                 Plain text string.\n * @static\n *\n * @example\n * const { convert } = require('html-to-text');\n * const text = convert('<h1>Hello World</h1>', {\n *   wordwrap: 130\n * });\n * console.log(text); // HELLO WORLD\n */\nfunction convert (html, options = {}, metadata = undefined) {\n  return compile(options)(html, metadata);\n}\n\n/**\n * Map previously existing and now deprecated options to the new options layout.\n * This is a subject for cleanup in major releases.\n *\n * @param { Options } options HtmlToText options.\n */\nfunction handleDeprecatedOptions (options) {\n  if (options.tags) {\n    const tagDefinitions = Object.entries(options.tags).map(\n      ([selector, definition]) => ({ ...definition, selector: selector || '*' })\n    );\n    options.selectors.push(...tagDefinitions);\n    options.selectors = mergeDuplicatesPreferLast(options.selectors, (s => s.selector));\n  }\n\n  function set (obj, path, value) {\n    const valueKey = path.pop();\n    for (const key of path) {\n      let nested = obj[key];\n      if (!nested) {\n        nested = {};\n        obj[key] = nested;\n      }\n      obj = nested;\n    }\n    obj[valueKey] = value;\n  }\n\n  if (options['baseElement']) {\n    const baseElement = options['baseElement'];\n    set(\n      options,\n      ['baseElements', 'selectors'],\n      (Array.isArray(baseElement) ? baseElement : [baseElement])\n    );\n  }\n  if (options['returnDomByDefault'] !== undefined) {\n    set(options, ['baseElements', 'returnDomByDefault'], options['returnDomByDefault']);\n  }\n\n  for (const definition of options.selectors) {\n    if (definition.format === 'anchor' && get(definition, ['options', 'noLinkBrackets'])) {\n      set(definition, ['options', 'linkBrackets'], false);\n    }\n  }\n}\n\nexport { compile, convert, convert as htmlToText };\n",
    "import { render } from '@react-email/components';\nimport type { JSXElementConstructor, ReactElement } from 'react';\nimport type { EmailTemplate } from '../@types/email.types';\n\n/**\n * Props wrapper that includes subject metadata\n * The subject is not passed to the component, but used for email metadata\n */\nexport type EmailTemplatePropsWithSubject<TComponentProps> = TComponentProps & {\n  subject: string | ((props: TComponentProps) => string);\n};\n\n/**\n * Generic email template renderer - handles rendering React email components to HTML and plaintext\n */\nexport async function renderEmailTemplate<TComponentProps>(\n  component: (props: TComponentProps) => ReactElement<unknown, string | JSXElementConstructor<unknown>>,\n  props: EmailTemplatePropsWithSubject<TComponentProps>\n): Promise<EmailTemplate> {\n  const { subject } = props;\n\n  // Determine email subject and component props based on subject type\n  let emailSubject: string;\n  let componentProps: TComponentProps;\n\n  if (typeof subject === 'function') {\n    // Subject is a function - extract it and derive email subject from component props\n    const { subject: _, ...restProps } = props;\n    componentProps = restProps as TComponentProps;\n    emailSubject = subject(componentProps);\n  } else {\n    // Subject is a string - keep it in component props AND use for email metadata\n    componentProps = props as TComponentProps;\n    emailSubject = subject;\n  }\n\n  // Render component with appropriate props\n  const [html, text] = await Promise.all([render(component(componentProps)), render(component(componentProps), { plainText: true })]);\n\n  return {\n    subject: emailSubject,\n    html,\n    text,\n  };\n}\n"
  ],
  "mappings": "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AAI,QAAM,MAAI,QAAM,MAAI,QAAM,MAAI,QAAM,MAAI,SAAO,MAAI,SAAO,MAAI,SAAO,KAAG,SAAO,KAAG,SAAO,MAAI,SAAO,KAAG,SAAO,KAAG,SAAO,MAAI,SAAO,MAAI,SAAO,MAAI,SAAO,MAAI,SAAO,MAAI,SAAO,MAAI,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,KAAG,SAAO,MAAI,SAAO,MAAI,SAAO,KAAG,SAAO,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,MAAI,UAAQ,MAAI,UAAQ,KAAG,UAAQ,KAAG,UAAQ,MAAI,UAAQ,KAAG,UAAQ,KAAG,UAAQ,MAAI,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,MAAI,UAAQ,MAAI,UAAQ,MAAI,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,MAAI,UAAQ,MAAI,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,KAAG,UAAQ,MAAI,UAAQ,K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",
  "debugId": "BC67465A3BD794E964756E2164756E21",
  "names": []
}