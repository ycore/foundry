import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Button, DescriptionList, Link } from '@ycore/componentry/catalyst';
import { Form } from 'react-router';
import { AuthenticityTokenInput, HoneypotInputs } from '../../form/vendor.js';
import { VerifyActionInput } from '../components/VerifyActionInput.js';
import { createVerifyUrl } from '../utils/auth-utils.js';
export function AuthUser({ user, authConfig }) {
    const action = createVerifyUrl(authConfig.routes.auth.verify, '', user?.email);
    return (_jsx(_Fragment, { children: user ? (_jsxs("div", { className: "flex flex-col gap-4", children: [_jsxs(DescriptionList, { className: "min-w-96 gap-4 rounded-3xl border border-gray-200 px-6 py-2 dark:border-gray-700", children: [_jsx(DescriptionList.Term, { children: "User email:" }), _jsx(DescriptionList.Details, { className: "text-nowrap", children: user.email }), _jsx(DescriptionList.Term, { children: "Verified:" }), _jsx(DescriptionList.Details, { children: user.emailVerified ? ('ðŸŸ¢') : (_jsxs(Form, { method: "POST", action: action, children: [_jsx(AuthenticityTokenInput, {}), _jsx(HoneypotInputs, {}), _jsx(VerifyActionInput, { value: "resend" }), _jsx(Button, { type: "submit", className: "w-full", children: "Verify" })] })) })] }), _jsxs("div", { className: "flex flex-col gap-4", children: [_jsxs("div", { className: "flex justify-between gap-4", children: [_jsx(Link, { href: authConfig.routes.auth.forgot, children: "Change Password" }), _jsx(Form, { method: "POST", action: authConfig.routes.auth.delete, children: _jsx(Button, { type: "submit", className: "w-full", children: "Remove account" }) })] }), _jsx(Form, { method: "POST", action: authConfig.routes.auth.signout, children: _jsx(Button, { type: "submit", className: "w-full", children: "Sign out" }) })] })] })) : (_jsxs("div", { className: "flex min-w-72 items-center justify-between gap-4 rounded-xl border border-gray-200 px-8 py-4 dark:border-gray-700", children: [_jsx(Button, { href: authConfig.routes.auth.signin, children: "Sign In" }), _jsx(Link, { href: authConfig.routes.auth.signup, children: "Sign Up" })] })) }));
}
