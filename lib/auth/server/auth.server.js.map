{"version":3,"file":"auth.server.js","sourceRoot":"","sources":["../../../../src/auth/server/auth.server.ts"],"names":[],"mappings":"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","sourcesContent":["import { type ActionFunctionArgs, type LoaderFunctionArgs, type UNSAFE_DataWithResponseInit, redirect } from 'react-router';\nimport { safeRedirect } from 'remix-utils/safe-redirect';\n\nimport { base64Decode } from '../../common/utils/crypto.js';\nimport { checkCsrfToken } from '../../form/server/csrf.server.js';\nimport { checkHoneypot } from '../../form/server/honeypot.server.js';\nimport { getMultiAction } from '../../form/server/multi-action.server.js';\nimport { safeParseForm } from '../../form/validate.js';\nimport { toast } from '../../form/vendor.js';\nimport type { VerifyActionInputProps, VerifyActions } from '../components/VerifyActionInput.js';\nimport type { AuthConfig } from '../config/config.auth.js';\nimport { AuthSession, type ProtectedUserEmail } from '../server/auth-session.server.js';\nimport { createVerifyUrl } from '../utils/auth-utils.js';\nimport { CredentialSchema, VerificationSchema } from '../utils/valid-auth.js';\n\ntype AuthActionData = { errors?: { email?: ProtectedUserEmail | [ProtectedUserEmail, ...ProtectedUserEmail[]] } };\ntype VerifyActionData = {\n  errors?: {\n    email?: ProtectedUserEmail | [ProtectedUserEmail, ...ProtectedUserEmail[]];\n    code?: [string, ...string[]];\n    form?: [string, ...string[]];\n  };\n};\n\ninterface AuthHandlers {\n  signinAction: ({ ...args }: ActionFunctionArgs) => Promise<Response | UNSAFE_DataWithResponseInit<AuthActionData>>;\n  signinLoader: ({ ...args }: LoaderFunctionArgs) => Promise<{ authConfig: AuthConfig }>;\n  signoutAction: ({ ...args }: LoaderFunctionArgs) => Promise<Response>;\n  signupAction: ({ ...args }: ActionFunctionArgs) => Promise<Response | UNSAFE_DataWithResponseInit<AuthActionData>>;\n  signupLoader: ({ ...args }: LoaderFunctionArgs) => Promise<{ authConfig: AuthConfig }>;\n  forgotAction: ({ ...args }: ActionFunctionArgs) => Promise<Response | UNSAFE_DataWithResponseInit<AuthActionData>>;\n  forgotLoader: ({ ...args }: LoaderFunctionArgs) => Promise<{ authConfig: AuthConfig }>;\n  verifyAction: ({ ...args }: ActionFunctionArgs) => Promise<Response | UNSAFE_DataWithResponseInit<VerifyActionData> | undefined>;\n  verifyLoader: ({ ...args }: LoaderFunctionArgs) => Promise<{ action: VerifyActionInputProps['value']; code?: string; email?: ProtectedUserEmail }>;\n  confirmLoader: ({ ...args }: LoaderFunctionArgs) => Promise<Response>;\n  destroyUserAction: ({ ...args }: ActionFunctionArgs) => Promise<Response>;\n}\n\nexport const Auth: AuthHandlers = {\n  signinAction: async ({ ...args }) => {\n    const authConfig = await args.context.di.authConfig();\n\n    const clonedFormData = await args.request.clone().formData();\n    await checkCsrfToken(args.context, clonedFormData, args.request.headers);\n    await checkHoneypot(args.context, clonedFormData);\n\n    const validated = safeParseForm(CredentialSchema, clonedFormData, ['email', 'password']);\n    if (!validated.success) {\n      return toast.dataWithError({ errors: validated.errors }, JSON.stringify(validated.errors), { headers: args.request.headers });\n    }\n\n    const [error, user, headers] = await AuthSession.setSessionUser(args.context, args.request, 'signin-strategy');\n\n    if (error) {\n      return toast.redirectWithError(authConfig.routes.auth.signin, error.message, { headers });\n    }\n\n    if (!user.emailVerified) {\n      const verifyUrl = createVerifyUrl(authConfig.routes.auth.verify, '', user.email);\n\n      await AuthSession.sendVerification(args.context, args.request, user.email);\n      return toast.redirectWithInfo(verifyUrl, 'Please verify the authenticated user', { headers });\n    }\n\n    return toast.redirectWithSuccess(authConfig.routes.auth.signedin, 'Sign-in successful', { headers });\n  },\n  signinLoader: async ({ ...args }) => {\n    const authConfig = await args.context.di.authConfig();\n\n    if (await AuthSession.isAuthenticated(args.context, args.request)) {\n      throw redirect(authConfig.routes.auth.signedin);\n    }\n\n    return { authConfig };\n  },\n  signoutAction: async ({ ...args }) => {\n    const authConfig = await args.context.di.authConfig();\n\n    const [headers] = await AuthSession.unsetSessionUser(args.context, args.request);\n\n    return toast.redirectWithSuccess(authConfig.routes.auth.signedout, 'Signed out', { headers });\n  },\n  signupAction: async ({ ...args }) => {\n    const authConfig = await args.context.di.authConfig();\n\n    const clonedFormData = await args.request.clone().formData();\n    await checkCsrfToken(args.context, clonedFormData, args.request.headers);\n    await checkHoneypot(args.context, clonedFormData);\n\n    const validated = safeParseForm(CredentialSchema, clonedFormData, ['email', 'password']);\n    if (!validated.success) {\n      return toast.dataWithError({ errors: validated.errors }, JSON.stringify(validated.errors), { headers: args.request.headers });\n    }\n\n    const [error, user, headers] = await AuthSession.setSessionUser(args.context, args.request, 'signup-strategy');\n\n    if (error) {\n      return toast.redirectWithError(authConfig.routes.auth.signin, error.message, { headers });\n    }\n\n    if (!user.emailVerified) {\n      const verifyUrl = createVerifyUrl(authConfig.routes.auth.verify, '', user.email);\n\n      await AuthSession.sendVerification(args.context, args.request, user.email);\n      return toast.redirectWithInfo(verifyUrl, 'Please verify the authenticated user', { headers });\n    }\n\n    return toast.redirectWithSuccess(authConfig.routes.auth.signedin, 'Sign-in successful', { headers });\n  },\n  signupLoader: async ({ ...args }) => {\n    const authConfig = await args.context.di.authConfig();\n    if (await AuthSession.isAuthenticated(args.context, args.request)) {\n      throw redirect(authConfig.routes.auth.signedin);\n    }\n\n    return { authConfig };\n  },\n  forgotAction: async ({ ...args }) => {\n    const authConfig = await args.context.di.authConfig();\n    const clonedFormData = await args.request.clone().formData();\n    await checkCsrfToken(args.context, clonedFormData, args.request.headers);\n    await checkHoneypot(args.context, clonedFormData);\n\n    const validated = safeParseForm(CredentialSchema, clonedFormData, ['email', 'password']);\n    if (!validated.success) {\n      return toast.dataWithError({ errors: validated.errors }, JSON.stringify(validated.errors), { headers: args.request.headers });\n    }\n\n    const [error, user, headers] = await AuthSession.updateUserPassword(args.context, args.request, validated.data);\n    if (error) {\n      return toast.dataWithError({ errors: { email: error.message } }, JSON.stringify(error.message), { headers });\n    }\n\n    if (!user.emailVerified) {\n      const verifyUrl = createVerifyUrl(authConfig.routes.auth.verify, '', user.email);\n\n      await AuthSession.sendVerification(args.context, args.request, user.email);\n      return toast.redirectWithInfo(verifyUrl, 'Please verify the authenticated user', { headers });\n    }\n\n    return toast.redirectWithSuccess(authConfig.routes.auth.signedin, 'Sign-in successful', { headers });\n  },\n  forgotLoader: async ({ ...args }) => {\n    const authConfig = await args.context.di.authConfig();\n\n    return { authConfig };\n  },\n  verifyAction: async ({ ...args }) => {\n    const authConfig = await args.context.di.authConfig();\n\n    const clonedFormData = await args.request.clone().formData();\n    await checkCsrfToken(args.context, clonedFormData, args.request.headers);\n    await checkHoneypot(args.context, clonedFormData);\n    const action = (await getMultiAction(clonedFormData)) as VerifyActions;\n    const operation = verifyMultiAction[action];\n    if (!operation) {\n      throw new Error(`Unsupported action: ${action}`);\n    }\n\n    return operation(authConfig, args);\n  },\n  verifyLoader: async ({ ...args }) => {\n    const token = args.params?.token ? await JSON.parse(base64Decode(args.params.token)) : undefined;\n\n    return { action: token?.action, code: token?.code, email: token?.email };\n  },\n  confirmLoader: async ({ ...args }) => {\n    // TODO: valibot validate parameters\n    const authConfig = await args.context.di.authConfig();\n\n    // TODO: notAuthenticated check handles /validate action, can add it back in if we allow the /verify sction to do a signin before verifying\n    // if (await AuthSession.notAuthenticated(context, request)) {\n    //   throw redirect(authConfig.routes.auth.signedout);\n    // }\n\n    if (!args.params.token) {\n      throw redirect(authConfig.routes.auth.signin);\n    }\n\n    throw redirect(safeRedirect([authConfig.routes.auth.verify, args.params.token].join('/'), authConfig.routes.auth.signin));\n  },\n  destroyUserAction: async ({ ...args }) => {\n    const authConfig = await args.context.di.authConfig();\n\n    // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n    const [_, headers] = await AuthSession.destroySessionUser(args.context, args.request);\n    return toast.redirectWithSuccess(authConfig.routes.auth.signedout, 'Account removed', { headers });\n  },\n};\n\nconst verifyMultiAction: Record<VerifyActions, (authConfig: AuthConfig, args: ActionFunctionArgs) => Promise<Response | UNSAFE_DataWithResponseInit<VerifyActionData> | undefined>> = {\n  resend: async (authConfig, args) => {\n    const [user] = await AuthSession.getSessionUser(args.context, args.request);\n    if (!user) {\n      throw toast.redirectWithWarning(authConfig.routes.auth.signedout, 'Signed Out', { headers: args.request.headers });\n    }\n\n    const verifyUrl = createVerifyUrl(authConfig.routes.auth.verify, '', user.email);\n\n    await AuthSession.sendVerification(args.context, args.request, user.email);\n    return toast.redirectWithInfo(verifyUrl, 'Please verify the authenticated user', { headers: args.request.headers });\n  },\n  validate: async (authConfig, args) => {\n    const validated = safeParseForm(VerificationSchema, await args.request.formData(), ['email', 'code']);\n    if (!validated.success) {\n      return toast.dataWithError({ errors: validated.errors }, JSON.stringify(validated.errors), { headers: args.request.headers });\n    }\n\n    if (!AuthSession.isSessionUser(args.context, args.request, validated.data.email)) {\n      return toast.dataWithError({ errors: { email: ['Email does not match signed in user'] } }, 'Email does not match signed in user', { headers: args.request.headers });\n    }\n\n    const [error, headers] = await AuthSession.verifySessionUser(args.context, args.request, validated.data);\n\n    if (error) {\n      if (error.kind === 'USER VERIFICATION') {\n        throw toast.redirectWithError(authConfig.routes.auth.signedout, 'User verification error', { headers });\n      }\n\n      return toast.dataWithError({ errors: { email: error.message } }, error.message, { headers });\n    }\n\n    return toast.redirectWithSuccess(authConfig.routes.auth.signedin, 'Verification complete', { headers });\n  },\n};\n"]}