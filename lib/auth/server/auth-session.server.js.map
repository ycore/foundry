{"version":3,"file":"auth-session.server.js","sourceRoot":"","sources":["../../../../src/auth/server/auth-session.server.ts"],"names":[],"mappings":"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","sourcesContent":["import { createWorkersKVSessionStorage } from '@react-router/cloudflare';\nimport type { AppLoadContext, SessionStorage } from 'react-router';\n\nimport { contextEnv, isDev, isProduction } from '../../common/services/env.js';\nimport { type EmailMessage, emailOptions, sendMail } from '../../email/services/email.server.js';\nimport type { Senders } from '../config/config.auth.js';\nimport type { ProtectedUser } from '../config/db/schema.js';\nimport { authRepository } from '../server/auth-repository.server.js';\nimport type { AuthError } from '../utils/error-auth.js';\nimport type { Credentials, Verification } from '../utils/valid-auth.js';\nimport { type VerifyLinkOptions, authTOTP } from './auth-verify.server.js';\nimport { resolveAuthenticator } from './authenticator.server.js';\nexport type { UserPassword } from '../config/db/schema.js';\n\nexport type SessionContext = {\n  user: ProtectedUser;\n};\n\nexport type ProtectedUserEmail = ProtectedUser['email'];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#smart_self-overwriting_lazy_getters\n// export const resolveSessionStorage = (() => {\n//   let lazySessionInstance: ReturnType<typeof sessionStorageFactory> | undefined;\n\n//   return (context: AppLoadContext, request: Request) => (lazySessionInstance ??= sessionStorageFactory(context, request));\n// })();\n\nexport const resolveSessionStorage = (() => {\n  let lazySessionInstance: Promise<SessionStorage<SessionContext, SessionContext>> | undefined;\n\n  return async (context: AppLoadContext, request: Request): Promise<SessionStorage<SessionContext, SessionContext>> => {\n    if (!lazySessionInstance) {\n      lazySessionInstance = Promise.resolve(sessionStorageFactory(context, request));\n    }\n    return await lazySessionInstance;\n  };\n})();\n\nexport async function sessionStorageFactory(context: AppLoadContext, request: Request) {\n  const authConfig = await context.di.authConfig();\n\n  if (!contextEnv(context).ADMIN_KV) {\n    throw new Error('Missing KV storage configuration');\n  }\n\n  if (!contextEnv(context).AUTH_SESSION_SECRET_KEY) {\n    throw new Error('Missing KV storage configuration');\n  }\n\n  return createWorkersKVSessionStorage<SessionContext>({\n    kv: contextEnv(context).ADMIN_KV,\n    cookie: {\n      maxAge: authConfig.cookie.maxAge,\n      name: '_auth',\n      path: '/',\n      sameSite: 'lax',\n      httpOnly: true,\n      secrets: [contextEnv(context).AUTH_SESSION_SECRET_KEY],\n      secure: isProduction(context),\n      ...(isProduction(context) ? { domain: new URL(request.url).hostname } : {}),\n    },\n  });\n}\ntype ProtectedUserResponse = [null, user: ProtectedUser, headers: Headers] | [error: Error, undefined, headers: Headers];\n\nexport const AuthSession = {\n  getSessionUser: async (context: AppLoadContext, request: Request): Promise<[ProtectedUser | null]> => {\n    const authSessionStorage = await resolveSessionStorage(context, request);\n    const session = await authSessionStorage.getSession(request.headers.get('cookie'));\n    const user = session.get('user');\n\n    if (!user) return [null];\n    return [user];\n  },\n  isAuthenticated: async (context: AppLoadContext, request: Request): Promise<boolean> => {\n    const [user] = await AuthSession.getSessionUser(context, request);\n    return !!user;\n  },\n  notAuthenticated: async (context: AppLoadContext, request: Request): Promise<boolean> => {\n    return !(await AuthSession.isAuthenticated(context, request));\n  },\n  isSessionUser: async (context: AppLoadContext, request: Request, email: ProtectedUser['email']): Promise<boolean> => {\n    const [sessionUser] = await AuthSession.getSessionUser(context, request);\n    return email === sessionUser?.email;\n  },\n  sendVerification: async (context: AppLoadContext, request: Request, userEmail: ProtectedUser['email']) => {\n    const authConfig = await context.di.authConfig();\n\n    const code = await authTOTP.create(userEmail, context);\n    const linkRef = <VerifyLinkOptions>{ action: 'validate', code, email: userEmail };\n\n    const verifyLink = await authTOTP.link(authConfig.routes.auth.confirm, linkRef, context, request);\n    if (authConfig.email.send) {\n      const message = await authMailTemplate(context, code, verifyLink);\n      const sendTo = isDev(context) && authConfig.DEV?.email_to ? authConfig.DEV?.email_to : userEmail;\n      const options = await emailOptions(sendTo, context);\n      const emailService: Senders = authConfig.email?.active as Senders;\n      try {\n        await sendMail[emailService]({ message, options });\n      } catch (error) {\n        console.error(error.message);\n        throw new Error(error);\n      }\n    }\n  },\n  setSessionUser: async (context: AppLoadContext, request: Request, strategy: string): Promise<ProtectedUserResponse> => {\n    const authSessionStorage = await resolveSessionStorage(context, request);\n    const session = await authSessionStorage.getSession(request.headers.get('cookie'));\n\n    const authenticator = resolveAuthenticator(context);\n    const [error, user] = await authenticator.authenticate(strategy, request);\n    const headers = new Headers();\n\n    if (error) {\n      headers.append('set-cookie', await authSessionStorage.commitSession(session));\n      return [error, undefined, headers];\n    }\n\n    session.set('user', user);\n\n    headers.append('set-cookie', await authSessionStorage.commitSession(session));\n    return [null, user, headers];\n  },\n  unsetSessionUser: async (context: AppLoadContext, request: Request): Promise<[headers: Headers]> => {\n    const authSessionStorage = await resolveSessionStorage(context, request);\n\n    const session = await authSessionStorage.getSession(request.headers.get('cookie'));\n    const headers = new Headers();\n\n    headers.append('set-cookie', await authSessionStorage.destroySession(session));\n    return [headers];\n  },\n  destroySessionUser: async (context: AppLoadContext, request: Request): Promise<[AuthError, undefined] | [null, Headers]> => {\n    const [sessionUser] = await AuthSession.getSessionUser(context, request);\n\n    if (sessionUser) {\n      await authRepository.delete(context, sessionUser.id);\n    }\n    const [headers] = await AuthSession.unsetSessionUser(context, request);\n\n    return [null, headers];\n  },\n  verifySessionUser: async (context: AppLoadContext, request: Request, verify: Verification): Promise<[AuthError, Headers] | [null, Headers]> => {\n    const authSessionStorage = await resolveSessionStorage(context, request);\n    const session = await authSessionStorage.getSession(request.headers.get('cookie'));\n\n    const [verifyError, verified] = await authTOTP.verify(verify.email, verify.code, context);\n\n    if (verifyError) {\n      request.headers.append('set-cookie', await authSessionStorage.commitSession(session));\n      return [verifyError, request.headers];\n    }\n\n    const [updateError, user] = await authRepository.updateUserVerified(context, verify.email, verified);\n\n    if (updateError) {\n      request.headers.append('set-cookie', await authSessionStorage.commitSession(session));\n      return [updateError, request.headers];\n    }\n\n    session.set('user', user);\n    request.headers.append('set-cookie', await authSessionStorage.commitSession(session));\n\n    return [null, request.headers];\n  },\n  updateUserPassword: async (context: AppLoadContext, request: Request, credentials: Credentials): Promise<ProtectedUserResponse> => {\n    const authSessionStorage = await resolveSessionStorage(context, request);\n    const session = await authSessionStorage.getSession(request.headers.get('cookie'));\n\n    const [error, user] = await authRepository.updateStoredPassword(context, credentials.email, credentials.password);\n\n    const headers = new Headers();\n\n    if (error) {\n      headers.append('set-cookie', await authSessionStorage.commitSession(session));\n      return [error, undefined, headers];\n    }\n\n    session.set('user', user);\n\n    headers.append('set-cookie', await authSessionStorage.commitSession(session));\n    return [null, user, headers];\n  },\n};\n\nconst authMailTemplate = async (context: AppLoadContext, code: string, verifyLink?: string): Promise<EmailMessage> => {\n  return {\n    subject: `Your verification code ${isDev(context) ? code : ''}`,\n    text: `OTP verification code: ${code}`,\n    html: `\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    <html>\n      <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html charset=UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>OTP Verification Code</title>\n      </head>\n      <body style=\"max-width: 75%; margin: 0 auto; text-align: center;\">\n        <div style=\"color: #707070; margin-bottom: 1rem; margin-top: 1rem\">Please verify your account using the code below:</div>\n        <h1 style=\"color: #505050; font-size: 1.75rem; font-weight: 400; margin-bottom: 2rem\">\n          Code: <span style=\"color: #505050; font-size: 3.75rem; font-weight: 700\">${code}</span>\n        </h1>\n        ${\n          verifyLink &&\n          ` <p style=\"color: #303030; margin-bottom: 1rem\">Alternatively, please follow the verification link below.</p>\n            <p style=\"color: #505050; font-size: 1.25rem; margin-bottom: 1rem\">\n              <a target=\"_blank\" href=\"${verifyLink}\">Follow link to verify ${code}</a>\n            </p>`\n        }\n      </body>\n    </html>\n  `,\n  };\n};\n"]}