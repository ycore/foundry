{"version":3,"file":"error-auth.js","sourceRoot":"","sources":["../../../../src/auth/utils/error-auth.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAC;AAwB7D,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,WAAW,EAAE,yBAAyB;IACtC,YAAY,EAAE,uBAAuB;IACrC,YAAY,EAAE,mBAAmB;IACjC,aAAa,EAAE,uCAAuC;CAC9C,CAAC;AAEX,MAAM,OAAO,SAAU,SAAQ,SAAoB;IACjD,YAAY,GAAG,IAAwD;QACrE,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;CACF","sourcesContent":["import { BaseError } from '../../common/utils/error-base.js';\n\ntype ErrorKind =\n  | 'DB USER CREATE FAILED'\n  | 'DB USER CREDENTIALS'\n  | 'DB USER DELETE FAILED'\n  | 'DB USER EXISTS'\n  | 'DB USER FIND FAILED'\n  | 'DB USER PASSWORD UPDATE FAILED'\n  | 'DB USER UPDATE FAILED'\n  | 'FORGOT EMAIL INVALID'\n  | 'REQUIRED SECRET'\n  | 'RESET VALIDATION'\n  | 'RESET VERIFICATION'\n  | 'SIGNIN ERROR'\n  | 'SIGNIN VALIDATION'\n  | 'SIGNUP ERROR'\n  | 'SIGNUP VALIDATION'\n  | 'TOTP ATTEMPTS'\n  | 'TOTP EXPIRED'\n  | 'TOTP INVALID'\n  | 'USER VERIFICATION'\n  | 'VERIFICATION FAILURE';\n\nexport const AUTH_ERRORS = {\n  TOTP_SECRET: 'TOTP secret is required',\n  TOTP_EXPIRED: 'TOTP code has expired',\n  TOTP_INVALID: 'TOTP INVALID code',\n  TOTP_ATTEMPTS: 'Maximum verification attempts reached',\n} as const;\n\nexport class AuthError extends BaseError<ErrorKind> {\n  constructor(...args: ConstructorParameters<typeof BaseError<ErrorKind>>) {\n    super(...args);\n    Object.setPrototypeOf(this, AuthError.prototype);\n  }\n}\n\nexport type AuthErrorType = typeof AuthError;\n"]}