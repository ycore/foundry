{"version":3,"file":"error-base.js","sourceRoot":"","sources":["../../../../src/common/utils/error-base.ts"],"names":[],"mappings":"AAMA,MAAM,OAAO,SAA4B,SAAQ,KAAK;IACpD,IAAI,CAAI;IACR,KAAK,CAAU;IAMf,YAAY,IAA2B,EAAE,IAAa,EAAE,IAAc;QACpE,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC7B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;YACtC,KAAK,CAAC,OAAO,CAAC,CAAC;YACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;aAAM,CAAC;YACN,KAAK,CAAC,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;QAED,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;CACF","sourcesContent":["interface BaseErrorProps<T extends string> {\n  kind: T;\n  message: string;\n  cause?: unknown;\n}\n\nexport class BaseError<T extends string> extends Error {\n  kind: T;\n  cause: unknown;\n\n  // eslint-disable-next-line no-unused-vars\n  constructor(kind: T, message: string, cause?: unknown);\n  // eslint-disable-next-line no-unused-vars\n  constructor(props: BaseErrorProps<T>);\n  constructor(arg1: T | BaseErrorProps<T>, arg2?: string, arg3?: unknown) {\n    if (typeof arg1 === 'object') {\n      const { kind, message, cause } = arg1;\n      super(message);\n      this.kind = kind;\n      this.cause = cause;\n    } else {\n      super(arg2);\n      this.kind = arg1;\n      this.cause = arg3;\n    }\n\n    Object.setPrototypeOf(this, BaseError.prototype);\n  }\n}\n"]}